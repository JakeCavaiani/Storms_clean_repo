stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = .475, label.x = -.5, size = 5) +
theme_classic()+
geom_errorbar(aes(x=pctburn_lg, ymin=sdHI-seHI, ymax=sdHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn extent") +
ylab("SD HI-fDOM")
### Deciduous
# ggplot(fDOM_data, aes(x = Deciduous.2020, y = sdHI)) +
#   geom_point(size = 3) +
#   geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
#   stat_poly_eq(formula = y~x,
#                label.y = "top", label.x = "left",
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE, size = 6) +
#   theme_classic() +
#   theme(axis.text.x=element_text(size=20),
#         axis.text.y = element_text(size = 20),
#         axis.title.x = element_text(size = 20),
#         axis.title.y = element_text(size = 20),
#         legend.key.size = unit(2.0, 'cm'),
#         strip.text = element_text(size = 20)) +
#   xlab("% Deciduous") +
#   ylab(vn) +
#   theme(aspect.ratio = 1)
###
ggsave("sdHI_fDOM_burn.pdf",
path = here("plots", "Catchment_characteristics", "HI"),
width = 7, height = 7)
sdBETA.fDOM.slope <- lm(sdBETA ~ Slope,
data = fDOM_data)
sdBETA.fDOM.burn <- lm(sdBETA ~ pctburn_lg,
data = fDOM_data)
sdBETA.fDOM.deciduous <- lm(sdBETA ~ Deciduous.2010,
data = fDOM_data)
models <- list(sdBETA.fDOM.slope, sdBETA.fDOM.burn, sdBETA.fDOM.deciduous)
aictab(cand.set = models) # slope model better but the deltaAIC is not >2
summary(sdBETA.fDOM.deciduous) # 0.53313
fDOM.sdbeta.deciduous <- ggplot(fDOM_data, aes(x = Deciduous.2010, y = sdBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 1.8, label.x = -0.9, size = 5) +
theme_classic()+
geom_errorbar(aes(x=Deciduous.2010, ymin=sdBETA-seBETA, ymax=sdBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("% Deciduous") +
ylab("SD ß-fDOM")
###
SPC_data<- CV_all_SPC[,c("site.ID", "n", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "Deciduous.2010", "Deciduous.2020", "CatBurn", "CatPF", "seHI", "seBETA")]
SPC_data <- SPC_data[!duplicated(SPC_data$meanHI), ] # removing duplicated rows
HI.SPC.slope <- lm(meanHI ~ Slope,
data = SPC_data)
HI.SPC.burn <- lm(meanHI ~ pctburn_lg,
data = SPC_data)
HI.SPC.deciduous <- lm(meanHI ~ Deciduous.2010,
data = SPC_data)
models <- list(HI.SPC.slope, HI.SPC.burn, HI.SPC.deciduous)
aictab(cand.set = models) # slope is better model, deltaAIC > 2
summary(HI.SPC.slope) # p-value 0.0347
spc.hi.slope <- ggplot(SPC_data, aes(x = Slope, y = meanHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=Slope, ymin=meanHI-seHI, ymax=meanHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 0.54, label.x = 0.2, size = 5) +
theme_classic()+
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment slope") +
ylab("Mean HI-SPC")
### Deciduous
# ggplot(SPC_data, aes(x = Deciduous.2020, y = meanHI)) +
#   geom_point(size = 3) +
#   geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
#   stat_poly_eq(formula = y~x,
#                label.y = "top", label.x = "left",
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE, size = 6) +
#   theme_classic() +
#   theme(axis.text.x=element_text(size=20),
#         axis.text.y = element_text(size = 20),
#         axis.title.x = element_text(size = 20),
#         axis.title.y = element_text(size = 20),
#         legend.key.size = unit(2.0, 'cm'),
#         strip.text = element_text(size = 20)) +
#   xlab("% Deciduous") +
#   ylab("SD ß-fDOM") +
#   theme(aspect.ratio = 1)
###
ggsave("HI_SPC_slope.pdf",
path = here("plots", "Catchment_characteristics", "HI"),
width = 7, height = 7)
BETA.SPC.slope <- lm(meanBETA ~ Slope,
data = SPC_data)
BETA.SPC.burn <- lm(meanBETA ~ pctburn_lg,
data = SPC_data)
BETA.SPC.deciduous <- lm(meanBETA ~ Deciduous.2020,
data = SPC_data)
models <- list(BETA.SPC.slope, BETA.SPC.burn, BETA.SPC.deciduous)
aictab(cand.set = models) # slope is the better model but deltaAIC are not greater than 2
summary(BETA.SPC.slope) # 0.1140
summary(BETA.SPC.burn) # 0.1140
spc.beta.slope <- ggplot(SPC_data, aes(x = Slope, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=Slope, ymin=meanBETA-seBETA, ymax=meanBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 0.4, label.x = 1, size = 5) +
theme_classic()+
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment slope") +
ylab("Mean ß-SPC")
### Deciduous
# ggplot(SPC_data, aes(x = Deciduous.2020, y = meanBETA)) +
#   geom_point(size = 3) +
#   geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
#   stat_poly_eq(formula = y~x,
#                label.y = "top", label.x = "left",
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE, size = 6) +
#   theme_classic() +
#   theme(axis.text.x=element_text(size=20),
#         axis.text.y = element_text(size = 20),
#         axis.title.x = element_text(size = 20),
#         axis.title.y = element_text(size = 20),
#         legend.key.size = unit(2.0, 'cm'),
#         strip.text = element_text(size = 20)) +
#   xlab("% Deciduous") +
#   ylab("SD ß-fDOM") +
#   theme(aspect.ratio = 1)
###
ggsave("BETA_SPC_slope.pdf",
path = here("plots", "Catchment_characteristics", "BETA"),
width = 7, height = 7)
sdHI.SPC.slope <- lm(sdHI ~ Slope,
data = SPC_data)
sdHI.SPC.burn <- lm(sdHI ~ pctburn_lg,
data = SPC_data)
sdHI.SPC.deciduous <- lm(sdHI ~ Deciduous.2020,
data = SPC_data)
models <- list(sdHI.SPC.slope, sdHI.SPC.burn, sdHI.SPC.deciduous)
aictab(cand.set = models) # burn is the better model but deltaAIC is not greater than 2
summary(sdHI.SPC.burn) # p-value 0.388143
spc.sdhi.burn <- ggplot(SPC_data, aes(x = pctburn_lg, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_errorbar(aes(x=pctburn_lg, ymin=sdHI-seHI, ymax=sdHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme_classic()+
xlab("Percent Burn") +
ylab("Standard Deviation HI")
### Deciduous
# ggplot(SPC_data, aes(x = Deciduous.2020, y = sdHI)) +
#   geom_point(size = 3) +
#   geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
#   stat_poly_eq(formula = y~x,
#                label.y = "top", label.x = "left",
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE, size = 6) +
#   theme_classic() +
#   theme(axis.text.x=element_text(size=20),
#         axis.text.y = element_text(size = 20),
#         axis.title.x = element_text(size = 20),
#         axis.title.y = element_text(size = 20),
#         legend.key.size = unit(2.0, 'cm'),
#         strip.text = element_text(size = 20)) +
#   xlab("% Deciduous") +
#   ylab("SD ß-fDOM") +
#   theme(aspect.ratio = 1)
###
sdBETA.SPC.slope <- lm(sdBETA ~ Slope,
data = SPC_data)
sdBETA.SPC.burn <- lm(sdBETA ~ pctburn_lg,
data = SPC_data)
sdBETA.SPC.deciduous <- lm(sdBETA ~ Deciduous.2020,
data = SPC_data)
models <- list(sdBETA.SPC.slope, sdBETA.SPC.burn, sdBETA.SPC.deciduous)
aictab(cand.set = models) # burn model better deltaAIC>2
summary(sdBETA.SPC.burn) # 0.0596
spc.sdbeta.burn <- ggplot(SPC_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=pctburn_lg, ymin=sdBETA-seBETA, ymax=sdBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 7.2, label.x = -0.5, size = 5) +
theme_classic()+
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn extent") +
ylab("SD ß-SPC")
### Deciduous
# ggplot(SPC_data, aes(x = Deciduous.2020, y = sdBETA)) +
#   geom_point(size = 3) +
#   geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
#   stat_poly_eq(formula = y~x,
#                label.y = "top", label.x = "left",
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE, size = 6) +
#   theme_classic() +
#   theme(axis.text.x=element_text(size=20),
#         axis.text.y = element_text(size = 20),
#         axis.title.x = element_text(size = 20),
#         axis.title.y = element_text(size = 20),
#         legend.key.size = unit(2.0, 'cm'),
#         strip.text = element_text(size = 20)) +
#   xlab("% Deciduous") +
#   ylab("SD ß-fDOM") +
#   theme(aspect.ratio = 1)
###
ggsave("sdBETA_SPC_burn.pdf",
path = here("plots", "Catchment_characteristics", "BETA"),
width = 7, height = 7)
turb_data<- CV_all_turb[,c("site.ID",  "n", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "Deciduous.2010", "Deciduous.2020", "CatBurn", "CatPF", "seHI", "seBETA")]
turb_data <- turb_data[!duplicated(turb_data$meanHI), ] # removing duplicated rows
HI.turb.slope <- lm(meanHI ~ Slope,
data = turb_data)
HI.turb.burn <- lm(meanHI ~ pctburn_lg,
data = turb_data)
HI.turb.deciduous <- lm(meanHI ~ Deciduous.2010,
data = turb_data)
models <- list(HI.turb.slope, HI.turb.burn, HI.turb.deciduous)
aictab(cand.set = models) # burn is better model but deltaAIC is not greater than 2
turb.hi.burn <- ggplot(turb_data, aes(x = pctburn_lg, y = meanHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=pctburn_lg, ymin=meanHI-seHI, ymax=meanHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 0.11, label.x = 0.8, size = 5) +
theme_classic()+
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn extent") +
ylab("Mean HI-turbidity")
summary(HI.turb.burn) # p-value 0.353
### Deciduous
# ggplot(turb_data, aes(x = Deciduous.2020, y = meanHI)) +
#   geom_point(size = 3) +
#   geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
#   stat_poly_eq(formula = y~x,
#                label.y = "top", label.x = "left",
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE, size = 6) +
#   theme_classic() +
#   theme(axis.text.x=element_text(size=20),
#         axis.text.y = element_text(size = 20),
#         axis.title.x = element_text(size = 20),
#         axis.title.y = element_text(size = 20),
#         legend.key.size = unit(2.0, 'cm'),
#         strip.text = element_text(size = 20)) +
#   xlab("% Deciduous") +
#   ylab("SD ß-fDOM") +
#   theme(aspect.ratio = 1)
###
BETA.turb.slope <- lm(meanBETA ~ Slope,
data = turb_data)
BETA.turb.burn <- lm(meanBETA ~ pctburn_lg,
data = turb_data)
BETA.turb.deciduous <- lm(meanBETA ~ Deciduous.2010,
data = turb_data)
models <- list(BETA.turb.slope, BETA.turb.burn, BETA.turb.deciduous)
aictab(cand.set = models) # slope is the better model but deltaAIC is not greater than 2
### Deciduous
turb.beta.deciduous <- ggplot(turb_data, aes(x = Deciduous.2010, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=Deciduous.2010, ymin=meanBETA-seBETA, ymax=meanBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 1.6, label.x = 0.4, size = 5) +
theme_classic()+
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("% Deciduous") +
ylab("Mean ß-Turbidity") +
theme(aspect.ratio = 1)
sdHI.turb.slope <- lm(sdHI ~ Slope,
data = turb_data)
sdHI.turb.burn <- lm(sdHI ~ pctburn_lg,
data = turb_data)
sdHI.turb.deciduous <- lm(sdHI ~ Deciduous.2010,
data = turb_data)
models <- list(sdHI.turb.slope, sdHI.turb.burn, sdHI.turb.deciduous)
aictab(cand.set = models) # deciduous is the better model
turb.sdhi.deciduous <- ggplot(turb_data, aes(x = Deciduous.2010, y = sdHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=Deciduous.2010, ymin=sdHI-seHI, ymax=sdHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 0.21, label.x = -.75, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("% Deciduous") +
ylab("SD HI-Turbidity") +
theme(aspect.ratio = 1)
###
sdBETA.turb.slope <- lm(sdBETA ~ Slope,
data = turb_data)
sdBETA.turb.burn <- lm(sdBETA ~ pctburn_lg,
data = turb_data)
sdBETA.turb.deciduous <- lm(sdBETA ~ Deciduous.2010,
data = turb_data)
models <- list(sdBETA.turb.slope, sdBETA.turb.burn, sdBETA.turb.deciduous)
aictab(cand.set = models) # slope model better: deltaAIC >2
summary(sdBETA.turb.slope) # 0.06055
turb.sdbeta.slope <- ggplot(turb_data, aes(x = Slope, y = sdBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 6) +
theme_classic()+
geom_errorbar(aes(x=Slope, ymin=sdBETA-seBETA, ymax=sdBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 2.9, label.x = -.75, size = 5) +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment slope") +
ylab("SD ß-turbidity")
### Deciduous
# ggplot(turb_data, aes(x = Deciduous.2020, y = sdBETA)) +
#   geom_point(size = 3) +
#   geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
#   stat_poly_eq(formula = y~x,
#                label.y = "top", label.x = "left",
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE, size = 6) +
#   theme_classic() +
#   theme(axis.text.x=element_text(size=20),
#         axis.text.y = element_text(size = 20),
#         axis.title.x = element_text(size = 20),
#         axis.title.y = element_text(size = 20),
#         legend.key.size = unit(2.0, 'cm'),
#         strip.text = element_text(size = 20)) +
#   xlab("% Deciduous") +
#   ylab("SD B-Turbidity") +
#   theme(aspect.ratio = 1)
###
ggsave("sdBETA_Turb_burn.pdf",
path = here("plots", "Catchment_characteristics", "BETA"),
width = 7, height = 7)
ggarrange(no3.hi.burn, no3.beta.burn,
no3.sdhi.slope, no3.sdbeta.burn,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
no3.beta.deciduous <- ggplot(NO3_data, aes(x = Deciduous.2010, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=Deciduous.2010, ymin=meanBETA-seBETA, ymax=meanBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5.5) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y~x),
geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.y = 0.2, label.x = -.7, size = 5.5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("% Deciduous") +
ylab(vn) +
theme(aspect.ratio = 1)
ggarrange(no3.hi.burn, no3.beta.deciduous,
no3.sdhi.slope, no3.sdbeta.burn,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
ggsave("no3_characteristics.pdf",
path = here("plots", "Catchment_characteristics"),
width = 10, height = 10)
ggarrange(fdom.hi.slope, fDOM.beta.slope,
fDOM.sdhi.burn,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)"),
legend = "bottom")
ggsave("fDOM_characteristics.pdf",
path = here("plots", "Catchment_characteristics"),
width = 10, height = 10)
ggarrange(spc.hi.slope, spc.beta.slope,
spc.sdbeta.burn,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)"),
legend = "bottom")
ggsave("SPC_characteristics.pdf",
path = here("plots", "Catchment_characteristics"),
width = 10, height = 10)
ggarrange(turb.hi.burn, turb.sdbeta.slope,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)"),
legend = "bottom")
ggsave("turb_characteristics.pdf",
path = here("plots", "Catchment_characteristics"),
width = 10, height = 10)
models <- list(HI.no3.slope, HI.no3.burn, HI.no3.deciduous)
