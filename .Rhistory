values_drop_na = TRUE
) # converting to a long format so each response_var is within a single column
chem_total <- full_join(cari_2019_long, chem_2019_long)
FRCH.2019 <-  subset(chem.2019, site.ID == "FRCH")
FRCH.2019 <- FRCH.2019[order(FRCH.2019$datetimeAK),]
FRCH.2019 <- FRCH.2019[-c(15721 :16069), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
MOOS.2019 <-  subset(chem.2019, site.ID == "MOOS")
MOOS.2019 <- MOOS.2019[order(MOOS.2019$datetimeAK),]
MOOS.2019 <- MOOS.2019[-c(15909:16300), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
POKE.2019 <-  subset(chem.2019, site.ID == "POKE")
POKE.2019 <- POKE.2019[order(POKE.2019$datetimeAK),]
POKE.2019 <- POKE.2019[-c(15340:15757), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
VAUL.2019 <-  subset(chem.2019, site.ID == "VAUL")
VAUL.2019 <- VAUL.2019[order(VAUL.2019$datetimeAK),]
VAUL.2019 <- VAUL.2019[-c(14728:15133), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
STRT.2019 <-  subset(chem.2019, site.ID == "STRT")
STRT.2019 <- STRT.2019[order(STRT.2019$datetimeAK),]
STRT.2019 <- STRT.2019[-c(14714:15099), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
DOD.2019 <- rbind(FRCH.2019, MOOS.2019, POKE.2019,
VAUL.2019, STRT.2019)
DOD.2019 <- full_join(DOD.2019, Q.2019) # merging chem and discharge data
frch.final.discharge.2019 <- subset(Q.2019, site.ID == "FRCH")
strt.final.discharge.2019 <- subset(Q.2019, site.ID == "STRT")
poke.final.discharge.2019 <- subset(Q.2019, site.ID == "POKE")
vaul.final.discharge.2019 <- subset(Q.2019, site.ID == "VAUL")
moos.final.discharge.2019 <- subset(Q.2019, site.ID == "MOOS")
Q.2019$day = format(as.POSIXct(Q.2019$datetimeAK,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q.2019$day = as.POSIXct(Q.2019$day, "%Y-%m-%d", tz="America/Anchorage")
Q.daily.2019 = with(Q.2019, tapply(Q, list(day, site.ID), mean))
Q.daily.2019 = as.data.frame(Q.daily.2019)
FRCH.Q.2019 = as.data.frame(Q.daily.2019$FRCH)
FRCH.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(FRCH.Q.2019) = c("Discharge_Lsec", "day")
STRT.Q.2019 = as.data.frame(Q.daily.2019$STRT)
STRT.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(STRT.Q.2019) = c("Discharge_Lsec", "day")
POKE.Q.2019 = as.data.frame(Q.daily.2019$POKE)
POKE.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(POKE.Q.2019) = c("Discharge_Lsec", "day")
VAUL.Q.2019 = as.data.frame(Q.daily.2019$VAUL)
VAUL.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(VAUL.Q.2019) = c("Discharge_Lsec", "day")
MOOS.Q.2019 = as.data.frame(Q.daily.2019$MOOS)
MOOS.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(MOOS.Q.2019) = c("Discharge_Lsec", "day")
# join Q and chem data
# FRCH #
FRCH = full_join(frch.final.discharge.2019, FRCH.2019)
# MOOS #
MOOS = full_join(moos.final.discharge.2019, MOOS.2019)
# STRT #
STRT = full_join(strt.final.discharge.2019, STRT.2019)
# POKE #
POKE = full_join(poke.final.discharge.2019, POKE.2019)
# VAUL #
VAUL = full_join(vaul.final.discharge.2019, VAUL.2019)
any(is.na(FRCH.Q.2019$day))
any(is.na(FRCH.Q.2019$Discharge_Lsec))
FRCH.Q.2019 <- na.omit(FRCH.Q.2019) # Removed 12 rows - (178 to 166)
any(is.na(STRT.Q.2019$day))
any(is.na(STRT.Q.2019$Discharge_Lsec))
STRT.Q.2019 <- na.omit(STRT.Q.2019) # Removed 34 rows - (178 to 144)
any(is.na(POKE.Q.2019$day))
any(is.na(POKE.Q.2019$Discharge_Lsec))
POKE.Q.2019 <- na.omit(POKE.Q.2019) # Removed 40 rows - (178 to 138)
any(is.na(VAUL.Q.2019$day))
any(is.na(VAUL.Q.2019$Discharge_Lsec))
VAUL.Q.2019 <- na.omit(VAUL.Q.2019) # Removed 45 rows - (178 to 134)
any(is.na(MOOS.Q.2019$day))
any(is.na(MOOS.Q.2019$Discharge_Lsec))
MOOS.Q.2019 <- na.omit(MOOS.Q.2019) # Removed 34 rows - (178 to 144)
any(is.na(CARI.Q.2019$day))
any(is.na(CARI.Q.2019$Discharge_Lsec))
CARI.Q.2019 <- na.omit(CARI.Q.2019) # Removed 51 rows - (167 to 116)
FRCH$DateTime <- FRCH$datetimeAK
POKE$DateTime <- POKE$datetimeAK
MOOS$DateTime <- MOOS$datetimeAK
VAUL$DateTime <- VAUL$datetimeAK
STRT$DateTime <- STRT$datetimeAK
FRCH.st <- read_csv(here("Climate", "Precip","FRCH.RainGauge.2019.csv"))
# FRCH.st <- read_csv("~/Documents/DoD_2019/RainGauge/FRCH.RainGauge.2019.csv")
FRCH.st$Datetime <- force_tz(FRCH.st$Datetime, "America/Anchorage") # converting character to datetime
FRCH.st$DateTime <- FRCH.st$Datetime
VAUL.st <- read_csv(here("Climate", "Precip","VAUL.RainGauge.2019.csv"))
# VAUL.st <- read_csv("~/Documents/DoD_2019/RainGauge/VAUL.RainGauge.2019.csv")
VAUL.st$DateTime <- force_tz(VAUL.st$DateTime, "America/Anchorage") # converting character to datetime
POKE.st <- read_csv(here("Climate", "Precip","POKE.RainGauge.2019.csv"))
# POKE.st <- read_csv("~/Documents/DoD_2019/RainGauge/POKE.RainGauge.2019.csv")
POKE.st$DateTime <- force_tz(POKE.st$DateTime, "America/Anchorage") # converting character to datetime
frch.final.discharge.2019$DateTime <- frch.final.discharge.2019$datetimeAK
vaul.final.discharge.2019$DateTime <- vaul.final.discharge.2019$datetimeAK
poke.final.discharge.2019$DateTime <- poke.final.discharge.2019$datetimeAK
frch.precip.discharge.2019 <- full_join(frch.final.discharge.2019, FRCH.st, by = "DateTime") # merging precip data and discharge
vaul.precip.discharge.2019 <- full_join(vaul.final.discharge.2019, VAUL.st, by = "DateTime") # merging precip data and discharge
poke.precip.discharge.2019 <- full_join(poke.final.discharge.2019, POKE.st, by = "DateTime") # merging precip data and discharge
### Sum daily discharge ###
frch.precip.discharge.2019$twentyfour <- rollapplyr(frch.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
frch.precip.discharge.2019$fourtyeight <- rollapplyr(frch.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge.2019$twentyfour <- rollapplyr(vaul.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge.2019$fourtyeight <- rollapplyr(vaul.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge.2019$twentyfour <- rollapplyr(poke.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge.2019$fourtyeight <- rollapplyr(poke.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
# Greater than 5 #
frch.five.twenty.four <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
frch.five.fourty.eight <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
#strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 5
#strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
vaul.five.twenty.four <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
poke.five.twenty.four <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
# Greater than 10 #
frch.ten.twenty.four <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
frch.ten.fourty.eight <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
#strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
#strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
vaul.ten.twenty.four <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
poke.ten.twenty.four <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
# write.csv(frch.precip.discharge, "frch.precip.discharge.csv", row.names = FALSE)
# #write.csv(strt.precip.discharge, "strt.precip.discharge.csv", row.names = FALSE)
# write.csv(vaul.precip.discharge, "vaul.precip.discharge.csv", row.names = FALSE)
# write.csv(poke.precip.discharge, "poke.precip.discharge.csv", row.names = FALSE)
#CARI#
CARI_2019$DateTime <- CARI_2019$datetimeAK
CARI_2019$SpCond <- CARI_2019$SPC
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"))
lines(CARI_2019$NO3 * 20 ~ CARI_2019$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2019$fDOM * 10 ~ CARI_2019$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
### Storms ###
# CARI #
# Storm 1 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-05-08 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-05-12 07:15:00", tz="America/Anchorage"), col="purple")
CARI_storm1_05_08 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-05-08 10:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-05-12 07:15:00", tz="America/Anchorage"),]
plot(CARI_storm1_05_08$Discharge ~ as.POSIXct(CARI_storm1_05_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,800), col="blue", main="CARI 190508 storm 1",
xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"))
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-30 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-01 20:15:00", tz="America/Anchorage"), col="purple")
CARI_storm2_06_30 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-06-30 08:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-07-01 20:15:00", tz="America/Anchorage"),]
plot(CARI_storm2_06_30$Discharge ~ as.POSIXct(CARI_storm2_06_30$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 190630 storm 2",
xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"))
# Storm 3 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-12 11:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-13 08:15:00", tz="America/Anchorage"), col="purple")
CARI_storm3_07_12 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-07-12 11:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-07-13 08:15:00", tz="America/Anchorage"),]
# Storm 4 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-26 07:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-27 20:15:00", tz="America/Anchorage"), col="purple")
CARI_storm4_07_26 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-07-26 07:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-07-27 20:15:00", tz="America/Anchorage"),]
plot(CARI_storm4_07_26$Discharge ~ as.POSIXct(CARI_storm4_07_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 190726 storm 4",
xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
# Storm 5 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-31 23:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-02 09:15:00", tz="America/Anchorage"), col="purple")
CARI_storm5_07_31 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-07-31 23:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-08-02 09:15:00", tz="America/Anchorage"),]
plot(CARI_storm5_07_31$Discharge ~ as.POSIXct(CARI_storm5_07_31$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 190731 storm 5",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-02 12:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-03 09:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-05 20:15:00", tz="America/Anchorage"), col="purple")
CARI_storm6a_08_02 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-02 12:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-08-05 20:15:00", tz="America/Anchorage"),]
plot(CARI_storm6a_08_02$Discharge ~ as.POSIXct(CARI_storm6a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="CARI 190802 storm 6a",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_storm6a_08_02$Discharge ~ as.POSIXct(CARI_storm6a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="CARI 190802 storm 6a",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_storm6a_08_02$Discharge ~ as.POSIXct(CARI_storm6a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3500), col="blue", main="CARI 190802 storm 6a",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_storm6a_08_02$Discharge ~ as.POSIXct(CARI_storm6a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,4000), col="blue", main="CARI 190802 storm 6a",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_storm6a_08_02$Discharge ~ as.POSIXct(CARI_storm6a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,4500), col="blue", main="CARI 190802 storm 6a",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
# Storm 6c #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-05 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-10 10:15:00", tz="America/Anchorage"), col="purple")
CARI_storm6c_08_05 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-05 20:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-08-10 10:15:00", tz="America/Anchorage"),]
plot(CARI_storm6c_08_05$Discharge ~ as.POSIXct(CARI_storm6c_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,2000), col="blue", main="CARI 190805 storm 6c",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-10 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-11 20:15:00", tz="America/Anchorage"), col="purple")
CARI_storm6d_08_10 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-10 10:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-08-11 20:15:00", tz="America/Anchorage"),]
plot(CARI_storm6d_08_10$Discharge ~ as.POSIXct(CARI_storm6d_08_10$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1000), col="blue", main="CARI 190810 storm 6d",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-13 03:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-13 16:15:00", tz="America/Anchorage"), col="purple")
CARI_storm7a_08_13 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-13 03:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-08-13 16:15:00", tz="America/Anchorage"),]
plot(CARI_storm7a_08_13$Discharge ~ as.POSIXct(CARI_storm7a_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1500), col="blue", main="CARI 190813 storm 7a",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(v= as.POSIXct("2019-08-15 23:15:00", tz="America/Anchorage"), col="purple")
CARI_storm7a_08_13 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-13 03:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-08-15 23:15:00", tz="America/Anchorage"),]
plot(CARI_storm7a_08_13$Discharge ~ as.POSIXct(CARI_storm7a_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1500), col="blue", main="CARI 190813 storm 7a",
xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2019-08-13 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2019-08-13 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-16 04:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-18 23:15:00", tz="America/Anchorage"), col="purple")
CARI_storm1_05_08_Q = subset(CARI_storm1_05_08, select = c("DateTime", "Discharge"))
names(CARI_storm1_05_08_Q) = c("valuedatetime","datavalue")
CARI_storm1_05_08_NO3 = subset(CARI_storm1_05_08, select = c("DateTime","NO3"))
names(CARI_storm1_05_08_NO3) = c("valuedatetime","datavalue")
CARI_storm1_05_08_fDOM = subset(CARI_storm1_05_08, select = c("DateTime","fDOM"))
names(CARI_storm1_05_08_fDOM) = c("valuedatetime","datavalue")
CARI_storm1_05_08_SPC = subset(CARI_storm1_05_08, select = c("DateTime","SpCond"))
names(CARI_storm1_05_08_SPC) = c("valuedatetime","datavalue")
CARI_storm1_05_08_turb = subset(CARI_storm1_05_08, select = c("DateTime","Turb"))
names(CARI_storm1_05_08_turb) = c("valuedatetime","datavalue")
CARI_storm2_06_30_Q = subset(CARI_storm2_06_30, select = c("DateTime", "Discharge"))
names(CARI_storm2_06_30_Q) = c("valuedatetime","datavalue")
CARI_storm2_06_30_NO3 = subset(CARI_storm2_06_30, select = c("DateTime","NO3"))
names(CARI_storm2_06_30_NO3) = c("valuedatetime","datavalue")
CARI_storm2_06_30_fDOM = subset(CARI_storm2_06_30, select = c("DateTime","fDOM"))
names(CARI_storm2_06_30_fDOM) = c("valuedatetime","datavalue")
CARI_storm2_06_30_SPC = subset(CARI_storm2_06_30, select = c("DateTime","SpCond"))
names(CARI_storm2_06_30_SPC) = c("valuedatetime","datavalue")
CARI_storm2_06_30_turb = subset(CARI_storm2_06_30, select = c("DateTime","Turb"))
names(CARI_storm2_06_30_turb) = c("valuedatetime","datavalue")
CARI_storm3_07_12_Q = subset(CARI_storm3_07_12, select = c("DateTime", "Discharge"))
names(CARI_storm3_07_12_Q) = c("valuedatetime","datavalue")
CARI_storm3_07_12_NO3 = subset(CARI_storm3_07_12, select = c("DateTime","NO3"))
names(CARI_storm3_07_12_NO3) = c("valuedatetime","datavalue")
CARI_storm3_07_12_fDOM = subset(CARI_storm3_07_12, select = c("DateTime","fDOM"))
names(CARI_storm3_07_12_fDOM) = c("valuedatetime","datavalue")
CARI_storm3_07_12_SPC = subset(CARI_storm3_07_12, select = c("DateTime","SpCond"))
names(CARI_storm3_07_12_SPC) = c("valuedatetime","datavalue")
CARI_storm3_07_12_turb = subset(CARI_storm3_07_12, select = c("DateTime","Turb"))
names(CARI_storm3_07_12_turb) = c("valuedatetime","datavalue")
CARI_storm4_07_26_Q = subset(CARI_storm4_07_26, select = c("DateTime", "Discharge"))
names(CARI_storm4_07_26_Q) = c("valuedatetime","datavalue")
CARI_storm4_07_26_NO3 = subset(CARI_storm4_07_26, select = c("DateTime","NO3"))
names(CARI_storm4_07_26_NO3) = c("valuedatetime","datavalue")
CARI_storm4_07_26_fDOM = subset(CARI_storm4_07_26, select = c("DateTime","fDOM"))
names(CARI_storm4_07_26_fDOM) = c("valuedatetime","datavalue")
CARI_storm4_07_26_SPC = subset(CARI_storm4_07_26, select = c("DateTime","SpCond"))
names(CARI_storm4_07_26_SPC) = c("valuedatetime","datavalue")
CARI_storm4_07_26_turb = subset(CARI_storm4_07_26, select = c("DateTime","Turb"))
names(CARI_storm4_07_26_turb) = c("valuedatetime","datavalue")
CARI_storm5_07_31_Q = subset(CARI_storm5_07_31, select = c("DateTime", "Discharge"))
names(CARI_storm5_07_31_Q) = c("valuedatetime","datavalue")
CARI_storm5_07_31_NO3 = subset(CARI_storm5_07_31, select = c("DateTime","NO3"))
names(CARI_storm5_07_31_NO3) = c("valuedatetime","datavalue")
CARI_storm5_07_31_fDOM = subset(CARI_storm5_07_31, select = c("DateTime","fDOM"))
names(CARI_storm5_07_31_fDOM) = c("valuedatetime","datavalue")
CARI_storm5_07_31_SPC = subset(CARI_storm5_07_31, select = c("DateTime","SpCond"))
names(CARI_storm5_07_31_SPC) = c("valuedatetime","datavalue")
CARI_storm5_07_31_turb = subset(CARI_storm5_07_31, select = c("DateTime","Turb"))
names(CARI_storm5_07_31_turb) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_Q = subset(CARI_storm6a_08_02, select = c("DateTime", "Discharge"))
names(CARI_storm6a_08_02_Q) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_NO3 = subset(CARI_storm6a_08_02, select = c("DateTime","NO3"))
names(CARI_storm6a_08_02_NO3) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_fDOM = subset(CARI_storm6a_08_02, select = c("DateTime","fDOM"))
names(CARI_storm6a_08_02_fDOM) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_SPC = subset(CARI_storm6a_08_02, select = c("DateTime","SpCond"))
names(CARI_storm6a_08_02_SPC) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_turb = subset(CARI_storm6a_08_02, select = c("DateTime","Turb"))
names(CARI_storm6a_08_02_turb) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_Q = subset(CARI_storm6c_08_05, select = c("DateTime", "Discharge"))
names(CARI_storm6c_08_05_Q) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_NO3 = subset(CARI_storm6c_08_05, select = c("DateTime","NO3"))
names(CARI_storm6c_08_05_NO3) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_fDOM = subset(CARI_storm6c_08_05, select = c("DateTime","fDOM"))
names(CARI_storm6c_08_05_fDOM) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_SPC = subset(CARI_storm6c_08_05, select = c("DateTime","SpCond"))
names(CARI_storm6c_08_05_SPC) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_turb = subset(CARI_storm6c_08_05, select = c("DateTime","Turb"))
names(CARI_storm6c_08_05_turb) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_Q = subset(CARI_storm6d_08_10, select = c("DateTime", "Discharge"))
names(CARI_storm6d_08_10_Q) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_NO3 = subset(CARI_storm6d_08_10, select = c("DateTime","NO3"))
names(CARI_storm6d_08_10_NO3) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_fDOM = subset(CARI_storm6d_08_10, select = c("DateTime","fDOM"))
names(CARI_storm6d_08_10_fDOM) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_SPC = subset(CARI_storm6d_08_10, select = c("DateTime","SpCond"))
names(CARI_storm6d_08_10_SPC) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_turb = subset(CARI_storm6d_08_10, select = c("DateTime","Turb"))
names(CARI_storm6d_08_10_turb) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_Q = subset(CARI_storm7a_08_13, select = c("DateTime", "Discharge"))
names(CARI_storm7a_08_13_Q) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_NO3 = subset(CARI_storm7a_08_13, select = c("DateTime","NO3"))
names(CARI_storm7a_08_13_NO3) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_fDOM = subset(CARI_storm7a_08_13, select = c("DateTime","fDOM"))
names(CARI_storm7a_08_13_fDOM) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_SPC = subset(CARI_storm7a_08_13, select = c("DateTime","SpCond"))
names(CARI_storm7a_08_13_SPC) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_turb = subset(CARI_storm7a_08_13, select = c("DateTime","Turb"))
names(CARI_storm7a_08_13_turb) = c("valuedatetime","datavalue")
CARI_storm8_08_16_Q = subset(CARI_storm8_08_16, select = c("DateTime", "Discharge"))
CARI_storm8_08_16 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-16 04:15:00", tz="America/Anchorage") &
CARI_2019$DateTime < as.POSIXct("2019-08-18 23:15:00", tz="America/Anchorage"),]
CARI_storm8_08_16_Q = subset(CARI_storm8_08_16, select = c("DateTime", "Discharge"))
names(CARI_storm8_08_16_Q) = c("valuedatetime","datavalue")
CARI_storm8_08_16_NO3 = subset(CARI_storm8_08_16, select = c("DateTime","NO3"))
names(CARI_storm8_08_16_NO3) = c("valuedatetime","datavalue")
CARI_storm8_08_16_fDOM = subset(CARI_storm8_08_16, select = c("DateTime","fDOM"))
names(CARI_storm8_08_16_fDOM) = c("valuedatetime","datavalue")
CARI_storm8_08_16_SPC = subset(CARI_storm8_08_16, select = c("DateTime","SpCond"))
names(CARI_storm8_08_16_SPC) = c("valuedatetime","datavalue")
CARI_storm8_08_16_turb = subset(CARI_storm8_08_16, select = c("DateTime","Turb"))
names(CARI_storm8_08_16_turb) = c("valuedatetime","datavalue")
write.csv(CARI_storm1_05_08, here("Storm_Events", "2019", "CARI", "CARI_storm1_05_08.csv"))
write.csv(CARI_storm1_05_08_Q, here("Storm_Events", "2019", "CARI", "CARI_storm1_05_08_Q.csv"))
write.csv(CARI_storm1_05_08_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm1_05_08_NO3.csv"))
write.csv(CARI_storm1_05_08_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm1_05_08_fDOM.csv"))
write.csv(CARI_storm1_05_08_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm1_05_08_SPC.csv"))
write.csv(CARI_storm1_05_08_turb, here("Storm_Events", "2019", "CARI", "CARI_storm1_05_08_Turb.csv"))
write.csv(CARI_storm2_06_30, here("Storm_Events", "2019", "CARI", "CARI_storm2_06_30.csv"))
write.csv(CARI_storm2_06_30_Q, here("Storm_Events", "2019", "CARI", "CARI_storm2_06_30_Q.csv"))
write.csv(CARI_storm2_06_30_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm2_06_30_NO3.csv"))
write.csv(CARI_storm2_06_30_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm2_06_30_fDOM.csv"))
write.csv(CARI_storm2_06_30_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm2_06_30_SPC.csv"))
write.csv(CARI_storm2_06_30_turb, here("Storm_Events", "2019", "CARI", "CARI_storm2_06_30_Turb.csv"))
write.csv(CARI_storm3_07_12, here("Storm_Events", "2019", "CARI", "CARI_storm3_07_12.csv"))
write.csv(CARI_storm3_07_12_Q, here("Storm_Events", "2019", "CARI", "CARI_storm3_07_12_Q.csv"))
write.csv(CARI_storm3_07_12_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm3_07_12_NO3.csv"))
write.csv(CARI_storm3_07_12_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm3_07_12_fDOM.csv"))
write.csv(CARI_storm3_07_12_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm3_07_12_SPC.csv"))
write.csv(CARI_storm3_07_12_turb, here("Storm_Events", "2019", "CARI", "CARI_storm3_07_12_Turb.csv"))
write.csv(CARI_storm4_07_26, here("Storm_Events", "2019", "CARI", "CARI_storm4_07_26.csv"))
write.csv(CARI_storm4_07_26_Q, here("Storm_Events", "2019", "CARI", "CARI_storm4_07_26_Q.csv"))
write.csv(CARI_storm4_07_26_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm4_07_26_NO3.csv"))
write.csv(CARI_storm4_07_26_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm4_07_26_fDOM.csv"))
write.csv(CARI_storm4_07_26_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm4_07_26_SPC.csv"))
write.csv(CARI_storm4_07_26_turb, here("Storm_Events", "2019", "CARI", "CARI_storm4_07_26_Turb.csv"))
write.csv(CARI_storm5_07_31, here("Storm_Events", "2019", "CARI", "CARI_storm5_07_31.csv"))
write.csv(CARI_storm5_07_31_Q, here("Storm_Events", "2019", "CARI", "CARI_storm5_07_31_Q.csv"))
write.csv(CARI_storm5_07_31_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm5_07_31_NO3.csv"))
write.csv(CARI_storm5_07_31_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm5_07_31_fDOM.csv"))
write.csv(CARI_storm5_07_31_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm5_07_31_SPC.csv"))
write.csv(CARI_storm5_07_31_turb, here("Storm_Events", "2019", "CARI", "CARI_storm5_07_31_Turb.csv"))
write.csv(CARI_storm6a_08_02, here("Storm_Events", "2019", "CARI", "CARI_storm6a_08_02.csv"))
write.csv(CARI_storm6a_08_02_Q, here("Storm_Events", "2019", "CARI", "CARI_storm6a_08_02_Q.csv"))
write.csv(CARI_storm6a_08_02_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm6a_08_02_NO3.csv"))
write.csv(CARI_storm6a_08_02_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm6a_08_02_fDOM.csv"))
write.csv(CARI_storm6a_08_02_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm6a_08_02_SPC.csv"))
write.csv(CARI_storm6a_08_02_turb, here("Storm_Events", "2019", "CARI", "CARI_storm6a_08_02_Turb.csv"))
write.csv(CARI_storm6c_08_05, here("Storm_Events", "2019", "CARI", "CARI_storm6c_08_05.csv"))
write.csv(CARI_storm6c_08_05_Q, here("Storm_Events", "2019", "CARI", "CARI_storm6c_08_05_Q.csv"))
write.csv(CARI_storm6c_08_05_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm6c_08_05_NO3.csv"))
write.csv(CARI_storm6c_08_05_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm6c_08_05_fDOM.csv"))
write.csv(CARI_storm6c_08_05_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm6c_08_05_SPC.csv"))
write.csv(CARI_storm6c_08_05_turb, here("Storm_Events", "2019", "CARI", "CARI_storm6c_08_05_Turb.csv"))
write.csv(CARI_storm6d_08_10, here("Storm_Events", "2019", "CARI", "CARI_storm6d_08_10.csv"))
write.csv(CARI_storm6d_08_10_Q, here("Storm_Events", "2019", "CARI", "CARI_storm6d_08_10_Q.csv"))
write.csv(CARI_storm6d_08_10_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm6d_08_10_NO3.csv"))
write.csv(CARI_storm6d_08_10_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm6d_08_10_fDOM.csv"))
write.csv(CARI_storm6d_08_10_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm6d_08_10_SPC.csv"))
write.csv(CARI_storm6d_08_10_turb, here("Storm_Events", "2019", "CARI", "CARI_storm6d_08_10_Turb.csv"))
write.csv(CARI_storm7a_08_13, here("Storm_Events", "2019", "CARI", "CARI_storm7a_08_13.csv"))
write.csv(CARI_storm7a_08_13_Q, here("Storm_Events", "2019", "CARI", "CARI_storm7a_08_13_Q.csv"))
write.csv(CARI_storm7a_08_13_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm7a_08_13_NO3.csv"))
write.csv(CARI_storm7a_08_13_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm7a_08_13_fDOM.csv"))
write.csv(CARI_storm7a_08_13_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm7a_08_13_SPC.csv"))
write.csv(CARI_storm7a_08_13_turb, here("Storm_Events", "2019", "CARI", "CARI_storm7a_08_13_Turb.csv"))
write.csv(CARI_storm8_08_16, here("Storm_Events", "2019", "CARI", "CARI_storm8_08_16.csv"))
write.csv(CARI_storm8_08_16_Q, here("Storm_Events", "2019", "CARI", "CARI_storm8_08_16_Q.csv"))
write.csv(CARI_storm8_08_16_NO3, here("Storm_Events", "2019", "CARI", "CARI_storm8_08_16_NO3.csv"))
write.csv(CARI_storm8_08_16_fDOM, here("Storm_Events", "2019", "CARI", "CARI_storm8_08_16_fDOM.csv"))
write.csv(CARI_storm8_08_16_SPC, here("Storm_Events", "2019", "CARI", "CARI_storm8_08_16_SPC.csv"))
write.csv(CARI_storm8_08_16_turb, here("Storm_Events", "2019", "CARI", "CARI_storm8_08_16_Turb.csv"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(boot)
library(lubridate)
library(here)
Sys.which("python")
use_python("/usr/local/bin/python3")
options(tz="America/Anchorage")
# install pandas #
virtualenv_create("r-reticulate")
# RETICULATE_PYTHON = "lib/python3.8"
reticulate::py_config()
reticulate::py_install("pandas")
reticulate::repl_python()
