names(Q.2021) <- c("site.ID", "datetimeAK", "Q") # renaming the column headers to match that of the chem file
Q.2021$datetimeAK <- ymd_hms(Q.2021$datetimeAK) # converting character to datetime
Q.2021$datetimeAK <- force_tz(Q.2021$datetimeAK, "America/Anchorage") # converting character to datetime
chem.2021 <- read.csv(here("processed_sensor_data", "2021", "SUNA.EXO.int.corr.lab_2021.csv"))
chem.2021 <- chem.2021[c("datetimeAK", "site.ID", "fDOM.QSU.T.turb.col", "SpCond.uScm.mn.adj",
"Turbidity.FNU.mn.adj", "nitrateuM.mn.lab", "abs254.adj.mn")]
chem.2021$datetimeAK <- ymd_hms(chem.2021$datetimeAK) # converting character to datetime
chem.2021$datetimeAK <- force_tz(chem.2021$datetimeAK, "America/Anchorage") # converting character to datetime
names(chem.2021) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "ABS_254")
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ####
# pivot long to get all the response variables in one column
chem.2021_long <- chem.2021 %>%
filter(site.ID %in% c("FRCH", "MOOS", "POKE", "VAUL", "STRT")) %>%
pivot_longer(
cols = fDOM:ABS_254,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
) # converting to a long format so each response_var is within a single column
FRCH.2021 <-  subset(chem.2021, site.ID == "FRCH")
FRCH.2021 <- FRCH.2021[order(FRCH.2021$datetimeAK),]
FRCH.2021 <- FRCH.2021[-c(14090:14359), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
MOOS.2021 <-  subset(chem.2021, site.ID == "MOOS")
MOOS.2021 <- MOOS.2021[order(MOOS.2021$datetimeAK),]
MOOS.2021 <- MOOS.2021[-c(14001:14304), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
POKE.2021 <-  subset(chem.2021, site.ID == "POKE")
POKE.2021 <- POKE.2021[order(POKE.2021$datetimeAK),]
POKE.2021 <- POKE.2021[-c(14004:14376), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
STRT.2021 <-  subset(chem.2021, site.ID == "STRT")
STRT.2021 <- STRT.2021[order(STRT.2021$datetimeAK),]
STRT.2021 <- STRT.2021[-c(12567:12845), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
VAUL.2021 <-  subset(chem.2021, site.ID == "VAUL")
VAUL.2021 <- VAUL.2021[order(VAUL.2021$datetimeAK),]
VAUL.2021 <- VAUL.2021[-c(13446:13788), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
chem.2021 <- rbind(FRCH.2021, MOOS.2021, POKE.2021, STRT.2021, VAUL.2021)
DOD.2021 <- full_join(chem.2021, Q.2021) # merging chem and discharge data
# write_csv(DOD.2021, here("Q", "Q_chem", "DOD.2021.csv"))
### READ in CARI Data ###
# this is data directly from the NEON data base website that I downloaded
CARI.2021 <- read.csv(here("processed_sensor_data", "2021", "NEON_Q_WaterQuality2021.csv")) # this is from my NEON repository that reads in NEON data using their NEONutilities package and then manually cleaning points
CARI.2021$DateTimeAK <- ymd_hms(CARI.2021$DateTimeAK)
# CARI.2018 <- read_csv("NEON_Q_WaterQuality2018.csv",
#                       col_types = cols(Discharge = col_double(),
#                                        fDOM = col_double(), NO3 = col_double(),
#                                        SPC = col_double(), Turb = col_double()))
CARI.2021 <- CARI.2021[ , -which(names(CARI.2021) %in% c("site.ID.y"))] # dropping column header that I dont want
names(CARI.2021)[names(CARI.2021) == 'DateTimeAK'] <- 'datetimeAK'
names(CARI.2021)[names(CARI.2021) == 'site.ID.x'] <- 'site.ID'
CARI.2021$site.ID <- "CARI"
CARI.2021$day <-  format(as.POSIXct(CARI.2021$datetimeAK,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
CARI.2021$day <-  as.POSIXct(CARI.2021$day, "%Y-%m-%d", tz="America/Anchorage")
cari.final.discharge.2021 <- CARI.2021[ , -which(names(CARI.2021) %in% c("NO3", "fDOM", "SPC", "Turb"))] # dropping column header that I dont want
CARI.daily.2021 <-  with(CARI.2021, tapply(Discharge, list(day, site.ID), mean))
CARI.daily.2021 <-  as.data.frame(CARI.daily.2021)
CARI.Q.2021 <-  as.data.frame(CARI.daily.2021$CARI)
CARI.Q.2021$day <-  as.Date(rownames(CARI.daily.2021))
names(CARI.Q.2021) <-  c("Discharge_Lsec", "day")
CARI.Q.2021$site.ID <- "CARI"
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ###
# pivot long to get all the response variables in one column
cari_2021_long <- CARI.2021 %>%
pivot_longer(
cols = NO3:Turb,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
)
chem_total <- full_join(cari_2021_long, chem_2021_long)
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ###
# pivot long to get all the response variables in one column
cari_2021_long <- CARI.2021 %>%
pivot_longer(
cols = NO3:Turb,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
)
chem_total <- full_join(cari_2021_long, chem_2021_long)
chem.2021 <- rbind(FRCH.2021, MOOS.2021, POKE.2021, STRT.2021, VAUL.2021)
chem_total <- full_join(cari_2021_long, chem_2021_long)
chem_total <- full_join(cari_2021_long, chem.2021_long)
frch.final.discharge.2021 <- subset(Q.2021, site.ID == "FRCH")
head(frch.final.discharge.2021$datetimeAK)
strt.final.discharge.2021 <- subset(Q.2021, site.ID == "STRT")
head(strt.final.discharge.2021$datetimeAK)
moos.final.discharge.2021 <- subset(Q.2021, site.ID == "MOOS")
head(moos.final.discharge.2021$datetimeAK)
poke.final.discharge.2021 <- subset(Q.2021, site.ID == "POKE")
head(poke.final.discharge.2021$datetimeAK)
ggplot(poke.final.discharge.2021, aes(x = datetimeAK, y = Q)) +
geom_point()
vaul.final.discharge.2021 <- subset(Q.2021, site.ID == "VAUL")
head(vaul.final.discharge.2021$datetimeAK)
frch.final.discharge.2021$MeanDischarge <- frch.final.discharge.2021$Q
moos.final.discharge.2021$MeanDischarge <- moos.final.discharge.2021$Q
poke.final.discharge.2021$MeanDischarge <- poke.final.discharge.2021$Q
vaul.final.discharge.2021$MeanDischarge <- vaul.final.discharge.2021$Q
strt.final.discharge.2021$MeanDischarge <- strt.final.discharge.2021$Q
VAUL.2021 <- left_join(vaul.final.discharge.2021, VAUL.2021)
VAUL.2021 <- VAUL.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3", "ABS_254", "Q")]
MOOS.2021 <- left_join(moos.final.discharge.2021, MOOS.2021)
MOOS.2021 <- MOOS.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3", "ABS_254", "Q")]
FRCH.2021 <- left_join(frch.final.discharge.2021, FRCH.2021)
FRCH.2021 <- FRCH.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3","ABS_254", "Q")]
STRT.2021 <- left_join(strt.final.discharge.2021, STRT.2021)
STRT.2021 <- STRT.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3", "ABS_254", "Q")]
POKE.2021 <- full_join(poke.final.discharge.2021, POKE.2021)
POKE.2021 <- POKE.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3", "ABS_254", "Q")]
# CARI
any(is.na(cari.final.discharge.2021$Discharge))
cari.final.discharge.2021 <- na.omit(cari.final.discharge.2021) # removed 225351-209057
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2021$Discharge, filter_parameter = 0.90, passes = 3)
STRT.st <- read_csv(here("Climate", "Precip", "STRT.RainGauge.2021.csv"))
STRT.st$DateTime <- force_tz(STRT.st$DateTime, "America/Anchorage") # converting character to datetime
VAUL.st <- read_csv(here("Climate", "Precip", "VAUL.RainGauge.2021.csv"))
VAUL.st$DateTime <- force_tz(VAUL.st$DateTime, "America/Anchorage") # converting character to datetime
POKE.st <- read_csv(here("Climate", "Precip", "POKE.RainGauge.2021.csv"))
POKE.st$DateTime <- force_tz(POKE.st$DateTime, "America/Anchorage") # converting character to datetime
names(STRT.st) <- c("min", "inst_rainfall_mm", "datetimeAK", "site.ID")
names(VAUL.st) <- c("min", "inst_rainfall_mm", "datetimeAK", "site.ID")
names(POKE.st) <- c("datetimeAK", "CRREL", "CARI", "inst_rainfall_mm", "site.ID")
strt.precip.discharge <- full_join(strt.final.discharge.2021, STRT.st) # merging precip data and discharge
vaul.precip.discharge <- full_join(vaul.final.discharge.2021, VAUL.st) # merging precip data and discharge
poke.precip.discharge <- full_join(poke.final.discharge.2021, POKE.st) # merging precip data and discharge
### Sum daily discharge ###
strt.precip.discharge$twentyfour <- rollapplyr(strt.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
strt.precip.discharge$fourtyeight <- rollapplyr(strt.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$twentyfour <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$fourtyeight <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$twentyfour <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$fourtyeight <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
# Greater than 5 #
strt.five.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
strt.five.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
vaul.five.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
poke.five.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
# Greater than 10 #
strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
vaul.ten.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
poke.ten.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
# CARI #
CARI_2021 <- CARI.2021
CARI_2021$DateTime <- CARI.2021$datetimeAK
CARI_2021$SpCond <- CARI_2021$SPC
# Storm 1 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
# Storm 1 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
POKE.st$DateTime <- POKE.st$datetimeAK
poke.five.fourty.eight$DateTime <- poke.five.fourty.eight$datetimeAK
poke.five.twenty.four$DateTime <- poke.five.twenty.four$datetimeAK
# Storm 1 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-05-16 13:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-05-18 07:45:00", tz="America/Anchorage"), col="purple")
CARI_storm1_05_16 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-05-16 13:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-05-18 07:45:00", tz="America/Anchorage"),]
plot(CARI_storm1_05_16$Discharge ~ as.POSIXct(CARI_storm1_05_16$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1200), col="blue", main="CARI 200516 storm 1",
xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-31 0:00:00","2021-06-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-31 0:00:00","2021-06-15 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-06-01 20:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-06-03 07:45:00", tz="America/Anchorage"), col="purple")
CARI_storm2_06_01 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-06-01 20:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-06-03 07:45:00", tz="America/Anchorage"),]
plot(CARI_storm2_06_01$Discharge ~ as.POSIXct(CARI_storm2_06_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,400), col="blue", main="CARI 200601 storm 2",
xlim = as.POSIXct(c("2021-05-31 0:00:00","2021-06-15 23:45:00"), tz="America/Anchorage"))
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-06-15 0:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-06-15 0:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-06-19 18:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-06-21 10:45:00", tz="America/Anchorage"), col="purple")
CARI_storm3_06_19 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-06-19 18:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-06-21 10:45:00", tz="America/Anchorage"),]
plot(CARI_storm3_06_19$Discharge ~ as.POSIXct(CARI_storm3_06_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 200619 storm 3",
xlim = as.POSIXct(c("2021-06-15 0:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-07-24 04:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-25 12:45:00", tz="America/Anchorage"), col="purple")
CARI_storm4_07_24 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-07-24 04:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-07-25 12:45:00", tz="America/Anchorage"),]
plot(CARI_storm4_07_24$Discharge ~ as.POSIXct(CARI_storm4_07_24$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,500), col="blue", main="CARI 200724 storm 4",
xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-07-27 17:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-31 20:45:00", tz="America/Anchorage"), col="purple")
CARI_storm5_07_27 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-07-27 17:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-07-31 20:45:00", tz="America/Anchorage"),]
plot(CARI_storm5_07_27$Discharge ~ as.POSIXct(CARI_storm5_07_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 200727 storm 5",
xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-07-31 0:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-07-31 0:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-08 23:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-12 20:45:00", tz="America/Anchorage"), col="purple")
CARI_storm6_08_08 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-08 17:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-08-12 20:45:00", tz="America/Anchorage"),]
plot(CARI_storm6_08_08$Discharge ~ as.POSIXct(CARI_storm6_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 200808 storm 6",
xlim = as.POSIXct(c("2021-07-31 0:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-15 07:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-19 23:45:00", tz="America/Anchorage"), col="purple")
CARI_storm7_08_15 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-15 07:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-08-19 23:45:00", tz="America/Anchorage"),]
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-20 03:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-23 12:45:00", tz="America/Anchorage"), col="purple")
CARI_storm8_08_20 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-20 03:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-08-23 12:45:00", tz="America/Anchorage"),]
plot(CARI_storm8_08_20$Discharge ~ as.POSIXct(CARI_storm8_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="CARI 200820 storm 8",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-23 12:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-24 15:45:00", tz="America/Anchorage"), col="purple")
CARI_storm9_08_23 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-23 12:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-08-24 15:45:00", tz="America/Anchorage"),]
plot(CARI_storm9_08_23$Discharge ~ as.POSIXct(CARI_storm9_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(600,900), col="blue", main="CARI 200823 storm 9",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(5,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-27 02:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-29 15:45:00", tz="America/Anchorage"), col="purple")
CARI_storm10_08_27 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-27 02:45:00", tz="America/Anchorage") &
CARI_2021$DateTime < as.POSIXct("2021-08-29 15:45:00", tz="America/Anchorage"),]
plot(CARI_storm10_08_27$Discharge ~ as.POSIXct(CARI_storm10_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(600,1300), col="blue", main="CARI 200827 storm 10",
xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
CARI_storm1_05_16_Q = subset(CARI_storm1_05_16, select = c("DateTime","Discharge"))
names(CARI_storm1_05_16_Q) = c("valuedatetime","datavalue")
CARI_storm1_05_16_NO3 = subset(CARI_storm1_05_16, select = c("DateTime", "NO3"))
names(CARI_storm1_05_16_NO3) = c("valuedatetime","datavalue")
CARI_storm1_05_16_fDOM = subset(CARI_storm1_05_16, select = c("DateTime","fDOM"))
names(CARI_storm1_05_16_fDOM) = c("valuedatetime","datavalue")
CARI_storm1_05_16_SPC = subset(CARI_storm1_05_16, select = c("DateTime", "SpCond"))
names(CARI_storm1_05_16_SPC) = c("valuedatetime","datavalue")
CARI_storm1_05_16_turb = subset(CARI_storm1_05_16, select = c("DateTime", "Turb"))
names(CARI_storm1_05_16_turb) = c("valuedatetime","datavalue")
CARI_storm2_06_01_Q = subset(CARI_storm2_06_01, select = c("DateTime","Discharge"))
names(CARI_storm2_06_01_Q) = c("valuedatetime","datavalue")
CARI_storm2_06_01_NO3 = subset(CARI_storm2_06_01, select = c("DateTime", "NO3"))
names(CARI_storm2_06_01_NO3) = c("valuedatetime","datavalue")
CARI_storm2_06_01_fDOM = subset(CARI_storm2_06_01, select = c("DateTime","fDOM"))
names(CARI_storm2_06_01_fDOM) = c("valuedatetime","datavalue")
CARI_storm2_06_01_SPC = subset(CARI_storm2_06_01, select = c("DateTime", "SpCond"))
names(CARI_storm2_06_01_SPC) = c("valuedatetime","datavalue")
CARI_storm2_06_01_turb = subset(CARI_storm2_06_01, select = c("DateTime", "Turb"))
names(CARI_storm2_06_01_turb) = c("valuedatetime","datavalue")
CARI_storm3_06_19_Q = subset(CARI_storm3_06_19, select = c("DateTime","Discharge"))
names(CARI_storm3_06_19_Q) = c("valuedatetime","datavalue")
CARI_storm3_06_19_NO3 = subset(CARI_storm3_06_19, select = c("DateTime", "NO3"))
names(CARI_storm3_06_19_NO3) = c("valuedatetime","datavalue")
CARI_storm3_06_19_fDOM = subset(CARI_storm3_06_19, select = c("DateTime","fDOM"))
names(CARI_storm3_06_19_fDOM) = c("valuedatetime","datavalue")
CARI_storm3_06_19_SPC = subset(CARI_storm3_06_19, select = c("DateTime", "SpCond"))
names(CARI_storm3_06_19_SPC) = c("valuedatetime","datavalue")
CARI_storm3_06_19_turb = subset(CARI_storm3_06_19, select = c("DateTime", "Turb"))
names(CARI_storm3_06_19_turb) = c("valuedatetime","datavalue")
CARI_storm4_07_24_Q = subset(CARI_storm4_07_24, select = c("DateTime","Discharge"))
names(CARI_storm4_07_24_Q) = c("valuedatetime","datavalue")
CARI_storm4_07_24_NO3 = subset(CARI_storm4_07_24, select = c("DateTime", "NO3"))
names(CARI_storm4_07_24_NO3) = c("valuedatetime","datavalue")
CARI_storm4_07_24_fDOM = subset(CARI_storm4_07_24, select = c("DateTime","fDOM"))
names(CARI_storm4_07_24_fDOM) = c("valuedatetime","datavalue")
CARI_storm4_07_24_SPC = subset(CARI_storm4_07_24, select = c("DateTime", "SpCond"))
names(CARI_storm4_07_24_SPC) = c("valuedatetime","datavalue")
CARI_storm4_07_24_turb = subset(CARI_storm4_07_24, select = c("DateTime", "Turb"))
names(CARI_storm4_07_24_turb) = c("valuedatetime","datavalue")
CARI_storm5_07_27_Q = subset(CARI_storm5_07_27, select = c("DateTime","Discharge"))
names(CARI_storm5_07_27_Q) = c("valuedatetime","datavalue")
CARI_storm5_07_27_NO3 = subset(CARI_storm5_07_27, select = c("DateTime", "NO3"))
names(CARI_storm5_07_27_NO3) = c("valuedatetime","datavalue")
CARI_storm5_07_27_fDOM = subset(CARI_storm5_07_27, select = c("DateTime","fDOM"))
names(CARI_storm5_07_27_fDOM) = c("valuedatetime","datavalue")
CARI_storm5_07_27_SPC = subset(CARI_storm5_07_27, select = c("DateTime", "SpCond"))
names(CARI_storm5_07_27_SPC) = c("valuedatetime","datavalue")
CARI_storm5_07_27_turb = subset(CARI_storm5_07_27, select = c("DateTime", "Turb"))
names(CARI_storm5_07_27_turb) = c("valuedatetime","datavalue")
CARI_storm6_08_08_Q = subset(CARI_storm6_08_08, select = c("DateTime","Discharge"))
names(CARI_storm6_08_08_Q) = c("valuedatetime","datavalue")
CARI_storm6_08_08_NO3 = subset(CARI_storm6_08_08, select = c("DateTime", "NO3"))
names(CARI_storm6_08_08_NO3) = c("valuedatetime","datavalue")
CARI_storm6_08_08_fDOM = subset(CARI_storm6_08_08, select = c("DateTime","fDOM"))
names(CARI_storm6_08_08_fDOM) = c("valuedatetime","datavalue")
CARI_storm6_08_08_SPC = subset(CARI_storm6_08_08, select = c("DateTime", "SpCond"))
names(CARI_storm6_08_08_SPC) = c("valuedatetime","datavalue")
CARI_storm6_08_08_turb = subset(CARI_storm6_08_08, select = c("DateTime", "Turb"))
names(CARI_storm6_08_08_turb) = c("valuedatetime","datavalue")
CARI_storm7_08_15_Q = subset(CARI_storm7_08_15, select = c("DateTime","Discharge"))
names(CARI_storm7_08_15_Q) = c("valuedatetime","datavalue")
CARI_storm7_08_15_NO3 = subset(CARI_storm7_08_15, select = c("DateTime", "NO3"))
names(CARI_storm7_08_15_NO3) = c("valuedatetime","datavalue")
CARI_storm7_08_15_fDOM = subset(CARI_storm7_08_15, select = c("DateTime","fDOM"))
names(CARI_storm7_08_15_fDOM) = c("valuedatetime","datavalue")
CARI_storm7_08_15_SPC = subset(CARI_storm7_08_15, select = c("DateTime", "SpCond"))
names(CARI_storm7_08_15_SPC) = c("valuedatetime","datavalue")
CARI_storm7_08_15_turb = subset(CARI_storm7_08_15, select = c("DateTime", "Turb"))
names(CARI_storm7_08_15_turb) = c("valuedatetime","datavalue")
CARI_storm8_08_20_Q = subset(CARI_storm8_08_20, select = c("DateTime","Discharge"))
names(CARI_storm8_08_20_Q) = c("valuedatetime","datavalue")
CARI_storm8_08_20_NO3 = subset(CARI_storm8_08_20, select = c("DateTime", "NO3"))
names(CARI_storm8_08_20_NO3) = c("valuedatetime","datavalue")
CARI_storm8_08_20_fDOM = subset(CARI_storm8_08_20, select = c("DateTime","fDOM"))
names(CARI_storm8_08_20_fDOM) = c("valuedatetime","datavalue")
CARI_storm8_08_20_SPC = subset(CARI_storm8_08_20, select = c("DateTime", "SpCond"))
names(CARI_storm8_08_20_SPC) = c("valuedatetime","datavalue")
CARI_storm8_08_20_turb = subset(CARI_storm8_08_20, select = c("DateTime", "Turb"))
names(CARI_storm8_08_20_turb) = c("valuedatetime","datavalue")
CARI_storm9_08_23_Q = subset(CARI_storm9_08_23, select = c("DateTime","Discharge"))
names(CARI_storm9_08_23_Q) = c("valuedatetime","datavalue")
CARI_storm9_08_23_NO3 = subset(CARI_storm9_08_23, select = c("DateTime", "NO3"))
names(CARI_storm9_08_23_NO3) = c("valuedatetime","datavalue")
CARI_storm9_08_23_fDOM = subset(CARI_storm9_08_23, select = c("DateTime","fDOM"))
names(CARI_storm9_08_23_fDOM) = c("valuedatetime","datavalue")
CARI_storm9_08_23_SPC = subset(CARI_storm9_08_23, select = c("DateTime", "SpCond"))
names(CARI_storm9_08_23_SPC) = c("valuedatetime","datavalue")
CARI_storm9_08_23_turb = subset(CARI_storm9_08_23, select = c("DateTime", "Turb"))
names(CARI_storm9_08_23_turb) = c("valuedatetime","datavalue")
CARI_storm10_08_27_Q = subset(CARI_storm10_08_27, select = c("DateTime","Discharge"))
names(CARI_storm10_08_27_Q) = c("valuedatetime","datavalue")
CARI_storm10_08_27_NO3 = subset(CARI_storm10_08_27, select = c("DateTime", "NO3"))
names(CARI_storm10_08_27_NO3) = c("valuedatetime","datavalue")
CARI_storm10_08_27_fDOM = subset(CARI_storm10_08_27, select = c("DateTime","fDOM"))
names(CARI_storm10_08_27_fDOM) = c("valuedatetime","datavalue")
CARI_storm10_08_27_SPC = subset(CARI_storm10_08_27, select = c("DateTime", "SpCond"))
names(CARI_storm10_08_27_SPC) = c("valuedatetime","datavalue")
CARI_storm10_08_27_turb = subset(CARI_storm10_08_27, select = c("DateTime", "Turb"))
names(CARI_storm10_08_27_turb) = c("valuedatetime","datavalue")
write.csv(CARI_storm1_05_16, here("Storm_Events", "2021", "CARI", "CARI_storm1_05_16.csv"))
write.csv(CARI_storm1_05_16_Q, here("Storm_Events", "2021", "CARI", "CARI_storm1_05_16_Q.csv"))
write.csv(CARI_storm1_05_16_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm1_05_16_NO3.csv"))
write.csv(CARI_storm1_05_16_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm1_05_16_fDOM.csv"))
write.csv(CARI_storm1_05_16_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm1_05_16_SPC.csv"))
write.csv(CARI_storm1_05_16_turb, here("Storm_Events", "2021", "CARI", "CARI_storm1_05_16_turb.csv"))
write.csv(CARI_storm2_06_01, here("Storm_Events", "2021", "CARI", "CARI_storm2_06_01.csv"))
write.csv(CARI_storm2_06_01_Q, here("Storm_Events", "2021", "CARI", "CARI_storm2_06_01_Q.csv"))
write.csv(CARI_storm2_06_01_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm2_06_01_NO3.csv"))
write.csv(CARI_storm2_06_01_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm2_06_01_fDOM.csv"))
write.csv(CARI_storm2_06_01_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm2_06_01_SPC.csv"))
write.csv(CARI_storm2_06_01_turb, here("Storm_Events", "2021", "CARI", "CARI_storm2_06_01_turb.csv"))
write.csv(CARI_storm3_06_19, here("Storm_Events", "2021", "CARI", "CARI_storm3_06_19.csv"))
write.csv(CARI_storm3_06_19_Q, here("Storm_Events", "2021", "CARI", "CARI_storm3_06_19_Q.csv"))
write.csv(CARI_storm3_06_19_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm3_06_19_NO3.csv"))
write.csv(CARI_storm3_06_19_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm3_06_19_fDOM.csv"))
write.csv(CARI_storm3_06_19_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm3_06_19_SPC.csv"))
write.csv(CARI_storm3_06_19_turb, here("Storm_Events", "2021", "CARI", "CARI_storm3_06_19_turb.csv"))
write.csv(CARI_storm4_07_24, here("Storm_Events", "2021", "CARI", "CARI_storm4_07_24.csv"))
write.csv(CARI_storm4_07_24_Q, here("Storm_Events", "2021", "CARI", "CARI_storm4_07_24_Q.csv"))
write.csv(CARI_storm4_07_24_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm4_07_24_NO3.csv"))
write.csv(CARI_storm4_07_24_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm4_07_24_fDOM.csv"))
write.csv(CARI_storm4_07_24_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm4_07_24_SPC.csv"))
write.csv(CARI_storm4_07_24_turb, here("Storm_Events", "2021", "CARI", "CARI_storm4_07_24_turb.csv"))
write.csv(CARI_storm5_07_27, here("Storm_Events", "2021", "CARI", "CARI_storm5_07_27.csv"))
write.csv(CARI_storm5_07_27_Q, here("Storm_Events", "2021", "CARI", "CARI_storm5_07_27_Q.csv"))
write.csv(CARI_storm5_07_27_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm5_07_27_NO3.csv"))
write.csv(CARI_storm5_07_27_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm5_07_27_fDOM.csv"))
write.csv(CARI_storm5_07_27_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm5_07_27_SPC.csv"))
write.csv(CARI_storm5_07_27_turb, here("Storm_Events", "2021", "CARI", "CARI_storm5_07_27_turb.csv"))
write.csv(CARI_storm6_08_08, here("Storm_Events", "2021", "CARI", "CARI_storm6_08_08.csv"))
write.csv(CARI_storm6_08_08_Q, here("Storm_Events", "2021", "CARI", "CARI_storm6_08_08_Q.csv"))
write.csv(CARI_storm6_08_08_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm6_08_08_NO3.csv"))
write.csv(CARI_storm6_08_08_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm6_08_08_fDOM.csv"))
write.csv(CARI_storm6_08_08_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm6_08_08_SPC.csv"))
write.csv(CARI_storm6_08_08_turb, here("Storm_Events", "2021", "CARI", "CARI_storm6_08_08_turb.csv"))
write.csv(CARI_storm7_08_15, here("Storm_Events", "2021", "CARI", "CARI_storm7_08_15.csv"))
write.csv(CARI_storm7_08_15_Q, here("Storm_Events", "2021", "CARI", "CARI_storm7_08_15_Q.csv"))
write.csv(CARI_storm7_08_15_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm7_08_15_NO3.csv"))
write.csv(CARI_storm7_08_15_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm7_08_15_fDOM.csv"))
write.csv(CARI_storm7_08_15_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm7_08_15_SPC.csv"))
write.csv(CARI_storm7_08_15_turb, here("Storm_Events", "2021", "CARI", "CARI_storm7_08_15_turb.csv"))
write.csv(CARI_storm8_08_20, here("Storm_Events", "2021", "CARI", "CARI_storm8_08_20.csv"))
write.csv(CARI_storm8_08_20_Q, here("Storm_Events", "2021", "CARI", "CARI_storm8_08_20_Q.csv"))
write.csv(CARI_storm8_08_20_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm8_08_20_NO3.csv"))
write.csv(CARI_storm8_08_20_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm8_08_20_fDOM.csv"))
write.csv(CARI_storm8_08_20_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm8_08_20_SPC.csv"))
write.csv(CARI_storm8_08_20_turb, here("Storm_Events", "2021", "CARI", "CARI_storm8_08_20_turb.csv"))
write.csv(CARI_storm9_08_23, here("Storm_Events", "2021", "CARI", "CARI_storm9_08_23.csv"))
write.csv(CARI_storm9_08_23_Q, here("Storm_Events", "2021", "CARI", "CARI_storm9_08_23_Q.csv"))
write.csv(CARI_storm9_08_23_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm9_08_23_NO3.csv"))
write.csv(CARI_storm9_08_23_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm9_08_23_fDOM.csv"))
write.csv(CARI_storm9_08_23_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm9_08_23_SPC.csv"))
write.csv(CARI_storm9_08_23_turb, here("Storm_Events", "2021", "CARI", "CARI_storm9_08_23_turb.csv"))
write.csv(CARI_storm10_08_27, here("Storm_Events", "2021", "CARI", "CARI_storm10_08_27.csv"))
write.csv(CARI_storm10_08_27_Q, here("Storm_Events", "2021", "CARI", "CARI_storm10_08_27_Q.csv"))
write.csv(CARI_storm10_08_27_NO3, here("Storm_Events", "2021", "CARI", "CARI_storm10_08_27_NO3.csv"))
write.csv(CARI_storm10_08_27_fDOM, here("Storm_Events", "2021", "CARI", "CARI_storm10_08_27_fDOM.csv"))
write.csv(CARI_storm10_08_27_SPC, here("Storm_Events", "2021", "CARI", "CARI_storm10_08_27_SPC.csv"))
write.csv(CARI_storm10_08_27_turb, here("Storm_Events", "2021", "CARI", "CARI_storm10_08_27_turb.csv"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(boot)
library(lubridate)
library(here)
Sys.which("python")
use_python("/usr/local/bin/python3")
options(tz="America/Anchorage")
# install pandas #
virtualenv_create("r-reticulate")
# RETICULATE_PYTHON = "lib/python3.8"
reticulate::py_config()
reticulate::py_install("pandas")
reticulate::repl_python()
