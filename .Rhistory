use_python("/usr/bin/python")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
library(reticulate)
py_install("pandas")
setwd("~/Documents/Storms_clean_repo")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python")
use_python("/usr/bin/python")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
library(reticulate)
py_install("pandas")
pip install virtualenv
sudo /usr/bin/easy_install virtualenv
setwd("~/Documents/Storms_clean_repo")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python")
use_python("/usr/bin/python")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
library(reticulate)
py_install("pandas")
virtualenv_install("pandas")
?conda_install
conda_install(<envname>, "pandas")
conda_install("pandas")
py_install("pandas")
py_install(
"pandas",
envname = NULL,
method = c("virtualenv"),
conda = "auto",
python_version = NULL,
pip = FALSE,
...,
pip_ignore_installed = ignore_installed,
ignore_installed = FALSE
)
py_install("pandas",
envname = NULL,
method = c("virtualenv"),
conda = "auto",
python_version = NULL,
pip = FALSE,
pip_ignore_installed = ignore_installed,
ignore_installed = FALSE
)
conda_create("r-reticulate")
py_install("pandas")
virtualenv_list()
virtualenv_install("pandas")
virtualenv_install(packages = "pandas")
py_install("pandas")
virtualenv_list()
virtualenv_create("r-reticulate")
# install SciPy
virtualenv_install("r-reticulate", "pandas")
setwd("~/Documents/Storms_clean_repo")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python")
use_python("/usr/bin/python")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
library(reticulate)
virtualenv_create("r-reticulate")
# install Pandas
virtualenv_install("r-reticulate", "pandas")
py_install("pandas")
py_install("pandas")
py_config()
virtualenv_create("venv")
if (reticulate::py_module_available("pandas")) message("'pandas' found.")
py_install("pandas")
py_install("pandas")
library(reticulate)
use_virtualenv("r-reticulate")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3") RETICULATE_PYTHON="/usr/local/bin/python3" library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
RETICULATE_PYTHON="/usr/local/bin/python3"
library(reticulate)
py_config()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
RETICULATE_PYTHON="/usr/local/bin/python3"
library(reticulate)
py_config()
py_install("pandas")
RETICULATE_PYTHON="/usr/local/bin/python3"
setwd("~/Documents/Storms_clean_repo")
setwd("~/Documents/Storms_clean_repo")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
Sys.setenv(RETICULATE_PYTHON = "/usr/bin/python3")
library(reticulate)
setwd("~/Documents/Storms_clean_repo")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
Sys.setenv(RETICULATE_PYTHON = "/usr/bin/python3")
library(reticulate)
# virtualenv_create("r-reticulate")
#
# # install Pandas
# virtualenv_install("r-reticulate", "pandas")
#
# py_config()
# virtualenv_create("venv")
# if (reticulate::py_module_available("pandas")) message("'pandas' found.")
# py_install("pandas")
# library(reticulate)
# use_virtualenv("r-reticulate")
# use_python("C:\\Python27")
#
# Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
# RETICULATE_PYTHON="/usr/local/bin/python3"
# library(reticulate)
# py_config()
py_install("pandas")
getwd()
install.packages("reticulate")
RETICULATE_PYTHON = my_env/bin/python
getwd()
RETICULATE_PYTHON = Users/JakeCavaiani/Documents/Storms_clean_repo/my_env/bin/python
RETICULATE_PYTHON = Storms_clean_repo/my_env/bin/python
getwd()
RETICULATE_PYTHON = "Storms_clean_repo/my_env/bin/python"
RETICULATE_PYTHON = "my_env/bin/python"
reticulate::py_config()
reticulate::py_config()
py_install("pandas")
reticulate::py_install("pandas")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python")
Sys.which("python3")
use_python("/usr/bin/python3")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
py_install("pandas")
virtualenv_create("r-reticulate")
# install SciPy
virtualenv_install("r-reticulate", "pandas")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python3")
use_python("/usr/bin/python3")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
virtualenv_create("r-reticulate")
# install SciPy
virtualenv_install("r-reticulate", "pandas")
py_install("pandas")
getwd()
py_install("pandas")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python3")
use_python("/usr/bin/python3")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
virtualenv_create("r-reticulate")
# install SciPy
virtualenv_install("r-reticulate", "pandas")
py_install("pandas")
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python3")
use_python("/usr/bin/python3")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
virtualenv_create("r-reticulate")
# install SciPy
# virtualenv_install("r-reticulate", "pandas")
py_install("pandas")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python3")
use_python("/usr/bin/python3")
?use_python
#
install.packages("reticulate")
install.packages("reticulate")
RETICULATE_PYTHON = my_env/bin/python
RETICULATE_PYTHON = "my_env/bin/python"
View(RETICULATE_PYTHON)
RETICULATE_PYTHON = "/my_env/bin/python"
RETICULATE_PYTHON = "my_env/bin/python"
hi = "3"
RETICULATE_PYTHON = my_env/bin/python
RETICULATE_PYTHON = "my_env/bin/python"
reticulate::py_config()
reticulate::py_config()
py_install("pandas")
reticulate::py_install("pandas")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python")
use_python("/usr/bin/python")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
reticulate::py_install("pandas")
install.packages("reticulate")
RETICULATE_PYTHON = "my_env/bin/python"
reticulate::py_config()
reticulate::py_install("pandas")
install.packages("reticulate")
install.packages("reticulate")
RETICULATE_PYTHON = "my_env/bin/python"
reticulate::py_config()
install.packages("reticulate")
reticulate::py_install("pandas")
?use_python
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python")
use_python("/usr/bin/python")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
?py_install
# virtualenv_create("r-reticulate")
py_install(
packages = "pandas",
envname = NULL,
method = c("virtualenv"),
conda = "auto",
python_version = NULL,
pip = TRUE,
pip_ignore_installed = ignore_installed,
ignore_installed = FALSE
)
RETICULATE_PYTHON = "my_env/bin/python"
reticulate::py_config()
reticulate::py_install("pandas")
RETICULATE_PYTHON = venv/bin/python
RETICULATE_PYTHON = "venv/bin/python"
reticulate::py_config()
use_python("/usr/bin/python")
library(reticulate)
Sys.which("python")
use_python("/usr/bin/python")
Sys.which("python")
use_python("/usr/bin/python")
library(reticulate)
Sys.which("python")
use_python("/usr/bin/python")
Sys.which("python")
reticulate::py_install("pandas")
reticulate::py_config()
reticulate::py_config()
Sys.which("python")
use_python("/usr/bin/python")
library(reticulate)
use_python("/usr/bin/python")
RETICULATE_PYTHON = "/usr/bin/python"
reticulate::py_config()
reticulate::py_install("pandas")
Sys.which("python")
Sys.which("python")
RETICULATE_PYTHON = "lib/python3.8"
Sys.which("python")
RETICULATE_PYTHON = lib/python3.8
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python")
use_python("/usr/bin/python")
Sys.which("python")
py_install("pandas")
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(RColorBrewer)
library(gridExtra)
library(here)
# I just want to quickly throw some plots out right here # 11/10/22
CPCRW <- read_csv("Climate/Precip/CPCRW_CREEL_percip_2022.csv",
skip = 5)
getwd()
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(RColorBrewer)
library(gridExtra)
library(here)
getwd()
# I just want to quickly throw some plots out right here # 11/10/22
CPCRW <- read_csv("Climate/Precip/CPCRW_CREEL_percip_2022.csv",
skip = 5)
CPCRW <- read_csv("Climate/Precip/CPCRW_CREEL_percip_2022.csv",
skip = 5)
setwd("~/Documents/Storms_clean_repo/Climate/Precip")
CPCRW <- read_csv("~/Documents/Storms_clean_repo/Climate/Precip/CPCRW_CREEL_percip_2022.csv",
skip = 5)
View(CPCRW)
Eielson <- read_csv("~/Documents/Storms_clean_repo/Climate/Precip/Eielson_2022_Precip.csv",
skip = 6)
Salcha_2022 <- read_csv("~/Documents/Storms_clean_repo/Climate/Precip/USGS_Salcha_2022_precip.csv",
skip = 26)
# PLOT data
ggplot(CPCRW) +
geom_line(aes(x = Time, y = CPCRW$`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`)) +
xlab("Date") +
ylab("Cumulative Precipitation (mm)") +
ggtitle("CPCRW CARI Rain Gauge")
ggplot(CPCRW) +
geom_line(aes(x = Time, y = CPCRW$`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`)) +
xlab("Date") +
ylab("Cumulative Precipitation (mm)") +
ggtitle("CPCRW CRREL Rain Gauge")
ggplot() +
geom_line(data = CPCRW, aes(x = Time, y = CPCRW$`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`), color = "blue") +
geom_line(data = CPCRW, aes(x = Time, y = CPCRW$`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`)) +
ggtitle("CPCRW/CRREL comparison Rain Gauge")
ggplot() +
geom_line(data = CPCRW, aes(x = Time, y = CPCRW$`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`), color = "blue") +
geom_line(data = CPCRW, aes(x = Time, y = CPCRW$`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`)) +
ggtitle("CPCRW/CRREL comparison Rain Gauge")
View(CPCRW)
CPCRW$month <- format(as.Date(CPCRW$Time), "%m")
CPCRW.sum.month <- CPCRW %>%
group_by(month) %>%
dplyr::summarise(CRREL = sum(CPCRW$`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`, na.rm = TRUE),
CARI = sum(CPCRW$`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`, na.rm = TRUE)) # totaling by year and snow/rain
View(CPCRW.sum.month)
str(CPCRW)
sum(CPCRW$`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`)
CPCRW$month <- as.numeric(CPCRW$month)
str(CPCRW$month)
CPCRW.sum.month <- CPCRW %>%
group_by(month) %>%
dplyr::summarise(CRREL = sum(CPCRW$`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`, na.rm = TRUE),
CARI = sum(CPCRW$`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`, na.rm = TRUE)) # totaling by year and snow/rain
CPCRW %>%
group_by(month) %>%
summarise(CRREL = sum(`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`))
CPCRW %>%
group_by(month) %>%
summarise(CRREL = sum(`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`),
CARI = sum(`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`))
CPCRW.sum.month <- CPCRW %>%
group_by(month) %>%
summarise(CRREL = sum(`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`),
CARI = sum(`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`))
CPCRW %>%
group_by(month) %>%
summarise(CRREL = sum(`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`),
CARI = sum(`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`))
sum(CPCRW.sum.month$CRREL)
sum(CPCRW.sum.month$CARI)
CPCRW %>%
group_by(month) %>%
summarise(CRREL = sum(`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`),
CARI = sum(`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`))
View(Eielson)
Eielson$Date_Time <-mdy_hms(Eielson$Date_Time)
Eielson$precip_accum_one_hour_set_1 <- as.numeric(Eielson$precip_accum_one_hour_set_1)
min<-cut(Eielson$Date_Time, breaks="15 min")
Eielson.st <- as.data.frame(aggregate(precip_accum_one_hour_set_1 ~ min, data = Eielson, FUN=function(x)
sum=sum(x)))
Eielson.st$datetimeAK<-as.POSIXct(Eielson.st$min, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
View(Eielson.st)
ggplot(Eielson.st) +
geom_line(aes(x = datetimeAK, y = precip_accum_one_hour_set_1)) +
xlab("Date") +
ylab("Cumulative Precipitation (mm)") +
ggtitle("CPCRW CARI Rain Gauge")
Eielson.st$precip_accum_one_hour_set_1 <- Eielson.st$precip_accum_one_hour_set_1 * 25.4
ggplot(Eielson.st) +
geom_line(aes(x = datetimeAK, y = precip_accum_one_hour_set_1)) +
xlab("Date") +
ylab("Cumulative Precipitation (mm)") +
ggtitle("CPCRW CARI Rain Gauge")
Eielson.st$month <- format(as.Date(Eielson.st$datetimeAK), "%m")
Eielson.st %>%
group_by(month) %>%
summarise(Eielson = sum(precip_accum_one_hour_set_1))
sum(Eielson.st$precip_accum_one_hour_set_1)
View(Salcha_2022)
Salcha_2022$datetimeAK <- mdy_hms(Salcha_2022$datetime)
Salcha_2022$datetimeAK <- mdy(Salcha_2022$datetime)
Salcha_2022$datetimeAK <- ymd(Salcha_2022$datetime)
Salcha_2022[-1]
Salcha_2022[-1, ]
Salcha_2022 <- Salcha_2022[-1, ]
Salcha_2022$datetimeAK <- mdy_hms(Salcha_2022$datetime)
str(Salcha_2022)
Salcha_2022$datetimeAK <- mdy(Salcha_2022$datetime)
Salcha_2022$datetimeAK <- mdy_h(Salcha_2022$datetime)
Salcha_2022$datetimeAK <- mdy_hm(Salcha_2022$datetime)
ggplot(Salcha_2022) +
geom_line(aes(x = datetimeAK, y = Salcha_2022$1764_00045)) +
ggplot(Salcha_2022) +
geom_line(aes(x = datetimeAK, y = Salcha_2022$1764_00045_cd)) +
names(Salcha_2022)
names(Salcha_2022) <- c("Agency", "Site", "dt", "tz", "precip", "type", "datetimeAK")
ggplot(Salcha_2022) +
geom_line(aes(x = datetimeAK, y = precip)) +
xlab("Date") +
ylab("Cumulative Precipitation (mm)") +
ggtitle("Salcha Rain Gauge")
min<-cut(Salcha_2022$datetimeAK, breaks="15 min")
Salcha.st <- as.data.frame(aggregate(precip ~ min, data = Salcha_2022, FUN=function(x)
sum=sum(x)))
str(Salcha_2022)
Salcha_2022$precip <- as.numeric(Salcha_2022$precip)
min<-cut(Salcha_2022$datetimeAK, breaks="15 min")
Salcha.st <- as.data.frame(aggregate(precip ~ min, data = Salcha_2022, FUN=function(x)
sum=sum(x)))
Salcha.st$datetimeAK<-as.POSIXct(Salcha.st$min, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
ggplot(Salcha_2022.st) +
geom_line(aes(x = datetimeAK, y = precip)) +
xlab("Date") +
ylab("Cumulative Precipitation (mm)") +
ggtitle("Salcha Rain Gauge")
ggplot(Salcha.st) +
geom_line(aes(x = datetimeAK, y = precip)) +
xlab("Date") +
ylab("Cumulative Precipitation (mm)") +
ggtitle("Salcha Rain Gauge")
Salcha.st$precip <- Salcha.st$precip * 25.4
ggplot(Salcha.st) +
geom_line(aes(x = datetimeAK, y = precip)) +
xlab("Date") +
ylab("Cumulative Precipitation (mm)") +
ggtitle("Salcha Rain Gauge")
Salcha.st$month <- format(as.Date(Salcha.st$datetimeAK), "%m")
Salcha.st %>%
group_by(month) %>%
summarise(Salcha = sum(precip))
CPCRW$mean <- rowMeans(CPCRW[,c('`CPCRW Caribou Peak: TippingBucket_TOT mm CPEAK[mm]`', '`CPCRW CRREL Main Met Station: TippingBucket_TOT mm  CRREL[mm]`')], na.rm=TRUE)
View(CPCRW)
names(CPCRW)
names(CPCRW) <- c("datetimeAK", "CARI", "CRREL", "month")
CPCRW$mean <- rowMeans(CPCRW[,c('CARI', 'CRREL')], na.rm=TRUE)
write.csv(CPCRW, "~/Documents/Storms_clean_repo/Climate/Precip/CPCRW.RainGauge.2022.final.csv")
# Load from local machine #
Q.daily.2022 <- read.csv(here("Q", "2022", "Q.daily.2022.csv"))
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(plyr)
library(imputeTS)
library(TSA)
library(bbmle)
library(zoo)
library(xts)
library(forecast)
library(stats)
library(lattice)
library(nlme)
library(geosphere)
library(car)
library(EcoHydRology)
library(dplyr)
library(readr)
library(googledrive)
library(purrr)
library(here)
# Load from local machine #
Q.daily.2022 <- read.csv(here("Q", "2022", "Q.daily.2022.csv"))
getwd()
setwd("~/Documents/Storms_clean_repo")
# Load from local machine #
Q.daily.2022 <- read.csv(here("Q", "2022", "Q.daily.2022.csv"))
