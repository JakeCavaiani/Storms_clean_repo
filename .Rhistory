CARI.NO3$burn <- "unburned"
fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM, CARI.fDOM)
no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3, CARI.NO3)
fdom.hi$year <- as.character(fdom.hi$year)
no3.hi$year <- as.character(no3.hi$year)
fdom.lm <- lm(fdom.hi$HI ~ fdom.hi$burn)
no3.lm <- lm(no3.hi$HI ~ no3.hi$burn)
fdom.hi %>%
ggplot(aes(x=burn,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("DOC") +
xlab("Catchment burned (%)") +
ylab("HI-Solute Storage")
no3.hi %>%
ggplot(aes(x=burn,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("NO3") +
xlab("Catchment burned (%)") +
ylab("HI-Solute Storage")
# Permafrost #
FRCH.fDOM$pf <- "Moderate"
POKE.fDOM$pf <- "Moderate"
MOOS.fDOM$pf <- "Moderate"
STRT.fDOM$pf <- "High"
VAUL.fDOM$pf <- "High"
CARI.fDOM$pf <- "Moderate"
FRCH.NO3$pf <- "Moderate"
POKE.NO3$pf <- "Moderate"
MOOS.NO3$pf <- "Moderate"
STRT.NO3$pf <- "High"
VAUL.NO3$pf <- "High"
CARI.NO3$pf <- "Moderate"
pf.fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM, CARI.fDOM)
pf.no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3, CARI.NO3)
pf.fdom.hi$year <- as.character(pf.fdom.hi$year)
pf.no3.hi$year <- as.character(pf.no3.hi$year)
pf.fdom.lm <- lm(pf.fdom.hi$HI ~ pf.fdom.hi$burn)
pf.no3.lm <- lm(pf.no3.hi$HI ~ pf.no3.hi$burn)
pf.fdom.hi %>%
ggplot(aes(x=pf,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("DOC") +
xlab("Permafrost Extent (%)") +
ylab("HI-Solute Storage")
pf.no3.hi %>%
ggplot(aes(x=pf,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("NO3") +
xlab("Permafrost Extent (%)") +
ylab("HI-Solute Storage")
### H 1.1: HI against precip ###
HI.mean.precip <- HI.dat %>% group_by(site.ID, year, storm.num) %>%
summarise_at(vars(HI), list(HI = median)) # take mean by site response and year
HI.mean.precip.response <- HI.dat %>% group_by(site.ID, year, storm.num, response) %>%
summarise_at(vars(HI), list(HI = median)) # take mean by site response and year
setwd("~/GitHub/Storms_clean_repo/Storm_Events/2021")
FRCH_RainGauge_2020 <- read.csv(here("Climate", "Precip", "FRCH.RainGauge.2020.csv"))
POKE_RainGauge_2020 <- read.csv(here("Climate", "Precip", "POKE.RainGauge.2020.csv"))
VAUL_RainGauge_2020 <- read.csv(here("Climate", "Precip", "VAUL.RainGauge.2020.csv"))
STRT_RainGauge_2020 <- read.csv(here("Climate", "Precip", "STRT.RainGauge.2020.csv"))
POKE_RainGauge_2021 <- read_csv(here("Climate", "Precip", "POKE.RainGauge.2021.csv"))
VAUL_RainGauge_2021 <- read_csv(here("Climate", "Precip", "VAUL.RainGauge.2021.csv"))
STRT_RainGauge_2021 <- read_csv(here("Climate", "Precip", "STRT.RainGauge.2021.csv"))
airtempmean <- read.csv(here("Climate", "airtempmean.csv"))
POKE_RainGauge_2021$DateTime <- ymd_hms(POKE_RainGauge_2021$DateTime) # converting character to datetime
VAUL_RainGauge_2021$DateTime <- ymd_hms(VAUL_RainGauge_2021$DateTime) # converting character to datetime
STRT_RainGauge_2021$DateTime <- ymd_hms(STRT_RainGauge_2021$DateTime) # converting character to datetime
airtempmean$date_timeAK <- ymd_hms(airtempmean$date_timeAK ) # converting character to datetime
names(airtempmean)[2] <- "DateTime"
# Force to AK time
POKE_RainGauge_2021$DateTime <- force_tz(POKE_RainGauge_2021$DateTime, "America/Anchorage") # converting character to datetime
VAUL_RainGauge_2021$DateTime <- force_tz(VAUL_RainGauge_2021$DateTime, "America/Anchorage") # converting character to datetime
STRT_RainGauge_2021$DateTime <- force_tz(STRT_RainGauge_2021$DateTime, "America/Anchorage") # converting character to datetime
airtempmean$DateTime <- force_tz(airtempmean$DateTime, "America/Anchorage") # converting character to datetime
# round to nearest 15 min
POKE_RainGauge_2021$DateTime <- lubridate::floor_date(POKE_RainGauge_2021$DateTime, "15 minutes")
VAUL_RainGauge_2021$DateTime <- lubridate::floor_date(VAUL_RainGauge_2021$DateTime, "15 minutes")
STRT_RainGauge_2021$DateTime <- lubridate::floor_date(STRT_RainGauge_2021$DateTime, "15 minutes")
# MOOS ####
MOOSstorm_file_list <- list.files(path = "All_sites/",
recursive=F,
pattern="MOOS",
full.names=TRUE)
MOOS_storms<-do.call("rbind", lapply(MOOSstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
MOOS_storms$storm.num = c(rep("storm1", 191),
rep("storm2", 251),
rep("storm3a", 115),
rep("storm3b", 359),
rep("storm4a", 415),
rep("storm5a", 315),
rep("storm6", 127),
rep("storm7", 259))
MOOS_storms$DateTime <- as.POSIXct(MOOS_storms$DateTime)
MOOS.2021.storms.1<- left_join(MOOS_storms, STRT_RainGauge_2021, by = "DateTime")
MOOS.2021.storms.1<- left_join(MOOS.2021.storms.1, airtempmean, by = "DateTime")
names(MOOS.2021.storms.1)[names(MOOS.2021.storms.1) == ''] <- 'x'
MOOS.2021.per.storm.1 <- MOOS.2021.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)
temp <- MOOS.2021.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event
MOOS.2021.per.storm.1$temp <- temp$temp
chem.2021 <- read.csv(here("processed_sensor_data", "2021", "SUNA.EXO.int.corr.lab_2021.csv"))
chem.2021 <- chem.2021[c("datetimeAK", "site.ID", "fDOM.QSU.T.turb.col", "SpCond.uScm.mn.adj",
"Turbidity.FNU.mn.adj", "nitrateuM.mn.lab", "abs254.adj.mn")]
chem.2021$datetimeAK <- ymd_hms(chem.2021$datetimeAK) # converting character to datetime
chem.2021$datetimeAK <- force_tz(chem.2021$datetimeAK, "America/Anchorage") # converting character to datetime
names(chem.2021) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "ABS_254")
MOOS.2021 <-  subset(chem.2021, site.ID == "MOOS")
MOOS.2021$DateTime <- MOOS.2021$datetimeAK
MOOS.2021$DateTime <- as.POSIXct(MOOS.2021$DateTime, tz = "America/Anchorage")
MOOS.2021 <- left_join(MOOS.2021, STRT_RainGauge_2021, by = "DateTime")
MOOS.2021 <- left_join(MOOS.2021, airtempmean, by = "DateTime")
MOOS.2021$week <- rollapplyr(MOOS.2021$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2021$month <- rollapplyr(MOOS.2021$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2021$ThreeMonth <- rollapplyr(MOOS.2021$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2021$temp.week <- rollapplyr(MOOS.2021$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2021.1 <- left_join(MOOS.2021.storms.1, MOOS.2021, by = "DateTime") # week month and 3 month precip totals
MOOS.2021.per.storm.2 <- MOOS.2021.1 %>% group_by(storm.num) %>%
summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
MOOS.2021.per.storm.3 <- MOOS.2021.1 %>% group_by(storm.num) %>%
summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm
MOOS.2021.per.storm.4 <- MOOS.2021.1 %>% group_by(storm.num) %>%
summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
MOOS.2021.per.storm.5 <- MOOS.2021.1 %>% group_by(storm.num) %>%
summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
HI.mean.precip.moos.fDOM <- subset(HI.mean.precip.response, year == "2021" & site.ID == "MOOS" & response == "fDOM")
HI.mean.precip.moos.SPC <- subset(HI.mean.precip.response, year == "2021" & site.ID == "MOOS" & response == "SPC")
HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2021" & site.ID == "MOOS" & response == "turb")
HI.mean.precip.moos.abs <- subset(HI.mean.precip.response, year == "2021" & site.ID == "MOOS" & response == "abs")
HI.moos.fDOM.2021 <- left_join(HI.mean.precip.moos.fDOM, MOOS.2021.per.storm.1, by = "storm.num")
HI.moos.fDOM.2021 <- left_join(HI.moos.fDOM.2021, MOOS.2021.per.storm.2, by = "storm.num")
HI.moos.fDOM.2021 <- left_join(HI.moos.fDOM.2021, MOOS.2021.per.storm.3, by = "storm.num")
HI.moos.fDOM.2021 <- left_join(HI.moos.fDOM.2021, MOOS.2021.per.storm.4, by = "storm.num")
HI.moos.fDOM.2021 <- left_join(HI.moos.fDOM.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.fDOM <- lm(HI.moos.fDOM.2021$HI ~ HI.moos.fDOM.2021$precip) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2021$HI ~ HI.moos.fDOM.2021$precip.week) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2021$HI ~ HI.moos.fDOM.2021$precip.month) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2021$HI ~ HI.moos.fDOM.2021$ThreeMonth) # model one with just total precip
moos.formula <- y ~ x
eee <- HI.moos.fDOM.2021 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
fff <- HI.moos.fDOM.2021 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
ggg <- HI.moos.fDOM.2021 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
hhh <- HI.moos.fDOM.2021 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.moos.SPC.2021 <- left_join(HI.mean.precip.moos.SPC, MOOS.2021.per.storm.1, by = "storm.num")
HI.moos.SPC.2021 <- left_join(HI.moos.SPC.2021, MOOS.2021.per.storm.2, by = "storm.num")
HI.moos.SPC.2021 <- left_join(HI.moos.SPC.2021, MOOS.2021.per.storm.3, by = "storm.num")
HI.moos.SPC.2021 <- left_join(HI.moos.SPC.2021, MOOS.2021.per.storm.4, by = "storm.num")
HI.moos.SPC.2021 <- left_join(HI.moos.SPC.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.SPC <- lm(HI.moos.SPC.2021$HI ~ HI.moos.SPC.2021$precip) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2021$HI ~ HI.moos.SPC.2021$precip.week) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2021$HI ~ HI.moos.SPC.2021$precip.month) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2021$HI ~ HI.moos.SPC.2021$ThreeMonth) # model one with just total precip
moos.formula <- y ~ x
iii <- HI.moos.SPC.2021 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
jjj <- HI.moos.SPC.2021 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
kkk <- HI.moos.SPC.2021 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
lll <- HI.moos.SPC.2021 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.moos.turb.2021 <- left_join(HI.mean.precip.moos.turb, MOOS.2021.per.storm.1, by = "storm.num")
HI.moos.turb.2021 <- left_join(HI.moos.turb.2021, MOOS.2021.per.storm.2, by = "storm.num")
HI.moos.turb.2021 <- left_join(HI.moos.turb.2021, MOOS.2021.per.storm.3, by = "storm.num")
HI.moos.turb.2021 <- left_join(HI.moos.turb.2021, MOOS.2021.per.storm.4, by = "storm.num")
HI.moos.turb.2021 <- left_join(HI.moos.turb.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.turb <- lm(HI.moos.turb.2021$HI ~ HI.moos.turb.2021$precip) # model one with just total precip
moos.lm.turb.1 <- lm(HI.moos.turb.2021$HI ~ HI.moos.turb.2021$precip.week) # model one with just total precip
moos.lm.turb.2 <- lm(HI.moos.turb.2021$HI ~ HI.moos.turb.2021$precip.month) # model one with just total precip
moos.lm.turb.3 <- lm(HI.moos.turb.2021$HI ~ HI.moos.turb.2021$ThreeMonth) # model one with just total precip
moos.formula <- y ~ x
mmm <- HI.moos.turb.2021 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
nnn <- HI.moos.turb.2021 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
ooo <- HI.moos.turb.2021 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
ppp <- HI.moos.turb.2021 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
sum.time <- MOOS.2021.storms.1 %>%
mutate(grp=data.table::rleid(storm.num))%>%
group_by(grp) %>%
summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
min(DateTime),units="hour"))%>%
group_by(storm.num) %>%
summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column
HI.moos.fDOM.2.2021 <- left_join(HI.moos.fDOM.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.moos.fDOM.2.2021$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2.2021$TOTAL.TIME)
HI.moos.fDOM.2.2021$Intensity <- HI.moos.fDOM.2.2021$precip/HI.moos.fDOM.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2.2021$HI ~ HI.moos.fDOM.2.2021$precip + HI.moos.fDOM.2.2021$Intensity) # model one with total precip and intensity
rrr <- HI.moos.fDOM.2.2021 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.SPC.2.2021 <- left_join(HI.moos.SPC.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.moos.SPC.2.2021$TOTAL.TIME <- as.numeric(HI.moos.SPC.2.2021$TOTAL.TIME)
HI.moos.SPC.2.2021$Intensity <- HI.moos.SPC.2.2021$precip/HI.moos.SPC.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
moos.lm.SPC.2 <- lm(HI.moos.SPC.2.2021$HI ~ HI.moos.SPC.2.2021$precip + HI.moos.SPC.2.2021$Intensity) # model one with total precip and intensity
sss <- HI.moos.SPC.2.2021 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.turb.2.2021 <- left_join(HI.moos.turb.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.moos.turb.2.2021$TOTAL.TIME <- as.numeric(HI.moos.turb.2.2021$TOTAL.TIME)
HI.moos.turb.2.2021$Intensity <- HI.moos.turb.2.2021$precip/HI.moos.turb.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
moos.lm.turb.2 <- lm(HI.moos.turb.2.2021$HI ~ HI.moos.turb.2.2021$precip + HI.moos.turb.2.2021$Intensity) # model one with total precip and intensity
ttt <- HI.moos.turb.2.2021 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
# day of year #
MOOS.2021.1$day <- julian(MOOS.2021.1$DateTime, origin = "2021-01-01", tz = 'America/Anchorage')
MOOS.2021.1$day <- as.numeric(MOOS.2021.1$day)
MOOS.2021.per.storm.5 <- MOOS.2021.1 %>% group_by(storm.num) %>%
summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
HI.moos.fDOM.2.2021 <- left_join(HI.moos.fDOM.2.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.fDOM.5 <- lm(HI.moos.fDOM.2.2021$HI ~ HI.moos.fDOM.2.2021$doy)
utb <- HI.moos.fDOM.2.2021 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.SPC.2.2021 <- left_join(HI.moos.SPC.2.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.SPC.5 <- lm(HI.moos.SPC.2.2021$HI ~ HI.moos.SPC.2.2021$doy)
vvv <- HI.moos.SPC.2.2021 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.turb.2.2021 <- left_join(HI.moos.turb.2.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.turb.5 <- lm(HI.moos.turb.2.2021$HI ~ HI.moos.turb.2.2021$doy)
www <- HI.moos.turb.2.2021 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
#plot_grid(aaa,bbb,ccc,ddd,eee,fff,ggg,hhh,iii,jjj,kkk,lll,mmm,nnn,ooo,ppp,qqq,rrr,sss,ttt,uuu,utb,vvv,www,
#          ncol = 4)
HI.moos.2021 <- rbind(HI.moos.fDOM.2.2021, HI.moos.SPC.2.2021, HI.moos.turb.2.2021) # merging all responses together
HI.moos.2021$burn <- "unburned" # adding a burn column
HI.moos.2021$pf <- "medium" # adding a pf column
write.csv(HI.moos.2021, here("Output_from_analysis", "04_Antecedent_Conditions", "2021", "HI.moos.2021.csv"))
library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)
setwd("~/GitHub/Storms_clean_repo/Storm_Events/2021")
storm_file_list_beta <- list.files(path="Test_2/",
recursive=F,
pattern=".csv",
full.names=TRUE)
storm_list_beta<-do.call("list", lapply(storm_file_list_beta,
read.csv,
stringsAsFactors=FALSE,
header=T, row.names=1))
storm_file_list_beta = sub("Test_2//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta
VAUL_storm_list_beta = storm_list_beta[c(49:84)] #36
MOOS_storm_list_beta = storm_list_beta[c(1:48)] #48
View(MOOS_storm_list_beta)
MOOS_NO3_storm_list_beta = MOOS_storm_list_beta[c(grep("NO3", names(MOOS_storm_list_beta)))]
MOOS_fDOM_storm_list_beta = MOOS_storm_list_beta[c(grep("fDOM", names(MOOS_storm_list_beta)))]
MOOS_SpCond_storm_list_beta = MOOS_storm_list_beta[c(grep("SPC", names(MOOS_storm_list_beta)))]
MOOS_turb_storm_list_beta = MOOS_storm_list_beta[c(grep("turb", names(MOOS_storm_list_beta)))]
MOOS_abs_storm_list_beta = MOOS_storm_list_beta[c(grep("abs", names(MOOS_storm_list_beta)))]
MOOS_Q_storm_list_beta = MOOS_storm_list_beta[c(grep("Q", names(MOOS_storm_list_beta)))]
# MOOS
for(i in 1:length(MOOS_Q_storm_list_beta)){
MOOS_Q_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_Q_storm_list_beta[[i]][["datavalue"]]-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_NO3_storm_list_beta)){
MOOS_NO3_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_NO3_storm_list_beta[[i]][["datavalue"]]-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE))/
(max(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE)-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE))
}
for(i in 1:length(MOOS_fDOM_storm_list_beta)){
MOOS_fDOM_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
#SPC
for(i in 1:length(FRCH_SpCond_storm_list_beta)){
FRCH_SpCond_storm_list_beta[[i]][["datavalue.norm"]] =
(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_SpCond_storm_list_beta)){
MOOS_SpCond_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_turb_storm_list_beta)){
MOOS_turb_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_turb_storm_list_beta[[i]][["datavalue"]]-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_abs_storm_list_beta)){
MOOS_abs_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_abs_storm_list_beta[[i]][["datavalue"]]-min(MOOS_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
MOOS_NO3_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_NO3_storm_list_beta, inner_join, by = "valuedatetime")
# MOOS #
MOOS_NO3_storm$storm.ID = c(rep("storm1", 191),
rep("storm2", 251),
rep("storm3a", 115),
rep("storm3b", 359),
rep("storm4a", 415),
rep("storm5a", 315),
rep("storm6", 127),
rep("storm7", 259))
