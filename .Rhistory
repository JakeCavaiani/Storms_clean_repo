all.2020.ci.abs)
write.csv(beta.all.2020, here("Output_from_analysis", "06_BETA", "beta.2020.csv"))
beta.all.2020 <- beta.all.2020 %>%
filter(Parameter != "(Intercept)")
View(beta.all.2020)
library(xfun)
library(bit)
library(vctrs)
library(tidyverse)
library(lubridate)
library(scales)
library(imputeTS)
library(TSA)
library(bbmle)
library(zoo)
library(xts)
library(forecast)
library(stats)
library(lattice)
library(nlme)
library(geosphere)
library(car)
library(readr)
library(googledrive)
library(purrr)
library(here)
Q.daily.2021 <- read.csv(here("processed_sensor_data", "2021", "Q.daily.2021.csv"))
Q.2021 <- read.csv(here("processed_sensor_data", "2021", "Q_2021.csv"))
names(Q.2021) <- c("site.ID", "datetimeAK", "Q") # renaming the column headers to match that of the chem file
Q.2021$datetimeAK <- ymd_hms(Q.2021$datetimeAK) # converting character to datetime
Q.2021$datetimeAK <- force_tz(Q.2021$datetimeAK, "America/Anchorage") # converting character to datetime
chem.2021 <- read.csv(here("processed_sensor_data", "2021", "SUNA.EXO.int.corr.lab_2021.csv"))
chem.2021 <- chem.2021[c("datetimeAK", "site.ID", "fDOM.QSU.T.turb.col", "SpCond.uScm.mn.adj",
"Turbidity.FNU.mn.adj", "nitrateuM.mn.lab", "abs254.adj.mn")]
chem.2021$datetimeAK <- ymd_hms(chem.2021$datetimeAK) # converting character to datetime
chem.2021$datetimeAK <- force_tz(chem.2021$datetimeAK, "America/Anchorage") # converting character to datetime
names(chem.2021) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "ABS_254")
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ####
# pivot long to get all the response variables in one column
chem.2021_long <- chem.2021 %>%
filter(site.ID %in% c("FRCH", "MOOS", "POKE", "VAUL", "STRT")) %>%
pivot_longer(
cols = fDOM:ABS_254,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
) # converting to a long format so each response_var is within a single column
FRCH.2021 <-  subset(chem.2021, site.ID == "FRCH")
FRCH.2021 <- FRCH.2021[order(FRCH.2021$datetimeAK),]
FRCH.2021 <- FRCH.2021[-c(14090:14359), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
MOOS.2021 <-  subset(chem.2021, site.ID == "MOOS")
MOOS.2021 <- MOOS.2021[order(MOOS.2021$datetimeAK),]
MOOS.2021 <- MOOS.2021[-c(14001:14304), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
POKE.2021 <-  subset(chem.2021, site.ID == "POKE")
POKE.2021 <- POKE.2021[order(POKE.2021$datetimeAK),]
POKE.2021 <- POKE.2021[-c(14004:14376), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
STRT.2021 <-  subset(chem.2021, site.ID == "STRT")
STRT.2021 <- STRT.2021[order(STRT.2021$datetimeAK),]
STRT.2021 <- STRT.2021[-c(12567:12845), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
VAUL.2021 <-  subset(chem.2021, site.ID == "VAUL")
VAUL.2021 <- VAUL.2021[order(VAUL.2021$datetimeAK),]
VAUL.2021 <- VAUL.2021[-c(13446:13788), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
chem.2021 <- rbind(FRCH.2021, MOOS.2021, POKE.2021, STRT.2021, VAUL.2021)
DOD.2021 <- full_join(chem.2021, Q.2021) # merging chem and discharge data
View(FRCH.2021)
frch.final.discharge.2021 <- subset(Q.2021, site.ID == "FRCH")
head(frch.final.discharge.2021$datetimeAK)
strt.final.discharge.2021 <- subset(Q.2021, site.ID == "STRT")
head(strt.final.discharge.2021$datetimeAK)
moos.final.discharge.2021 <- subset(Q.2021, site.ID == "MOOS")
head(moos.final.discharge.2021$datetimeAK)
poke.final.discharge.2021 <- subset(Q.2021, site.ID == "POKE")
head(poke.final.discharge.2021$datetimeAK)
ggplot(poke.final.discharge.2021, aes(x = datetimeAK, y = Q)) +
geom_point()
vaul.final.discharge.2021 <- subset(Q.2021, site.ID == "VAUL")
head(vaul.final.discharge.2021$datetimeAK)
frch.final.discharge.2021$MeanDischarge <- frch.final.discharge.2021$Q
moos.final.discharge.2021$MeanDischarge <- moos.final.discharge.2021$Q
poke.final.discharge.2021$MeanDischarge <- poke.final.discharge.2021$Q
vaul.final.discharge.2021$MeanDischarge <- vaul.final.discharge.2021$Q
strt.final.discharge.2021$MeanDischarge <- strt.final.discharge.2021$Q
VAUL.2021 <- left_join(vaul.final.discharge.2021, VAUL.2021)
VAUL.2021 <- VAUL.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3", "ABS_254", "Q")]
MOOS.2021 <- left_join(moos.final.discharge.2021, MOOS.2021)
MOOS.2021 <- MOOS.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3", "ABS_254", "Q")]
FRCH.2021 <- left_join(frch.final.discharge.2021, FRCH.2021)
FRCH.2021 <- FRCH.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3","ABS_254", "Q")]
STRT.2021 <- left_join(strt.final.discharge.2021, STRT.2021)
STRT.2021 <- STRT.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3", "ABS_254", "Q")]
POKE.2021 <- full_join(poke.final.discharge.2021, POKE.2021)
POKE.2021 <- POKE.2021[c("site.ID","datetimeAK", "fDOM",
"SPC", "Turb", "NO3", "ABS_254", "Q")]
STRT.st <- read_csv(here("Climate", "Precip", "STRT.RainGauge.2021.csv"))
STRT.st$DateTime <- force_tz(STRT.st$DateTime, "America/Anchorage") # converting character to datetime
VAUL.st <- read_csv(here("Climate", "Precip", "VAUL.RainGauge.2021.csv"))
VAUL.st$DateTime <- force_tz(VAUL.st$DateTime, "America/Anchorage") # converting character to datetime
POKE.st <- read_csv(here("Climate", "Precip", "POKE.RainGauge.2021.csv"))
POKE.st$DateTime <- force_tz(POKE.st$DateTime, "America/Anchorage") # converting character to datetime
names(STRT.st) <- c("min", "inst_rainfall_mm", "datetimeAK", "site.ID")
names(VAUL.st) <- c("min", "inst_rainfall_mm", "datetimeAK", "site.ID")
names(POKE.st) <- c("datetimeAK", "CRREL", "CARI", "inst_rainfall_mm", "site.ID")
strt.precip.discharge <- full_join(strt.final.discharge.2021, STRT.st) # merging precip data and discharge
vaul.precip.discharge <- full_join(vaul.final.discharge.2021, VAUL.st) # merging precip data and discharge
poke.precip.discharge <- full_join(poke.final.discharge.2021, POKE.st) # merging precip data and discharge
### Sum daily discharge ###
strt.precip.discharge$twentyfour <- rollapplyr(strt.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
strt.precip.discharge$fourtyeight <- rollapplyr(strt.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$twentyfour <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$fourtyeight <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$twentyfour <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$fourtyeight <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
# Greater than 5 #
strt.five.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
strt.five.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
vaul.five.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
poke.five.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
# Greater than 10 #
strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
vaul.ten.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
poke.ten.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(VAUL.2021$Q ~ VAUL.2021$datetimeAK, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
VAUL <- VAUL.2021
VAUL$MeanDischarge <- VAUL$Q
VAUL$DateTime <- VAUL$datetimeAK
VAUL.st$DateTime <- VAUL.st$datetimeAK
vaul.five.fourty.eight$DateTime <- vaul.five.fourty.eight$datetimeAK
vaul.five.twenty.four$DateTime <- vaul.five.twenty.four$datetimeAK
VAUL$nitrateuM <- VAUL$NO3
VAUL$fDOM.QSU <- VAUL$fDOM
VAUL$SpCond.uScm <- VAUL$SPC
VAUL$Turbidity.FNU <- VAUL$Turb
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-27 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-30 18:30:00", tz="America/Anchorage"), col="purple")
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-23 15:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-27 14:30:00", tz="America/Anchorage"), col="purple")
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-23 15:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-27 14:30:00", tz="America/Anchorage"), col="purple")
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-23 15:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-27 14:30:00", tz="America/Anchorage"), col="purple")
VAUL_storm1a_07_23 = VAUL[VAUL$DateTime > as.POSIXct("2021-07-23 16:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-07-27 14:30:00", tz="America/Anchorage"),]
plot(VAUL_storm1a_07_23$MeanDischarge ~ as.POSIXct(VAUL_storm1a_07_23$DateTime, tz="America/Anchorage"), type="p", xlab="", ylab="Q (L/sec)",ylim = c(0,1700), col="blue", main="VAUL 210723 storm 1a",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-27 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-30 18:30:00", tz="America/Anchorage"), col="purple")
VAUL_storm1b_07_27 = VAUL[VAUL$DateTime > as.POSIXct("2021-07-27 23:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-07-30 18:30:00", tz="America/Anchorage"),]
plot(VAUL_storm1b_07_27$MeanDischarge ~ as.POSIXct(VAUL_storm1b_07_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,700), col="blue", main="VAUL 210727 storm 1b",
xlim = as.POSIXct(c("2021-07-27 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
xlim = as.POSIXct(c("2021-07-27 00:00:00","2021-07-31 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2021-07-27 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-05 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-06 03:30:00", tz="America/Anchorage"), col="purple")
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-08 21:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-15 20:30:00", tz="America/Anchorage"), col="purple")
VAUL_storm3_08_08 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-08 21:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-08-15 20:30:00", tz="America/Anchorage"),]
plot(VAUL_storm3_08_08$MeanDischarge ~ as.POSIXct(VAUL_storm3_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL 210808 storm 3",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz = "America/Anchorage"))
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-05 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-06 03:30:00", tz="America/Anchorage"), col="purple")
VAUL_storm2_08_05 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-05 10:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-08-06 03:30:00", tz="America/Anchorage"),]
plot(VAUL_storm2_08_05$MeanDischarge ~ as.POSIXct(VAUL_storm2_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,400), col="blue", main="VAUL 210805 storm 2",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-08 21:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-15 20:30:00", tz="America/Anchorage"), col="purple")
VAUL_storm3_08_08 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-08 21:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-08-15 20:30:00", tz="America/Anchorage"),]
plot(VAUL_storm3_08_08$MeanDischarge ~ as.POSIXct(VAUL_storm3_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL 210808 storm 3",
xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-15 21:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-20 08:30:00", tz="America/Anchorage"), col="purple")
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-15 21:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-20 08:30:00", tz="America/Anchorage"), col="purple")
VAUL_storm4a_08_15 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-15 21:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-08-20 08:30:00", tz="America/Anchorage"),]
plot(VAUL_storm4a_08_15$MeanDischarge ~ as.POSIXct(VAUL_storm4a_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL 210815 storm 4a",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz = "America/Anchorage"))
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-20 08:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-23 16:30:00", tz="America/Anchorage"), col="purple")
VAUL_storm4b_08_20 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-20 08:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-08-23 16:30:00", tz="America/Anchorage"),]
plot(VAUL_storm4b_08_20$MeanDischarge ~ as.POSIXct(VAUL_storm4b_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 210820 storm 4b",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-23 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-27 07:30:00", tz="America/Anchorage"), col="purple")
VAUL_storm5a_08_23 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-23 20:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-08-27 07:30:00", tz="America/Anchorage"),]
plot(VAUL_storm5a_08_23$MeanDischarge ~ as.POSIXct(VAUL_storm5a_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 210823 storm 5a",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
VAUL_storm5a_08_23 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-23 20:30:00", tz="America/Anchorage") &
VAUL$DateTime < as.POSIXct("2021-08-31 07:30:00", tz="America/Anchorage"),]
plot(VAUL_storm5a_08_23$MeanDischarge ~ as.POSIXct(VAUL_storm5a_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 210823 storm 5a",
xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
VAUL_storm1a_07_23_Q = subset(VAUL_storm1a_07_23, select = c("DateTime","MeanDischarge"))
names(VAUL_storm1a_07_23_Q) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_NO3 = subset(VAUL_storm1a_07_23, select = c("DateTime","nitrateuM"))
names(VAUL_storm1a_07_23_NO3) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_fDOM = subset(VAUL_storm1a_07_23, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm1a_07_23_fDOM) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_SPC = subset(VAUL_storm1a_07_23, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm1a_07_23_SPC) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_turb = subset(VAUL_storm1a_07_23, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm1a_07_23_turb) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_abs = subset(VAUL_storm1a_07_23, select = c("DateTime","ABS_254"))
names(VAUL_storm1a_07_23_abs) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_Q = subset(VAUL_storm1b_07_27, select = c("DateTime","MeanDischarge"))
names(VAUL_storm1b_07_27_Q) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_NO3 = subset(VAUL_storm1b_07_27, select = c("DateTime","nitrateuM"))
names(VAUL_storm1b_07_27_NO3) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_fDOM = subset(VAUL_storm1b_07_27, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm1b_07_27_fDOM) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_SPC = subset(VAUL_storm1b_07_27, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm1b_07_27_SPC) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_turb = subset(VAUL_storm1b_07_27, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm1b_07_27_turb) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_abs = subset(VAUL_storm1b_07_27, select = c("DateTime","ABS_254"))
names(VAUL_storm1b_07_27_abs) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_Q = subset(VAUL_storm3_08_08, select = c("DateTime","MeanDischarge"))
names(VAUL_storm3_08_08_Q) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_NO3 = subset(VAUL_storm3_08_08, select = c("DateTime","nitrateuM"))
names(VAUL_storm3_08_08_NO3) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_fDOM = subset(VAUL_storm3_08_08, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm3_08_08_fDOM) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_SPC = subset(VAUL_storm3_08_08, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm3_08_08_SPC) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_turb = subset(VAUL_storm3_08_08, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm3_08_08_turb) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_abs = subset(VAUL_storm3_08_08, select = c("DateTime","ABS_254"))
names(VAUL_storm3_08_08_abs) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_Q = subset(VAUL_storm4a_08_15, select = c("DateTime","MeanDischarge"))
names(VAUL_storm4a_08_15_Q) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_NO3 = subset(VAUL_storm4a_08_15, select = c("DateTime","nitrateuM"))
names(VAUL_storm4a_08_15_NO3) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_fDOM = subset(VAUL_storm4a_08_15, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm4a_08_15_fDOM) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_SPC = subset(VAUL_storm4a_08_15, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm4a_08_15_SPC) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_turb = subset(VAUL_storm4a_08_15, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm4a_08_15_turb) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_abs = subset(VAUL_storm4a_08_15, select = c("DateTime","ABS_254"))
names(VAUL_storm4a_08_15_abs) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_Q = subset(VAUL_storm4b_08_20, select = c("DateTime","MeanDischarge"))
names(VAUL_storm4b_08_20_Q) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_NO3 = subset(VAUL_storm4b_08_20, select = c("DateTime","nitrateuM"))
names(VAUL_storm4b_08_20_NO3) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_fDOM = subset(VAUL_storm4b_08_20, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm4b_08_20_fDOM) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_SPC = subset(VAUL_storm4b_08_20, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm4b_08_20_SPC) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_turb = subset(VAUL_storm4b_08_20, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm4b_08_20_turb) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_abs = subset(VAUL_storm4b_08_20, select = c("DateTime","ABS_254"))
names(VAUL_storm4b_08_20_abs) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_Q = subset(VAUL_storm5a_08_23, select = c("DateTime","MeanDischarge"))
names(VAUL_storm5a_08_23_Q) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_NO3 = subset(VAUL_storm5a_08_23, select = c("DateTime","nitrateuM"))
names(VAUL_storm5a_08_23_NO3) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_fDOM = subset(VAUL_storm5a_08_23, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm5a_08_23_fDOM) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_SPC = subset(VAUL_storm5a_08_23, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm5a_08_23_SPC) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_turb = subset(VAUL_storm5a_08_23, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm5a_08_23_turb) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_abs = subset(VAUL_storm5a_08_23, select = c("DateTime","ABS_254"))
names(VAUL_storm5a_08_23_abs) = c("valuedatetime","datavalue")
write.csv(VAUL_storm1a_07_23, here("Storm_Events", "2021", "VAUL", "VAUL_storm1a_07_23.csv"))
write.csv(VAUL_storm1a_07_23_Q, here("Storm_Events", "2021", "VAUL", "VAUL_storm1a_07_23_Q.csv"))
write.csv(VAUL_storm1a_07_23_NO3, here("Storm_Events", "2021", "VAUL", "VAUL_storm1a_07_23_NO3.csv"))
write.csv(VAUL_storm1a_07_23_fDOM, here("Storm_Events", "2021", "VAUL", "VAUL_storm1a_07_23_fDOM.csv"))
write.csv(VAUL_storm1a_07_23_SPC, here("Storm_Events", "2021", "VAUL", "VAUL_storm1a_07_23_SPC.csv"))
write.csv(VAUL_storm1a_07_23_turb, here("Storm_Events", "2021", "VAUL", "VAUL_storm1a_07_23_turb.csv"))
write.csv(VAUL_storm1a_07_23_abs, here("Storm_Events", "2021", "VAUL", "VAUL_storm1a_07_23_abs.csv"))
write.csv(VAUL_storm1b_07_27, here("Storm_Events", "2021", "VAUL", "VAUL_storm1b_07_27.csv"))
write.csv(VAUL_storm1b_07_27_Q, here("Storm_Events", "2021", "VAUL", "VAUL_storm1b_07_27_Q.csv"))
write.csv(VAUL_storm1b_07_27_NO3, here("Storm_Events", "2021", "VAUL", "VAUL_storm1b_07_27_NO3.csv"))
write.csv(VAUL_storm1b_07_27_fDOM, here("Storm_Events", "2021", "VAUL", "VAUL_storm1b_07_27_fDOM.csv"))
write.csv(VAUL_storm1b_07_27_SPC, here("Storm_Events", "2021", "VAUL", "VAUL_storm1b_07_27_SPC.csv"))
write.csv(VAUL_storm1b_07_27_turb, here("Storm_Events", "2021", "VAUL", "VAUL_storm1b_07_27_turb.csv"))
write.csv(VAUL_storm1b_07_27_abs, here("Storm_Events", "2021", "VAUL", "VAUL_storm1b_07_27_abs.csv"))
write.csv(VAUL_storm3_08_08, here("Storm_Events", "2021", "VAUL", "VAUL_storm3_08_08.csv"))
write.csv(VAUL_storm3_08_08_Q, here("Storm_Events", "2021", "VAUL", "VAUL_storm3_08_08_Q.csv"))
write.csv(VAUL_storm3_08_08_NO3, here("Storm_Events", "2021", "VAUL", "VAUL_storm3_08_08_NO3.csv"))
write.csv(VAUL_storm3_08_08_fDOM, here("Storm_Events", "2021", "VAUL", "VAUL_storm3_08_08_fDOM.csv"))
write.csv(VAUL_storm3_08_08_SPC, here("Storm_Events", "2021", "VAUL", "VAUL_storm3_08_08_SPC.csv"))
write.csv(VAUL_storm3_08_08_turb, here("Storm_Events", "2021", "VAUL", "VAUL_storm3_08_08_turb.csv"))
write.csv(VAUL_storm3_08_08_abs, here("Storm_Events", "2021", "VAUL", "VAUL_storm3_08_08_abs.csv"))
write.csv(VAUL_storm4a_08_15, here("Storm_Events", "2021", "VAUL", "VAUL_storm4a_08_15.csv"))
write.csv(VAUL_storm4a_08_15_Q, here("Storm_Events", "2021", "VAUL", "VAUL_storm4a_08_15_Q.csv"))
write.csv(VAUL_storm4a_08_15_NO3, here("Storm_Events", "2021", "VAUL", "VAUL_storm4a_08_15_NO3.csv"))
write.csv(VAUL_storm4a_08_15_fDOM, here("Storm_Events", "2021", "VAUL", "VAUL_storm4a_08_15_fDOM.csv"))
write.csv(VAUL_storm4a_08_15_SPC, here("Storm_Events", "2021", "VAUL", "VAUL_storm4a_08_15_SPC.csv"))
write.csv(VAUL_storm4a_08_15_turb, here("Storm_Events", "2021", "VAUL", "VAUL_storm4a_08_15_turb.csv"))
write.csv(VAUL_storm4a_08_15_abs, here("Storm_Events", "2021", "VAUL", "VAUL_storm4a_08_15_abs.csv"))
write.csv(VAUL_storm4b_08_20, here("Storm_Events", "2021", "VAUL", "VAUL_storm4b_08_20.csv"))
write.csv(VAUL_storm4b_08_20_Q, here("Storm_Events", "2021", "VAUL", "VAUL_storm4b_08_20_Q.csv"))
write.csv(VAUL_storm4b_08_20_NO3, here("Storm_Events", "2021", "VAUL", "VAUL_storm4b_08_20_NO3.csv"))
write.csv(VAUL_storm4b_08_20_fDOM, here("Storm_Events", "2021", "VAUL", "VAUL_storm4b_08_20_fDOM.csv"))
write.csv(VAUL_storm4b_08_20_SPC, here("Storm_Events", "2021", "VAUL", "VAUL_storm4b_08_20_SPC.csv"))
write.csv(VAUL_storm4b_08_20_turb, here("Storm_Events", "2021", "VAUL", "VAUL_storm4b_08_20_turb.csv"))
write.csv(VAUL_storm4b_08_20_abs, here("Storm_Events", "2021", "VAUL", "VAUL_storm4b_08_20_abs.csv"))
write.csv(VAUL_storm5a_08_23, here("Storm_Events", "2021", "VAUL", "VAUL_storm5a_08_23.csv"))
write.csv(VAUL_storm5a_08_23_Q, here("Storm_Events", "2021", "VAUL", "VAUL_storm5a_08_23_Q.csv"))
write.csv(VAUL_storm5a_08_23_NO3, here("Storm_Events", "2021", "VAUL", "VAUL_storm5a_08_23_NO3.csv"))
write.csv(VAUL_storm5a_08_23_fDOM, here("Storm_Events", "2021", "VAUL", "VAUL_storm5a_08_23_fDOM.csv"))
write.csv(VAUL_storm5a_08_23_SPC, here("Storm_Events", "2021", "VAUL", "VAUL_storm5a_08_23_SPC.csv"))
write.csv(VAUL_storm5a_08_23_turb, here("Storm_Events", "2021", "VAUL", "VAUL_storm5a_08_23_turb.csv"))
write.csv(VAUL_storm5a_08_23_abs, here("Storm_Events", "2021", "VAUL", "VAUL_storm5a_08_23_abs.csv"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(boot)
library(lubridate)
library(here)
Sys.which("python")
use_python("/usr/local/bin/python3")
options(tz="America/Anchorage")
# install pandas #
virtualenv_create("r-reticulate")
# RETICULATE_PYTHON = "lib/python3.8"
reticulate::py_config()
reticulate::py_install("pandas")
reticulate::repl_python()
