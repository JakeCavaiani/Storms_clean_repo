chem.2022$datetimeAK <- ymd_hms(chem.2022$datetimeAK) # converting character to datetime
chem.2022$datetimeAK <- force_tz(chem.2022$datetimeAK, "America/Anchorage") # converting character to datetime
names(chem.2022) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "ABS_254")
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ####
# pivot long to get all the response variables in one column
chem.2022_long <- chem.2022 %>%
filter(site.ID %in% c("FRCH", "MOOS", "POKE", "VAUL", "STRT")) %>%
pivot_longer(
cols = fDOM:ABS_254,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
) # converting to a long format so each response_var is within a single column
CARI_2022 <- read.csv(here("processed_sensor_data", "2022", "NEON_Q_WaterQuality2022.csv"))
# time zones are the bane of my existence
# when I import the file that had AKDT time from the last repo it loads in as UTC
# but when I try and change it all over it gets all wonky so here is my horrible
# way to solve the issue
#
CARI_2022 <- CARI_2022[c("site.ID.x", "DateTimeAK", "Discharge", "NO3", "fDOM", "SPC", "Turb")] # picking the columns I want
names(CARI_2022) <- c("site.ID", "DateTimeAK", "Discharge", "NO3", "fDOM", "SPC", "Turb") # renaming columns
CARI_2022$site.ID <- "CARI"
CARI_2022$DateTimeAK <- ymd_hms(CARI_2022$DateTimeAK) # changing from character to datetime
CARI_2022$DateTimeAK <- force_tz(CARI_2022$DateTimeAK, "America/Anchorage") # it already is in AK time so I want to make it recognize it without changing the actually time value
CARI_Q <- CARI_2022[c("site.ID", "DateTimeAK", "Discharge")] # clipping out just Q
CARI_chem <- CARI_2022[c("site.ID", "DateTimeAK", "NO3", "fDOM", "SPC", "Turb")] # clipping out just chem
ggplot(CARI_2022) +
CARI_2022$day = format(as.POSIXct(CARI_2022$DateTimeAK,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
CARI_2022$day = as.POSIXct(CARI_2022$day, "%Y-%m-%d", tz="America/Anchorage")
cari.final.discharge.2022 <- CARI_2022[c("site.ID", "DateTimeAK", "Discharge", "day")]
CARI.daily.2022 = with(CARI_2022, tapply(Discharge, list(day, site.ID), mean))
CARI.daily.2022 = as.data.frame(CARI.daily.2022)
CARI.Q.2022 = as.data.frame(CARI.daily.2022$CARI)
CARI.Q.2022$day = as.Date(rownames(CARI.daily.2022))
names(CARI.Q.2022) = c("Discharge_Lsec", "day")
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ####
# pivot long to get all the response variables in one column
cari_2022_long <- CARI_2022 %>%
pivot_longer(
cols = NO3:Turb,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
) # converting to a long format so each response_var is within a single column
FRCH.2022 <-  subset(chem.2022, site.ID == "FRCH")
FRCH.2022 <- FRCH.2022[-c(14573:14900), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
MOOS.2022 <-  subset(chem.2022, site.ID == "MOOS")
MOOS.2022 <- MOOS.2022[-c(14666:15037), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
POKE.2022 <-  subset(chem.2022, site.ID == "POKE")
POKE.2022 <- POKE.2022[-c(14481:14857), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
VAUL.2022 <-  subset(chem.2022, site.ID == "VAUL")
VAUL.2022 <- VAUL.2022[-c(14198:14548), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
STRT.2022 <-  subset(chem.2022, site.ID == "STRT")
STRT.2022 <- STRT.2022[-c(12278:12787), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
DOD.2022 <- rbind(FRCH.2022, MOOS.2022, POKE.2022,
VAUL.2022, STRT.2022)
DOD.2022 <- full_join(DOD.2022, Q.2022) # merging chem and discharge data
frch.final.discharge.2022 <- subset(Q.2022, site.ID == "FRCH")
strt.final.discharge.2022 <- subset(Q.2022, site.ID == "STRT")
poke.final.discharge.2022 <- subset(Q.2022, site.ID == "POKE")
vaul.final.discharge.2022 <- subset(Q.2022, site.ID == "VAUL")
moos.final.discharge.2022 <- subset(Q.2022, site.ID == "MOOS")
#
# # join Q and chem data
# # FRCH #
FRCH = full_join(frch.final.discharge.2022, FRCH.2022)
# MOOS #
MOOS = full_join(moos.final.discharge.2022, MOOS.2022)
# STRT #
STRT = full_join(strt.final.discharge.2022, STRT.2022)
# POKE #
POKE = full_join(poke.final.discharge.2022, POKE.2022)
# VAUL #
VAUL = full_join(vaul.final.discharge.2022, VAUL.2022)
CPCRW <- read_csv(here("Climate", "Precip", "CPCRW.RainGauge.2022.final.csv"))
CPCRW$datetimeAK <- force_tz(CPCRW$datetimeAK, "America/Anchorage") # it already is in AK time so I want to make it recognize it without changing the actually time value
frch.precip.discharge <- full_join(frch.final.discharge.2022, CPCRW) # merging precip data and discharge
moos.precip.discharge <- full_join(moos.final.discharge.2022, CPCRW) # merging precip data and discharge
poke.precip.discharge <- full_join(poke.final.discharge.2022, CPCRW) # merging precip data and discharge
vaul.precip.discharge <- full_join(vaul.final.discharge.2022, CPCRW) # merging precip data and discharge
strt.precip.discharge <- full_join(strt.final.discharge.2022, CPCRW) # merging precip data and discharge
#cari.precip.discharge <- full_join(cari.final.discharge.2022, CPCRW) # merging precip data and discharge
frch.precip.discharge <- frch.precip.discharge[order(frch.precip.discharge$datetimeAK),]
moos.precip.discharge <- moos.precip.discharge[order(moos.precip.discharge$datetimeAK),]
poke.precip.discharge <- poke.precip.discharge[order(poke.precip.discharge$datetimeAK),]
vaul.precip.discharge <- vaul.precip.discharge[order(vaul.precip.discharge$datetimeAK),]
strt.precip.discharge <- strt.precip.discharge[order(strt.precip.discharge$datetimeAK),]
#cari.precip.discharge <- cari.precip.discharge[order(cari.precip.discharge$datetimeAK),]
ts <- seq(as.POSIXct("2022-04-01", tz = "America/Anchorage"),
as.POSIXct("2022-11-01", tz = "America/Anchorage"),
by = "30 min")
head(ts)
ts <- as.data.frame(ts)
names(ts) <- c("datetimeAK")
frch.precip.discharge <- left_join(ts, frch.precip.discharge, by = "datetimeAK")
### Sum daily discharge ###
frch.precip.discharge$twentyfour <- rollapplyr(frch.precip.discharge$mean, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
frch.precip.discharge$fourtyeight <- rollapplyr(frch.precip.discharge$mean, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
moos.precip.discharge$twentyfour <- rollapplyr(moos.precip.discharge$mean, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
moos.precip.discharge$fourtyeight <- rollapplyr(moos.precip.discharge$mean, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
strt.precip.discharge$twentyfour <- rollapplyr(strt.precip.discharge$mean, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
strt.precip.discharge$fourtyeight <- rollapplyr(strt.precip.discharge$mean, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$twentyfour <- rollapplyr(vaul.precip.discharge$mean, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$fourtyeight <- rollapplyr(vaul.precip.discharge$mean, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$twentyfour <- rollapplyr(poke.precip.discharge$mean, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$fourtyeight <- rollapplyr(poke.precip.discharge$mean, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
#
# Greater than 5 #
frch.five.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
frch.five.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
moos.five.twenty.four <- moos.precip.discharge[which(moos.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
moos.five.fourty.eight <- moos.precip.discharge[which(moos.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
strt.five.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
strt.five.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
vaul.five.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
poke.five.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
# Greater than 10 #
frch.ten.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
frch.ten.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
moos.ten.twenty.four <- moos.precip.discharge[which(moos.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
moos.ten.fourty.eight <- moos.precip.discharge[which(moos.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
vaul.ten.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
poke.ten.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
CARI <- CARI_2022
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-05-01 0:00:00","2022-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-05-01 0:00:00","2022-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(CARI$fDOM ~ CARI$DateTimeAK, xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2022-07-01 00:00:00","2022-07-15 23:45:00"), tz="America/Anchorage"))
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-07-15 00:00:00","2022-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 400))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-07-15 00:00:00","2022-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-07-15 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-07-18 04:30:00", tz="America/Anchorage"), col="purple")
CARI_storm1_07_15 = CARI[CARI$DateTimeAK > as.POSIXct("2022-07-15 18:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-07-18 04:30:00", tz="America/Anchorage"),]
plot(CARI_storm1_07_15$Discharge ~ as.POSIXct(CARI_storm1_07_15$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,300), col="blue", main="CARI 220715 storm 1",
xlim = as.POSIXct(c("2022-07-15 00:00:00","2022-07-18 23:45:00"), tz="America/Anchorage"))
plot(CARI_storm1_07_15$Discharge ~ as.POSIXct(CARI_storm1_07_15$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,450), col="blue", main="CARI 220715 storm 1",
xlim = as.POSIXct(c("2022-07-15 00:00:00","2022-07-18 23:45:00"), tz="America/Anchorage"))
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-07-15 00:00:00","2022-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 400))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-07-15 00:00:00","2022-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-07-19 05:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-07-21 05:30:00", tz="America/Anchorage"), col="purple")
# storm 2 #
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-07-15 00:00:00","2022-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 700))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-07-15 00:00:00","2022-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-07-19 05:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-07-21 05:30:00", tz="America/Anchorage"), col="purple")
CARI_storm2_07_19 = CARI[CARI$DateTimeAK > as.POSIXct("2022-07-19 05:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-07-21 05:30:00", tz="America/Anchorage"),]
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 600))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-08-01 17:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-08-03 22:30:00", tz="America/Anchorage"), col="purple")
CARI_storm3_08_01 = CARI[CARI$DateTimeAK > as.POSIXct("2022-08-01 17:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-08-03 22:30:00", tz="America/Anchorage"),]
plot(CARI_storm3_08_01$Discharge ~ as.POSIXct(CARI_storm3_08_01$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,400), col="blue", main="CARI 220801 storm 3",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-03 23:45:00"), tz="America/Anchorage"))
plot(CARI_storm3_08_01$Discharge ~ as.POSIXct(CARI_storm3_08_01$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,600), col="blue", main="CARI 220801 storm 3",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-03 23:45:00"), tz="America/Anchorage"))
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 400))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-08-05 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-08-06 07:30:00", tz="America/Anchorage"), col="purple")
CARI_storm4a_08_05 = CARI[CARI$DateTimeAK > as.POSIXct("2022-08-05 01:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-08-06 07:30:00", tz="America/Anchorage"),]
plot(CARI_storm4a_08_05$Discharge ~ as.POSIXct(CARI_storm4a_08_05$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,300), col="blue", main="CARI 220805 storm 4a",
xlim = as.POSIXct(c("2022-08-05 00:00:00","2022-08-06 23:45:00"), tz="America/Anchorage"))
# storm 4a #
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 600))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-08-05 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-08-06 07:30:00", tz="America/Anchorage"), col="purple")
CARI_storm4a_08_05 = CARI[CARI$DateTimeAK > as.POSIXct("2022-08-05 01:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-08-06 07:30:00", tz="America/Anchorage"),]
plot(CARI_storm4a_08_05$Discharge ~ as.POSIXct(CARI_storm4a_08_05$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,600), col="blue", main="CARI 220805 storm 4a",
xlim = as.POSIXct(c("2022-08-05 00:00:00","2022-08-06 23:45:00"), tz="America/Anchorage"))
plot(CARI_storm4a_08_05$Discharge ~ as.POSIXct(CARI_storm4a_08_05$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,400), col="blue", main="CARI 220805 storm 4a",
xlim = as.POSIXct(c("2022-08-05 00:00:00","2022-08-06 23:45:00"), tz="America/Anchorage"))
par(new = T)
# storm 4b #
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 600))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-08-06 07:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-08-08 01:30:00", tz="America/Anchorage"), col="purple")
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 600))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-08-01 00:00:00","2022-08-15 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-08-08 02:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-08-12 01:30:00", tz="America/Anchorage"), col="purple")
CARI_storm5_08_08 = CARI[CARI$DateTimeAK > as.POSIXct("2022-08-08 02:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-08-12 01:30:00", tz="America/Anchorage"),]
plot(CARI_storm5_08_08$Discharge ~ as.POSIXct(CARI_storm5_08_08$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(200,550), col="blue", main="CARI 220808 storm 5",
xlim = as.POSIXct(c("2022-08-08 00:00:00","2022-08-12 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-08-15 00:00:00","2022-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 400))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-08-15 00:00:00","2022-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-08-15 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-08-16 15:30:00", tz="America/Anchorage"), col="purple")
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-08-15 00:00:00","2022-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 400))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-08-15 00:00:00","2022-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-08-18 22:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-08-20 22:30:00", tz="America/Anchorage"), col="purple")
CARI_storm7_08_18 = CARI[CARI$DateTimeAK > as.POSIXct("2022-08-18 22:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-08-20 22:30:00", tz="America/Anchorage"),]
plot(CARI_storm7_08_18$Discharge ~ as.POSIXct(CARI_storm7_08_18$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,300), col="blue", main="CARI 220818 storm 7",
xlim = as.POSIXct(c("2022-08-18 00:00:00","2022-08-20 23:45:00"), tz="America/Anchorage"))
plot(CARI$Discharge ~ CARI$DateTimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2022-09-01 00:00:00","2022-09-15 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 400))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2022-09-01 00:00:00","2022-09-15 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2022-09-04 05:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2022-09-05 07:30:00", tz="America/Anchorage"), col="purple")
CARI_storm8_09_04 = CARI[CARI$DateTimeAK > as.POSIXct("2022-09-04 05:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-09-05 07:30:00", tz="America/Anchorage"),]
plot(CARI_storm8_09_04$Discharge ~ as.POSIXct(CARI_storm8_09_04$DateTimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(150,250), col="blue", main="CARI 220904 storm 8",
xlim = as.POSIXct(c("2022-09-04 00:00:00","2022-09-05 23:45:00"), tz="America/Anchorage"))
CARI_storm1_07_15_Q = subset(CARI_storm1_07_15, select = c("DateTimeAK","Discharge"))
names(CARI_storm1_07_15_Q) = c("valuedatetime","datavalue")
CARI_storm1_07_15_NO3 = subset(CARI_storm1_07_15, select = c("DateTimeAK","NO3"))
names(CARI_storm1_07_15_NO3) = c("valuedatetime","datavalue")
CARI_storm1_07_15_fDOM = subset(CARI_storm1_07_15, select = c("DateTimeAK","fDOM"))
names(CARI_storm1_07_15_fDOM) = c("valuedatetime","datavalue")
CARI_storm1_07_15_SPC = subset(CARI_storm1_07_15, select = c("DateTimeAK","SPC"))
names(CARI_storm1_07_15_SPC) = c("valuedatetime","datavalue")
CARI_storm1_07_15_turb = subset(CARI_storm1_07_15, select = c("DateTimeAK","Turb"))
names(CARI_storm1_07_15_turb) = c("valuedatetime","datavalue")
CARI_storm2_07_19_Q = subset(CARI_storm2_07_19, select = c("DateTimeAK","Discharge"))
names(CARI_storm2_07_19_Q) = c("valuedatetime","datavalue")
CARI_storm2_07_19_NO3 = subset(CARI_storm2_07_19, select = c("DateTimeAK","NO3"))
names(CARI_storm2_07_19_NO3) = c("valuedatetime","datavalue")
CARI_storm2_07_19_fDOM = subset(CARI_storm2_07_19, select = c("DateTimeAK","fDOM"))
names(CARI_storm2_07_19_fDOM) = c("valuedatetime","datavalue")
CARI_storm2_07_19_SPC = subset(CARI_storm2_07_19, select = c("DateTimeAK","SPC"))
names(CARI_storm2_07_19_SPC) = c("valuedatetime","datavalue")
CARI_storm2_07_19_turb = subset(CARI_storm2_07_19, select = c("DateTimeAK","Turb"))
names(CARI_storm2_07_19_turb) = c("valuedatetime","datavalue")
CARI_storm3_08_01_Q = subset(CARI_storm3_08_01, select = c("DateTimeAK","Discharge"))
names(CARI_storm3_08_01_Q) = c("valuedatetime","datavalue")
CARI_storm3_08_01_NO3 = subset(CARI_storm3_08_01, select = c("DateTimeAK","NO3"))
names(CARI_storm3_08_01_NO3) = c("valuedatetime","datavalue")
CARI_storm3_08_01_fDOM = subset(CARI_storm3_08_01, select = c("DateTimeAK","fDOM"))
names(CARI_storm3_08_01_fDOM) = c("valuedatetime","datavalue")
CARI_storm3_08_01_SPC = subset(CARI_storm3_08_01, select = c("DateTimeAK","SPC"))
names(CARI_storm3_08_01_SPC) = c("valuedatetime","datavalue")
CARI_storm3_08_01_turb = subset(CARI_storm3_08_01, select = c("DateTimeAK","Turb"))
names(CARI_storm3_08_01_turb) = c("valuedatetime","datavalue")
CARI_storm4a_08_05_Q = subset(CARI_storm4a_08_05, select = c("DateTimeAK","Discharge"))
names(CARI_storm4a_08_05_Q) = c("valuedatetime","datavalue")
CARI_storm4a_08_05_NO3 = subset(CARI_storm4a_08_05, select = c("DateTimeAK","NO3"))
names(CARI_storm4a_08_05_NO3) = c("valuedatetime","datavalue")
CARI_storm4a_08_05_fDOM = subset(CARI_storm4a_08_05, select = c("DateTimeAK","fDOM"))
names(CARI_storm4a_08_05_fDOM) = c("valuedatetime","datavalue")
CARI_storm4a_08_05_SPC = subset(CARI_storm4a_08_05, select = c("DateTimeAK","SPC"))
names(CARI_storm4a_08_05_SPC) = c("valuedatetime","datavalue")
CARI_storm4a_08_05_turb = subset(CARI_storm4a_08_05, select = c("DateTimeAK","Turb"))
names(CARI_storm4a_08_05_turb) = c("valuedatetime","datavalue")
CARI_storm4b_08_06_Q = subset(CARI_storm4b_08_06, select = c("DateTimeAK","Discharge"))
CARI_storm4b_08_06 = CARI[CARI$DateTimeAK > as.POSIXct("2022-08-06 07:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-08-08 01:30:00", tz="America/Anchorage"),]
CARI_storm4b_08_06_Q = subset(CARI_storm4b_08_06, select = c("DateTimeAK","Discharge"))
names(CARI_storm4b_08_06_Q) = c("valuedatetime","datavalue")
CARI_storm4b_08_06_NO3 = subset(CARI_storm4b_08_06, select = c("DateTimeAK","NO3"))
names(CARI_storm4b_08_06_NO3) = c("valuedatetime","datavalue")
CARI_storm4b_08_06_fDOM = subset(CARI_storm4b_08_06, select = c("DateTimeAK","fDOM"))
names(CARI_storm4b_08_06_fDOM) = c("valuedatetime","datavalue")
CARI_storm4b_08_06_SPC = subset(CARI_storm4b_08_06, select = c("DateTimeAK","SPC"))
names(CARI_storm4b_08_06_SPC) = c("valuedatetime","datavalue")
CARI_storm4b_08_06_turb = subset(CARI_storm4b_08_06, select = c("DateTimeAK","Turb"))
names(CARI_storm4b_08_06_turb) = c("valuedatetime","datavalue")
CARI_storm5_08_08_Q = subset(CARI_storm5_08_08, select = c("DateTimeAK","Discharge"))
names(CARI_storm5_08_08_Q) = c("valuedatetime","datavalue")
CARI_storm5_08_08_NO3 = subset(CARI_storm5_08_08, select = c("DateTimeAK","NO3"))
names(CARI_storm5_08_08_NO3) = c("valuedatetime","datavalue")
CARI_storm5_08_08_fDOM = subset(CARI_storm5_08_08, select = c("DateTimeAK","fDOM"))
names(CARI_storm5_08_08_fDOM) = c("valuedatetime","datavalue")
CARI_storm5_08_08_SPC = subset(CARI_storm5_08_08, select = c("DateTimeAK","SPC"))
names(CARI_storm5_08_08_SPC) = c("valuedatetime","datavalue")
CARI_storm5_08_08_turb = subset(CARI_storm5_08_08, select = c("DateTimeAK","Turb"))
names(CARI_storm5_08_08_turb) = c("valuedatetime","datavalue")
CARI_storm6_08_15_Q = subset(CARI_storm6_08_15, select = c("DateTimeAK","Discharge"))
CARI_storm6_08_15 = CARI[CARI$DateTimeAK > as.POSIXct("2022-08-15 16:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-08-16 15:30:00", tz="America/Anchorage"),]
CARI_storm7_08_18 = CARI[CARI$DateTimeAK > as.POSIXct("2022-08-18 22:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-08-20 22:30:00", tz="America/Anchorage"),]
CARI_storm8_09_04 = CARI[CARI$DateTimeAK > as.POSIXct("2022-09-04 05:30:00", tz="America/Anchorage") &
CARI$DateTimeAK < as.POSIXct("2022-09-05 07:30:00", tz="America/Anchorage"),]
CARI_storm6_08_15_Q = subset(CARI_storm6_08_15, select = c("DateTimeAK","Discharge"))
names(CARI_storm6_08_15_Q) = c("valuedatetime","datavalue")
CARI_storm6_08_15_NO3 = subset(CARI_storm6_08_15, select = c("DateTimeAK","NO3"))
names(CARI_storm6_08_15_NO3) = c("valuedatetime","datavalue")
CARI_storm6_08_15_fDOM = subset(CARI_storm6_08_15, select = c("DateTimeAK","fDOM"))
names(CARI_storm6_08_15_fDOM) = c("valuedatetime","datavalue")
CARI_storm6_08_15_SPC = subset(CARI_storm6_08_15, select = c("DateTimeAK","SPC"))
names(CARI_storm6_08_15_SPC) = c("valuedatetime","datavalue")
CARI_storm6_08_15_turb = subset(CARI_storm6_08_15, select = c("DateTimeAK","Turb"))
names(CARI_storm6_08_15_turb) = c("valuedatetime","datavalue")
CARI_storm7_08_18_Q = subset(CARI_storm7_08_18, select = c("DateTimeAK","Discharge"))
names(CARI_storm7_08_18_Q) = c("valuedatetime","datavalue")
CARI_storm7_08_18_NO3 = subset(CARI_storm7_08_18, select = c("DateTimeAK","NO3"))
names(CARI_storm7_08_18_NO3) = c("valuedatetime","datavalue")
CARI_storm7_08_18_fDOM = subset(CARI_storm7_08_18, select = c("DateTimeAK","fDOM"))
names(CARI_storm7_08_18_fDOM) = c("valuedatetime","datavalue")
CARI_storm7_08_18_SPC = subset(CARI_storm7_08_18, select = c("DateTimeAK","SPC"))
names(CARI_storm7_08_18_SPC) = c("valuedatetime","datavalue")
CARI_storm7_08_18_turb = subset(CARI_storm7_08_18, select = c("DateTimeAK","Turb"))
names(CARI_storm7_08_18_turb) = c("valuedatetime","datavalue")
CARI_storm8_09_04_Q = subset(CARI_storm8_09_04, select = c("DateTimeAK","Discharge"))
names(CARI_storm8_09_04_Q) = c("valuedatetime","datavalue")
CARI_storm8_09_04_NO3 = subset(CARI_storm8_09_04, select = c("DateTimeAK","NO3"))
names(CARI_storm8_09_04_NO3) = c("valuedatetime","datavalue")
CARI_storm8_09_04_fDOM = subset(CARI_storm8_09_04, select = c("DateTimeAK","fDOM"))
names(CARI_storm8_09_04_fDOM) = c("valuedatetime","datavalue")
CARI_storm8_09_04_SPC = subset(CARI_storm8_09_04, select = c("DateTimeAK","SPC"))
names(CARI_storm8_09_04_SPC) = c("valuedatetime","datavalue")
CARI_storm8_09_04_turb = subset(CARI_storm8_09_04, select = c("DateTimeAK","Turb"))
names(CARI_storm8_09_04_turb) = c("valuedatetime","datavalue")
write.csv(CARI_storm1_07_15, here("Storm_Events", "2022", "CARI", "CARI_storm1_07_15.csv"))
write.csv(CARI_storm1_07_15_Q, here("Storm_Events", "2022", "CARI", "CARI_storm1_07_15_Q.csv"))
write.csv(CARI_storm1_07_15_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm1_07_15_NO3.csv"))
write.csv(CARI_storm1_07_15_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm1_07_15_fDOM.csv"))
write.csv(CARI_storm1_07_15_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm1_07_15_SPC.csv"))
write.csv(CARI_storm1_07_15_turb, here("Storm_Events", "2022", "CARI", "CARI_storm1_07_15_turb.csv"))
write.csv(CARI_storm2_07_19, here("Storm_Events", "2022", "CARI", "CARI_storm2_07_19.csv"))
write.csv(CARI_storm2_07_19_Q, here("Storm_Events", "2022", "CARI", "CARI_storm2_07_19_Q.csv"))
write.csv(CARI_storm2_07_19_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm2_07_19_NO3.csv"))
write.csv(CARI_storm2_07_19_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm2_07_19_fDOM.csv"))
write.csv(CARI_storm2_07_19_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm2_07_19_SPC.csv"))
write.csv(CARI_storm2_07_19_turb, here("Storm_Events", "2022", "CARI", "CARI_storm2_07_19_turb.csv"))
write.csv(CARI_storm3_08_01, here("Storm_Events", "2022", "CARI", "CARI_storm3_08_01.csv"))
write.csv(CARI_storm3_08_01_Q, here("Storm_Events", "2022", "CARI", "CARI_storm3_08_01_Q.csv"))
write.csv(CARI_storm3_08_01_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm3_08_01_NO3.csv"))
write.csv(CARI_storm3_08_01_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm3_08_01_fDOM.csv"))
write.csv(CARI_storm3_08_01_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm3_08_01_SPC.csv"))
write.csv(CARI_storm3_08_01_turb, here("Storm_Events", "2022", "CARI", "CARI_storm3_08_01_turb.csv"))
write.csv(CARI_storm4a_08_05, here("Storm_Events", "2022", "CARI", "CARI_storm4a_08_05.csv"))
write.csv(CARI_storm4a_08_05_Q, here("Storm_Events", "2022", "CARI", "CARI_storm4a_08_05_Q.csv"))
write.csv(CARI_storm4a_08_05_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm4a_08_05_NO3.csv"))
write.csv(CARI_storm4a_08_05_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm4a_08_05_fDOM.csv"))
write.csv(CARI_storm4a_08_05_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm4a_08_05_SPC.csv"))
write.csv(CARI_storm4a_08_05_turb, here("Storm_Events", "2022", "CARI", "CARI_storm4a_08_05_turb.csv"))
write.csv(CARI_storm4b_08_06, here("Storm_Events", "2022", "CARI", "CARI_storm4b_08_06.csv"))
write.csv(CARI_storm4b_08_06_Q, here("Storm_Events", "2022", "CARI", "CARI_storm4b_08_06_Q.csv"))
write.csv(CARI_storm4b_08_06_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm4b_08_06_NO3.csv"))
write.csv(CARI_storm4b_08_06_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm4b_08_06_fDOM.csv"))
write.csv(CARI_storm4b_08_06_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm4b_08_06_SPC.csv"))
write.csv(CARI_storm4b_08_06_turb, here("Storm_Events", "2022", "CARI", "CARI_storm4b_08_06_turb.csv"))
write.csv(CARI_storm5_08_08, here("Storm_Events", "2022", "CARI", "CARI_storm5_08_08.csv"))
write.csv(CARI_storm5_08_08_Q, here("Storm_Events", "2022", "CARI", "CARI_storm5_08_08_Q.csv"))
write.csv(CARI_storm5_08_08_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm5_08_08_NO3.csv"))
write.csv(CARI_storm5_08_08_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm5_08_08_fDOM.csv"))
write.csv(CARI_storm5_08_08_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm5_08_08_SPC.csv"))
write.csv(CARI_storm5_08_08_turb, here("Storm_Events", "2022", "CARI", "CARI_storm5_08_08_turb.csv"))
write.csv(CARI_storm6_08_15, here("Storm_Events", "2022", "CARI", "CARI_storm6_08_15.csv"))
write.csv(CARI_storm6_08_15_Q, here("Storm_Events", "2022", "CARI", "CARI_storm6_08_15_Q.csv"))
write.csv(CARI_storm6_08_15_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm6_08_15_NO3.csv"))
write.csv(CARI_storm6_08_15_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm6_08_15_fDOM.csv"))
write.csv(CARI_storm6_08_15_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm6_08_15_SPC.csv"))
write.csv(CARI_storm6_08_15_turb, here("Storm_Events", "2022", "CARI", "CARI_storm6_08_15_turb.csv"))
write.csv(CARI_storm7_08_18, here("Storm_Events", "2022", "CARI", "CARI_storm7_08_18.csv"))
write.csv(CARI_storm7_08_18_Q, here("Storm_Events", "2022", "CARI", "CARI_storm7_08_18_Q.csv"))
write.csv(CARI_storm7_08_18_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm7_08_18_NO3.csv"))
write.csv(CARI_storm7_08_18_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm7_08_18_fDOM.csv"))
write.csv(CARI_storm7_08_18_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm7_08_18_SPC.csv"))
write.csv(CARI_storm7_08_18_turb, here("Storm_Events", "2022", "CARI", "CARI_storm7_08_18_turb.csv"))
write.csv(CARI_storm8_09_04, here("Storm_Events", "2022", "CARI", "CARI_storm8_09_04.csv"))
write.csv(CARI_storm8_09_04_Q, here("Storm_Events", "2022", "CARI", "CARI_storm8_09_04_Q.csv"))
write.csv(CARI_storm8_09_04_NO3, here("Storm_Events", "2022", "CARI", "CARI_storm8_09_04_NO3.csv"))
write.csv(CARI_storm8_09_04_fDOM, here("Storm_Events", "2022", "CARI", "CARI_storm8_09_04_fDOM.csv"))
write.csv(CARI_storm8_09_04_SPC, here("Storm_Events", "2022", "CARI", "CARI_storm8_09_04_SPC.csv"))
write.csv(CARI_storm8_09_04_turb, here("Storm_Events", "2022", "CARI", "CARI_storm8_09_04_turb.csv"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(boot)
library(lubridate)
library(here)
Sys.which("python")
use_python("/usr/local/bin/python3")
options(tz="America/Anchorage")
# install pandas #
virtualenv_create("r-reticulate")
# RETICULATE_PYTHON = "lib/python3.8"
reticulate::py_config()
reticulate::py_install("pandas")
reticulate::repl_python()
