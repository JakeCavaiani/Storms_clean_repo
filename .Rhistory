(max(FRCH_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
FRCH_NO3_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_NO3_storm_list_beta, inner_join, by = "valuedatetime")
View(FRCH_NO3_storm)
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 454),
rep("storm6a", 1299),
rep("storm7", 240))
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 454),
rep("storm6a", 1295),
rep("storm7", 240))
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 454),
rep("storm6a", 1294),
rep("storm7", 240))
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 454),
rep("storm6a", 1294),
rep("storm7", 242))
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 453),
rep("storm6a", 1295),
rep("storm7", 242))
library(xfun)
library(bit)
library(vctrs)
library(tidyverse)
library(lubridate)
library(scales)
library(imputeTS)
library(TSA)
library(bbmle)
library(zoo)
library(xts)
library(forecast)
library(stats)
library(lattice)
library(nlme)
library(geosphere)
library(car)
library(readr)
library(googledrive)
library(purrr)
library(here)
Q.daily.2015 <- read.csv(here("processed_sensor_data", "2015", "Q.daily.2015.csv"))
Q.2015 <- read.csv(here("processed_sensor_data", "2015", "Predicted_Q_2015.csv"))
Q.2015 <- Q.2015[c("Site", "DateTimeAK", "Q")]
names(Q.2015) <- c("site.ID", "datetimeAK", "Q") # renaming the column headers to match that of the chem file
Q.2015$datetimeAK <- ymd_hms(Q.2015$datetimeAK) # converting character to datetime
Q.2015$datetimeAK <- force_tz(Q.2015$datetimeAK, "America/Anchorage") # converting character to datetime
## Chems data input
chem.2015 <- read.csv(here("processed_sensor_data", "2015", "SUNA.EXO.int.corr.lab_2015.csv"), na.strings = "NA")
chem.2015 <- chem.2015[c("datetimeAK", "Site", "fDOM.QSU.T.turb.col", "SpCond.uScm.adj",
"Turbidity.FNU.adj", "nitrateuM.mn.lab", "abs254.adj.mn")]
chem.2015$datetimeAK <- ymd_hms(chem.2015$datetimeAK) # converting character to datetime
chem.2015$datetimeAK <- force_tz(chem.2015$datetimeAK, "America/Anchorage") # converting character to datetime
names(chem.2015) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "ABS_254")
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ####
# I am looking for a complete time series, looking at gaps in the data and seeing if there are any
# really variable chemistry points.
# pivot long to get all the response variables in one column
chem_2015_long <- chem.2015 %>%
filter(site.ID %in% c("FRCH", "MOOS")) %>%
pivot_longer(
cols = fDOM:ABS_254,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
) # converting to a long format so each response_var is within a single column
FRCH.2015 <-  subset(chem.2015, site.ID == "FRCH")
FRCH.2015 <- FRCH.2015[-c(12519:12849), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
MOOS.2015 <-  subset(chem.2015, site.ID == "MOOS")
MOOS.2015 <- MOOS.2015[-c(12540:12796), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
DOD.2015 <- rbind(FRCH.2015, MOOS.2015)
DOD.2015 <- full_join(DOD.2015, Q.2015, by = c("site.ID", "datetimeAK")) # merging chem and discharge data
## TKH: Need some annotation here. Q was joined to chems in the previous line. What are these additional steps?
frch.final.discharge.2015 <- subset(Q.2015, site.ID == "FRCH")
moos.final.discharge.2015 <- subset(Q.2015, site.ID == "MOOS")
Q.2015$day = format(as.POSIXct(Q.2015$datetimeAK,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q.2015$day = as.POSIXct(Q.2015$day, "%Y-%m-%d", tz="America/Anchorage")
Q.daily.2015 = with(Q.2015, tapply(Q, list(day, site.ID), mean))
Q.daily.2015 = as.data.frame(Q.daily.2015)
FRCH.Q.2015 = as.data.frame(Q.daily.2015$FRCH)
FRCH.Q.2015$day = as.Date(rownames(Q.daily.2015))
names(FRCH.Q.2015) = c("Discharge_Lsec", "day")
MOOS.Q.2015 = as.data.frame(Q.daily.2015$MOOS)
MOOS.Q.2015$day = as.Date(rownames(Q.daily.2015))
names(MOOS.Q.2015) = c("Discharge_Lsec", "day")
FRCH = full_join(FRCH.2015, frch.final.discharge.2015)
# MOOS #
MOOS = full_join(MOOS.2015, moos.final.discharge.2015)
# Baseflow Separation #
any(is.na(FRCH.Q.2015$day))
any(is.na(FRCH.Q.2015$Discharge_Lsec))
FRCH.Q.2015 <- na.omit(FRCH.Q.2015)
any(is.na(MOOS.Q.2015$day))
any(is.na(MOOS.Q.2015$Discharge_Lsec))
MOOS.Q.2015 <- na.omit(MOOS.Q.2015) # Removed 3 rows - (126 to 123)
CPCRW <- read_csv(here("Climate", "Precip", "CPCRW.RainGauge.2015.final.csv"))
CPCRW$datetimeAK <- force_tz(CPCRW$datetimeAK, "America/Anchorage") # it already is in AK time so I want to make it recognize it without changing the actually time value
frch.precip.discharge <- full_join(frch.final.discharge.2015, CPCRW) # merging precip data and discharge
moos.precip.discharge <- full_join(moos.final.discharge.2015, CPCRW) # merging precip data and discharge
frch.precip.discharge <- frch.precip.discharge[order(frch.precip.discharge$datetimeAK),]
moos.precip.discharge <- moos.precip.discharge[order(moos.precip.discharge$datetimeAK),]
# making a uniform time series with 30 minute intervals and then I can sum precip by 24/48hour windows
# This step is to make a normalized data frame that has 30 minute intervals without any gaps
# so when I sum up by 24 and 48 hours I am getting the correct values for the sums
ts <- seq(as.POSIXct("2015-05-01", tz = "America/Anchorage"),
as.POSIXct("2015-11-01", tz = "America/Anchorage"),
by = "60 min")
head(ts)
ts <- as.data.frame(ts)
names(ts) <- c("datetimeAK")
frch.precip.discharge <- left_join(ts, frch.precip.discharge, by = "datetimeAK")
### Sum daily discharge ###
frch.precip.discharge$twentyfour <- rollapplyr(frch.precip.discharge$mean, 24, sum, na.rm = TRUE, fill = NA, partial = TRUE)
frch.precip.discharge$fourtyeight <- rollapplyr(frch.precip.discharge$mean, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
moos.precip.discharge$twentyfour <- rollapplyr(moos.precip.discharge$mean, 24, sum, na.rm = TRUE, fill = NA, partial = TRUE)
moos.precip.discharge$fourtyeight <- rollapplyr(moos.precip.discharge$mean, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
moos.five.twenty.four <- moos.precip.discharge[which(moos.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
moos.five.fourty.eight <- moos.precip.discharge[which(moos.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
frch.five.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
frch.five.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
# Greater than 10 #
moos.ten.twenty.four <- moos.precip.discharge[which(moos.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
moos.ten.fourty.eight <- moos.precip.discharge[which(moos.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
frch.ten.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
frch.ten.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
# MOOS #
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(15,0),
axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(moos.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(moos.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(15,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(moos.final.discharge.2015$Q ~ moos.final.discharge.2015$datetimeAK, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2015$NO3 * 20 ~ MOOS.2015$datetimeAK, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2015$fDOM * 20 ~ MOOS.2015$datetimeAK, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2015$SPC * 20 ~ MOOS.2015$datetimeAK, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2015$Turb * 20 ~ MOOS.2015$datetimeAK, type="l", xlab="", ylab="", col="blue",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
# storm 1 #
plot(MOOS$Q ~ MOOS$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-07-01 00:00:00","2015-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 5000))
plot(MOOS$Q ~ MOOS$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-07-01 00:00:00","2015-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 5000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-07-01 00:00:00","2015-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-07-01 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-07-05 23:30:00", tz="America/Anchorage"), col="purple")
MOOS_storm1_07_01 = MOOS[MOOS$datetimeAK > as.POSIXct("2015-07-01 23:30:00", tz="America/Anchorage") &
MOOS$datetimeAK < as.POSIXct("2015-07-05 23:30:00", tz="America/Anchorage"),]
plot(MOOS$Q ~ MOOS$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-07-15 00:00:00","2015-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 5000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-07-15 00:00:00","2015-07-31 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-07-18 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-07-24 23:30:00", tz="America/Anchorage"), col="purple")
MOOS_storm2_07_18 = MOOS[MOOS$datetimeAK > as.POSIXct("2015-07-18 23:30:00", tz="America/Anchorage") &
MOOS$datetimeAK < as.POSIXct("2015-07-24 23:30:00", tz="America/Anchorage"),]
plot(MOOS$Q ~ MOOS$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-07-25 00:00:00","2015-08-05 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 6500))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-07-25 00:00:00","2015-08-05 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-07-27 05:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-07-28 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-08-02 14:30:00", tz="America/Anchorage"), col="purple")
MOOS_storm3a_07_27 = MOOS[MOOS$datetimeAK > as.POSIXct("2015-07-27 05:30:00", tz="America/Anchorage") &
MOOS$datetimeAK < as.POSIXct("2015-08-02 14:30:00", tz="America/Anchorage"),]
plot(MOOS_storm3a_07_27$Q ~ as.POSIXct(MOOS_storm3a_07_27$datetimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(0,6500), col="blue", main="MOOS 150727 storm 3a",
xlim = as.POSIXct(c("2015-07-25 00:00:00","2015-07-29 23:45:00"), tz="America/Anchorage"))
plot(MOOS$Q ~ MOOS$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 3000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-08-16 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-08-18 14:30:00", tz="America/Anchorage"), col="purple")
MOOS_storm4_08_16 = MOOS[MOOS$datetimeAK > as.POSIXct("2015-08-16 14:30:00", tz="America/Anchorage") &
MOOS$datetimeAK < as.POSIXct("2015-08-18 14:30:00", tz="America/Anchorage"),]
plot(MOOS_storm4_08_16$Q ~ as.POSIXct(MOOS_storm4_08_16$datetimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(0,2500), col="blue", main="MOOS 150816 storm 4",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-19 23:45:00"), tz="America/Anchorage"))
plot(MOOS$Q ~ MOOS$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 15000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-08-25 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-08-30 14:30:00", tz="America/Anchorage"), col="purple")
MOOS_storm5_08_25 = MOOS[MOOS$datetimeAK > as.POSIXct("2015-08-25 20:30:00", tz="America/Anchorage") &
MOOS$datetimeAK < as.POSIXct("2015-08-30 14:30:00", tz="America/Anchorage"),]
MOOS_storm4_08_16 = MOOS[MOOS$datetimeAK > as.POSIXct("2015-08-16 14:30:00", tz="America/Anchorage") &
MOOS$datetimeAK < as.POSIXct("2015-08-18 14:30:00", tz="America/Anchorage"),]
plot(MOOS$Q ~ MOOS$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-09-15 00:00:00","2015-09-30 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 6000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-09-15 00:00:00","2015-09-30 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-09-14 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-09-16 14:30:00", tz="America/Anchorage"), col="purple")
MOOS_storm6_09_14 = MOOS[MOOS$datetimeAK > as.POSIXct("2015-09-14 18:30:00", tz="America/Anchorage") &
MOOS$datetimeAK < as.POSIXct("2015-09-16 14:30:00", tz="America/Anchorage"),]
MOOS_storm1_07_01_Q = subset(MOOS_storm1_07_01, select = c("datetimeAK","Q"))
names(MOOS_storm1_07_01_Q) = c("valuedatetime","datavalue")
MOOS_storm1_07_01_NO3 = subset(MOOS_storm1_07_01, select = c("datetimeAK","NO3"))
names(MOOS_storm1_07_01_NO3) = c("valuedatetime","datavalue")
MOOS_storm1_07_01_fDOM = subset(MOOS_storm1_07_01, select = c("datetimeAK","fDOM"))
names(MOOS_storm1_07_01_fDOM) = c("valuedatetime","datavalue")
MOOS_storm1_07_01_SPC = subset(MOOS_storm1_07_01, select = c("datetimeAK","SPC"))
names(MOOS_storm1_07_01_SPC) = c("valuedatetime","datavalue")
MOOS_storm1_07_01_turb = subset(MOOS_storm1_07_01, select = c("datetimeAK","Turb"))
names(MOOS_storm1_07_01_turb) = c("valuedatetime","datavalue")
MOOS_storm1_07_01_abs = subset(MOOS_storm1_07_01, select = c("datetimeAK","ABS_254"))
names(MOOS_storm1_07_01_abs) = c("valuedatetime","datavalue")
MOOS_storm2_07_18_Q = subset(MOOS_storm2_07_18, select = c("datetimeAK","Q"))
names(MOOS_storm2_07_18_Q) = c("valuedatetime","datavalue")
MOOS_storm2_07_18_NO3 = subset(MOOS_storm2_07_18, select = c("datetimeAK","NO3"))
names(MOOS_storm2_07_18_NO3) = c("valuedatetime","datavalue")
MOOS_storm2_07_18_fDOM = subset(MOOS_storm2_07_18, select = c("datetimeAK","fDOM"))
names(MOOS_storm2_07_18_fDOM) = c("valuedatetime","datavalue")
MOOS_storm2_07_18_SPC = subset(MOOS_storm2_07_18, select = c("datetimeAK","SPC"))
names(MOOS_storm2_07_18_SPC) = c("valuedatetime","datavalue")
MOOS_storm2_07_18_turb = subset(MOOS_storm2_07_18, select = c("datetimeAK","Turb"))
names(MOOS_storm2_07_18_turb) = c("valuedatetime","datavalue")
MOOS_storm2_07_18_abs = subset(MOOS_storm2_07_18, select = c("datetimeAK","ABS_254"))
names(MOOS_storm2_07_18_abs) = c("valuedatetime","datavalue")
MOOS_storm3a_07_27_Q = subset(MOOS_storm3a_07_27, select = c("datetimeAK","Q"))
names(MOOS_storm3a_07_27_Q) = c("valuedatetime","datavalue")
MOOS_storm3a_07_27_NO3 = subset(MOOS_storm3a_07_27, select = c("datetimeAK","NO3"))
names(MOOS_storm3a_07_27_NO3) = c("valuedatetime","datavalue")
MOOS_storm3a_07_27_fDOM = subset(MOOS_storm3a_07_27, select = c("datetimeAK","fDOM"))
names(MOOS_storm3a_07_27_fDOM) = c("valuedatetime","datavalue")
MOOS_storm3a_07_27_SPC = subset(MOOS_storm3a_07_27, select = c("datetimeAK","SPC"))
names(MOOS_storm3a_07_27_SPC) = c("valuedatetime","datavalue")
MOOS_storm3a_07_27_turb = subset(MOOS_storm3a_07_27, select = c("datetimeAK","Turb"))
names(MOOS_storm3a_07_27_turb) = c("valuedatetime","datavalue")
MOOS_storm3a_07_27_abs = subset(MOOS_storm3a_07_27, select = c("datetimeAK","ABS_254"))
names(MOOS_storm3a_07_27_abs) = c("valuedatetime","datavalue")
MOOS_storm4_08_16_Q = subset(MOOS_storm4_08_16, select = c("datetimeAK","Q"))
names(MOOS_storm4_08_16_Q) = c("valuedatetime","datavalue")
MOOS_storm4_08_16_NO3 = subset(MOOS_storm4_08_16, select = c("datetimeAK","NO3"))
names(MOOS_storm4_08_16_NO3) = c("valuedatetime","datavalue")
MOOS_storm4_08_16_fDOM = subset(MOOS_storm4_08_16, select = c("datetimeAK","fDOM"))
names(MOOS_storm4_08_16_fDOM) = c("valuedatetime","datavalue")
MOOS_storm4_08_16_SPC = subset(MOOS_storm4_08_16, select = c("datetimeAK","SPC"))
names(MOOS_storm4_08_16_SPC) = c("valuedatetime","datavalue")
MOOS_storm4_08_16_turb = subset(MOOS_storm4_08_16, select = c("datetimeAK","Turb"))
names(MOOS_storm4_08_16_turb) = c("valuedatetime","datavalue")
MOOS_storm4_08_16_abs = subset(MOOS_storm4_08_16, select = c("datetimeAK","ABS_254"))
names(MOOS_storm4_08_16_abs) = c("valuedatetime","datavalue")
MOOS_storm5_08_25_Q = subset(MOOS_storm5_08_25, select = c("datetimeAK","Q"))
names(MOOS_storm5_08_25_Q) = c("valuedatetime","datavalue")
MOOS_storm5_08_25_NO3 = subset(MOOS_storm5_08_25, select = c("datetimeAK","NO3"))
names(MOOS_storm5_08_25_NO3) = c("valuedatetime","datavalue")
MOOS_storm5_08_25_fDOM = subset(MOOS_storm5_08_25, select = c("datetimeAK","fDOM"))
names(MOOS_storm5_08_25_fDOM) = c("valuedatetime","datavalue")
MOOS_storm5_08_25_SPC = subset(MOOS_storm5_08_25, select = c("datetimeAK","SPC"))
names(MOOS_storm5_08_25_SPC) = c("valuedatetime","datavalue")
MOOS_storm5_08_25_turb = subset(MOOS_storm5_08_25, select = c("datetimeAK","Turb"))
names(MOOS_storm5_08_25_turb) = c("valuedatetime","datavalue")
MOOS_storm5_08_25_abs = subset(MOOS_storm5_08_25, select = c("datetimeAK","ABS_254"))
names(MOOS_storm5_08_25_abs) = c("valuedatetime","datavalue")
MOOS_storm6_09_14_Q = subset(MOOS_storm6_09_14, select = c("datetimeAK","Q"))
names(MOOS_storm6_09_14_Q) = c("valuedatetime","datavalue")
MOOS_storm6_09_14_NO3 = subset(MOOS_storm6_09_14, select = c("datetimeAK","NO3"))
names(MOOS_storm6_09_14_NO3) = c("valuedatetime","datavalue")
MOOS_storm6_09_14_fDOM = subset(MOOS_storm6_09_14, select = c("datetimeAK","fDOM"))
names(MOOS_storm6_09_14_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6_09_14_SPC = subset(MOOS_storm6_09_14, select = c("datetimeAK","SPC"))
names(MOOS_storm6_09_14_SPC) = c("valuedatetime","datavalue")
MOOS_storm6_09_14_turb = subset(MOOS_storm6_09_14, select = c("datetimeAK","Turb"))
names(MOOS_storm6_09_14_turb) = c("valuedatetime","datavalue")
MOOS_storm6_09_14_abs = subset(MOOS_storm6_09_14, select = c("datetimeAK","ABS_254"))
names(MOOS_storm6_09_14_abs) = c("valuedatetime","datavalue")
write.csv(MOOS_storm1_07_01, here("Storm_Events", "2015", "MOOS", "MOOS_storm1_07_01.csv"))
write.csv(MOOS_storm1_07_01_Q, here("Storm_Events", "2015", "MOOS", "MOOS_storm1_07_01_Q.csv"))
write.csv(MOOS_storm1_07_01_NO3, here("Storm_Events", "2015", "MOOS", "MOOS_storm1_07_01_NO3.csv"))
write.csv(MOOS_storm1_07_01_fDOM, here("Storm_Events", "2015", "MOOS", "MOOS_storm1_07_01_fDOM.csv"))
write.csv(MOOS_storm1_07_01_SPC, here("Storm_Events", "2015", "MOOS", "MOOS_storm1_07_01_SPC.csv"))
write.csv(MOOS_storm1_07_01_turb, here("Storm_Events", "2015", "MOOS", "MOOS_storm1_07_01_turb.csv"))
write.csv(MOOS_storm1_07_01_abs, here("Storm_Events", "2015", "MOOS", "MOOS_storm1_07_01_abs.csv"))
write.csv(MOOS_storm2_07_18, here("Storm_Events", "2015", "MOOS", "MOOS_storm2_07_18.csv"))
write.csv(MOOS_storm2_07_18_Q, here("Storm_Events", "2015", "MOOS", "MOOS_storm2_07_18_Q.csv"))
write.csv(MOOS_storm2_07_18_NO3, here("Storm_Events", "2015", "MOOS", "MOOS_storm2_07_18_NO3.csv"))
write.csv(MOOS_storm2_07_18_fDOM, here("Storm_Events", "2015", "MOOS", "MOOS_storm2_07_18_fDOM.csv"))
write.csv(MOOS_storm2_07_18_SPC, here("Storm_Events", "2015", "MOOS", "MOOS_storm2_07_18_SPC.csv"))
write.csv(MOOS_storm2_07_18_turb, here("Storm_Events", "2015", "MOOS", "MOOS_storm2_07_18_turb.csv"))
write.csv(MOOS_storm2_07_18_abs, here("Storm_Events", "2015", "MOOS", "MOOS_storm2_07_18_abs.csv"))
write.csv(MOOS_storm3a_07_27, here("Storm_Events", "2015", "MOOS", "MOOS_storm3a_07_27.csv"))
write.csv(MOOS_storm3a_07_27_Q, here("Storm_Events", "2015", "MOOS", "MOOS_storm3a_07_27_Q.csv"))
write.csv(MOOS_storm3a_07_27_NO3, here("Storm_Events", "2015", "MOOS", "MOOS_storm3a_07_27_NO3.csv"))
write.csv(MOOS_storm3a_07_27_fDOM, here("Storm_Events", "2015", "MOOS", "MOOS_storm3a_07_27_fDOM.csv"))
write.csv(MOOS_storm3a_07_27_SPC, here("Storm_Events", "2015", "MOOS", "MOOS_storm3a_07_27_SPC.csv"))
write.csv(MOOS_storm3a_07_27_turb, here("Storm_Events", "2015", "MOOS", "MOOS_storm3a_07_27_turb.csv"))
write.csv(MOOS_storm3a_07_27_abs, here("Storm_Events", "2015", "MOOS", "MOOS_storm3a_07_27_abs.csv"))
write.csv(MOOS_storm4_08_16, here("Storm_Events", "2015", "MOOS", "MOOS_storm4_08_16.csv"))
write.csv(MOOS_storm4_08_16_Q, here("Storm_Events", "2015", "MOOS", "MOOS_storm4_08_16_Q.csv"))
write.csv(MOOS_storm4_08_16_NO3, here("Storm_Events", "2015", "MOOS", "MOOS_storm4_08_16_NO3.csv"))
write.csv(MOOS_storm4_08_16_fDOM, here("Storm_Events", "2015", "MOOS", "MOOS_storm4_08_16_fDOM.csv"))
write.csv(MOOS_storm4_08_16_SPC, here("Storm_Events", "2015", "MOOS", "MOOS_storm4_08_16_SPC.csv"))
write.csv(MOOS_storm4_08_16_turb, here("Storm_Events", "2015", "MOOS", "MOOS_storm4_08_16_turb.csv"))
write.csv(MOOS_storm4_08_16_abs, here("Storm_Events", "2015", "MOOS", "MOOS_storm4_08_16_abs.csv"))
write.csv(MOOS_storm5_08_25, here("Storm_Events", "2015", "MOOS", "MOOS_storm5_08_25.csv"))
write.csv(MOOS_storm5_08_25_Q, here("Storm_Events", "2015", "MOOS", "MOOS_storm5_08_25_Q.csv"))
write.csv(MOOS_storm5_08_25_NO3, here("Storm_Events", "2015", "MOOS", "MOOS_storm5_08_25_NO3.csv"))
write.csv(MOOS_storm5_08_25_fDOM, here("Storm_Events", "2015", "MOOS", "MOOS_storm5_08_25_fDOM.csv"))
write.csv(MOOS_storm5_08_25_NO3, here("Storm_Events", "2015", "MOOS", "MOOS_storm5_08_25_SPC.csv"))
write.csv(MOOS_storm5_08_25_turb, here("Storm_Events", "2015", "MOOS", "MOOS_storm5_08_25_turb.csv"))
write.csv(MOOS_storm5_08_25_abs, here("Storm_Events", "2015", "MOOS", "MOOS_storm5_08_25_abs.csv"))
write.csv(MOOS_storm6_09_14, here("Storm_Events", "2015", "MOOS", "MOOS_storm6_09_14.csv"))
write.csv(MOOS_storm6_09_14_Q, here("Storm_Events", "2015", "MOOS", "MOOS_storm6_09_14_Q.csv"))
write.csv(MOOS_storm6_09_14_NO3, here("Storm_Events", "2015", "MOOS", "MOOS_storm6_09_14_NO3.csv"))
write.csv(MOOS_storm6_09_14_fDOM, here("Storm_Events", "2015", "MOOS", "MOOS_storm6_09_14_fDOM.csv"))
write.csv(MOOS_storm6_09_14_SPC, here("Storm_Events", "2015", "MOOS", "MOOS_storm6_09_14_SPC.csv"))
write.csv(MOOS_storm6_09_14_turb, here("Storm_Events", "2015", "MOOS", "MOOS_storm6_09_14_turb.csv"))
write.csv(MOOS_storm6_09_14_abs, here("Storm_Events", "2015", "MOOS", "MOOS_storm6_09_14_abs.csv"))
library(dataRetrieval)
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(RColorBrewer)
library(gridExtra)
library(here)
library(tidyverse)
library(zoo)
# MOOS_storm1_07_01 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm1_07_01.csv"))
MOOS_storm1_07_01_Q <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm1_07_01_Q.csv"))
MOOS_storm1_07_01_NO3 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm1_07_01_NO3.csv"))
MOOS_storm1_07_01_fDOM <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm1_07_01_fDOM.csv"))
MOOS_storm1_07_01_SPC <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm1_07_01_SPC.csv"))
MOOS_storm1_07_01_Turb <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm1_07_01_turb.csv"))
MOOS_storm1_07_01_abs <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm1_07_01_abs.csv"))
# MOOS_storm1_07_18 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm2_07_18.csv"))
MOOS_storm2_07_18_Q <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm2_07_18_Q.csv"))
MOOS_storm2_07_18_NO3 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm2_07_18_NO3.csv"))
MOOS_storm2_07_18_fDOM <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm2_07_18_fDOM.csv"))
MOOS_storm2_07_18_SPC <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm2_07_18_SPC.csv"))
MOOS_storm2_07_18_Turb <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm2_07_18_turb.csv"))
MOOS_storm2_07_18_abs <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm2_07_18_abs.csv"))
# MOOS_storm3a_07_27 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm3a_07_27.csv"))
MOOS_storm3a_07_27_Q <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm3a_07_27_Q.csv"))
MOOS_storm3a_07_27_NO3 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm3a_07_27_NO3.csv"))
MOOS_storm3a_07_27_fDOM <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm3a_07_27_fDOM.csv"))
MOOS_storm3a_07_27_SPC <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm3a_07_27_SPC.csv"))
MOOS_storm3a_07_27_Turb <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm3a_07_27_turb.csv"))
MOOS_storm3a_07_27_abs <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm3a_07_27_abs.csv"))
# MOOS_storm4_08_16 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm4_08_16.csv"))
MOOS_storm4_08_16_Q <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm4_08_16_Q.csv"))
MOOS_storm4_08_16_NO3 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm4_08_16_NO3.csv"))
MOOS_storm4_08_16_fDOM <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm4_08_16_fDOM.csv"))
MOOS_storm4_08_16_SPC <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm4_08_16_SPC.csv"))
MOOS_storm4_08_16_Turb <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm4_08_16_turb.csv"))
MOOS_storm4_08_16_abs <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm4_08_16_abs.csv"))
# MOOS_storm5_08_25 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm5_08_25_csv"))
MOOS_storm5_08_25_Q <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm5_08_25_Q.csv"))
MOOS_storm5_08_25_NO3 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm5_08_25_NO3.csv"))
MOOS_storm5_08_25_fDOM <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm5_08_25_fDOM.csv"))
MOOS_storm5_08_25_SPC <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm5_08_25_SPC.csv"))
MOOS_storm5_08_25_Turb <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm5_08_25_turb.csv"))
MOOS_storm5_08_25_abs <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm5_08_25_abs.csv"))
# MOOS_storm6_09_14 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm6_09_14_csv"))
MOOS_storm6_09_14_Q <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm6_09_14_Q.csv"))
MOOS_storm6_09_14_NO3 <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm6_09_14_NO3.csv"))
MOOS_storm6_09_14_fDOM <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm6_09_14_fDOM.csv"))
MOOS_storm6_09_14_SPC <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm6_09_14_SPC.csv"))
MOOS_storm6_09_14_Turb <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm6_09_14_turb.csv"))
MOOS_storm6_09_14_abs <- read_csv(here("Storm_events", "2015", "MOOS", "MOOS_storm6_09_14_abs.csv"))
# normalize
dfList <- Filter(function(x) is(x, "data.frame"), mget(ls()))
for(i in 1:length(dfList)) {
dfList[[i]][["datavalue"]] =
(dfList[[i]][["datavalue"]] - min(dfList[[i]][["datavalue"]], na.rm=T)) / (max(dfList[[i]][["datavalue"]], na.rm=T) - min(dfList[[i]][["datavalue"]], na.rm=T))
}
list2env(dfList ,.GlobalEnv)
#fxn: plot hysteresis loop #
hyst_plot = function(dat_Q, dat_response, site, response_var, storm_num) {
dat.p = ggplot(data = dat_Q,
aes(x=(dat_Q$datavalue),
y=(dat_response$datavalue),
color = as.numeric(dat_Q$valuedatetime))) +
geom_point() +
scale_colour_gradientn(colors = rainbow(3)) +
theme_bw() +
theme(legend.position="none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
ylab(paste(site, response_var))+
xlab("Normalized Discharge") +
ggtitle(paste("Storm", storm_num))
return(dat.p)
}
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(boot)
library(lubridate)
library(here)
Sys.which("python")
use_python("/usr/local/bin/python3")
options(tz="America/Anchorage")
# install pandas #
virtualenv_create("r-reticulate")
# RETICULATE_PYTHON = "lib/python3.8"
reticulate::py_config()
reticulate::py_install("pandas")
reticulate::repl_python()
