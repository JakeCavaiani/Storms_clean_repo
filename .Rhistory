HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "turb")
HI.mean.precip.moos.abs <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "abs")
HI.moos.no3.2018 <- left_join(HI.mean.precip.moos.NO3, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.no3.2018 <- left_join(HI.moos.no3.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.no3.2018 <- left_join(HI.moos.no3.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.no3.2018 <- left_join(HI.moos.no3.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.no3.2018 <- left_join(HI.moos.no3.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.no3 <- lm(HI.moos.no3.2018$HI ~ HI.moos.no3.2018$precip) # model one with just total precip
moos.lm.no3.2 <- lm(HI.moos.no3.2018$HI ~ HI.moos.no3.2018$precip.week) # model one with just total precip
moos.lm.no3.3 <- lm(HI.moos.no3.2018$HI ~ HI.moos.no3.2018$precip.month) # model one with just total precip
moos.lm.no3.4 <- lm(HI.moos.no3.2018$HI ~ HI.moos.no3.2018$ThreeMonth) # model one with just total precip
moos.formula <- y ~ x
aa <- HI.moos.no3.2018 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS NO3") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
ab <- HI.moos.no3.2018 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS NO3") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
ac <- HI.moos.no3.2018 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS NO3") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
ad <- HI.moos.no3.2018 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS NO3") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
ad2 <- HI.moos.no3.2018 %>%
ggplot(aes(x=temp.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS NO3") +
xlab("temp.week") +
ylab("HI-Solute Storage") # plot model
ad2
HI.moos.fDOM.2018 <- left_join(HI.mean.precip.moos.fDOM, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.fDOM.2018 <- left_join(HI.moos.fDOM.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.fDOM.2018 <- left_join(HI.moos.fDOM.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.fDOM.2018 <- left_join(HI.moos.fDOM.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.fDOM.2018 <- left_join(HI.moos.fDOM.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.fDOM <- lm(HI.moos.fDOM.2018$HI ~ HI.moos.fDOM.2018$precip) # model one with just total precip
moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2018$HI ~ HI.moos.fDOM.2018$precip.week) # model one with just total precip
moos.lm.fDOM.3 <- lm(HI.moos.fDOM.2018$HI ~ HI.moos.fDOM.2018$precip.month) # model one with just total precip
moos.lm.fDOM.4 <- lm(HI.moos.fDOM.2018$HI ~ HI.moos.fDOM.2018$ThreeMonth) # model one with just total precip
moos.formula <- y ~ x
ae <- HI.moos.fDOM.2018 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
af <- HI.moos.fDOM.2018 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
ag <- HI.moos.fDOM.2018 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
ah <- HI.moos.fDOM.2018 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.moos.SPC.2018 <- left_join(HI.mean.precip.moos.SPC, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.SPC.2018 <- left_join(HI.moos.SPC.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.SPC.2018 <- left_join(HI.moos.SPC.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.SPC.2018 <- left_join(HI.moos.SPC.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.SPC.2018 <- left_join(HI.moos.SPC.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.SPC <- lm(HI.moos.SPC.2018$HI ~ HI.moos.SPC.2018$precip) # model one with just total precip
moos.lm.SPC.2 <- lm(HI.moos.SPC.2018$HI ~ HI.moos.SPC.2018$precip.week) # model one with just total precip
moos.lm.SPC.3 <- lm(HI.moos.SPC.2018$HI ~ HI.moos.SPC.2018$precip.month) # model one with just total precip
moos.lm.SPC.4 <- lm(HI.moos.SPC.2018$HI ~ HI.moos.SPC.2018$ThreeMonth) # model one with just total precip
moos.formula <- y ~ x
ai <- HI.moos.SPC.2018 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
aj <- HI.moos.SPC.2018 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
ak <- HI.moos.SPC.2018 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
al <- HI.moos.SPC.2018 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.moos.turb.2018 <- left_join(HI.mean.precip.moos.turb, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.turb.2018 <- left_join(HI.moos.turb.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.turb.2018 <- left_join(HI.moos.turb.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.turb.2018 <- left_join(HI.moos.turb.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.turb.2018 <- left_join(HI.moos.turb.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.turb <- lm(HI.moos.turb.2018$HI ~ HI.moos.turb.2018$precip) # model one with just total precip
moos.lm.turb.2 <- lm(HI.moos.turb.2018$HI ~ HI.moos.turb.2018$precip.week) # model one with just total precip
moos.lm.turb.3 <- lm(HI.moos.turb.2018$HI ~ HI.moos.turb.2018$precip.month) # model one with just total precip
moos.lm.turb.4 <- lm(HI.moos.turb.2018$HI ~ HI.moos.turb.2018$ThreeMonth) # model one with just total precip
moos.formula <- y ~ x
am <- HI.moos.turb.2018 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
an <- HI.moos.turb.2018 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
ao <- HI.moos.turb.2018 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
ap <- HI.moos.turb.2018 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
sum.time <- MOOS.2018.storms.1 %>%
mutate(grp=data.table::rleid(storm.num))%>%
group_by(grp) %>%
summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
min(DateTime),units="hour"))%>%
group_by(storm.num) %>%
summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column
HI.moos.no3.2.2018 <- left_join(HI.moos.no3.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.moos.no3.2.2018$TOTAL.TIME <- as.numeric(HI.moos.no3.2.2018$TOTAL.TIME)
HI.moos.no3.2.2018$Intensity <- HI.moos.no3.2.2018$precip/HI.moos.no3.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
moos.lm.no3.2 <- lm(HI.moos.no3.2.2018$HI ~ HI.moos.no3.2.2018$precip + HI.moos.no3.2.2018$Intensity) # model one with total precip and intensity
aq <- HI.moos.no3.2.2018 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS NO3") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.fDOM.2.2018 <- left_join(HI.moos.fDOM.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.moos.fDOM.2.2018$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2.2018$TOTAL.TIME)
HI.moos.fDOM.2.2018$Intensity <- HI.moos.fDOM.2.2018$precip/HI.moos.fDOM.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2.2018$HI ~ HI.moos.fDOM.2.2018$precip + HI.moos.fDOM.2.2018$Intensity) # model one with total precip and intensity
ar <- HI.moos.fDOM.2.2018 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.SPC.2.2018 <- left_join(HI.moos.SPC.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.moos.SPC.2.2018$TOTAL.TIME <- as.numeric(HI.moos.SPC.2.2018$TOTAL.TIME)
HI.moos.SPC.2.2018$Intensity <- HI.moos.SPC.2.2018$precip/HI.moos.SPC.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
moos.lm.SPC.2 <- lm(HI.moos.SPC.2.2018$HI ~ HI.moos.SPC.2.2018$precip + HI.moos.SPC.2.2018$Intensity) # model one with total precip and intensity
as <- HI.moos.SPC.2.2018 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.turb.2.2018 <- left_join(HI.moos.turb.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.moos.turb.2.2018$TOTAL.TIME <- as.numeric(HI.moos.turb.2.2018$TOTAL.TIME)
HI.moos.turb.2.2018$Intensity <- HI.moos.turb.2.2018$precip/HI.moos.turb.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
moos.lm.turb.2 <- lm(HI.moos.turb.2.2018$HI ~ HI.moos.turb.2.2018$precip + HI.moos.turb.2.2018$Intensity) # model one with total precip and intensity
at <- HI.moos.turb.2.2018 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
# day of year #
MOOS.2018.1$day <- julian(MOOS.2018.1$DateTime, origin = as.POSIXct('2018-01-01', tz = 'America/Anchorage')) # making a fractional day column
MOOS.2018.1$day <- as.numeric(MOOS.2018.1$day)
MOOS.2018.per.storm.5 <- MOOS.2018.1 %>% group_by(storm.num) %>%
summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
HI.moos.no3.2.2018 <- left_join(HI.moos.no3.2.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.no3.5 <- lm(HI.moos.no3.2.2018$HI ~ HI.moos.no3.2.2018$doy)
au <- HI.moos.no3.2.2018 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS NO3") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.fDOM.2.2018 <- left_join(HI.moos.fDOM.2.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.fDOM.5 <- lm(HI.moos.fDOM.2.2018$HI ~ HI.moos.fDOM.2.2018$doy)
av <- HI.moos.fDOM.2.2018 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS fDOM") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.SPC.2.2018 <- left_join(HI.moos.SPC.2.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.SPC.5 <- lm(HI.moos.SPC.2.2018$HI ~ HI.moos.SPC.2.2018$doy)
aw <- HI.moos.SPC.2.2018 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS SPC") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.moos.turb.2.2018 <- left_join(HI.moos.turb.2.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.turb.5 <- lm(HI.moos.turb.2.2018$HI ~ HI.moos.turb.2.2018$doy)
ax <- HI.moos.turb.2.2018 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("MOOS turb") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
# abs #
HI.moos.abs.2018 <- left_join(HI.mean.precip.moos.abs, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.abs.2018 <- left_join(HI.moos.abs.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.abs.2018 <- left_join(HI.moos.abs.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.abs.2018 <- left_join(HI.moos.abs.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.abs.2018 <- left_join(HI.moos.abs.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.abs <- lm(HI.moos.abs.2018$HI ~ HI.moos.abs.2018$precip) # model one with just total precip
moos.lm.abs.2 <- lm(HI.moos.abs.2018$HI ~ HI.moos.abs.2018$precip.week) # model one with just total precip
moos.lm.abs.3 <- lm(HI.moos.abs.2018$HI ~ HI.moos.abs.2018$precip.month) # model one with just total precip
moos.lm.abs.4 <- lm(HI.moos.abs.2018$HI ~ HI.moos.abs.2018$ThreeMonth) # model one with just total precip
moos.lm.abs.5 <- lm(HI.moos.abs.2018$HI ~ HI.moos.abs.2018$temp) # model one with just total precip
HI.moos.abs.2.2018 <- left_join(HI.moos.abs.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.moos.abs.2.2018$TOTAL.TIME <- as.numeric(HI.moos.abs.2.2018$TOTAL.TIME)
HI.moos.abs.2.2018$Intensity <- HI.moos.abs.2.2018$precip/HI.moos.abs.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
HI.moos.2018 <- rbind(HI.moos.no3.2.2018, HI.moos.fDOM.2.2018, HI.moos.SPC.2.2018,
HI.moos.turb.2.2018, HI.moos.abs.2.2018) # merging all responses together
HI.moos.2018$burn <- "burned" # adding a burn column
HI.moos.2018$pf <- "medium" # adding a pf column
HI.moos.2018$site.ID <- "MOOS"
write.csv(HI.moos.2018, here("Output_from_analysis", "04_Antecedent_Conditions", "2018", "HI.moos.2018.csv"))
library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)
setwd("~/GitHub/Storms_clean_repo/Storm_Events/2018")
storm_file_list_beta <- list.files(path="FRCH_MOOS_CARI/",
recursive=F,
pattern=".csv",
full.names=TRUE)
storm_list_beta<-do.call("list", lapply(storm_file_list_beta,
read.csv,
stringsAsFactors=FALSE,
header=T, row.names=1))
storm_file_list_beta = sub("FRCH_MOOS_CARI//", storm_file_list_beta, replacement = "")
# storm_file_list_beta = sub("~/Documents/Storms_clean_repo/Storm_Events/2018/FRCH_MOOS_CARI//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta
for(i in 1:length(storm_list_beta)){
storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(storm_list_beta[[i]][["valuedatetime"]],
"%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} # changing character format into datetime
FRCH_storm_list_beta = storm_list_beta[c(1:72)] #72
MOOS_storm_list_beta = storm_list_beta[c(73:126)] #54
FRCH_NO3_storm_list_beta = FRCH_storm_list_beta[c(grep("NO3", names(FRCH_storm_list_beta)))]
FRCH_fDOM_storm_list_beta = FRCH_storm_list_beta[c(grep("fDOM", names(FRCH_storm_list_beta)))]
FRCH_SpCond_storm_list_beta = FRCH_storm_list_beta[c(grep("SPC", names(FRCH_storm_list_beta)))]
FRCH_turb_storm_list_beta = FRCH_storm_list_beta[c(grep("Turb", names(FRCH_storm_list_beta)))]
FRCH_abs_storm_list_beta = FRCH_storm_list_beta[c(grep("abs", names(FRCH_storm_list_beta)))]
FRCH_Q_storm_list_beta = FRCH_storm_list_beta[c(grep("Q", names(FRCH_storm_list_beta)))]
MOOS_NO3_storm_list_beta = MOOS_storm_list_beta[c(grep("NO3", names(MOOS_storm_list_beta)))]
MOOS_fDOM_storm_list_beta = MOOS_storm_list_beta[c(grep("fDOM", names(MOOS_storm_list_beta)))]
MOOS_SpCond_storm_list_beta = MOOS_storm_list_beta[c(grep("SPC", names(MOOS_storm_list_beta)))]
MOOS_turb_storm_list_beta = MOOS_storm_list_beta[c(grep("Turb", names(MOOS_storm_list_beta)))]
MOOS_abs_storm_list_beta = MOOS_storm_list_beta[c(grep("abs", names(MOOS_storm_list_beta)))]
MOOS_Q_storm_list_beta = MOOS_storm_list_beta[c(grep("Q", names(MOOS_storm_list_beta)))]
# MOOS
for(i in 1:length(MOOS_Q_storm_list_beta)){
MOOS_Q_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_Q_storm_list_beta[[i]][["datavalue"]]-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_NO3_storm_list_beta)){
MOOS_NO3_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_NO3_storm_list_beta[[i]][["datavalue"]]-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_fDOM_storm_list_beta)){
MOOS_fDOM_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_SpCond_storm_list_beta)){
MOOS_SpCond_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_turb_storm_list_beta)){
MOOS_turb_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_turb_storm_list_beta[[i]][["datavalue"]]-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_abs_storm_list_beta)){
MOOS_abs_storm_list_beta[[i]][["datavalue.norm"]] =
(MOOS_abs_storm_list_beta[[i]][["datavalue"]]-min(MOOS_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(MOOS_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
MOOS_NO3_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_NO3_storm_list_beta, inner_join, by = "valuedatetime")
View(MOOS_NO3_storm)
# MOOS #
MOOS_NO3_storm$storm.ID = c(
rep("storm10", 432),
rep("storm11a", 90),
rep("storm2a", 75),
rep("storm3", 198),
rep("storm5", 282),
rep("storm6", 333),
rep("storm7", 176),
rep("storm8a", 78),
rep("storm9", 106))
# MOOS #
MOOS_NO3_storm$storm.ID = c(rep("storm10", 432),
rep("storm11a", 420),
rep("storm2a", 412),
rep("storm3", 198),
rep("storm5", 282),
rep("storm6", 333),
rep("storm7", 176),
rep("storm8a", 178),
rep("storm9", 106))
# MOOS #
MOOS_NO3_storm$storm.ID = c(rep("storm10", 432),
rep("storm11a", 420),
rep("storm2a", 412),
rep("storm3", 198),
rep("storm5", 282),
rep("storm6", 335),
rep("storm7", 176),
rep("storm8a", 178),
rep("storm9", 106))
# MOOS #
MOOS_NO3_storm$storm.ID = c(rep("storm10", 432),
rep("storm11a", 420),
rep("storm2a", 412),
rep("storm3", 198),
rep("storm5", 282),
rep("storm6", 335),
rep("storm7", 176),
rep("storm8a", 181),
rep("storm9", 109))
