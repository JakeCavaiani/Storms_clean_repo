group_by(site.ID) %>%
dplyr::summarise(meanNO3 = mean(dailyNO3, na.rm = TRUE),
meanfDOM = mean(dailyfDOM, na.rm = TRUE),
meanSPC = mean(dailySPC, na.rm = TRUE),
meanTurb = mean(dailyTurb, na.rm = TRUE))
mean_daily_long <- mean_daily %>%
pivot_longer(
cols = starts_with("daily"),
names_to = "response_var",
names_prefix = "wk",
values_to = "concentration") # converting to a long format so each response_var is within a single column
ggplot(mean_daily_long, aes(x = julian, y = concentration, color = site.ID)) +
geom_point(size = 0.5) +
scale_color_manual(values=c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A")) +
facet_grid(response_var~year, scales = "free") +
theme_classic()
names(mean_daily_long)
View(mean_daily_long)
ggplot(mean_daily_long, aes(x = julian, y = concentration, color = site.ID)) +
geom_point(size = 0.5) +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic()
ggplot(mean_daily_long, aes(x = julian, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic()
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK))
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK)) %>%
mutate(month = case_when(month == 6 ~ "June"),
.keep = TRUE)
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK)) %>%
mutate(month = case_when(month == 6 ~ "June"),
.keep.all = TRUE)
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK)) %>%
mutate(month = case_when(month == 6 ~ "June"),
keep.all = TRUE)
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK)) %>%
mutate(month = case_when(month == 6 ~ "June"),
TRUE ~ month)
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK)) %>%
mutate(month = case_when(month == 6 ~ "June",
TRUE ~ month),
TRUE ~ month)
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK)) %>%
mutate(month = case_when(month == 6 ~ "June",
TRUE ~ month))
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK)) %>%
mutate(month = case_when(month == 6 ~ "June",
month == 7 ~ "July",
month == 8 ~ "August",
month == 9 ~ "September",
month == 10 ~ "October",
TRUE ~ "month"))
unique(mean_daily_long$month)
mean_daily_long <- mean_daily_long %>%
mutate(month = month(datetimeAK)) %>%
mutate(month = case_when(month == 6 ~ "June",
month == 7 ~ "July",
month == 8 ~ "August",
month == 9 ~ "September",
month == 10 ~ "October"))
ggplot(mean_daily_long, aes(x = month, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic()
ggplot(mean_daily_long, aes(x = julian, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic()
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic()
here()
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
View(mean_daily)
library(tidyverse)
library(stats)
library(readr)
library(ggplot2)
library(plotly)
library(GGally)
library(ggpmisc)
library(ggpubr)
library(ggExtra)
library(lubridate)
library(nlme)
library(MuMIn)
library(multcomp)
library(here)
# 10_gls_models plotting ####
mean_daily <- read.csv(here("Output_from_analysis", "08_Catchment_characteristics", "mean_daily.csv"))
mean_daily$datetimeAK <- ymd(mean_daily$day)
mean_daily <- mean_daily[order(mean_daily$year, mean_daily$site.ID), ]
mean_daily$year <- as.character(mean_daily$year)
mean_daily$Burn <- NA
mean_daily <- mean_daily %>%
mutate(across(c(Burn),
~ifelse(site.ID == "CARI" | site.ID == "FRCH" | site.ID == "VAUL", "unburned", "burned")))
mean_daily$PF <- NA
mean_daily <- mean_daily %>%
mutate(across(c(PF),
~ifelse(site.ID == "VAUL" | site.ID == "STRT", "High", "Moderate")))
vn = expression(paste(N*O[3]^"-"))
# mean concentration across years for each site
mean_daily_site <- mean_daily %>%
group_by(site.ID) %>%
dplyr::summarise(meanNO3 = mean(dailyNO3, na.rm = TRUE),
meanfDOM = mean(dailyfDOM, na.rm = TRUE),
meanSPC = mean(dailySPC, na.rm = TRUE),
meanTurb = mean(dailyTurb, na.rm = TRUE))
mean_daily_long <- mean_daily %>%
pivot_longer(
cols = starts_with("daily"),
names_to = "response_var",
names_prefix = "wk",
values_to = "concentration") # converting to a long format so each response_var is within a single column
mean_daily_long$response_var <- factor(mean_daily_long$response_var, levels = c("dailyfDOM", "dailyNO3",
"dailySPC", "dailyTurb"),
labels = c("fDOM (QSU)", "NO3- (µM)", "SPC(µS/cm)", "Turbidity (FNU)"))
ggplot(mean_daily_long, aes(x = julian, y = concentration, color = site.ID)) +
geom_line(size = 0.5) +
scale_color_manual(values=c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"), "Catchment") +
facet_grid(response_var~year, scales = "free") +
xlab("Julian Day")  +
ylab("Concentration") +
theme_classic() +
theme(axis.text.x=element_text(size=15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20))
mean_daily <- read.csv(here("Output_from_analysis", "08_Catchment_characteristics", "mean_daily.csv"))
mean_daily$datetimeAK <- ymd(mean_daily$day)
mean_daily <- mean_daily[order(mean_daily$year, mean_daily$site.ID), ]
mean_daily$year <- as.character(mean_daily$year)
mean_daily$Burn <- NA
mean_daily <- mean_daily %>%
mutate(across(c(Burn),
~ifelse(site.ID == "CARI" | site.ID == "FRCH" | site.ID == "VAUL", "unburned", "burned")))
mean_daily$PF <- NA
mean_daily <- mean_daily %>%
mutate(across(c(PF),
~ifelse(site.ID == "VAUL" | site.ID == "MOOS", "High", "Low")))
vn = expression(paste(N*O[3]^"-"))
# mean concentration across years for each site
mean_daily_site <- mean_daily %>%
group_by(site.ID) %>%
dplyr::summarise(meanNO3 = mean(dailyNO3, na.rm = TRUE),
meanfDOM = mean(dailyfDOM, na.rm = TRUE),
meanSPC = mean(dailySPC, na.rm = TRUE),
meanTurb = mean(dailyTurb, na.rm = TRUE))
vn = expression(paste(N*O[3]^"-"*(μM)))
mean_daily_new <- mean_daily
mean_daily_new$site.ID <- factor(mean_daily_new$site.ID,     # Reorder factor levels
c("CARI", "FRCH", "VAUL", "MOOS", "POKE", "STRT"))
# all years  #
# POKE - 25%
# CARI - 29%
# STRT - 30%
# FRCH - 33%
# MOOS - 38%
# VAUL - 58%
desired_order <- c("POKE", "CARI", "STRT", "FRCH", "MOOS", "VAUL")
# with letters #
annotations <- data.frame(
year = c("2015", "2015",
"2018", "2018", "2018",
"2019", "2019", "2019", "2019", "2019", "2019",
"2020", "2020", "2020", "2020", "2020", "2020",
"2021", "2021", "2021", "2021", "2021", "2021",
"2022", "2022", "2022", "2022", "2022", "2022"),
site.ID = c("FRCH", "MOOS",
"CARI",  "FRCH", "MOOS",
"POKE", "CARI", "STRT", "FRCH", "MOOS", "VAUL",
"POKE", "CARI", "STRT", "FRCH", "MOOS", "VAUL",
"POKE", "CARI", "STRT", "FRCH", "MOOS", "VAUL",
"POKE", "CARI", "STRT", "FRCH", "MOOS", "VAUL"),
Label = c("", "",
"", "", "",
"", "", "", "", "", "",
"a", "a", "ab", "a", "b", "c",
"ab", "b", "a", "a", "ab", "ab",
"a", "ac", "bc", "ac", "b", "b"),
y_position = c(50, 50,
50, 50, 50,
50, 50, 50, 50, 50, 50,
45, 45, 45, 45, 45, 45,
45, 45, 45, 45, 45, 45,
45, 45, 45, 45, 45, 45),
Burn = c("unburned", "burned",
"unburned", "unburned", "burned",
"burned", "unburned", "burned", "unburned", "burned", "unburned",
"burned", "unburned", "burned", "unburned", "burned", "unburned",
"burned", "unburned", "burned", "unburned", "burned", "unburned",
"burned", "unburned", "burned", "unburned", "burned", "unburned"))
ggplot(mean_daily_new, aes(x = site.ID, y = dailyNO3, pattern = Burn, fill = site.ID)) +
ggdist::stat_halfeye(adjust = 0.5,
justification = -.3,
.width = -0,
point_colour = NA,
scale = 0.5) +
geom_boxplot(width = .25,
outlier.colour = NA,
alpha = 0.5) +
geom_boxplot_pattern(position = position_dodge(preserve = "single"),
width = .25,
color = "black",
pattern_fill = "white",
pattern_angle = 45,
pattern_density = 0.1,
pattern_spacing = 0.025,
pattern_key_scale_factor = 0.6) +
scale_pattern_manual(values = c(burned = "stripe", unburned = "none")) +
scale_x_discrete(limits = desired_order,
labels = c("POKE" = "POKE\n(25%)",
"CARI" = "CARI\n(29%)",
"STRT" = "STRT\n(30%)",
"FRCH" = "FRCH\n(33%)",
"MOOS" = "MOOS\n(38%)",
"VAUL" = "VAUL\n(58%)")) +
coord_cartesian(xlim = c(1, 6.05)) +
scale_fill_manual(values=c("#3288BD","#FF7F00", "#E7298A", "#A6761D", "#6A3D9A", "#66C2A5"), guide = "none") +
facet_wrap(~year) +
geom_text(data = annotations, aes(label = Label, y = y_position),
position = position_dodge(width = 0.75), size = 8) +
theme_tq() +
theme(axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 25),
axis.text.y = element_text(size = 20),
strip.text = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20)) +
labs(x= "", y = vn)
library(ggplot2)
library(ggnewscale)
library(here)
library(lubridate)
library(tidyverse)
library(ggpattern)
library(ggsignif)
library(tidyquant)
library(ggpubr)
library(extrafont)
ggplot(mean_daily_new, aes(x = site.ID, y = dailyNO3, pattern = Burn, fill = site.ID)) +
ggdist::stat_halfeye(adjust = 0.5,
justification = -.3,
.width = -0,
point_colour = NA,
scale = 0.5) +
geom_boxplot(width = .25,
outlier.colour = NA,
alpha = 0.5) +
geom_boxplot_pattern(position = position_dodge(preserve = "single"),
width = .25,
color = "black",
pattern_fill = "white",
pattern_angle = 45,
pattern_density = 0.1,
pattern_spacing = 0.025,
pattern_key_scale_factor = 0.6) +
scale_pattern_manual(values = c(burned = "stripe", unburned = "none")) +
scale_x_discrete(limits = desired_order,
labels = c("POKE" = "POKE\n(25%)",
"CARI" = "CARI\n(29%)",
"STRT" = "STRT\n(30%)",
"FRCH" = "FRCH\n(33%)",
"MOOS" = "MOOS\n(38%)",
"VAUL" = "VAUL\n(58%)")) +
coord_cartesian(xlim = c(1, 6.05)) +
scale_fill_manual(values=c("#3288BD","#FF7F00", "#E7298A", "#A6761D", "#6A3D9A", "#66C2A5"), guide = "none") +
facet_wrap(~year) +
geom_text(data = annotations, aes(label = Label, y = y_position),
position = position_dodge(width = 0.75), size = 8) +
theme_tq() +
theme(axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 25),
axis.text.y = element_text(size = 20),
strip.text = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20)) +
labs(x= "", y = vn)
library(ggplot2)
library(ggnewscale)
library(here)
library(lubridate)
library(tidyverse)
library(ggpattern)
library(ggsignif)
library(tidyquant)
library(ggpubr)
library(extrafont)
# 10_gls_models plotting ####
mean_daily <- read.csv(here("Output_from_analysis", "08_Catchment_characteristics", "mean_daily.csv"))
mean_daily$datetimeAK <- ymd(mean_daily$day)
mean_daily <- mean_daily[order(mean_daily$year, mean_daily$site.ID), ]
mean_daily$year <- as.character(mean_daily$year)
mean_daily$Burn <- NA
mean_daily <- mean_daily %>%
mutate(across(c(Burn),
~ifelse(site.ID == "CARI" | site.ID == "FRCH" | site.ID == "VAUL", "unburned", "burned")))
mean_daily$PF <- NA
mean_daily <- mean_daily %>%
mutate(across(c(PF),
~ifelse(site.ID == "VAUL" | site.ID == "STRT", "High", "Moderate")))
vn = expression(paste(N*O[3]^"-"))
# mean concentration across years for each site
mean_daily_site <- mean_daily %>%
group_by(site.ID) %>%
dplyr::summarise(meanNO3 = mean(dailyNO3, na.rm = TRUE),
meanfDOM = mean(dailyfDOM, na.rm = TRUE),
meanSPC = mean(dailySPC, na.rm = TRUE),
meanTurb = mean(dailyTurb, na.rm = TRUE))
mean_daily_long <- mean_daily %>%
pivot_longer(
cols = starts_with("daily"),
names_to = "response_var",
names_prefix = "wk",
values_to = "concentration") # converting to a long format so each response_var is within a single column
View(mean_daily_long)
mean_daily_long$response_var <- factor(mean_daily_long$response_var, levels = c("dailyfDOM", "dailyNO3", "dailySPC", "dailyTurb", "dailyABS"),
labels = c("fDOM (QSU)", "NO3- (µM)", "SPC(µS/cm)", "Turbidity (FNU)", "ABS @ 254nm"))
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic()
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(element_text(size = 20))
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 30))
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 20))
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 16))
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 15))
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 14))
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 14),
axis.text.x = element_text(size = 20))
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 14),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20))
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 20))
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
# Plotting #
ggplot(mean_daily_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("Month") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 14),
axis.text.x = element_text(size = 13),
axis.title.x = element_text(size = 20),
axis.text.y = element_text(size = 20))
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
# Plotting #
mean_daily_long %>%
filter(!year == 2015) %>%
ggplot(aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_line() +
scale_color_manual(values = c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A"),
guide = guide_legend(title = "Site")) +
xlab("") +
ylab("") +
facet_grid(response_var~year, scales = "free") +
theme_classic() +
theme(strip.text = element_text(size = 14),
axis.text.x = element_text(size = 13),
axis.title.x = element_text(size = 20),
axis.text.y = element_text(size = 20))
ggsave("DoD_2018_2022.pdf",
path = here("plots", "Chems_year"),
width = 10, height = 8, units = "in")
