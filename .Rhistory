turb_data <- na.omit(turb_data) # 257 to 254 rows
turb_data <- turb_data[, c(1,3,4,5,6,7,8,2,9,10,11)]
cor(turb_data[,c(1:7)])
HI_FI_turb_MOOS <- subset(HI_FI_turb, site.ID == "MOOS")
HI_FI_turb_FRCH <- subset(HI_FI_turb, site.ID == "FRCH")
HI_FI_turb_CARI <- subset(HI_FI_turb, site.ID == "CARI")
HI_FI_turb_POKE <- subset(HI_FI_turb, site.ID == "POKE")
HI_FI_turb_VAUL <- subset(HI_FI_turb, site.ID == "VAUL")
HI_FI_turb_STRT <- subset(HI_FI_turb, site.ID == "STRT")
MOOS.model <- lm(Hyst_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_MOOS)
FRCH.model <- lm(Hyst_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_FRCH)
CARI.model <- lm(Hyst_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_CARI)
POKE.model <- lm(Hyst_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_POKE)
VAUL.model <- lm(Hyst_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_VAUL)
STRT.model <- lm(Hyst_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_STRT)
Plot_1 <- plot_summs(MOOS.model, FRCH.model,
CARI.model, POKE.model,
VAUL.model, STRT.model, scale = TRUE,
model.names = c("MOOS", "FRCH", "CARI", "POKE", "VAUL", "STRT"),
colors = c("#A6761D", "#FF7F00","#3288BD", "#6A3D9A", "#E7298A", "#66C2A5"))
Plot_1 +
xlab("Coefficient estimate") + ylab("") +
geom_vline(xintercept = 0,
colour = "grey80",
linetype = 1) +
scale_y_discrete(labels= c("Storm Precipitation",
"Precipitation Week",
"Precipitation Month",
"Seasonality")) +
theme_bw()
ggsave(path = "~/Documents/Storms_clean_repo/plots/Coefficient_Plots/HI",
filename = "HI_turb.pdf",
width = 7, height = 7)
NO3_data <- HI_FI_NO3[,c("Beta_index", "site.ID", "StormPrecip", "PrecipWeek", "PrecipMonth", "ThreeMonth", "Intensity", "TimeSinceChena", "pf", "burn", "year")]
NO3_data <- na.omit(NO3_data) # 244 to 236 rows
NO3_data <- NO3_data[, c(1,3,4,5,6,7,8,2,9,10,11)]
cor(NO3_data[,c(1:7)])
HI_FI_NO3_MOOS <- subset(HI_FI_NO3, site.ID == "MOOS")
HI_FI_NO3_FRCH <- subset(HI_FI_NO3, site.ID == "FRCH")
HI_FI_NO3_CARI <- subset(HI_FI_NO3, site.ID == "CARI")
HI_FI_NO3_POKE <- subset(HI_FI_NO3, site.ID == "POKE")
HI_FI_NO3_VAUL <- subset(HI_FI_NO3, site.ID == "VAUL")
HI_FI_NO3_STRT <- subset(HI_FI_NO3, site.ID == "STRT")
MOOS.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_NO3_MOOS)
FRCH.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_NO3_FRCH)
CARI.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_NO3_CARI)
POKE.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_NO3_POKE)
VAUL.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_NO3_VAUL)
STRT.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_NO3_STRT)
Plot_1 <- plot_summs(MOOS.model, FRCH.model,
CARI.model, POKE.model,
VAUL.model, STRT.model, scale = TRUE,
model.names = c("MOOS", "FRCH", "CARI", "POKE", "VAUL", "STRT"),
colors = c("#A6761D", "#FF7F00","#3288BD", "#6A3D9A", "#E7298A", "#66C2A5"))
Plot_1 +
xlab("Coefficient estimate") + ylab("") +
geom_vline(xintercept = 0,
colour = "grey80",
linetype = 1) +
scale_y_discrete(labels= c("Storm Precipitation",
"Precipitation Week",
"Precipitation Month",
"Seasonality")) +
theme_bw()
ggsave(path = "~/Documents/Storms_clean_repo/plots/Coefficient_Plots/BETA",
filename = "BETA_NO3.pdf",
width = 7, height = 7)
fDOM_data <- HI_FI_fDOM[,c("Beta_index", "site.ID", "StormPrecip", "PrecipWeek", "PrecipMonth", "ThreeMonth", "Intensity", "TimeSinceChena", "pf", "burn", "year")]
fDOM_data <- na.omit(fDOM_data) # 244 to 236 rows
fDOM_data <- fDOM_data[, c(1,3,4,5,6,7,8,2,9,10,11)]
cor(fDOM_data[,c(1:7)])
HI_FI_fDOM_MOOS <- subset(HI_FI_fDOM, site.ID == "MOOS")
HI_FI_fDOM_FRCH <- subset(HI_FI_fDOM, site.ID == "FRCH")
HI_FI_fDOM_CARI <- subset(HI_FI_fDOM, site.ID == "CARI")
HI_FI_fDOM_POKE <- subset(HI_FI_fDOM, site.ID == "POKE")
HI_FI_fDOM_VAUL <- subset(HI_FI_fDOM, site.ID == "VAUL")
HI_FI_fDOM_STRT <- subset(HI_FI_fDOM, site.ID == "STRT")
MOOS.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_fDOM_MOOS)
FRCH.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_fDOM_FRCH)
CARI.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_fDOM_CARI)
POKE.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_fDOM_POKE)
VAUL.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_fDOM_VAUL)
STRT.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_fDOM_STRT)
Plot_1 <- plot_summs(MOOS.model, FRCH.model,
CARI.model, POKE.model,
VAUL.model, STRT.model, scale = TRUE,
model.names = c("MOOS", "FRCH", "CARI", "POKE", "VAUL", "STRT"),
colors = c("#A6761D", "#FF7F00","#3288BD", "#6A3D9A", "#E7298A", "#66C2A5"))
Plot_1 +
xlab("Coefficient estimate") + ylab("") +
geom_vline(xintercept = 0,
colour = "grey80",
linetype = 1) +
scale_y_discrete(labels= c("Storm Precipitation",
"Precipitation Week",
"Precipitation Month",
"Seasonality")) +
theme_bw()
ggsave(path = "~/Documents/Storms_clean_repo/plots/Coefficient_Plots/BETA",
filename = "BETA_fDOM.pdf",
width = 7, height = 7)
SPC_data <- HI_FI_SPC[,c("Beta_index", "site.ID", "StormPrecip", "PrecipWeek", "PrecipMonth", "ThreeMonth", "Intensity", "TimeSinceChena", "pf", "burn", "year")]
SPC_data <- na.omit(SPC_data) # 244 to 236 rows
SPC_data <- SPC_data[, c(1,3,4,5,6,7,8,2,9,10,11)]
cor(SPC_data[,c(1:7)])
HI_FI_SPC_MOOS <- subset(HI_FI_SPC, site.ID == "MOOS")
HI_FI_SPC_FRCH <- subset(HI_FI_SPC, site.ID == "FRCH")
HI_FI_SPC_CARI <- subset(HI_FI_SPC, site.ID == "CARI")
HI_FI_SPC_POKE <- subset(HI_FI_SPC, site.ID == "POKE")
HI_FI_SPC_VAUL <- subset(HI_FI_SPC, site.ID == "VAUL")
HI_FI_SPC_STRT <- subset(HI_FI_SPC, site.ID == "STRT")
MOOS.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_SPC_MOOS)
FRCH.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_SPC_FRCH)
CARI.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_SPC_CARI)
POKE.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_SPC_POKE)
VAUL.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_SPC_VAUL)
STRT.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_SPC_STRT)
Plot_1 <- plot_summs(MOOS.model, FRCH.model,
CARI.model, POKE.model,
VAUL.model, STRT.model, scale = TRUE,
model.names = c("MOOS", "FRCH", "CARI", "POKE", "VAUL", "STRT"),
colors = c("#A6761D", "#FF7F00","#3288BD", "#6A3D9A", "#E7298A", "#66C2A5"))
Plot_1 +
xlab("Coefficient estimate") + ylab("") +
geom_vline(xintercept = 0,
colour = "grey80",
linetype = 1) +
scale_y_discrete(labels= c("Storm Precipitation",
"Precipitation Week",
"Precipitation Month",
"Seasonality")) +
theme_bw()
ggsave(path = "~/Documents/Storms_clean_repo/plots/Coefficient_Plots/BETA",
filename = "BETA_SPC.pdf",
width = 7, height = 7)
turb_data <- HI_FI_turb[,c("Beta_index", "site.ID", "StormPrecip", "PrecipWeek", "PrecipMonth", "ThreeMonth", "Intensity", "TimeSinceChena", "pf", "burn", "year")]
turb_data <- na.omit(turb_data) # 244 to 236 rows
turb_data <- turb_data[, c(1,3,4,5,6,7,8,2,9,10,11)]
cor(turb_data[,c(1:7)])
HI_FI_turb_MOOS <- subset(HI_FI_turb, site.ID == "MOOS")
HI_FI_turb_FRCH <- subset(HI_FI_turb, site.ID == "FRCH")
HI_FI_turb_CARI <- subset(HI_FI_turb, site.ID == "CARI")
HI_FI_turb_POKE <- subset(HI_FI_turb, site.ID == "POKE")
HI_FI_turb_VAUL <- subset(HI_FI_turb, site.ID == "VAUL")
HI_FI_turb_STRT <- subset(HI_FI_turb, site.ID == "STRT")
MOOS.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_MOOS)
FRCH.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_FRCH)
CARI.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_CARI)
POKE.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_POKE)
VAUL.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_VAUL)
STRT.model <- lm(Beta_index ~ StormPrecip + PrecipWeek + PrecipMonth + TimeSinceChena, data = HI_FI_turb_STRT)
Plot_1 <- plot_summs(MOOS.model, FRCH.model,
CARI.model, POKE.model,
VAUL.model, STRT.model, scale = TRUE,
model.names = c("MOOS", "FRCH", "CARI", "POKE", "VAUL", "STRT"),
colors = c("#A6761D", "#FF7F00","#3288BD", "#6A3D9A", "#E7298A", "#66C2A5"))
Plot_1 +
xlab("Coefficient estimate") + ylab("") +
geom_vline(xintercept = 0,
colour = "grey80",
linetype = 1) +
scale_y_discrete(labels= c("Storm Precipitation",
"Precipitation Week",
"Precipitation Month",
"Seasonality")) +
theme_bw()
ggsave(path = "~/Documents/Storms_clean_repo/plots/Coefficient_Plots/BETA",
filename = "BETA_turb.pdf",
width = 7, height = 7)
DOD_2018 <- read.csv("~/Documents/Storms_clean_repo/Q/Q_chem/DOD.2018.csv")
DOD_2019 <- read.csv("~/Documents/Storms_clean_repo/Q/Q_chem/DOD.2019.csv")
DOD_2019 <- DOD_2019[,-1]
DOD_2020 <- read.csv("~/Documents/Storms_clean_repo/Q/Q_chem/DOD.2020.csv")
DOD_2020 <- DOD_2020[,-1]
colNames <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "Q", "day")
names(DOD_2020)<- colNames # renaming columns
DOD_2021 <- read.csv("~/Documents/Storms_clean_repo/Q/Q_chem/DOD.2021.csv")
DOD_2021 <- DOD_2021[,-1]
DOD_2018$year <- "2018"
DOD_2019$year <- "2019"
DOD_2020$year <- "2020"
DOD_2021$year <- "2021"
DOD_2021$datetimeAK <- mdy_hm(DOD_2021$datetimeAK)
DOD_2021$datetimeAK <- as.character(DOD_2021$datetimeAK)
DOD_chem <- rbind(DOD_2018, DOD_2019, DOD_2020, DOD_2021)
# read in Caribou data
CARI_2018 <- read_csv("~/Documents/NEON/CARI/WaterQuality2018.csv")
CARI_2019 <- read_csv("~/Documents/NEON/CARI/WaterQuality2019.csv")
CARI_2020 <- read_csv("~/Documents/NEON/CARI/WaterQuality2020.csv")
CARI_2021 <- read_csv("~/Documents/NEON/CARI/WaterQuality2021.csv")
CARI_2018$year <- "2018"
CARI_2019$year <- "2019"
CARI_2020$year <- "2020"
CARI_2021$year <- "2021"
CARI_chem <- rbind(CARI_2018, CARI_2019, CARI_2020, CARI_2021)
CARI_chem$day <- as.character(CARI_chem$DateTime)
CARI_chem <- CARI_chem[, c(1,2,5,6,7,4,3,9,8)] # reorganizing column headers
colNames <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "Q", "day", "year")
names(CARI_chem)<- colNames # renaming columns
# merge CARI and DOD sites
CARI_chem$datetimeAK <- ymd_hms(CARI_chem$datetimeAK)
DOD_chem$datetimeAK <- ymd_hms(DOD_chem$datetimeAK)
DOD_chem <- rbind(DOD_chem, CARI_chem)
DOD_chem <- DOD_chem[order(DOD_chem$datetimeAK),]
# Filtering by year to compare concentrations across years
chem_2018 <- subset(DOD_chem, year == "2018")
chem_2019 <- subset(DOD_chem, year == "2019")
chem_2020 <- subset(DOD_chem, year == "2020")
chem_2021 <- subset(DOD_chem, year == "2021")
# The common window for time since peak chena is day 35-142 so the dates are as follows:
# these dates are in the Summart_statistics csv summary file
# 2018 TPC: 5/23
# 2019 TPC: 5/12
# 2020 TPC: 5/13
# 2021 TPC: 5/8
chem_2018 <- subset(chem_2018, datetimeAK > "2018-06-27" & datetimeAK < "2018-10-12")
chem_2019 <- subset(chem_2019, datetimeAK > "2019-06-16" & datetimeAK < "2019-10-01")
chem_2020 <- subset(chem_2020, datetimeAK > "2020-06-17" & datetimeAK < "2020-09-30")
chem_2021 <- subset(chem_2021, datetimeAK > "2021-06-12" & datetimeAK < "2021-09-27")
# make a julian day columnn:
chem_2018$julian <- yday(chem_2018$datetimeAK)
chem_2018$TSC <- chem_2018$julian-143 # TSC column
chem_2019$julian <- yday(chem_2019$datetimeAK)
chem_2019$TSC <- chem_2019$julian-132 # TSC column
chem_2020$julian <- yday(chem_2020$datetimeAK)
chem_2020$TSC <- chem_2020$julian-134 # TSC column
chem_2021$julian <- yday(chem_2021$datetimeAK)
chem_2021$TSC <- chem_2021$julian-128 # TSC column
# combine them to be able to plot it
similar_chem_year <- rbind(chem_2018, chem_2019, chem_2020, chem_2021)
CARI_year <- subset(similar_chem_year, site.ID == "CARI")
FRCH_year <- subset(similar_chem_year, site.ID == "FRCH")
MOOS_year <- subset(similar_chem_year, site.ID == "MOOS")
POKE_year <- subset(similar_chem_year, site.ID == "POKE")
STRT_year <- subset(similar_chem_year, site.ID == "STRT")
VAUL_year <- subset(similar_chem_year, site.ID == "VAUL")
similar_chem_year$day <- as.Date(similar_chem_year$datetimeAK)
similar_chem_year[, 6][similar_chem_year[, 6] < 10] <- NA # there are values of 0 for nitrate
# in VAUL data starting in August that are not accurate so I am setting them to NA
# Mean daily concentration
mean_daily <- similar_chem_year %>%
group_by(day, site.ID, year) %>%
summarise(dailyfDOM = mean(fDOM, na.rm = TRUE),
dailyNO3 = mean(NO3, na.rm = TRUE),
dailySPC = mean(SPC, na.rm = TRUE),
dailyTurb = mean(Turb, na.rm = TRUE))
mean_daily$julian <- yday(mean_daily$day)
mean_daily$TSC <- NA
mean_daily[c(1:290), 9] <- mean_daily[c(1:290), 8] - 143 # 2018
mean_daily[c(291:928), 9] <- mean_daily[c(291:928), 8] - 132 # 2019
mean_daily[c(929:1541), 9] <- mean_daily[c(929:1541), 8] - 134 # 2020
mean_daily[c(1542:2074), 9] <- mean_daily[c(1542:2074), 8] - 128 # 2021
mean_daily <- mean_daily[-2075,]
# plot
# across all years
# NO3
ggplot(mean_daily, aes(x = site.ID, y = dailyNO3, fill = site.ID)) +
geom_boxplot() +
scale_fill_manual(values=c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A")) +
theme_classic()
# fDOM
ggplot(mean_daily, aes(x = site.ID, y = dailyfDOM, fill = site.ID)) +
geom_boxplot() +
scale_fill_manual(values=c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A")) +
theme_classic()
# SPC
ggplot(mean_daily, aes(x = site.ID, y = dailySPC, fill = site.ID)) +
geom_boxplot() +
scale_fill_manual(values=c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A")) +
theme_classic()
# turb
ggplot(mean_daily, aes(x = site.ID, y = dailyTurb, fill = site.ID)) +
geom_boxplot() +
scale_fill_manual(values=c("#3288BD","#FF7F00", "#A6761D", "#6A3D9A", "#66C2A5", "#E7298A")) +
theme_classic()
View(mean_daily)
View(similar_chem_year)
year.cari <- CARI_year %>%
group_by(year) %>%
summarise(medianfDOM = median(fDOM, na.rm = TRUE),
medianNO3 = median(NO3, na.rm = TRUE),
medianSPC = median(SPC, na.rm = TRUE),
medianTURB = median(Turb, na.rm = TRUE))
View(year.cari)
library(tidyverse)
library(stats)
library(readr)
library(ggplot2)
library(plotly)
library(GGally)
library(ggpmisc)
library(ggpubr)
library(ggExtra)
library(lubridate)
library(nlme)
library(MuMIn)
library(multcomp)
AMC <- read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/07_Combine_HI_BETA_FI/antecedent_HI_FI_AllYears.csv")
AMC <- AMC[,-c(1:2,14,15,17,27)] # cleaning up columns that are unnecessary
colNames <- c("Hyst_index", "HI_ymin", "HI_ymax", "site.ID", "storm.ID", "month",
"day", "response_var", "Flush_index", "FI_ymin", "FI_ymax", "year",
"Parameter", "Beta_index", "SE", "CI", "Beta_ymin", "Beta_ymax", "t",
"df", "p", "StormPrecip", "StormTemp", "PrecipWeek", "PrecipMonth",
"ThreeMonth", "TempWeek", "Duration", "Intensity", "doy", "burn", "pf",
"date", "TimeSinceChena")
names(AMC)<- colNames # renaming columns
##subsetting by solute
# NO3 #
HI_FI_NO3 = subset(AMC, response_var == "NO3")
# fDOM #
HI_FI_fDOM = subset(AMC, response_var == "fDOM")
# SPC #
HI_FI_SPC = subset(AMC, response_var == "SPC")
# turb #
HI_FI_turb = subset(AMC, response_var == "turb")
table(sign(HI_FI_NO3$Hyst_index))
which(HI_FI_NO3$HI_ymin < 0 & HI_FI_NO3$HI_ymax > 0 & HI_FI_NO3$Hyst_index > 0)
which(HI_FI_NO3$HI_ymin < 0 & HI_FI_NO3$HI_ymax > 0 & HI_FI_NO3$Hyst_index < 0)
table(sign(HI_FI_NO3$Beta_index))
which(HI_FI_NO3$Beta_ymin < 0 & HI_FI_NO3$Beta_ymax > 0 & HI_FI_NO3$Beta_index > 0)
which(HI_FI_NO3$Beta_ymin < 0 & HI_FI_NO3$Beta_ymax > 0 & HI_FI_NO3$Beta_index < 0)
#fDOM
table(sign(HI_FI_fDOM$Hyst_index))
which(HI_FI_fDOM$HI_ymin < 0 & HI_FI_fDOM$HI_ymax > 0 & HI_FI_fDOM$Hyst_index > 0)
which(HI_FI_fDOM$HI_ymin < 0 & HI_FI_fDOM$HI_ymax > 0 & HI_FI_fDOM$Hyst_index < 0)
table(sign(HI_FI_fDOM$Beta_index))
which(HI_FI_fDOM$Beta_ymin < 0 & HI_FI_fDOM$Beta_ymax > 0 & HI_FI_fDOM$Beta_index > 0)
which(HI_FI_fDOM$Beta_ymin < 0 & HI_FI_fDOM$Beta_ymax > 0 & HI_FI_fDOM$Beta_index < 0)
#SPC
table(sign(HI_FI_SPC$Hyst_index))
which(HI_FI_SPC$HI_ymin < 0 & HI_FI_SPC$HI_ymax > 0 & HI_FI_SPC$Hyst_index > 0)
which(HI_FI_SPC$HI_ymin < 0 & HI_FI_SPC$HI_ymax > 0 & HI_FI_SPC$Hyst_index < 0)
table(sign(HI_FI_SPC$Beta_index))
which(HI_FI_SPC$Beta_ymin < 0 & HI_FI_SPC$Beta_ymax > 0 & HI_FI_SPC$Beta_index > 0)
which(HI_FI_SPC$Beta_ymin < 0 & HI_FI_SPC$Beta_ymax > 0 & HI_FI_SPC$Beta_index < 0)
#Turb
table(sign(HI_FI_turb$Hyst_index))
which(HI_FI_turb$HI_ymin < 0 & HI_FI_turb$HI_ymax > 0 & HI_FI_turb$Hyst_index > 0)
which(HI_FI_turb$HI_ymin < 0 & HI_FI_turb$HI_ymax > 0 & HI_FI_turb$Hyst_index < 0)
table(sign(HI_FI_turb$Beta_index))
which(HI_FI_turb$Beta_ymin < 0 & HI_FI_turb$Beta_ymax > 0 & HI_FI_turb$Beta_index > 0)
which(HI_FI_turb$Beta_ymin < 0 & HI_FI_turb$Beta_ymax > 0 & HI_FI_turb$Beta_index < 0)
HI_FI_fDOM_VAUL <- subset(HI_FI_fDOM, site.ID == "VAUL")
HI_FI_fDOM_CARI <- subset(HI_FI_fDOM, site.ID == "CARI")
table(sign(HI_FI_fDOM_VAUL$Hyst_index))
which(HI_FI_fDOM$HI_ymin < 0 & HI_FI_fDOM$HI_ymax > 0 & HI_FI_fDOM$Hyst_index > 0)
which(HI_FI_fDOM$HI_ymin < 0 & HI_FI_fDOM$HI_ymax > 0 & HI_FI_fDOM$Hyst_index < 0)
table(sign(HI_FI_fDOM_VAUL$Beta_index))
which(HI_FI_fDOM_VAUL$Beta_ymin < 0 & HI_FI_fDOM_VAUL$Beta_ymax > 0 & HI_FI_fDOM_VAUL$Beta_index > 0)
which(HI_FI_fDOM_VAUL$Beta_ymin < 0 & HI_FI_fDOM_VAUL$Beta_ymax > 0 & HI_FI_fDOM_VAUL$Beta_index < 0)
table(sign(HI_FI_fDOM_CARI$Beta_index))
which(HI_FI_fDOM_CARI$Beta_ymin < 0 & HI_FI_fDOM_CARI$Beta_ymax > 0 & HI_FI_fDOM_CARI$Beta_index > 0)
View(HI_FI_fDOM_VAUL)
which(HI_FI_fDOM_CARI$Beta_ymin < 0 & HI_FI_fDOM_CARI$Beta_ymax > 0 & HI_FI_fDOM_CARI$Beta_index < 0)
DOD_2018 <- read.csv("~/Documents/Storms_clean_repo/Q/Q_chem/DOD.2018.csv")
DOD_2019 <- read.csv("~/Documents/Storms_clean_repo/Q/Q_chem/DOD.2019.csv")
DOD_2019 <- DOD_2019[,-1]
DOD_2020 <- read.csv("~/Documents/Storms_clean_repo/Q/Q_chem/DOD.2020.csv")
DOD_2020 <- DOD_2020[,-1]
colNames <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "Q", "day")
names(DOD_2020)<- colNames # renaming columns
DOD_2021 <- read.csv("~/Documents/Storms_clean_repo/Q/Q_chem/DOD.2021.csv")
DOD_2021 <- DOD_2021[,-1]
DOD_2018$year <- "2018"
DOD_2019$year <- "2019"
DOD_2020$year <- "2020"
DOD_2021$year <- "2021"
DOD_2021$datetimeAK <- mdy_hm(DOD_2021$datetimeAK)
DOD_2021$datetimeAK <- as.character(DOD_2021$datetimeAK)
DOD_chem <- rbind(DOD_2018, DOD_2019, DOD_2020, DOD_2021)
# read in Caribou data
CARI_2018 <- read_csv("~/Documents/NEON/CARI/WaterQuality2018.csv")
CARI_2019 <- read_csv("~/Documents/NEON/CARI/WaterQuality2019.csv")
CARI_2020 <- read_csv("~/Documents/NEON/CARI/WaterQuality2020.csv")
CARI_2021 <- read_csv("~/Documents/NEON/CARI/WaterQuality2021.csv")
CARI_2018$year <- "2018"
CARI_2019$year <- "2019"
CARI_2020$year <- "2020"
CARI_2021$year <- "2021"
CARI_chem <- rbind(CARI_2018, CARI_2019, CARI_2020, CARI_2021)
CARI_chem$day <- as.character(CARI_chem$DateTime)
CARI_chem <- CARI_chem[, c(1,2,5,6,7,4,3,9,8)] # reorganizing column headers
colNames <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "Q", "day", "year")
names(CARI_chem)<- colNames # renaming columns
# merge CARI and DOD sites
CARI_chem$datetimeAK <- ymd_hms(CARI_chem$datetimeAK)
DOD_chem$datetimeAK <- ymd_hms(DOD_chem$datetimeAK)
DOD_chem <- rbind(DOD_chem, CARI_chem)
DOD_chem <- DOD_chem[order(DOD_chem$datetimeAK),]
# Filtering by year to compare concentrations across years
chem_2018 <- subset(DOD_chem, year == "2018")
chem_2019 <- subset(DOD_chem, year == "2019")
chem_2020 <- subset(DOD_chem, year == "2020")
chem_2021 <- subset(DOD_chem, year == "2021")
# The common window for time since peak chena is day 35-142 so the dates are as follows:
# these dates are in the Summart_statistics csv summary file
# 2018 TPC: 5/23
# 2019 TPC: 5/12
# 2020 TPC: 5/13
# 2021 TPC: 5/8
chem_2018 <- subset(chem_2018, datetimeAK > "2018-06-27" & datetimeAK < "2018-10-12")
chem_2019 <- subset(chem_2019, datetimeAK > "2019-06-16" & datetimeAK < "2019-10-01")
chem_2020 <- subset(chem_2020, datetimeAK > "2020-06-17" & datetimeAK < "2020-09-30")
chem_2021 <- subset(chem_2021, datetimeAK > "2021-06-12" & datetimeAK < "2021-09-27")
# make a julian day columnn:
chem_2018$julian <- yday(chem_2018$datetimeAK)
chem_2018$TSC <- chem_2018$julian-143 # TSC column
chem_2019$julian <- yday(chem_2019$datetimeAK)
chem_2019$TSC <- chem_2019$julian-132 # TSC column
chem_2020$julian <- yday(chem_2020$datetimeAK)
chem_2020$TSC <- chem_2020$julian-134 # TSC column
chem_2021$julian <- yday(chem_2021$datetimeAK)
chem_2021$TSC <- chem_2021$julian-128 # TSC column
# combine them to be able to plot it
similar_chem_year <- rbind(chem_2018, chem_2019, chem_2020, chem_2021)
CARI_year <- subset(similar_chem_year, site.ID == "CARI")
FRCH_year <- subset(similar_chem_year, site.ID == "FRCH")
MOOS_year <- subset(similar_chem_year, site.ID == "MOOS")
POKE_year <- subset(similar_chem_year, site.ID == "POKE")
STRT_year <- subset(similar_chem_year, site.ID == "STRT")
VAUL_year <- subset(similar_chem_year, site.ID == "VAUL")
similar_chem_year$day <- as.Date(similar_chem_year$datetimeAK)
similar_chem_year[, 6][similar_chem_year[, 6] < 10] <- NA # there are values of 0 for nitrate
# in VAUL data starting in August that are not accurate so I am setting them to NA
# Mean daily concentration
mean_daily <- similar_chem_year %>%
group_by(day, site.ID, year) %>%
summarise(dailyfDOM = mean(fDOM, na.rm = TRUE),
dailyNO3 = mean(NO3, na.rm = TRUE),
dailySPC = mean(SPC, na.rm = TRUE),
dailyTurb = mean(Turb, na.rm = TRUE))
mean_daily$julian <- yday(mean_daily$day)
mean_daily$TSC <- NA
mean_daily[c(1:290), 9] <- mean_daily[c(1:290), 8] - 143 # 2018
mean_daily[c(291:928), 9] <- mean_daily[c(291:928), 8] - 132 # 2019
mean_daily[c(929:1541), 9] <- mean_daily[c(929:1541), 8] - 134 # 2020
mean_daily[c(1542:2074), 9] <- mean_daily[c(1542:2074), 8] - 128 # 2021
mean_daily <- mean_daily[-2075,]
year.cari <- CARI_year %>%
group_by(year) %>%
summarise(medianfDOM = median(fDOM, na.rm = TRUE),
medianNO3 = median(NO3, na.rm = TRUE),
medianSPC = median(SPC, na.rm = TRUE),
medianTURB = median(Turb, na.rm = TRUE))
View(year.cari)
year.frch <- FRCH_year %>%
group_by(year) %>%
summarise(medianfDOM = median(fDOM, na.rm = TRUE),
medianNO3 = median(NO3, na.rm = TRUE),
medianSPC = median(SPC, na.rm = TRUE),
medianTURB = median(Turb, na.rm = TRUE))
View(year.frch)
year.moos <- MOOS_year %>%
group_by(year) %>%
summarise(medianfDOM = median(fDOM, na.rm = TRUE),
medianNO3 = median(NO3, na.rm = TRUE),
medianSPC = median(SPC, na.rm = TRUE),
medianTURB = median(Turb, na.rm = TRUE))
View(year.moos)
year.poke <- POKE_year %>%
group_by(year) %>%
summarise(medianfDOM = median(fDOM, na.rm = TRUE),
medianNO3 = median(NO3, na.rm = TRUE),
medianSPC = median(SPC, na.rm = TRUE),
medianTURB = median(Turb, na.rm = TRUE))
View(year.poke)
year.vaul <- VAUL_year %>%
group_by(year) %>%
summarise(medianfDOM = median(fDOM, na.rm = TRUE),
medianNO3 = median(NO3, na.rm = TRUE),
medianSPC = median(SPC, na.rm = TRUE),
medianTURB = median(Turb, na.rm = TRUE))
View(year.vaul)
year.strt <- STRT_year %>%
group_by(year) %>%
summarise(medianfDOM = median(fDOM, na.rm = TRUE),
medianNO3 = median(NO3, na.rm = TRUE),
medianSPC = median(SPC, na.rm = TRUE),
medianTURB = median(Turb, na.rm = TRUE))
View(year.strt)
View(HI_FI_NO3)
# by year
HI_FI_NO3_2018 <- subset(HI_FI_NO3, year == "2018")
View(CARI_2018)
View(DOD_2018)
# Figuring out how many days are missing from the record
MOOS_2018 <- read.csv("~/Documents/DOD_2018_repo/EXO_data/from_internal_harddrive/processed/EXO_MOOS_final_formatted.csv")
FRCH_2018 <- read.csv("~/Documents/DOD_2018_repo/EXO_data/from_internal_harddrive/processed/EXO_FRCH_final_formatted.csv")
View(MOOS_2018)
str(MOOS_2018)
MOOS_2018$datetimeAK1 <- ymd_hms(MOOS_2018$datetimeAK)
# converting to datetime
MOOS_2018$datetimeAK <- ymd_hms(MOOS_2018$datetimeAK)
# identifying gaps
my_dat = data.frame(datetimeAK = na.omit(MOOS_2018$datetimeAK))
View(my_dat)
my_dat$datetimeAK = sort(my_dat$datetimeAK, decreasing = F)
my_dat$gap <- c(NA, with(my_dat, datetimeAK[-1] - datetimeAK[-nrow(my_dat)]))
gap_threshold <- 21600 # 6 hours in sec
my_dat$over_thresh <- my_dat$gap > gap_threshold
range(my_dat$datetimeAK, na.rm=T)
my_dat[which(my_dat$over_thresh==T)-1,]
my_dat[my_dat$over_thresh==T,]
gap_threshold <- 0 # 6 hours in sec
my_dat$over_thresh <- my_dat$gap > gap_threshold
gap_threshold <- 14 # 6 hours in sec
my_dat$over_thresh <- my_dat$gap > gap_threshold
gap_threshold <- 15 # 6 hours in sec
my_dat$over_thresh <- my_dat$gap > gap_threshold
range(my_dat$datetimeAK, na.rm=T)
my_dat[which(my_dat$over_thresh==T)-1,]
my_dat[my_dat$over_thresh==T,]
