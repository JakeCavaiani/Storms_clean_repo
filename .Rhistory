axes=F, xlab="", ylab="")
axis(side = 4)
# storm 5a #
plot(FRCH$Q ~ FRCH$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 1000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(12,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-08-18 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-08-20 05:30:00", tz="America/Anchorage"), col="purple")
# storm 5b #
plot(FRCH$Q ~ FRCH$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 1000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(12,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-08-20 05:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-08-23 02:30:00", tz="America/Anchorage"), col="purple")
FRCH_storm5b_08_20 = FRCH[FRCH$datetimeAK > as.POSIXct("2015-08-20 05:30:00", tz="America/Anchorage") &
FRCH$datetimeAK < as.POSIXct("2015-08-23 02:30:00", tz="America/Anchorage"),]
plot(FRCH_storm5b_08_20$Q ~ as.POSIXct(FRCH_storm5b_08_20$datetimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="FRCH 150820 storm 5b",
xlim = as.POSIXct(c("2015-08-20 00:00:00","2015-08-23 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM ~ FRCH$datetimeAK, xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2015-08-20 00:00:00","2015-08-23 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$NO3 ~ FRCH$datetimeAK, xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2015-08-20 00:00:00","2015-08-23 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SPC ~ FRCH$datetimeAK, xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2015-08-20 00:00:00","2015-08-23 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turb ~ FRCH$datetimeAK, xlab="", ylab="", col="black",
xlim = as.POSIXct(c("2015-08-20 00:00:00","2015-08-23 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-20 00:00:00","2015-08-23 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
# storm 6a #
plot(FRCH$Q ~ FRCH$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 6000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(12,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-08-25 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-08-28 22:30:00", tz="America/Anchorage"), col="purple")
FRCH_storm6a_08_25 = FRCH[FRCH$datetimeAK > as.POSIXct("2015-08-25 20:30:00", tz="America/Anchorage") &
FRCH$datetimeAK < as.POSIXct("2015-08-28 22:30:00", tz="America/Anchorage"),]
plot(FRCH_storm6a_08_25$Q ~ as.POSIXct(FRCH_storm6a_08_25$datetimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(0,6000), col="blue", main="FRCH 150825 storm 6a",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM ~ FRCH$datetimeAK, xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$NO3 ~ FRCH$datetimeAK, xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SPC ~ FRCH$datetimeAK, xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turb ~ FRCH$datetimeAK, xlab="", ylab="", col="black",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
# storm 6b #
plot(FRCH$Q ~ FRCH$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 6000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-08-31 23:45:00"), tz="America/Anchorage"),
ylim = c(12,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-08-28 22:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-08-30 08:30:00", tz="America/Anchorage"), col="purple")
FRCH_storm6b_08_28 = FRCH[FRCH$datetimeAK > as.POSIXct("2015-08-28 22:30:00", tz="America/Anchorage") &
FRCH$datetimeAK < as.POSIXct("2015-08-30 08:30:00", tz="America/Anchorage"),]
plot(FRCH_storm6b_08_28$Q ~ as.POSIXct(FRCH_storm6b_08_28$datetimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(0,6000), col="blue", main="FRCH 150828 storm 6b",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM ~ FRCH$datetimeAK, xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$NO3 ~ FRCH$datetimeAK, xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SPC ~ FRCH$datetimeAK, xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turb ~ FRCH$datetimeAK, xlab="", ylab="", col="black",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-08-30 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
# storm 6c #
plot(FRCH$Q ~ FRCH$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-09-10 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 6000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-15 00:00:00","2015-09-10 23:45:00"), tz="America/Anchorage"),
ylim = c(12,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-08-30 08:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-09-08 08:30:00", tz="America/Anchorage"), col="purple")
FRCH_storm6c_08_30 = FRCH[FRCH$datetimeAK > as.POSIXct("2015-08-30 08:30:00", tz="America/Anchorage") &
FRCH$datetimeAK < as.POSIXct("2015-09-08 08:30:00", tz="America/Anchorage"),]
plot(FRCH_storm6c_08_30$Q ~ as.POSIXct(FRCH_storm6c_08_30$datetimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(0,6000), col="blue", main="FRCH 150830 storm 6c",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-09-10 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM ~ FRCH$datetimeAK, xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-09-10 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$NO3 ~ FRCH$datetimeAK, xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-09-10 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SPC ~ FRCH$datetimeAK, xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-09-10 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turb ~ FRCH$datetimeAK, xlab="", ylab="", col="black",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-09-10 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-08-23 00:00:00","2015-09-10 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
# storm 7 #
plot(FRCH$Q ~ FRCH$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-09-10 00:00:00","2015-09-30 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 2000))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-09-10 00:00:00","2015-09-30 23:45:00"), tz="America/Anchorage"),
ylim = c(12,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-09-13 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-09-16 08:30:00", tz="America/Anchorage"), col="purple")
FRCH_storm7_09_13 = FRCH[FRCH$datetimeAK > as.POSIXct("2015-09-13 20:30:00", tz="America/Anchorage") &
FRCH$datetimeAK < as.POSIXct("2015-09-16 08:30:00", tz="America/Anchorage"),]
plot(FRCH_storm7_09_13$Q ~ as.POSIXct(FRCH_storm7_09_13$datetimeAK, tz="America/Anchorage"), xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="FRCH 150913 storm 7",
xlim = as.POSIXct(c("2015-09-12 00:00:00","2015-09-18 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM ~ FRCH$datetimeAK, xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2015-09-12 00:00:00","2015-09-18 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$NO3 ~ FRCH$datetimeAK, xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2015-09-12 00:00:00","2015-09-18 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SPC ~ FRCH$datetimeAK, xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2015-09-12 00:00:00","2015-09-18 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turb ~ FRCH$datetimeAK, xlab="", ylab="", col="black",
xlim = as.POSIXct(c("2015-09-12 00:00:00","2015-09-18 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-09-12 00:00:00","2015-09-18 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
##TKH: Annotation needed here. What are the components of the figure and what is it intended to show?
#FRCH#
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(15,0),
axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(15,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(frch.final.discharge.2015$Q ~ frch.final.discharge.2015$datetimeAK, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2015$SPC * 20 ~ FRCH.2015$datetimeAK, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
# MOOS #
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(15,0),
axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(moos.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(moos.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(15,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(moos.final.discharge.2015$Q ~ moos.final.discharge.2015$datetimeAK, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2015$SPC * 20 ~ MOOS.2015$datetimeAK, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2015-05-01 0:00:00","2015-10-31 00:00:00"), tz="America/Anchorage"))
# storm 3a #
plot(MOOS$Q ~ MOOS$datetimeAK, type="p", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2015-07-25 00:00:00","2015-08-05 23:45:00"), tz="America/Anchorage"),
ylim = c(0, 6500))
par(new = T)
plot(CPCRW$mean ~ CPCRW$datetimeAK, type="h",
xlim = as.POSIXct(c("2015-07-25 00:00:00","2015-08-05 23:45:00"), tz="America/Anchorage"),
ylim = c(8,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2015-07-27 05:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2015-07-28 14:30:00", tz="America/Anchorage"), col="purple")
############################ 2018 ################################################
Q.daily.2018 <- read.csv(here("processed_sensor_data", "2018", "Q.daily.2018.csv"))
head(Q.daily.2018)
Q.2018 <- read.csv(here("processed_sensor_data", "2018", "Q_2018.csv"))
Q.2018 <- read.csv(here("processed_sensor_data", "2018", "Q_2018.csv"))
Q.2018 <- Q.2018[c("Site", "DateTime", "Q")]
names(Q.2018) <- c("site.ID", "datetimeAK", "Q") # renaming the column headers to match that of the chem file
Q.2018$datetimeAK <- ymd_hms(Q.2018$datetimeAK) # converting character to datetime
Q.2018$datetimeAK <- force_tz(Q.2018$datetimeAK, "America/Anchorage") # converting character to datetime
chem.2018 <- read.csv(here("processed_sensor_data", "2018", "SUNA.EXO.int.corr.lab_2018.csv"), na.strings = "NA")
chem.2018 <- chem.2018[c("datetimeAK", "site.ID", "fDOM.QSU.T.turb.col", "SpCond.uScm.mn.adj",
"Turbidity.FNU.mn.adj", "nitrateuM.mn.lab", "abs254.adj.mn")]
chem.2018$datetimeAK <- ymd_hms(chem.2018$datetimeAK) # converting character to datetime
chem.2018$datetimeAK <- force_tz(chem.2018$datetimeAK, "America/Anchorage") # converting character to datetime
names(chem.2018) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "ABS_254")
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ####
# pivot long to get all the response variables in one column
chem_2018_long <- chem.2018 %>%
filter(site.ID %in% c("FRCH", "MOOS")) %>%
pivot_longer(
cols = fDOM:ABS_254,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
) # converting to a long format so each response_var is within a single column
ggplot(chem_2018_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_point(size = 0.5) +
scale_color_manual(values=c("#FF7F00", "#A6761D")) +
facet_wrap(~response_var, scales = "free") +
theme_classic()
# subset data by site #
FRCH.2018 <-  subset(chem.2018, site.ID == "FRCH")
FRCH.2018 <- FRCH.2018[order(FRCH.2018$datetimeAK),]
FRCH.2018 <- FRCH.2018[-c(11616:11629), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
MOOS.2018 <-  subset(chem.2018, site.ID == "MOOS")
MOOS.2018 <- MOOS.2018[order(MOOS.2018$datetimeAK),]
MOOS.2018 <- MOOS.2018[-c(12942:12949), ] # removing unnecessary rows that correspond to when I merge the file the NO3 from the lab merges weird with datetimes from another section within the dataframe
DOD.2018 <- rbind(FRCH.2018, MOOS.2018)
DOD.2018 <- full_join(DOD.2018, Q.2018) # merging chem and discharge data
frch.final.discharge.2018 <- subset(Q.2018, site.ID == "FRCH")
moos.final.discharge.2018 <- subset(Q.2018, site.ID == "MOOS")
head(frch.final.discharge.2018)
tail(frch.final.discharge.2018)
Q.2018$day = format(as.POSIXct(Q.2018$datetimeAK,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q.2018$day = as.POSIXct(Q.2018$day, "%Y-%m-%d", tz="America/Anchorage")
Q.daily.2018 = with(Q.2018, tapply(Q, list(day, site.ID), mean))
Q.daily.2018 = as.data.frame(Q.daily.2018)
FRCH.Q.2018 = as.data.frame(Q.daily.2018$FRCH)
FRCH.Q.2018$day = as.Date(rownames(Q.daily.2018))
names(FRCH.Q.2018) = c("Discharge_Lsec", "day")
MOOS.Q.2018 = as.data.frame(Q.daily.2018$MOOS)
MOOS.Q.2018$day = as.Date(rownames(Q.daily.2018))
names(MOOS.Q.2018) = c("Discharge_Lsec", "day")
# join Q and chem data
# FRCH #
FRCH = full_join(FRCH.2018, frch.final.discharge.2018)
# MOOS #
MOOS = full_join(MOOS.2018, moos.final.discharge.2018)
any(is.na(FRCH.Q.2018$day))
any(is.na(FRCH.Q.2018$Discharge_Lsec))
FRCH.Q.2018 <- na.omit(FRCH.Q.2018) # Removed 14 rows - (151 to 137)
any(is.na(MOOS.Q.2018$day))
any(is.na(MOOS.Q.2018$Discharge_Lsec))  # no NAs
### examine the recursive digital filter at .9, .925, .95 levels ###
plot(frch.final.discharge.2018$Q ~ frch.final.discharge.2018$datetimeAK, type = "l", xlab = "", ylab = "Q (L/sec)",
xlim =  as.POSIXct(c("2018-05-01 00:00:00","2018-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(0, 1500), col="blue")
#
plot(moos.final.discharge.2018$Q ~ moos.final.discharge.2018$datetimeAK, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(0,5000), col="blue")
### READ in CARI Data ###
# this is data directly from the NEON data base website that I downloaded
CARI.2018 <- read.csv(here("processed_sensor_data", "2018", "NEON_Q_WaterQuality2018.csv")) # this is from my NEON repository that reads in NEON data using their NEONutilities package and then manually cleaning points
CARI.2018$DateTimeAK <- ymd_hms(CARI.2018$DateTimeAK)
CARI.2018 <- CARI.2018[ , -which(names(CARI.2018) %in% c("site.ID.y"))] # dropping column header that I dont want
names(CARI.2018)[names(CARI.2018) == 'DateTimeAK'] <- 'datetimeAK'
names(CARI.2018)[names(CARI.2018) == 'site.ID.x'] <- 'site.ID'
CARI.2018$site.ID <- "CARI"
CARI.2018$day <-  format(as.POSIXct(CARI.2018$datetimeAK,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
CARI.2018$day <-  as.POSIXct(CARI.2018$day, "%Y-%m-%d", tz="America/Anchorage")
# make a daily Q record for CARI
cari.final.discharge.2018 <- CARI.2018[ , -which(names(CARI.2018) %in% c("NO3", "fDOM", "SPC", "Turb"))] # dropping column header that I dont want
CARI.daily.2018 <-  with(CARI.2018, tapply(Discharge, list(day, site.ID), mean))
CARI.daily.2018 <-  as.data.frame(CARI.daily.2018)
CARI.Q.2018 <-  as.data.frame(CARI.daily.2018$CARI)
CARI.Q.2018$day <-  as.Date(rownames(CARI.daily.2018))
names(CARI.Q.2018) <-  c("Discharge_Lsec", "day")
### PLOTTING TO MAKE SURE OUR INPUT DATA LOOKS GOOD BEFORE DOING LITERALLY EVERYTHING ELSE ####
# pivot long to get all the response variables in one column
cari_2018_long <- CARI.2018 %>%
pivot_longer(
cols = NO3:Turb,
names_to = "response_var",
values_to = "concentration",
values_drop_na = TRUE
)
ggplot(cari_2018_long, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_point(size = 0.5) +
scale_color_manual(values=c("#3288BD")) +
facet_wrap(~response_var, scales = "free") +
theme_classic()
chem_total <- full_join(cari_2018_long, chem_2018_long)
ggplot(chem_total, aes(x = datetimeAK, y = concentration, color = site.ID)) +
geom_point(size = 0.5) +
scale_color_manual(values=c("#3288BD","#FF7F00","#A6761D")) +
facet_wrap(~response_var, scales = "free") +
theme_classic()
# reading in Precip
CPCRW <- read_csv(here("Climate", "Precip", "POKE.RainGauge.2018.csv"))
CPCRW$datetimeAK <- CPCRW$DateTime
CPCRW$datetimeAK <- force_tz(CPCRW$datetimeAK, "America/Anchorage") # it already is in AK time so I want to make it recognize it without changing the actually time value
CPCRW <- CPCRW[c("datetimeAK", "Site", "inst_rainfall_mm")]
frch.precip.discharge <- full_join(frch.final.discharge.2018, CPCRW) # merging precip data and discharge
moos.precip.discharge <- full_join(moos.final.discharge.2018, CPCRW) # merging precip data and discharge
frch.precip.discharge <- frch.precip.discharge[order(frch.precip.discharge$datetimeAK),]
moos.precip.discharge <- moos.precip.discharge[order(moos.precip.discharge$datetimeAK),]
# making a uniform time series with 30 minute intervals and then I can sum precip by 24/48hour windows
ts <- seq(as.POSIXct("2018-05-01", tz = "America/Anchorage"),
as.POSIXct("2018-11-01", tz = "America/Anchorage"),
by = "60 min")
head(ts)
ts <- as.data.frame(ts)
names(ts) <- c("datetimeAK")
frch.precip.discharge <- left_join(ts, frch.precip.discharge, by = "datetimeAK")
### Sum daily discharge ###
frch.precip.discharge$twentyfour <- rollapplyr(frch.precip.discharge$inst_rainfall_mm, 24, sum, na.rm = TRUE, fill = NA, partial = TRUE)
frch.precip.discharge$fourtyeight <- rollapplyr(frch.precip.discharge$inst_rainfall_mm, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
moos.precip.discharge$twentyfour <- rollapplyr(moos.precip.discharge$inst_rainfall_mm, 24, sum, na.rm = TRUE, fill = NA, partial = TRUE)
moos.precip.discharge$fourtyeight <- rollapplyr(moos.precip.discharge$inst_rainfall_mm, 48, sum, na.rm = TRUE, fill = NA, partial = TRUE)
# Greater than 5 #
moos.five.twenty.four <- moos.precip.discharge[which(moos.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
moos.five.fourty.eight <- moos.precip.discharge[which(moos.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
frch.five.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
frch.five.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
# Greater than 10 #
moos.ten.twenty.four <- moos.precip.discharge[which(moos.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
moos.ten.fourty.eight <- moos.precip.discharge[which(moos.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
frch.ten.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
frch.ten.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
### Delineate storms ###
#FRCH#
# rename the columns to what they were to save me a bunch of time going back and changing every call to a column
names(FRCH) <- c("DateTime", "Site", "fDOM.QSU",
"SpCond.uScm", "Turbidity.FNU",
"nitrateuM", "ABS_254", "MeanDischarge")
FRCH <- FRCH[order(FRCH$DateTime),] # there were weird NAs on the bottom that were causing the dates to not be merged properly
ts <- seq(as.POSIXct("2018-05-01", tz = "America/Anchorage"),
as.POSIXct("2018-11-01", tz = "America/Anchorage"),
by = "30 min")
head(ts)
ts <- as.data.frame(ts)
names(ts) <- c("DateTime")
FRCH <- left_join(ts, FRCH, by = "DateTime")
## TKH: is this needed?
# Assign CPCRW precip script to POKE.st because thats what I named it earlier and it will save me time just like the previous couple lines
POKE.st <- CPCRW
names(POKE.st) <- c("DateTime", "Site", "inst_rainfall_mm")
poke.five.fourty.eight <- frch.five.fourty.eight
names(poke.five.fourty.eight) <- c("DateTime", "site.ID", "Q", "Site",
"inst_rainfall_mm", "twentyfour", "fourtyeight")
poke.five.twenty.four <- frch.five.twenty.four
names(poke.five.twenty.four) <- c("DateTime", "site.ID", "Q", "Site",
"inst_rainfall_mm", "twentyfour", "fourtyeight")
# test
ggplot(FRCH, aes(DateTime, MeanDischarge)) +
geom_line()
#plots
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
# rename the columns to what they were to save me a bunch of time going back and changing every call to a column
names(MOOS) <- c("DateTime", "Site",
"fDOM.QSU", "SpCond.uScm", "Turbidity.FNU",
"nitrateuM", "ABS_254" ,"MeanDischarge")
MOOS <- MOOS[order(MOOS$DateTime),] # there were weird NAs on the bottom that were causing the dates to not be merged properly
ts <- seq(as.POSIXct("2018-05-01", tz = "America/Anchorage"),
as.POSIXct("2018-11-01", tz = "America/Anchorage"),
by = "30 min")
head(ts)
ts <- as.data.frame(ts)
names(ts) <- c("DateTime")
MOOS <- left_join(ts, MOOS, by = "DateTime")
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
### Precip Discharge Chem ###
#CARI#
CARI_2018 <- CARI.2018 # renaming this to save me lots of time from old script
names(CARI_2018) <- c("Site","DateTime", "Discharge", "NO3",
"fDOM", "SpCond", "Turb", "day")
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 10 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 0.5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="blue",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
summary(CARI_2018)
lines(CARI_2018$Turb ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="blue",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
