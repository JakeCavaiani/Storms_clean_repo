# SPC #
CV_all_year_SPC = subset(CV.all.year, response_var == "SPC")
# turb #
CV_all_year_turb = subset(CV.all.year, response_var == "turb")
# all years in one
CV.all[c("Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI")] <- lapply(CV.all[c("Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI")], function(x) c(scale(x)))
CV_all_NO3 = subset(CV.all, response_var == "NO3")
# fDOM #
CV_all_fDOM = subset(CV.all, response_var == "fDOM")
# SPC #
CV_all_SPC = subset(CV.all, response_var == "SPC")
# turb #
CV_all_turb = subset(CV.all, response_var == "turb")
Catchment_characteristics <- read.csv(here("Ancillary_data", "AK_polys_190903_Predictors.csv"))
Catchment_characteristics <- Catchment_characteristics[c("SLOPE_MEAN", "pctburn_lg", "Pf_Prob_1m_mean_x", "NDVI_p50__mean_abs_change", "NDVI_p50__mean_second_derivative_central",  "NDVI_p50__mean", "NDVI_p50__standard_deviation")]
# scaling data #
#scaling #
Catchment_characteristics[c("SLOPE_MEAN", "pctburn_lg", "Pf_Prob_1m_mean_x", "NDVI_p50__mean_abs_change", "NDVI_p50__mean_second_derivative_central",  "NDVI_p50__mean", "NDVI_p50__standard_deviation")] <- lapply(Catchment_characteristics[c("SLOPE_MEAN", "pctburn_lg", "Pf_Prob_1m_mean_x","NDVI_p50__mean_abs_change", "NDVI_p50__mean_second_derivative_central",  "NDVI_p50__mean", "NDVI_p50__standard_deviation")], function(x) c(scale(x)))
DOD_characteristics <- read.csv(here("Ancillary_data", "DOD_Sites_AK_polys_190903_Predictors.csv"))
DOD_characteristics <- DOD_characteristics[c("site.ID", "SLOPE_MEAN", "pctburn_lg", "Pf_Prob_1m_mean_x", "NDVI_p50__mean_abs_change", "NDVI_p50__mean_second_derivative_central",  "NDVI_p50__mean", "NDVI_p50__standard_deviation")]
# scaling data #
#scaling #
DOD_characteristics[c("SLOPE_MEAN", "pctburn_lg", "Pf_Prob_1m_mean_x", "NDVI_p50__mean_abs_change", "NDVI_p50__mean_second_derivative_central",  "NDVI_p50__mean", "NDVI_p50__standard_deviation")] <- lapply(DOD_characteristics[c("SLOPE_MEAN", "pctburn_lg", "Pf_Prob_1m_mean_x", "NDVI_p50__mean_abs_change", "NDVI_p50__mean_second_derivative_central",  "NDVI_p50__mean", "NDVI_p50__standard_deviation")], function(x) c(scale(x)))
NO3_data_year<- CV_all_year_NO3[,c("site.ID", "year", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI_change", "NDVI_derivative", "NDVI", "NDVIsd", "CatBurn", "CatPF")]
NO3_data<- CV_all_NO3[,c("site.ID", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "CatBurn", "CatPF")]
HI.no3.slope <- lm(meanHI ~ Slope,
data = NO3_data)
HI.no3.burn <- lm(meanHI ~ pctburn_lg,
data = NO3_data)
ggplot(NO3_data, aes(x = pctburn_lg, y = meanHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()
ggplot(NO3_data, aes(x = pctburn_lg, y = meanHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Mean HI") +
ylab("Percent Burn")
ggplot(NO3_data, aes(x = pctburn_lg, y = meanHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Percent Burn") +
ylab("Mean HI")
no3.hi.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Percent Burn") +
ylab("Mean HI")
BETA.no3.slope <- lm(meanBETA ~ Slope,
data = NO3_data)
BETA.no3.burn <- lm(meanBETA ~ pctburn_lg,
data = NO3_data)
no3.beta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Percent Burn") +
ylab("Mean BETA")
sdHI.no3.slope <- lm(sdHI ~ Slope,
data = NO3_data)
sdHI.no3.burn <- lm(sdHI ~ pctburn_lg,
data = NO3_data)
ggplot(NO3_data, aes(x = Slope, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()
ggplot(NO3_data, aes(x = Slope, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Slope") +
ylab("Standard Deviation HI")
no3.sdhi.slope <- ggplot(NO3_data, aes(x = Slope, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Slope") +
ylab("Standard Deviation HI")
sdBETA.no3.slope <- lm(sdBETA ~ Slope,
data = NO3_data)
sdBETA.no3.burn <- lm(sdBETA ~ pctburn_lg,
data = NO3_data)
ggplot(NO3_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()
no3.sdbeta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Percent Burn") +
ylab("Standard Deviation BETA")
ggarrange(no3.hi.burn, no3.beta.burn,
no3.sdhi.slope, no3.sdbeta.burn,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
no3.sdbeta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Percent Burn") +
ylab("Standard Deviation BETA")
no3.sdhi.slope <- ggplot(NO3_data, aes(x = Slope, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Slope") +
ylab("Standard Deviation HI")
ggarrange(no3.hi.burn, no3.beta.burn,
no3.sdhi.slope, no3.sdbeta.burn,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
ggsave("no3_characteristics.pdf",
path = here("plots", "Catchment_characteristics"),
width = 15, height = 10)
fDOM_data_year<- CV_all_year_fDOM[,c("site.ID", "year", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "CatBurn", "CatPF")]
fDOM_data<- CV_all_fDOM[,c("site.ID", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "CatBurn", "CatPF")]
HI.fDOM.slope <- lm(meanHI ~ Slope,
data = fDOM_data)
HI.fDOM.burn <- lm(meanHI ~ pctburn_lg,
data = fDOM_data)
fdom.hi.slope <- ggplot(fDOM_data, aes(x = Slope, y = meanHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Slope") +
ylab("Mean HI")
BETA.fDOM.slope <- lm(meanBETA ~ Slope,
data = fDOM_data)
BETA.fDOM.burn <- lm(meanBETA ~ pctburn_lg,
data = fDOM_data)
fDOM.beta.slope <- ggplot(fDOM_data, aes(x = Slope, y = meanBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Slope") +
ylab("Mean BETA")
sdHI.fDOM.slope <- lm(sdHI ~ Slope,
data = fDOM_data)
sdHI.fDOM.burn <- lm(sdHI ~ pctburn_lg,
data = fDOM_data)
fDOM.sdhi.burn <- ggplot(fDOM_data, aes(x = pctburn_lg, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Percent Burn") +
ylab("Standard Deviation HI")
sdBETA.fDOM.slope <- lm(sdBETA ~ Slope,
data = fDOM_data)
sdBETA.fDOM.burn <- lm(sdBETA ~ pctburn_lg,
data = fDOM_data)
fDOM.sdbeta.slope <- ggplot(fDOM_data, aes(x = Slope, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Slope") +
ylab("Standard Deviation BETA")
ggarrange(fDOM.hi.slope, fDOM.beta.slope,
fDOM.sdhi.burn, fDOM.sdbeta.slope,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
ggarrange(fdom.hi.slope, fDOM.beta.slope,
fDOM.sdhi.burn, fDOM.sdbeta.slope,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
fDOM.beta.slope <- ggplot(fDOM_data, aes(x = Slope, y = meanBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
xlab("Slope") +
ylab("Mean BETA")
fDOM.sdhi.burn <- ggplot(fDOM_data, aes(x = pctburn_lg, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Percent Burn") +
ylab("Standard Deviation HI")
fDOM.sdbeta.slope <- ggplot(fDOM_data, aes(x = Slope, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Slope") +
ylab("Standard Deviation BETA")
ggarrange(fdom.hi.slope, fDOM.beta.slope,
fDOM.sdhi.burn, fDOM.sdbeta.slope,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
ggsave("fDOM_characteristics.pdf",
path = here("plots", "Catchment_characteristics"),
width = 15, height = 10)
SPC_data_year<- CV_all_year_SPC[,c("site.ID", "year", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "CatBurn", "CatPF")]
SPC_data<- CV_all_SPC[,c("site.ID", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "CatBurn", "CatPF")]
HI.SPC.slope <- lm(meanHI ~ Slope,
data = SPC_data)
HI.SPC.burn <- lm(meanHI ~ pctburn_lg,
data = SPC_data)
spc.hi.slope <- ggplot(SPC_data, aes(x = Slope, y = meanHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Slope") +
ylab("Mean HI")
BETA.SPC.slope <- lm(meanBETA ~ Slope,
data = SPC_data)
BETA.SPC.burn <- lm(meanBETA ~ pctburn_lg,
data = SPC_data)
spc.beta.slope <- ggplot(SPC_data, aes(x = Slope, y = meanBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Slope") +
ylab("Mean BETA")
sdHI.SPC.slope <- lm(sdHI ~ Slope,
data = SPC_data)
sdHI.SPC.burn <- lm(sdHI ~ pctburn_lg,
data = SPC_data)
spc.sdhi.burn <- ggplot(SPC_data, aes(x = pctburn_lg, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Percent Burn") +
ylab("Standard Deviation HI")
sdBETA.SPC.slope <- lm(sdBETA ~ Slope,
data = SPC_data)
sdBETA.SPC.burn <- lm(sdBETA ~ pctburn_lg,
data = SPC_data)
spc.sdbeta.burn <- ggplot(SPC_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Percent Burn") +
ylab("Standard Deviation BETA")
ggarrange(spc.hi.slope, spc.beta.slope,
spc.sdhi.burn, spc.sdbeta.burn,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
spc.sdhi.burn <- ggplot(SPC_data, aes(x = pctburn_lg, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Percent Burn") +
ylab("Standard Deviation HI")
spc.sdbeta.burn <- ggplot(SPC_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Percent Burn") +
ylab("Standard Deviation BETA")
ggarrange(spc.hi.slope, spc.beta.slope,
spc.sdhi.burn, spc.sdbeta.burn,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
ggsave("SPC_characteristics.pdf",
path = here("plots", "Catchment_characteristics"),
width = 15, height = 10)
turb_data_year<- CV_all_year_turb[,c("site.ID", "year", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "CatBurn", "CatPF")]
turb_data<- CV_all_turb[,c("site.ID", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "CatBurn", "CatPF")]
HI.turb.slope <- lm(meanHI ~ Slope,
data = turb_data)
HI.turb.burn <- lm(meanHI ~ pctburn_lg,
data = turb_data)
turb.hi.burn <- ggplot(turb_data, aes(x = pctburn_lg, y = meanHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Percent Burn") +
ylab("Mean HI")
BETA.turb.slope <- lm(meanBETA ~ Slope,
data = turb_data)
BETA.turb.burn <- lm(meanBETA ~ pctburn_lg,
data = turb_data)
turb.beta.slope <- ggplot(turb_data, aes(x = Slope, y = meanBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Slope") +
ylab("Mean BETA")
sdHI.turb.slope <- lm(sdHI ~ Slope,
data = turb_data)
sdHI.turb.burn <- lm(sdHI ~ pctburn_lg,
data = turb_data)
turb.sdhi.burn <- ggplot(turb_data, aes(x = pctburn_lg, y = sdHI)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Percent Burn") +
ylab("Standard Deviation HI")
sdBETA.turb.slope <- lm(sdBETA ~ Slope,
data = turb_data)
sdBETA.turb.burn <- lm(sdBETA ~ pctburn_lg,
data = turb_data)
turb.sdbeta.slope <- ggplot(turb_data, aes(x = Slope, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic()+
xlab("Slope") +
ylab("Standard Deviation BETA")
ggarrange(turb.hi.burn, turb.beta.slope,
turb.sdhi.burn, turb.sdbeta.slope,
ncol = 2, nrow = 2,
common.legend = TRUE,
labels = c("A)", "B)",
"C)", "D)"),
legend = "bottom")
ggsave("turb_characteristics.pdf",
path = here("plots", "Catchment_characteristics"),
width = 15, height = 10)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(plyr)
library(imputeTS)
library(TSA)
library(bbmle)
library(zoo)
library(xts)
library(forecast)
library(stats)
library(lattice)
library(nlme)
library(geosphere)
library(car)
library(EcoHydRology)
library(dplyr)
library(here)
FRCH_storm2a_06_29_Q <- read_csv(here("Storm_Events", "2018", "FRCH", "FRCH_storm2a_06_29_Q.csv"))
options(tz="America/Anchorage")
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(plyr)
library(imputeTS)
library(TSA)
library(bbmle)
library(zoo)
library(xts)
library(forecast)
library(stats)
library(lattice)
library(nlme)
library(geosphere)
library(car)
library(EcoHydRology)
library(dplyr)
library(here)
FRCH_storm2a_06_29_Q <- read_csv(here("Storm_Events", "2018", "FRCH", "FRCH_storm2a_06_29_Q.csv"))
View(FRCH_storm2a_06_29_Q)
#FRCH_storm2a_06_29 <- read_csv("~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2a_06_29.csv")
FRCH_storm2a_06_29_Q <- read_csv("Storm_Events/2018/FRCH/FRCH_storm2a_06_29_Q.csv")
FRCH_storm2a_06_29_NO3 <- read_csv("Storm_Events/2018/FRCH/FRCH_storm2a_06_29_NO3.csv")
#FRCH_storm2b_07_04 <- read_csv("~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2b_07_04.csv")
FRCH_storm2b_07_04_Q <- read_csv("Storm_Events/2018/FRCH/FRCH_storm2b_07_04_Q.csv")
View(FRCH_storm2b_07_04_Q)
# MOOS #
#MOOS_storm1_06_21 <- read_csv("~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm1_06_21.csv")
MOOS_storm1_06_21_Q <- read_csv("Storm_Events/2018/MOOS/MOOS_storm1_06_21_Q.csv")
View(MOOS_storm1_06_21_Q)
# MOOS #
MOOS_storm1_06_21_NO3 <- read_csv(here("Storm_Events", "2018", "MOOS", "MOOS_storm1_06_21_NO3.csv"))
View(MOOS_storm1_06_21_NO3)
# CARI #
CARI_storm3_06_29_Q <- read_csv(here("Storm_Events", "2018", "CARI", "CARI_storm3_06_29_Q"))
CARI_storm3_06_29_NO3 <- read_csv(here("Storm_Events", "2018", "CARI", "CARI_storm3_06_29_NO3"))
CARI_storm3_06_29_fDOM <- read_csv(here("Storm_Events", "2018", "CARI", "CARI_storm3_06_29_fDOM"))
CARI_storm3_06_29_SPC <- read_csv(here("Storm_Events", "2018", "CARI", "CARI_storm3_06_29_SPC"))
CARI_storm3_06_29_turb <- read_csv(here("Storm_Events", "2018", "CARI", "CARI_storm3_06_29_turb"))
# CARI #
setwd(here("Storms_clean_repo"))
setwd("~/Documents/Storms_clean_repo")
CARI_storm3_06_29_Q <- read_csv(here("Storm_Events", "2018", "CARI", "CARI_storm3_06_29_Q"))
