temp <- STRT.2020.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event
STRT.2020.per.storm.1$temp <- temp$temp
STRT.2020 <-  subset(chem.2020, site.ID == "STRT")
STRT.2020$DateTime <- as.POSIXct(STRT.2020$datetimeAK)
STRT.2020 <- left_join(STRT.2020, STRT_RainGauge_2020, by = "DateTime")
STRT.2020 <- left_join(STRT.2020, airtempmean, by = "DateTime")
STRT.2020$week <- rollapplyr(STRT.2020$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2020$month <- rollapplyr(STRT.2020$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2020$ThreeMonth <- rollapplyr(STRT.2020$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2020$temp.week <- rollapplyr(STRT.2020$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2020.1 <- left_join(STRT.2020.storms.1, STRT.2020, by = "DateTime") # week month and 3 month precip totals
STRT.2020.per.storm.2 <- STRT.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
STRT.2020.per.storm.3 <- STRT.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm
STRT.2020.per.storm.4 <- STRT.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
STRT.2020.per.storm.5 <- STRT.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
HI.mean.precip.strt.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "NO3")
HI.mean.precip.strt.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "fDOM")
HI.mean.precip.strt.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "SPC")
HI.mean.precip.strt.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "turb")
HI.mean.precip.strt.abs <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "abs")
HI.strt.no3.2020 <- left_join(HI.mean.precip.strt.NO3, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.no3.2020 <- left_join(HI.strt.no3.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.no3.2020 <- left_join(HI.strt.no3.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.no3.2020 <- left_join(HI.strt.no3.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.no3.2020 <- left_join(HI.strt.no3.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.no3 <- lm(HI.strt.no3.2020$HI ~ HI.strt.no3.2020$precip) # model one with just total precip
strt.lm.no3.2 <- lm(HI.strt.no3.2020$HI ~ HI.strt.no3.2020$precip.week) # model one with just total precip
strt.lm.no3.3 <- lm(HI.strt.no3.2020$HI ~ HI.strt.no3.2020$precip.month) # model one with just total precip
strt.lm.no3.4 <- lm(HI.strt.no3.2020$HI ~ HI.strt.no3.2020$ThreeMonth) # model one with just total precip
strt.formula <- y ~ x
eaa <- HI.strt.no3.2020 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT NO3") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
ebb <- HI.strt.no3.2020 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT NO3") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
ecc <- HI.strt.no3.2020 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT NO3") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
edd <- HI.strt.no3.2020 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT NO3") +
xlab("Three Precip") +
ylab("HI-Solute Storage") # plot model
HI.strt.fDOM.2020 <- left_join(HI.mean.precip.strt.fDOM, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.fDOM.2020 <- left_join(HI.strt.fDOM.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.fDOM.2020 <- left_join(HI.strt.fDOM.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.fDOM.2020 <- left_join(HI.strt.fDOM.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.fDOM.2020 <- left_join(HI.strt.fDOM.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.fDOM <- lm(HI.strt.fDOM.2020$HI ~ HI.strt.fDOM.2020$precip) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2020$HI ~ HI.strt.fDOM.2020$precip.week) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2020$HI ~ HI.strt.fDOM.2020$precip.month) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2020$HI ~ HI.strt.fDOM.2020$ThreeMonth) # model one with just total precip
ede <- HI.strt.fDOM.2020 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT fDOM") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
eff <- HI.strt.fDOM.2020 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT fDOM") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
egg <- HI.strt.fDOM.2020 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT fDOM") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
ehh <- HI.strt.fDOM.2020 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT fDOM") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.strt.SPC.2020 <- left_join(HI.mean.precip.strt.SPC, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.SPC.2020 <- left_join(HI.strt.SPC.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.SPC.2020 <- left_join(HI.strt.SPC.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.SPC.2020 <- left_join(HI.strt.SPC.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.SPC.2020 <- left_join(HI.strt.SPC.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.SPC <- lm(HI.strt.SPC.2020$HI ~ HI.strt.SPC.2020$precip) # model one with just total precip
strt.lm.SPC.2 <- lm(HI.strt.SPC.2020$HI ~ HI.strt.SPC.2020$precip.week) # model one with just total precip
strt.lm.SPC.3 <- lm(HI.strt.SPC.2020$HI ~ HI.strt.SPC.2020$precip.month) # model one with just total precip
strt.lm.SPC.4 <- lm(HI.strt.SPC.2020$HI ~ HI.strt.SPC.2020$ThreeMonth) # model one with just total precip
eii <- HI.strt.SPC.2020 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT SPC") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
ejj <- HI.strt.SPC.2020 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT SPC") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
ekk <- HI.strt.SPC.2020 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT SPC") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
ell <- HI.strt.SPC.2020 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT SPC") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.strt.turb.2020 <- left_join(HI.mean.precip.strt.turb, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.turb.2020 <- left_join(HI.strt.turb.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.turb.2020 <- left_join(HI.strt.turb.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.turb.2020 <- left_join(HI.strt.turb.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.turb.2020 <- left_join(HI.strt.turb.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.turb <- lm(HI.strt.turb.2020$HI ~ HI.strt.turb.2020$precip) # model one with just total precip
strt.lm.turb.2 <- lm(HI.strt.turb.2020$HI ~ HI.strt.turb.2020$precip.week) # model one with just total precip
strt.lm.turb.3 <- lm(HI.strt.turb.2020$HI ~ HI.strt.turb.2020$precip.month) # model one with just total precip
strt.lm.turb.4 <- lm(HI.strt.turb.2020$HI ~ HI.strt.turb.2020$ThreeMonth) # model one with just total precip
emm <- HI.strt.turb.2020 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT turb") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
enn <- HI.strt.turb.2020 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT turb") +
xlab("one-week Precip") +
ylab("HI-Solute Storage") # plot model
eoo <- HI.strt.turb.2020 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT turb") +
xlab("one-month Precip") +
ylab("HI-Solute Storage") # plot model
epp <- HI.strt.turb.2020 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT turb") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
STRT.2020.storms.1 <- na.omit(STRT.2020.storms.1)
sum.time <- STRT.2020.storms.1 %>%
mutate(grp=data.table::rleid(storm.num))%>%
group_by(grp) %>%
summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
min(DateTime),units="hour"))%>%
group_by(storm.num) %>%
summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column
# this sumtime works for some of the storms but not all so I am manually creating the dataframe below and merging that
sum.time <- data.frame(
storm.num = c("storm10", "storm1a", "storm1b", "storm1c", "storm1e", "storm2",
"storm3", "storm4a", "storm4b", "storm5", "storm6", "storm7a",
"storm7b", "storm9a", "storm9b", "storm9c", "storm1d", "storm8"),
TOTAL.TIME = c(61.25, 26.5, 40,26,110.75,41.25,
96.25,34.75,80.25,68.25,30.25,24.25,
23.5,73.25,21.25,120.25,21.25,20.25))
HI.strt.no3.2.2020 <- left_join(HI.strt.no3.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.no3.2.2020$TOTAL.TIME <- as.numeric(HI.strt.no3.2.2020$TOTAL.TIME)
HI.strt.no3.2.2020$Intensity <- HI.strt.no3.2.2020$precip/HI.strt.no3.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
strt.lm.no3.2 <- lm(HI.strt.no3.2.2020$HI ~ HI.strt.no3.2.2020$precip + HI.strt.no3.2.2020$Intensity) # model one with total precip and intensity
eqq <- HI.strt.no3.2.2020 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT NO3") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.fDOM.2.2020 <- left_join(HI.strt.fDOM.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.fDOM.2.2020$TOTAL.TIME <- as.numeric(HI.strt.fDOM.2.2020$TOTAL.TIME)
HI.strt.fDOM.2.2020$Intensity <- HI.strt.fDOM.2.2020$precip/HI.strt.fDOM.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
strt.lm.fDOM.2 <- lm(HI.strt.fDOM.2.2020$HI ~ HI.strt.fDOM.2.2020$precip + HI.strt.fDOM.2.2020$Intensity) # model one with total precip and intensity
err <- HI.strt.fDOM.2.2020 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT fDOM") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.SPC.2.2020 <- left_join(HI.strt.SPC.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.SPC.2.2020$TOTAL.TIME <- as.numeric(HI.strt.SPC.2.2020$TOTAL.TIME)
HI.strt.SPC.2.2020$Intensity <- HI.strt.SPC.2.2020$precip/HI.strt.SPC.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
strt.lm.SPC.2 <- lm(HI.strt.SPC.2.2020$HI ~ HI.strt.SPC.2.2020$precip + HI.strt.SPC.2.2020$Intensity) # model one with total precip and intensity
ess <- HI.strt.SPC.2.2020 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT SPC") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.turb.2.2020 <- left_join(HI.strt.turb.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.turb.2.2020$TOTAL.TIME <- as.numeric(HI.strt.turb.2.2020$TOTAL.TIME)
HI.strt.turb.2.2020$Intensity <- HI.strt.turb.2.2020$precip/HI.strt.turb.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
strt.lm.turb.2 <- lm(HI.strt.turb.2.2020$HI ~ HI.strt.turb.2.2020$precip + HI.strt.turb.2.2020$Intensity) # model one with total precip and intensity
ett <- HI.strt.turb.2.2020 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT turb") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
# day of year #
STRT.2020.1$day <- julian(STRT.2020.1$DateTime, origin = "2020-01-01", tz = 'America/Anchorage')
STRT.2020.1$day <- as.numeric(STRT.2020.1$day)
STRT.2020.per.storm.5 <- STRT.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
HI.strt.no3.2.2020 <- left_join(HI.strt.no3.2.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.no3.5 <- lm(HI.strt.no3.2.2020$HI ~ HI.strt.no3.2.2020$doy)
euu <- HI.strt.no3.2.2020 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT NO3") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.fDOM.2.2020 <- left_join(HI.strt.fDOM.2.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.fDOM.5 <- lm(HI.strt.fDOM.2.2020$HI ~ HI.strt.fDOM.2.2020$doy)
etb <- HI.strt.fDOM.2.2020 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT fDOM") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.SPC.2.2020 <- left_join(HI.strt.SPC.2.2020, STRT.2020.per.storm.5, by = "storm.num")
sttrt.lm.SPC.5 <- lm(HI.strt.SPC.2.2020$HI ~ HI.strt.SPC.2.2020$doy)
evv <- HI.strt.SPC.2.2020 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT SPC") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.turb.2.2020 <- left_join(HI.strt.turb.2.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.turb.5 <- lm(HI.strt.turb.2.2020$HI ~ HI.strt.turb.2.2020$doy)
eww <- HI.strt.turb.2.2020 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT turb") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
#plot_grid(eaa,ebb,ecc,edd,ede,eff,egg,ehh,eii,ejj,ekk,ell,emm,enn,eoo,epp,eqq,err,ess,ett,euu,etb,evv,eww,
#          ncol = 4)
# abs #
HI.strt.abs.2020 <- left_join(HI.mean.precip.strt.abs, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.abs.2020 <- left_join(HI.strt.abs.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.abs.2020 <- left_join(HI.strt.abs.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.abs.2020 <- left_join(HI.strt.abs.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.abs.2020 <- left_join(HI.strt.abs.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.abs <- lm(HI.strt.abs.2020$HI ~ HI.strt.abs.2020$precip) # model one with just total precip
strt.lm.abs.2 <- lm(HI.strt.abs.2020$HI ~ HI.strt.abs.2020$precip.week) # model one with just total precip
strt.lm.abs.3 <- lm(HI.strt.abs.2020$HI ~ HI.strt.abs.2020$precip.month) # model one with just total precip
strt.lm.abs.4 <- lm(HI.strt.abs.2020$HI ~ HI.strt.abs.2020$ThreeMonth) # model one with just total precip
strt.lm.abs.5 <- lm(HI.strt.abs.2020$HI ~ HI.strt.abs.2020$temp) # model one with just total precip
HI.strt.abs.2.2020 <- left_join(HI.strt.abs.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.abs.2.2020$TOTAL.TIME <- as.numeric(HI.strt.abs.2.2020$TOTAL.TIME)
HI.strt.abs.2.2020$Intensity <- HI.strt.abs.2.2020$precip/HI.strt.abs.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
HI.strt.2020 <- rbind(HI.strt.no3.2.2020, HI.strt.fDOM.2.2020,
HI.strt.SPC.2.2020, HI.strt.turb.2.2020,
HI.strt.abs.2.2020) # merging all responses together
HI.strt.2020$burn <- "burned" # adding a burn column
HI.strt.2020$pf <- "high" # adding a pf column
write.csv(HI.strt.2020, here("Output_from_analysis", "04_Antecedent_Conditions", "2020", "HI.strt.2020.csv"))
library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)
setwd("~/GitHub/Storms_clean_repo/Storm_Events/2020")
storm_file_list_beta <- list.files(path="FRCH_MOOS_VAUL_POKE_STRT_CARI/",
recursive=F,
pattern=".csv",
full.names=TRUE)
storm_list_beta<-do.call("list", lapply(storm_file_list_beta,
read.csv,
stringsAsFactors=FALSE,
header=T, row.names=1))
storm_file_list_beta = sub("FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list_beta, replacement = "")
# storm_file_list_beta = sub("~/Documents/Storms_clean_repo/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta
FRCH_storm_list_beta = storm_list_beta[c(1:84)] #84
STRT_storm_list_beta = storm_list_beta[c(85:162)] #78
STRT_NO3_storm_list_beta = STRT_storm_list_beta[c(grep("NO3", names(STRT_storm_list_beta)))]
for(i in 1:length(STRT_NO3_storm_list_beta)){
STRT_NO3_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(STRT_NO3_storm_list_beta[[i]][["valuedatetime"]],
"%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
STRT_fDOM_storm_list_beta = STRT_storm_list_beta[c(grep("fDOM", names(STRT_storm_list_beta)))]
for(i in 1:length(STRT_fDOM_storm_list_beta)){
STRT_fDOM_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(STRT_fDOM_storm_list_beta[[i]][["valuedatetime"]],
"%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
STRT_SpCond_storm_list_beta = STRT_storm_list_beta[c(grep("SPC", names(STRT_storm_list_beta)))]
for(i in 1:length(STRT_SpCond_storm_list_beta)){
STRT_SpCond_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(STRT_SpCond_storm_list_beta[[i]][["valuedatetime"]],
"%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
STRT_turb_storm_list_beta = STRT_storm_list_beta[c(grep("Turb", names(STRT_storm_list_beta)))]
for(i in 1:length(STRT_turb_storm_list_beta)){
STRT_turb_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(STRT_turb_storm_list_beta[[i]][["valuedatetime"]],
"%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
STRT_abs_storm_list_beta = STRT_storm_list_beta[c(grep("abs", names(STRT_storm_list_beta)))]
for(i in 1:length(STRT_abs_storm_list_beta)){
STRT_abs_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(STRT_abs_storm_list_beta[[i]][["valuedatetime"]],
"%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
STRT_Q_storm_list_beta = STRT_storm_list_beta[c(grep("Q", names(STRT_storm_list_beta)))]
for(i in 1:length(STRT_Q_storm_list_beta)){
STRT_Q_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(STRT_Q_storm_list_beta[[i]][["valuedatetime"]],
"%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
# STRT
for(i in 1:length(STRT_Q_storm_list_beta)){
STRT_Q_storm_list_beta[[i]][["datavalue.norm"]] =
(STRT_Q_storm_list_beta[[i]][["datavalue"]]-min(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(STRT_fDOM_storm_list_beta)){
STRT_fDOM_storm_list_beta[[i]][["datavalue.norm"]] =
(STRT_fDOM_storm_list_beta[[i]][["datavalue"]]-min(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(STRT_SpCond_storm_list_beta)){
STRT_SpCond_storm_list_beta[[i]][["datavalue.norm"]] =
(STRT_SpCond_storm_list_beta[[i]][["datavalue"]]-min(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(STRT_turb_storm_list_beta)){
STRT_turb_storm_list_beta[[i]][["datavalue.norm"]] =
(STRT_turb_storm_list_beta[[i]][["datavalue"]]-min(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(STRT_abs_storm_list_beta)){
STRT_abs_storm_list_beta[[i]][["datavalue.norm"]] =
(STRT_abs_storm_list_beta[[i]][["datavalue"]]-min(STRT_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(STRT_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
STRT_NO3_storm <- map2_df(STRT_Q_storm_list_beta, STRT_NO3_storm_list_beta, inner_join, by = "valuedatetime")
# STRT #
STRT_NO3_storm$storm.ID = c(rep("storm10", 246),
rep("storm1a", 969),
rep("storm2", 166),
rep("storm3", 386),
rep("storm4a", 140),
rep("storm4b", 322),
rep("storm5", 250),
rep("storm6", 122),
rep("storm7a", 98),
rep("storm8", 162),
rep("storm9a", 294),
rep("storm9b", 134),
rep("storm9c", 482))
