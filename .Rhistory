STRT.HI.df = separate(data=STRT.HI.df, col=storm.ID, into=c("site.ID","storm.num", "month", "day", "response"), sep = "_", remove = F)
par(mfrow=c(1,1))
median_cl_boot <- function(x, conf = 0.95) {
lconf <- (1 - conf)/2
uconf <- 1 - lconf
require(boot)
bmedian <- function(x, ind) median(x[ind])
bt <- boot(x, bmedian, 10000)
bb <- boot.ci(bt, conf = 0.95, type = "perc")
data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t,
uconf))
}
g0 <- ggplot(STRT.HI.df, aes(x = storm.num, y = HI, label=storm.num, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2019", "STRT", "STRT.HI.median.boot.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(STRT.HI.df, here("Output_from_analysis", "03_HI_FI", "2019", "STRT", "STRT.HI.df.csv"))
STRT.HI.df$date <- as.Date(with(STRT.HI.df, paste(month, day, sep = "-")), "%m-%d")
STRT.HI.df$doy <- yday(STRT.HI.df$date)
g0 <- ggplot(STRT.HI.df, aes(x = doy, y = HI, label=doy, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2019", "STRT", "STRT.HI.median.boot.doy.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(STRT.HI.df, here("Output_from_analysis", "03_HI_FI", "2019", "STRT", "STRT.HI.df.doy.csv"))
reticulate::repl_python()
POKE.hyst.results.list = list(py$hysdict_POKE_storm1_06_30_NO3,
py$hysdict_POKE_storm1_06_30_fDOM,
py$hysdict_POKE_storm1_06_30_SPC,
py$hysdict_POKE_storm1_06_30_turb,
py$hysdict_POKE_storm1_06_30_abs,
py$hysdict_POKE_storm2_07_12_NO3,
py$hysdict_POKE_storm2_07_12_fDOM,
py$hysdict_POKE_storm2_07_12_SPC,
py$hysdict_POKE_storm2_07_12_turb,
py$hysdict_POKE_storm2_07_12_abs,
py$hysdict_POKE_storm3_07_26_NO3,
py$hysdict_POKE_storm3_07_26_fDOM,
py$hysdict_POKE_storm3_07_26_SPC,
py$hysdict_POKE_storm3_07_26_turb,
py$hysdict_POKE_storm3_07_26_abs,
py$hysdict_POKE_storm4_07_31_NO3,
py$hysdict_POKE_storm4_07_31_fDOM,
py$hysdict_POKE_storm4_07_31_SPC,
py$hysdict_POKE_storm4_07_31_turb,
py$hysdict_POKE_storm4_07_31_abs,
py$hysdict_POKE_storm5a_08_02_NO3,
py$hysdict_POKE_storm5a_08_02_fDOM,
py$hysdict_POKE_storm5a_08_02_SPC,
py$hysdict_POKE_storm5a_08_02_turb,
py$hysdict_POKE_storm5a_08_02_abs,
py$hysdict_POKE_storm5c_08_05_NO3,
py$hysdict_POKE_storm5c_08_05_fDOM,
py$hysdict_POKE_storm5c_08_05_SPC,
py$hysdict_POKE_storm5c_08_05_turb,
py$hysdict_POKE_storm5c_08_05_abs,
py$hysdict_POKE_storm5d_08_10_NO3,
py$hysdict_POKE_storm5d_08_10_fDOM,
py$hysdict_POKE_storm5d_08_10_SPC,
py$hysdict_POKE_storm5d_08_10_turb,
py$hysdict_POKE_storm5d_08_10_abs,
py$hysdict_POKE_storm7_08_15_NO3,
py$hysdict_POKE_storm7_08_15_fDOM,
py$hysdict_POKE_storm7_08_15_SPC,
py$hysdict_POKE_storm7_08_15_turb,
py$hysdict_POKE_storm7_08_15_abs,
py$hysdict_POKE_storm8_09_29_NO3,
py$hysdict_POKE_storm8_09_29_fDOM,
py$hysdict_POKE_storm8_09_29_SPC,
py$hysdict_POKE_storm8_09_29_turb,
py$hysdict_POKE_storm8_09_29_abs,
py$hysdict_POKE_storm9_10_04_NO3,
py$hysdict_POKE_storm9_10_04_fDOM,
py$hysdict_POKE_storm9_10_04_SPC,
py$hysdict_POKE_storm9_10_04_turb,
py$hysdict_POKE_storm9_10_04_abs)
POKE.hyst.results.list.2 = list()
for (i in 1:length(POKE.hyst.results.list)){
POKE.hyst.results.list.2[[i]] = as.data.frame(t(as.numeric(c(
POKE.hyst.results.list[[i]][["HI_mean_with_Interp"]],
POKE.hyst.results.list[[i]][["HI_standard_deviation_with_Interp"]],
POKE.hyst.results.list[[i]][["Normalized slope of response"]],
POKE.hyst.results.list[[i]][["interpolated Max width of response"]],
POKE.hyst.results.list[[i]][["Min response"]],
POKE.hyst.results.list[[i]][["Max response"]],
POKE.hyst.results.list[[i]][["Peak Q"]]
))))
names(POKE.hyst.results.list.2[[i]]) = c("HI_mean_Interp", "HI_sd_with_Interp", "N.S.", "Max_width_Interp", "Min_response", "Max_response", "Peak_Q")
}
HIs.list = list()
HIs.tests = list()
for (i in 1:length(POKE.hyst.results.list)){
HIs.list[[i]] = unlist(POKE.hyst.results.list[[i]][["Hysteresis_Index"]],recursive=FALSE)
HIs.tests[[i]] = as.data.frame(t(round(as.numeric(c(shapiro.test(HIs.list[[i]])$statistic, shapiro.test(HIs.list[[i]])$p.value,
t.test(HIs.list[[i]], mu=0)$statistic, t.test(HIs.list[[i]], mu=0)$p.value,
t.test(HIs.list[[i]], mu=0)$conf.int[1],t.test(HIs.list[[i]], mu=0)$conf.int[2],
wilcox.test(HIs.list[[i]], mu=0)$statistic, wilcox.test(HIs.list[[i]], mu=0)$p.value)), 4)))
names(HIs.tests[[i]]) = c("ShapiroTest.W", "ShapiroTest.p", "t.test.stat", "t.test.p", "t.test.CIlow", "t.test.CIhigh",
"wilcox.test.stat", "wilcox.test.p")
}
POKE.hyst.results.list.3 =list()
for (i in 1:length(POKE.hyst.results.list)){
POKE.hyst.results.list.3[[i]] = cbind(POKE.hyst.results.list.2[[i]], HIs.tests[[i]])
}
POKE.hyst.results.df = bind_rows(POKE.hyst.results.list.3, .id = "column_label")
POKE.hyst.results.df$storm.ID = c("POKE_storm1_06_30_NO3",
"POKE_storm1_06_30_fDOM",
"POKE_storm1_06_30_SPC",
"POKE_storm1_06_30_turb",
"POKE_storm1_06_30_abs",
"POKE_storm2_07_12_NO3",
"POKE_storm2_07_12_fDOM",
"POKE_storm2_07_12_SPC",
"POKE_storm2_07_12_turb",
"POKE_storm2_07_12_abs",
"POKE_storm3_07_26_NO3",
"POKE_storm3_07_26_fDOM",
"POKE_storm3_07_26_SPC",
"POKE_storm3_07_26_turb",
"POKE_storm3_07_26_abs",
"POKE_storm4_07_31_NO3",
"POKE_storm4_07_31_fDOM",
"POKE_storm4_07_31_SPC",
"POKE_storm4_07_31_turb",
"POKE_storm4_07_31_abs",
"POKE_storm5a_08_02_NO3",
"POKE_storm5a_08_02_fDOM",
"POKE_storm5a_08_02_SPC",
"POKE_storm5a_08_02_turb",
"POKE_storm5a_08_02_abs",
"POKE_storm5c_08_05_NO3",
"POKE_storm5c_08_05_fDOM",
"POKE_storm5c_08_05_SPC",
"POKE_storm5c_08_05_turb",
"POKE_storm5c_08_05_abs",
"POKE_storm5d_08_10_NO3",
"POKE_storm5d_08_10_fDOM",
"POKE_storm5d_08_10_SPC",
"POKE_storm5d_08_10_turb",
"POKE_storm5d_08_10_abs",
"POKE_storm7_08_15_NO3",
"POKE_storm7_08_15_fDOM",
"POKE_storm7_08_15_SPC",
"POKE_storm7_08_15_turb",
"POKE_storm7_08_15_abs",
"POKE_storm8_09_29_NO3",
"POKE_storm8_09_29_fDOM",
"POKE_storm8_09_29_SPC",
"POKE_storm8_09_29_turb",
"POKE_storm8_09_29_abs",
"POKE_storm9_10_04_NO3",
"POKE_storm9_10_04_fDOM",
"POKE_storm9_10_04_SPC",
"POKE_storm9_10_04_turb",
"POKE_storm9_10_04_abs")
POKE.hyst.results.df$site.ID = "POKE"
write.csv(POKE.hyst.results.df, here("Output_from_analysis", "03_HI_FI", "2019", "POKE", "POKE.hyst.results.csv"))
# plot HI by normalized discharge
HIs.Q.list =list()
HIs.df.list = list()
#pdf("~/Documents/Storms/Output_from_analysis/HI_plots/2019/POKE/POKE.hyst.HI_Q.plots.pdf", width = 25, height =15, onefile=FALSE)
# par(mfrow=c(4,7))
# for (i in 1:length(HIs.list)) {
#   HIs.Q.list[[i]] = names(HIs.list[[i]])
#   HIs.Q.list[[i]] = (sapply(strsplit(HIs.Q.list[[i]], " "), "[[", 4))
#   HIs.Q.list[[i]] = as.numeric(gsub("%", "", HIs.Q.list[[i]]))
#   HIs.df.list[[i]] = as.data.frame(cbind(HIs.list[[i]], HIs.Q.list[[i]]))
#   HIs.df.list[[i]]= HIs.df.list[[i]][order(HIs.df.list[[i]][["V2"]]),]
# plot(HIs.df.list[[i]][["V1"]] ~ HIs.df.list[[i]][["V2"]], type="l",
#      ylab="norm.response", xlab="Q intervals", main= POKE.hyst.results.df$storm.ID[i])
# abline(h=0, lty=2)
# }
# dev.off()
## plot HI with bootstrapped 95% CIs around the median ##
HIs.Q.list =list()
HIs.df.list = list()
par(mfrow=c(1,1))
for (i in 1:length(HIs.list)) {
HIs.Q.list[[i]] = names(HIs.list[[i]])
HIs.Q.list[[i]] = (sapply(strsplit(HIs.Q.list[[i]], " "), "[[", 4))
HIs.Q.list[[i]] = as.numeric(gsub("%", "", HIs.Q.list[[i]]))
HIs.df.list[[i]] = as.data.frame(cbind(HIs.list[[i]], HIs.Q.list[[i]]))
HIs.df.list[[i]]= HIs.df.list[[i]][order(HIs.df.list[[i]][["V2"]]),]
names(HIs.df.list[[i]]) = c("HI", "Q_interval")
}
POKE.HI.df = bind_rows(HIs.df.list, .id = "column_label")
POKE.HI.df$storm.ID = c(rep("POKE_storm1_06_30_NO3", 50),
rep("POKE_storm1_06_30_fDOM", 50),
rep("POKE_storm1_06_30_SPC", 50),
rep("POKE_storm1_06_30_turb", 50),
rep("POKE_storm1_06_30_abs", 50),
rep("POKE_storm2_07_12_NO3", 50),
rep("POKE_storm2_07_12_fDOM", 50),
rep("POKE_storm2_07_12_SPC", 50),
rep("POKE_storm2_07_12_turb", 50),
rep("POKE_storm2_07_12_abs", 50),
rep("POKE_storm3_07_12_NO3", 50),
rep("POKE_storm3_07_12_fDOM", 50),
rep("POKE_storm3_07_12_SPC", 50),
rep("POKE_storm3_07_12_turb", 50),
rep("POKE_storm3_07_12_abs", 50),
rep("POKE_storm4_07_31_NO3", 50),
rep("POKE_storm4_07_31_fDOM", 50),
rep("POKE_storm4_07_31_SPC", 50),
rep("POKE_storm4_07_31_turb", 50),
rep("POKE_storm4_07_31_abs", 50),
rep("POKE_storm5a_08_02_NO3", 50),
rep("POKE_storm5a_08_02_fDOM", 50),
rep("POKE_storm5a_08_02_SPC", 50),
rep("POKE_storm5a_08_02_turb", 50),
rep("POKE_storm5a_08_02_abs", 50),
rep("POKE_storm5c_08_05_NO3", 50),
rep("POKE_storm5c_08_05_fDOM", 50),
rep("POKE_storm5c_08_05_SPC", 50),
rep("POKE_storm5c_08_05_turb", 50),
rep("POKE_storm5c_08_05_abs", 50),
rep("POKE_storm5d_08_10_NO3", 50),
rep("POKE_storm5d_08_10_fDOM", 50),
rep("POKE_storm5d_08_10_SPC", 50),
rep("POKE_storm5d_08_10_turb", 50),
rep("POKE_storm5d_08_10_abs", 50),
rep("POKE_storm7_08_15_NO3", 50),
rep("POKE_storm7_08_15_fDOM", 50),
rep("POKE_storm7_08_15_SPC", 50),
rep("POKE_storm7_08_15_turb", 50),
rep("POKE_storm7_08_15_abs", 50),
rep("POKE_storm8_09_29_NO3", 50),
rep("POKE_storm8_09_29_fDOM", 50),
rep("POKE_storm8_09_29_SPC", 50),
rep("POKE_storm8_09_29_turb", 50),
rep("POKE_storm8_09_29_abs", 50),
rep("POKE_storm9_10_04_NO3", 50),
rep("POKE_storm9_10_04_fDOM", 50),
rep("POKE_storm9_10_04_SPC", 50),
rep("POKE_storm9_10_04_turb", 50),
rep("POKE_storm9_10_04_abs", 50))
POKE.HI.df$storm.ID = as.factor(POKE.HI.df$storm.ID)
POKE.HI.df = separate(data=POKE.HI.df, col=storm.ID, into=c("site.ID","storm.num", "month", "day", "response"), sep = "_", remove = F)
par(mfrow=c(1,1))
median_cl_boot <- function(x, conf = 0.95) {
lconf <- (1 - conf)/2
uconf <- 1 - lconf
require(boot)
bmedian <- function(x, ind) median(x[ind])
bt <- boot(x, bmedian, 10000)
bb <- boot.ci(bt, conf = 0.95, type = "perc")
data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t,
uconf))
}
g0 <- ggplot(POKE.HI.df, aes(x = storm.num, y = HI, label=storm.num, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2019", "POKE", "POKE.HI.median.boot.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(POKE.HI.df, here("Output_from_analysis", "03_HI_FI", "2019", "POKE", "POKE.HI.df.csv"))
POKE.HI.df$date <- as.Date(with(POKE.HI.df, paste(month, day, sep = "-")), "%m-%d")
POKE.HI.df$doy <- yday(POKE.HI.df$date)
g0 <- ggplot(POKE.HI.df, aes(x = doy, y = HI, label=doy, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2019", "POKE", "POKE.HI.median.boot.doy.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(POKE.HI.df, here("Output_from_analysis", "03_HI_FI", "2019", "POKE", "POKE.HI.df.doy.csv"))
reticulate::repl_python()
MOOS.hyst.results.list = list(py$hysdict_MOOS_storm1_06_01_NO3,
py$hysdict_MOOS_storm1_06_01_fDOM,
py$hysdict_MOOS_storm1_06_01_SPC,
py$hysdict_MOOS_storm1_06_01_turb,
py$hysdict_MOOS_storm1_06_01_abs,
py$hysdict_MOOS_storm3_07_12_NO3,
py$hysdict_MOOS_storm3_07_12_fDOM,
py$hysdict_MOOS_storm3_07_12_SPC,
py$hysdict_MOOS_storm3_07_12_turb,
py$hysdict_MOOS_storm3_07_12_abs,
py$hysdict_MOOS_storm4_07_25_fDOM,
py$hysdict_MOOS_storm4_07_25_SPC,
py$hysdict_MOOS_storm4_07_25_turb,
py$hysdict_MOOS_storm5_07_29_NO3,
py$hysdict_MOOS_storm5_07_29_fDOM,
py$hysdict_MOOS_storm5_07_29_SPC,
py$hysdict_MOOS_storm5_07_29_turb,
py$hysdict_MOOS_storm5_07_29_abs,
py$hysdict_MOOS_storm6a_08_01_fDOM,
py$hysdict_MOOS_storm6a_08_01_SPC,
py$hysdict_MOOS_storm6a_08_01_turb,
py$hysdict_MOOS_storm6d_08_05_fDOM,
py$hysdict_MOOS_storm6d_08_05_SPC,
py$hysdict_MOOS_storm6d_08_05_turb,
py$hysdict_MOOS_storm7a_08_13_fDOM,
py$hysdict_MOOS_storm7a_08_13_turb,
py$hysdict_MOOS_storm7b_08_14_fDOM,
py$hysdict_MOOS_storm7b_08_14_SPC,
py$hysdict_MOOS_storm7b_08_14_turb,
py$hysdict_MOOS_storm7c_08_15_fDOM,
py$hysdict_MOOS_storm7c_08_15_SPC,
py$hysdict_MOOS_storm7c_08_15_turb,
py$hysdict_MOOS_storm8_09_21_fDOM,
py$hysdict_MOOS_storm8_09_21_SPC,
py$hysdict_MOOS_storm8_09_21_turb,
py$hysdict_MOOS_storm8_09_21_abs,
py$hysdict_MOOS_storm9_10_02_NO3,
py$hysdict_MOOS_storm9_10_02_fDOM,
py$hysdict_MOOS_storm9_10_02_SPC,
py$hysdict_MOOS_storm9_10_02_turb,
py$hysdict_MOOS_storm9_10_02_abs)
MOOS.hyst.results.list.2 = list()
for (i in 1:length(MOOS.hyst.results.list)){
MOOS.hyst.results.list.2[[i]] = as.data.frame(t(as.numeric(c(
MOOS.hyst.results.list[[i]][["HI_mean_with_Interp"]],
MOOS.hyst.results.list[[i]][["HI_standard_deviation_with_Interp"]],
MOOS.hyst.results.list[[i]][["Normalized slope of response"]],
MOOS.hyst.results.list[[i]][["interpolated Max width of response"]],
MOOS.hyst.results.list[[i]][["Min response"]],
MOOS.hyst.results.list[[i]][["Max response"]],
MOOS.hyst.results.list[[i]][["Peak Q"]]
))))
names(MOOS.hyst.results.list.2[[i]]) = c("HI_mean_Interp", "HI_sd_with_Interp", "N.S.", "Max_width_Interp", "Min_response", "Max_response", "Peak_Q")
}
HIs.list = list()
HIs.tests = list()
for (i in 1:length(MOOS.hyst.results.list)){
HIs.list[[i]] = unlist(MOOS.hyst.results.list[[i]][["Hysteresis_Index"]],recursive=FALSE)
HIs.tests[[i]] = as.data.frame(t(round(as.numeric(c(shapiro.test(HIs.list[[i]])$statistic, shapiro.test(HIs.list[[i]])$p.value,
t.test(HIs.list[[i]], mu=0)$statistic, t.test(HIs.list[[i]], mu=0)$p.value,
t.test(HIs.list[[i]], mu=0)$conf.int[1],t.test(HIs.list[[i]], mu=0)$conf.int[2],
wilcox.test(HIs.list[[i]], mu=0)$statistic, wilcox.test(HIs.list[[i]], mu=0)$p.value)), 4)))
names(HIs.tests[[i]]) = c("ShapiroTest.W", "ShapiroTest.p", "t.test.stat", "t.test.p", "t.test.CIlow", "t.test.CIhigh",
"wilcox.test.stat", "wilcox.test.p")
}
MOOS.hyst.results.list.3 =list()
for (i in 1:length(MOOS.hyst.results.list)){
MOOS.hyst.results.list.3[[i]] = cbind(MOOS.hyst.results.list.2[[i]], HIs.tests[[i]])
}
MOOS.hyst.results.df = bind_rows(MOOS.hyst.results.list.3, .id = "column_label")
MOOS.hyst.results.df$storm.ID = c("MOOS_storm1_06_01_NO3",
"MOOS_storm1_06_01_fDOM",
"MOOS_storm1_06_01_SPC",
"MOOS_storm1_06_01_turb",
"MOOS_storm1_06_01_abs",
"MOOS_storm3_07_12_NO3",
"MOOS_storm3_07_12_fDOM",
"MOOS_storm3_07_12_SPC",
"MOOS_storm3_07_12_turb",
"MOOS_storm3_07_12_abs",
"MOOS_storm4_07_25_fDOM",
"MOOS_storm4_07_25_SPC",
"MOOS_storm4_07_25_turb",
"MOOS_storm5_07_29_NO3",
"MOOS_storm5_07_29_fDOM",
"MOOS_storm5_07_29_SPC",
"MOOS_storm5_07_29_turb",
"MOOS_storm5_07_29_abs",
"MOOS_storm6a_08_01_fDOM",
"MOOS_storm6a_08_01_SPC",
"MOOS_storm6a_08_01_turb",
"MOOS_storm6d_08_05_fDOM",
"MOOS_storm6d_08_05_SPC",
"MOOS_storm6d_08_05_turb",
"MOOS_storm7a_08_13_fDOM",
"MOOS_storm7a_08_13_turb",
"MOOS_storm7b_08_14_fDOM",
"MOOS_storm7b_08_14_SPC",
"MOOS_storm7b_08_14_turb",
"MOOS_storm7c_08_15_fDOM",
"MOOS_storm7c_08_15_SPC",
"MOOS_storm7c_08_15_turb",
"MOOS_storm8_09_21_fDOM",
"MOOS_storm8_09_21_SPC",
"MOOS_storm8_09_21_turb",
"MOOS_storm8_09_21_abs",
"MOOS_storm9_10_02_NO3",
"MOOS_storm9_10_02_fDOM",
"MOOS_storm9_10_02_SPC",
"MOOS_storm9_10_02_turb",
"MOOS_storm9_10_02_abs")
MOOS.hyst.results.df$site.ID = "MOOS"
write.csv(MOOS.hyst.results.df, here("Output_from_analysis", "03_HI_FI", "2019", "MOOS", "MOOS.hyst.results.csv"))
# plot HI by normalized discharge
HIs.Q.list =list()
HIs.df.list = list()
#pdf("~/Documents/Storms/Output_from_analysis/HI_plots/2019/MOOS/MOOS.hyst.HI_Q.plots.pdf", width = 25, height =15, onefile=FALSE)
# par(mfrow=c(4,7))
# for (i in 1:length(HIs.list)) {
#   HIs.Q.list[[i]] = names(HIs.list[[i]])
#   HIs.Q.list[[i]] = (sapply(strsplit(HIs.Q.list[[i]], " "), "[[", 4))
#   HIs.Q.list[[i]] = as.numeric(gsub("%", "", HIs.Q.list[[i]]))
#   HIs.df.list[[i]] = as.data.frame(cbind(HIs.list[[i]], HIs.Q.list[[i]]))
#   HIs.df.list[[i]]= HIs.df.list[[i]][order(HIs.df.list[[i]][["V2"]]),]
# plot(HIs.df.list[[i]][["V1"]] ~ HIs.df.list[[i]][["V2"]], type="l",
#      ylab="norm.response", xlab="Q intervals", main= MOOS.hyst.results.df$storm.ID[i])
# abline(h=0, lty=2)
# }
# dev.off()
## plot HI with bootstrapped 95% CIs around the median ##
HIs.Q.list =list()
HIs.df.list = list()
par(mfrow=c(1,1))
for (i in 1:length(HIs.list)) {
HIs.Q.list[[i]] = names(HIs.list[[i]])
HIs.Q.list[[i]] = (sapply(strsplit(HIs.Q.list[[i]], " "), "[[", 4))
HIs.Q.list[[i]] = as.numeric(gsub("%", "", HIs.Q.list[[i]]))
HIs.df.list[[i]] = as.data.frame(cbind(HIs.list[[i]], HIs.Q.list[[i]]))
HIs.df.list[[i]]= HIs.df.list[[i]][order(HIs.df.list[[i]][["V2"]]),]
names(HIs.df.list[[i]]) = c("HI", "Q_interval")
}
MOOS.HI.df = bind_rows(HIs.df.list, .id = "column_label")
MOOS.HI.df$storm.ID = c(rep("MOOS_storm1_06_01_NO3", 50),
rep("MOOS_storm1_06_01_fDOM", 50),
rep("MOOS_storm1_06_01_SPC", 50),
rep("MOOS_storm1_06_01_turb", 50),
rep("MOOS_storm1_06_01_abs", 50),
rep("MOOS_storm3_07_12_NO3", 50),
rep("MOOS_storm3_07_12_fDOM", 50),
rep("MOOS_storm3_07_12_SPC", 50),
rep("MOOS_storm3_07_12_turb", 50),
rep("MOOS_storm3_07_12_abs", 50),
rep("MOOS_storm4_07_25_fDOM", 50),
rep("MOOS_storm4_07_25_SPC", 50),
rep("MOOS_storm4_07_25_turb", 50),
rep("MOOS_storm5_07_29_NO3", 50),
rep("MOOS_storm5_07_29_fDOM", 50),
rep("MOOS_storm5_07_29_SPC", 50),
rep("MOOS_storm5_07_29_turb", 50),
rep("MOOS_storm5_07_29_abs", 50),
rep("MOOS_storm6a_08_01_fDOM", 50),
rep("MOOS_storm6a_08_01_SPC", 50),
rep("MOOS_storm6a_08_01_turb", 50),
rep("MOOS_storm6d_08_05_fDOM", 50),
rep("MOOS_storm6d_08_05_SPC", 50),
rep("MOOS_storm6d_08_05_turb", 50),
rep("MOOS_storm7a_08_13_fDOM", 50),
rep("MOOS_storm7a_08_13_turb", 50),
rep("MOOS_storm7b_08_14_fDOM", 50),
rep("MOOS_storm7b_08_14_SPC", 50),
rep("MOOS_storm7b_08_14_turb", 50),
rep("MOOS_storm7c_08_15_fDOM", 50),
rep("MOOS_storm7c_08_15_SPC", 50),
rep("MOOS_storm7c_08_15_turb", 50),
rep("MOOS_storm8_09_21_fDOM", 50),
rep("MOOS_storm8_09_21_SPC", 50),
rep("MOOS_storm8_09_21_turb", 50),
rep("MOOS_storm8_09_21_abs", 50),
rep("MOOS_storm9_10_02_NO3", 50),
rep("MOOS_storm9_10_02_fDOM", 50),
rep("MOOS_storm9_10_02_SPC", 50),
rep("MOOS_storm9_10_02_turb", 50),
rep("MOOS_storm9_10_02_abs", 50))
MOOS.HI.df$storm.ID = as.factor(MOOS.HI.df$storm.ID)
MOOS.HI.df = separate(data=MOOS.HI.df, col=storm.ID, into=c("site.ID","storm.num", "month", "day", "response"), sep = "_", remove = F)
par(mfrow=c(1,1))
median_cl_boot <- function(x, conf = 0.95) {
lconf <- (1 - conf)/2
uconf <- 1 - lconf
require(boot)
bmedian <- function(x, ind) median(x[ind])
bt <- boot(x, bmedian, 10000)
bb <- boot.ci(bt, conf = 0.95, type = "perc")
data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t,
uconf))
}
g0 <- ggplot(MOOS.HI.df, aes(x = storm.num, y = HI, label=storm.num, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2019", "MOOS", "MOOS.HI.median.boot.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(MOOS.HI.df, here("Output_from_analysis", "03_HI_FI", "2019", "MOOS", "MOOS.HI.df.csv"))
MOOS.HI.df$date <- as.Date(with(MOOS.HI.df, paste(month, day, sep = "-")), "%m-%d")
MOOS.HI.df$doy <- yday(MOOS.HI.df$date)
g0 <- ggplot(MOOS.HI.df, aes(x = doy, y = HI, label=doy, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2019", "MOOS", "MOOS.HI.median.boot.doy.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(MOOS.HI.df, here("Output_from_analysis", "03_HI_FI", "2019", "MOOS", "MOOS.HI.df.doy.csv"))
reticulate::repl_python()
