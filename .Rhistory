read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
CARI_storms$storm.num = c(rep("storm1", 0),
rep("storm2a", 103),
rep("storm2b", 95),
rep("storm2c", 155),
rep("storm3", 262),
rep("storm4", 155),
rep("storm5", 219),
rep("storm6", 183),
rep("storm7", 307),
rep("storm8a", 111),
rep("storm8b", 473),
rep("storm9", 99))
CARI_storms$DateTime <- as.POSIXct(CARI_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
CARI.2020.storms.1<- left_join(CARI_storms, POKE_RainGauge_2020, by = "DateTime")
CARI.2020.storms.1<- left_join(CARI.2020.storms.1, airtempmean, by = "DateTime")
names(CARI.2020.storms.1)[names(CARI.2020.storms.1) == ''] <- 'x'
CARI.2020.per.storm.1 <- CARI.2020.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)
temp <- CARI.2020.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event
CARI.2020.per.storm.1$temp <- temp$temp
CARI.2020 <- CARI_storms
CARI.2020 <- CARI.2020[,-c(1,10)]
CARI.2020$DateTime <- as.POSIXct(CARI.2020$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
CARI.2020 <- left_join(CARI.2020, POKE_RainGauge_2020, by = "DateTime")
CARI.2020 <- left_join(CARI.2020, airtempmean, by = "DateTime")
CARI.2020$week <- rollapplyr(CARI.2020$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2020$month <- rollapplyr(CARI.2020$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2020$ThreeMonth <- rollapplyr(CARI.2020$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2020$temp.week <- rollapplyr(CARI.2020$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2020.1 <- left_join(CARI.2020.storms.1, CARI.2020, by = "DateTime") # week month and 3 month precip totals
CARI.2020.per.storm.2 <- CARI.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
CARI.2020.per.storm.3 <- CARI.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm
CARI.2020.per.storm.4 <- CARI.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
CARI.2020.per.storm.5 <- CARI.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
HI.mean.precip.cari.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "CARI" & response == "NO3")
HI.mean.precip.cari.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "CARI" & response == "fDOM")
HI.mean.precip.cari.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "CARI" & response == "SPC")
HI.mean.precip.cari.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "CARI" & response == "turb")
HI.cari.no3.2020 <- left_join(HI.mean.precip.cari.NO3, CARI.2020.per.storm.1, by = "storm.num")
HI.cari.no3.2020 <- left_join(HI.cari.no3.2020, CARI.2020.per.storm.2, by = "storm.num")
HI.cari.no3.2020 <- left_join(HI.cari.no3.2020, CARI.2020.per.storm.3, by = "storm.num")
HI.cari.no3.2020 <- left_join(HI.cari.no3.2020, CARI.2020.per.storm.4, by = "storm.num")
HI.cari.no3.2020 <- left_join(HI.cari.no3.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.no3 <- lm(HI.cari.no3.2020$HI ~ HI.cari.no3.2020$precip) # model one with just total precip
cari.lm.no3.2 <- lm(HI.cari.no3.2020$HI ~ HI.cari.no3.2020$precip.week) # model one with just total precip
cari.lm.no3.3 <- lm(HI.cari.no3.2020$HI ~ HI.cari.no3.2020$precip.month) # model one with just total precip
cari.lm.no3.4 <- lm(HI.cari.no3.2020$HI ~ HI.cari.no3.2020$ThreeMonth) # model one with just total precip
cari.formula <- y ~ x
sa <- HI.cari.no3.2020 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI NO3") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
sb <- HI.cari.no3.2020 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI NO3") +
xlab("One-week Precip") +
ylab("HI-Solute Storage") # plot model
sc <- HI.cari.no3.2020 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI NO3") +
xlab("One-month Precip") +
ylab("HI-Solute Storage") # plot model
sd <- HI.cari.no3.2020 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI NO3") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.cari.fDOM.2020 <- left_join(HI.mean.precip.cari.fDOM, CARI.2020.per.storm.1, by = "storm.num")
HI.cari.fDOM.2020 <- left_join(HI.cari.fDOM.2020, CARI.2020.per.storm.2, by = "storm.num")
HI.cari.fDOM.2020 <- left_join(HI.cari.fDOM.2020, CARI.2020.per.storm.3, by = "storm.num")
HI.cari.fDOM.2020 <- left_join(HI.cari.fDOM.2020, CARI.2020.per.storm.4, by = "storm.num")
HI.cari.fDOM.2020 <- left_join(HI.cari.fDOM.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.fDOM <- lm(HI.cari.fDOM.2020$HI ~ HI.cari.fDOM.2020$precip) # model one with just total precip
cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2020$HI ~ HI.cari.fDOM.2020$precip.week) # model one with just total precip
cari.lm.fDOM.3 <- lm(HI.cari.fDOM.2020$HI ~ HI.cari.fDOM.2020$precip.month) # model one with just total precip
cari.lm.fDOM.4 <- lm(HI.cari.fDOM.2020$HI ~ HI.cari.fDOM.2020$ThreeMonth) # model one with just total precip
se <- HI.cari.fDOM.2020 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI fDOM") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
sf <- HI.cari.fDOM.2020 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI fDOM") +
xlab("One-week Precip") +
ylab("HI-Solute Storage") # plot model
sg <- HI.cari.fDOM.2020 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI fDOM") +
xlab("One-month Precip") +
ylab("HI-Solute Storage") # plot model
sh <- HI.cari.fDOM.2020 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI fDOM") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.cari.SPC.2020 <- left_join(HI.mean.precip.cari.SPC, CARI.2020.per.storm.1, by = "storm.num")
HI.cari.SPC.2020 <- left_join(HI.cari.SPC.2020, CARI.2020.per.storm.2, by = "storm.num")
HI.cari.SPC.2020 <- left_join(HI.cari.SPC.2020, CARI.2020.per.storm.3, by = "storm.num")
HI.cari.SPC.2020 <- left_join(HI.cari.SPC.2020, CARI.2020.per.storm.4, by = "storm.num")
HI.cari.SPC.2020 <- left_join(HI.cari.SPC.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.SPC <- lm(HI.cari.SPC.2020$HI ~ HI.cari.SPC.2020$precip) # model one with just total precip
cari.lm.SPC.2 <- lm(HI.cari.SPC.2020$HI ~ HI.cari.SPC.2020$precip.week) # model one with just total precip
cari.lm.SPC.3 <- lm(HI.cari.SPC.2020$HI ~ HI.cari.SPC.2020$precip.month) # model one with just total precip
cari.lm.SPC.4 <- lm(HI.cari.SPC.2020$HI ~ HI.cari.SPC.2020$ThreeMonth) # model one with just total precip
si <- HI.cari.SPC.2020 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI SPC") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
sj <- HI.cari.SPC.2020 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI SPC") +
xlab("One-week Precip") +
ylab("HI-Solute Storage") # plot model
sk <- HI.cari.SPC.2020 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI SPC") +
xlab("One-month Precip") +
ylab("HI-Solute Storage") # plot model
sl <- HI.cari.SPC.2020 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI SPC") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
HI.cari.turb.2020 <- left_join(HI.mean.precip.cari.turb, CARI.2020.per.storm.1, by = "storm.num")
HI.cari.turb.2020 <- left_join(HI.cari.turb.2020, CARI.2020.per.storm.2, by = "storm.num")
HI.cari.turb.2020 <- left_join(HI.cari.turb.2020, CARI.2020.per.storm.3, by = "storm.num")
HI.cari.turb.2020 <- left_join(HI.cari.turb.2020, CARI.2020.per.storm.4, by = "storm.num")
HI.cari.turb.2020 <- left_join(HI.cari.turb.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.turb <- lm(HI.cari.turb.2020$HI ~ HI.cari.turb.2020$precip) # model one with just total precip
cari.lm.turb.2 <- lm(HI.cari.turb.2020$HI ~ HI.cari.turb.2020$precip.week) # model one with just total precip
cari.lm.turb.3 <- lm(HI.cari.turb.2020$HI ~ HI.cari.turb.2020$precip.month) # model one with just total precip
cari.lm.turb.4 <- lm(HI.cari.turb.2020$HI ~ HI.cari.turb.2020$ThreeMonth) # model one with just total precip
sm <- HI.cari.turb.2020 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI turb") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
sn <- HI.cari.turb.2020 %>%
ggplot(aes(x=precip.week,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI turb") +
xlab("One-week Precip") +
ylab("HI-Solute Storage") # plot model
so <- HI.cari.turb.2020 %>%
ggplot(aes(x=precip.month,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI turb") +
xlab("One-month Precip") +
ylab("HI-Solute Storage") # plot model
sp <- HI.cari.turb.2020 %>%
ggplot(aes(x=ThreeMonth,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI turb") +
xlab("Three-month Precip") +
ylab("HI-Solute Storage") # plot model
#CARI.2019.storms.1 <- na.omit(CARI.2019.storms.1)
sum.time <- CARI.2020.storms.1 %>%
mutate(grp=data.table::rleid(storm.num))%>%
group_by(grp) %>%
summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
min(DateTime),units="hour"))%>%
group_by(storm.num) %>%
summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column
HI.cari.no3.2.2020 <- left_join(sum.time, HI.cari.no3.2020, by = "storm.num") # merging total time per storm event and the HI per storm
HI.cari.no3.2.2020$TOTAL.TIME <- as.numeric(HI.cari.no3.2.2020$TOTAL.TIME)
HI.cari.no3.2.2020$Intensity <- HI.cari.no3.2.2020$precip/HI.cari.no3.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
cari.lm.no3.2 <- lm(HI.cari.no3.2.2020$HI ~ HI.cari.no3.2.2020$precip + HI.cari.no3.2.2020$Intensity) # model one with total precip and intensity
sq <- HI.cari.no3.2.2020 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI NO3") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.cari.fDOM.2.2020 <- left_join(HI.cari.fDOM.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.cari.fDOM.2.2020$TOTAL.TIME <- as.numeric(HI.cari.fDOM.2.2020$TOTAL.TIME)
HI.cari.fDOM.2.2020$Intensity <- HI.cari.fDOM.2.2020$precip/HI.cari.fDOM.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2.2020$HI ~ HI.cari.fDOM.2.2020$precip + HI.cari.fDOM.2.2020$Intensity) # model one with total precip and intensity
sr <- HI.cari.fDOM.2.2020 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI fDOM") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.cari.SPC.2.2020 <- left_join(HI.cari.SPC.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.cari.SPC.2.2020$TOTAL.TIME <- as.numeric(HI.cari.SPC.2.2020$TOTAL.TIME)
HI.cari.SPC.2.2020$Intensity <- HI.cari.SPC.2.2020$precip/HI.cari.SPC.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
cari.lm.SPC.2 <- lm(HI.cari.SPC.2.2020$HI ~ HI.cari.SPC.2.2020$precip + HI.cari.SPC.2.2020$Intensity) # model one with total precip and intensity
ss <- HI.cari.SPC.2.2020 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI SPC") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.cari.turb.2.2020 <- left_join(HI.cari.turb.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.cari.turb.2.2020$TOTAL.TIME <- as.numeric(HI.cari.turb.2.2020$TOTAL.TIME)
HI.cari.turb.2.2020$Intensity <- HI.cari.turb.2.2020$precip/HI.cari.turb.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
cari.lm.turb.2 <- lm(HI.cari.turb.2.2020$HI ~ HI.cari.turb.2.2020$precip + HI.cari.turb.2.2020$Intensity) # model one with total precip and intensity
st <- HI.cari.turb.2.2020 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI turb") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
# day of year #
CARI.2020.1$day <- julian(CARI.2020.1$DateTime, origin = as.POSIXct('2020-01-01', tz = 'America/Anchorage')) # making a fractional day column
CARI.2020.1$day <- as.numeric(CARI.2020.1$day)
CARI.2020.per.storm.5 <- CARI.2020.1 %>% group_by(storm.num) %>%
summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
HI.cari.no3.2.2020 <- left_join(HI.cari.no3.2.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.no3.5 <- lm(HI.cari.no3.2.2020$HI ~ HI.cari.no3.2.2020$doy)
su <- HI.cari.no3.2.2020 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI NO3") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.cari.fDOM.2.2020 <- left_join(HI.cari.fDOM.2.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.fDOM.5 <- lm(HI.cari.fDOM.2.2020$HI ~ HI.cari.fDOM.2.2020$doy)
sv <- HI.cari.fDOM.2.2020 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI fDOM") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.cari.SPC.2.2020 <- left_join(HI.cari.SPC.2.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.SPC.5 <- lm(HI.cari.SPC.2.2020$HI ~ HI.cari.SPC.2.2020$doy)
sw <- HI.cari.SPC.2.2020 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI SPC") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.cari.turb.2.2020 <- left_join(HI.cari.turb.2.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.turb.5 <- lm(HI.cari.turb.2.2020$HI ~ HI.cari.turb.2.2020$doy)
sx <- HI.cari.turb.2.2020 %>%
ggplot(aes(x=doy,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = cari.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("CARI turb") +
xlab("Day of year") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
#plot_grid(sa,sb,sc,sd,se,sf,sg,sh,si,sj,sk,sl,sm,sn,so,sp,sq,sr,ss,st,su,sv,sw,sx,
#          ncol = 4)
HI.cari.2020 <- rbind(HI.cari.no3.2.2020, HI.cari.fDOM.2.2020, HI.cari.SPC.2.2020, HI.cari.turb.2.2020) # merging all responses together
HI.cari.2020$burn <- "burned" # adding a burn column
HI.cari.2020$pf <- "medium" # adding a pf column
write.csv(HI.cari.2020, "~/Documents/Storms_clean_repo/Output_from_analysis/04_Antecedent_Conditions/2020/HI.cari.2020.csv")
HI.2020 <- rbind(HI.moos.2020, HI.frch.2020, HI.poke.2020, HI.vaul.2020,
HI.strt.2020, HI.cari.2020) # bind all 2020 together
# add time since peak  Q in chena #
HI.2020$date <- as.Date(HI.2020$doy, origin = "2020-01-01")
origin_date <- as.Date("2020-05-13")
HI.2020$TimeSinceChena <- julian(HI.2020$date, origin_date)
write.csv(HI.2020, "~/Documents/Storms_clean_repo/Output_from_analysis/04_Antecedent_Conditions/2020/HI.2020.csv")
median_cl_boot <- function(x, conf = 0.95) {
lconf <- (1 - conf)/2
uconf <- 1 - lconf
require(boot)
bmedian <- function(x, ind) median(x[ind])
bt <- boot(x, bmedian, 10000)
bb <- boot.ci(bt, conf = 0.95, type = "perc")
data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t,
uconf))
}
# FRCH #
FRCH.HI.df <- read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2020/FRCH/FRCH.HI.df.csv")
storm.list = unique(FRCH.HI.df$storm.ID)
FRCH.HI.boot <- do.call(rbind.data.frame,
lapply(storm.list, function(i){
dat = subset(FRCH.HI.df, storm.ID == i)
median_cl_boot(dat$HI)
}))
FRCH.HI.boot$storm.ID = storm.list
# MOOS #
MOOS.HI.df <- read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2020/MOOS/MOOS.HI.df.csv")
storm.list = unique(MOOS.HI.df$storm.ID)
MOOS.HI.boot <- do.call(rbind.data.frame,
lapply(storm.list, function(i){
dat = subset(MOOS.HI.df, storm.ID == i)
median_cl_boot(dat$HI)
}))
MOOS.HI.boot$storm.ID = storm.list
# CARI #
CARI.HI.df <- read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2020/CARI/CARI.HI.df.csv")
storm.list = unique(CARI.HI.df$storm.ID)
CARI.HI.boot <- do.call(rbind.data.frame,
lapply(storm.list, function(i){
dat = subset(CARI.HI.df, storm.ID == i)
median_cl_boot(dat$HI)
}))
CARI.HI.boot$storm.ID = storm.list
# POKE #
POKE.HI.df <- read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2020/POKE/POKE.HI.df.csv")
storm.list = unique(POKE.HI.df$storm.ID)
POKE.HI.boot <- do.call(rbind.data.frame,
lapply(storm.list, function(i){
dat = subset(POKE.HI.df, storm.ID == i)
median_cl_boot(dat$HI)
}))
POKE.HI.boot$storm.ID = storm.list
# VAUL #
VAUL.HI.df <- read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2020/VAUL/VAUL.HI.df.csv")
storm.list = unique(VAUL.HI.df$storm.ID)
VAUL.HI.boot <- do.call(rbind.data.frame,
lapply(storm.list, function(i){
dat = subset(VAUL.HI.df, storm.ID == i)
median_cl_boot(dat$HI)
}))
VAUL.HI.boot$storm.ID = storm.list
# STRT #
STRT.HI.df <- read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2020/STRT/STRT.HI.df.csv")
storm.list = unique(STRT.HI.df$storm.ID)
STRT.HI.boot <- do.call(rbind.data.frame,
lapply(storm.list, function(i){
dat = subset(STRT.HI.df, storm.ID == i)
median_cl_boot(dat$HI)
}))
STRT.HI.boot$storm.ID = storm.list
# join data #
FRCH.HI.boot$site.ID = "FRCH"
MOOS.HI.boot$site.ID = "MOOS"
CARI.HI.boot$site.ID = "CARI"
POKE.HI.boot$site.ID = "POKE"
VAUL.HI.boot$site.ID = "VAUL"
STRT.HI.boot$site.ID = "STRT"
HI = rbind(FRCH.HI.boot, MOOS.HI.boot, CARI.HI.boot,
POKE.HI.boot, VAUL.HI.boot, STRT.HI.boot)
all.FI.diff.results = read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/05_FI/all.FI.diff.results_2020.csv", header = T, row.names = 1)
FI = subset(all.FI.diff.results, select=c("Flushing_index", "percCI_2.5", "percCI_97.5", "ID"))
FI$ID = as.character(FI$ID)
FI = separate(FI, ID, into=c("site.ID", "storm.ID", "month", "day", "response_var", NA), sep = "_")
names(FI) = c("Flush_index", "FI_ymin", "FI_ymax","site.ID", "storm.ID", "month", "day", "response_var")
HI$site.ID=NULL
HI = separate(HI, storm.ID, into=c("site.ID", "storm.ID", "month", "day", "response_var"), sep = "_")
names(HI) = c("Hyst_index", "HI_ymin", "HI_ymax","site.ID", "storm.ID", "month", "day", "response_var")
HI_FI = left_join(HI, FI, by=c("site.ID", "storm.ID", "response_var"))
HI_FI$year <- "2020"
write.csv(HI_FI, "~/Documents/Storms_clean_repo/Output_from_analysis/07_Combine_HI_BETA_FI/HI_FI.diff_results.2020.csv")
### BETA ####
beta_2020 <- read_csv("~/Documents/Storms_clean_repo/Output_from_analysis/06_BETA/beta.2020.csv")
beta_2020$year <- "2020"
beta_2020 <- beta_2020 %>%
filter(Parameter != "(Intercept)")
names(beta_2020) = c("X1", "site.ID", "storm.ID","Parameter",
"Beta_index", "SE", "CI", "Beta_ymin",
"Beta_ymax", "t", "df", "p", "response_var",
"year")
### ANTECEDENT ####
antecedent_2020 <- read_csv("~/Documents/Storms_clean_repo/Output_from_analysis/04_Antecedent_Conditions/2020/HI.2020.csv")
antecedent_2020 <- antecedent_2020[,-c(1)]
names(antecedent_2020)[names(antecedent_2020) == "storm.num"] <- "storm.ID"
names(antecedent_2020)[names(antecedent_2020) == "response"] <- "response_var"
antecedent_2020$year <- as.character(antecedent_2020$year)
# merge ####
HI_FI = left_join(HI_FI, beta_2020, by=c("site.ID", "storm.ID", "response_var", "year"))
HI_FI <- left_join(HI_FI, antecedent_2020, by = c("site.ID", "storm.ID", "response_var", "year"))
write.csv(HI_FI, "~/Documents/Storms_clean_repo/Output_from_analysis/07_Combine_HI_BETA_FI/antecedent_HI_FI_2020.csv")
#2020
AMC_2020 <- read.csv("~/Documents/Storms_clean_repo/Output_from_analysis/07_Combine_HI_BETA_FI/antecedent_HI_FI_2020.csv")
View(AMC_2020)
