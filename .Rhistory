FRCH.2018 <-  subset(chem.2018, site.ID == "FRCH")
rm(chem.2018)
chem.2018 <- read.csv("SUNA.EXO.int.corr.csv")
names(chem.2018)
chem.2018 <- chem.2018[, -c(2:15,19:24,26:52,54:55)] # removing unnecessary columns which consists of a lot of the SUNA diagnostic columns and channels that are needed
chem.2018 <- chem.2018[, c(1,5,6,2,3,4)] # reorganizing column headers
rm(chem.2018)
chem.2018 <- read.csv("SUNA.EXO.int.corr.csv")
chem.2018 <- chem.2018[, -c(2:15,19:24,26:52,54:55)] # removing unnecessary columns which consists of a lot of the SUNA diagnostic columns and channels that are needed
rm(chem.2018)
chem.2018 <- read.csv("SUNA.EXO.int.corr.csv")
names(chem.2018)
chem.2018 <- chem.2018[, -c(2:15,19:24,26:52,54:56)] # removing unnecessary columns which consists of a lot of the SUNA diagnostic columns and channels that are needed
chem.2018 <- chem.2018[, c(1,6,4,2,3,5)] # reorganizing column headers
chem.2018$datetimeAK <- ymd_hms(chem.2018$datetimeAK) # converting character to datetime
names(chem.2018) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3")
### WORKING ON TRIMMING chem.2018 data file to what we need ###
FRCH.2018 <-  subset(chem.2018, site.ID == "FRCH")
range(FRCH.2018$datetimeAK)
View(FRCH.2018)
FRCH.2018$datetimeAK <- ymd_hms(FRCH.2018$datetimeAK)
plot(FRCH.2018$datetimeAK, FRCH.2018$NO3)
FRCH.2018 <- FRCH.2018[order(datetimeAK),]
FRCH.2018 <- FRCH.2018[order(FRCH.2018$datetimeAK),]
chem.2018 <- chem.2018[order(chem.2018$datetimeAK),]
rm(chem.2018)
FRCH.2018 <- FRCH.2018[order(FRCH.2018$datetimeAK),]
MOOS.2018 <-  subset(chem.2018, site.ID == "MOOS")
MOOS.2018$datetimeAK <- ymd_hms(MOOS.2018$datetimeAK)
rm(chem.2018)
chem.2018 <- read.csv("SUNA.EXO.int.corr.csv")
chem.2018 <- chem.2018[, -c(2:15,19:24,26:52,54:56)] # removing unnecessary columns which consists of a lot of the SUNA diagnostic columns and channels that are needed
chem.2018 <- chem.2018[, c(1,6,4,2,3,5)] # reorganizing column headers
chem.2018$datetimeAK <- ymd_hms(chem.2018$datetimeAK) # converting character to datetime
names(chem.2018) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3")
### WORKING ON TRIMMING chem.2018 data file to what we need ###
FRCH.2018 <-  subset(chem.2018, site.ID == "FRCH")
FRCH.2018 <- FRCH.2018[order(FRCH.2018$datetimeAK),]
MOOS.2018 <-  subset(chem.2018, site.ID == "MOOS")
MOOS.2018 <- MOOS.2018[order(MOOS.2018$datetimeAK),]
chem.2018 <- rbind(FRCH.2018, MOOS.2018)
DOD.2018 <- full_join(Q.2018, chem.2018) # merging chem and discharge data
View(DOD.2018)
DOD.2018 <- left_join(Q.2018, chem.2018, by ="datetimeAK") # merging chem and discharge data
names(Q.2018)
names(chem.2018)
nrow
nrow(Q.2018)
View(Q.2018)
str(Q.2018)
nrow(chem.2018)
### TRYING TO merge these files nicely
total <- merge(chem.2018,DOD.2018,by=c("datetimeAK","site.ID"))
DOD.2018 <- full_join(chem.2018, Q.2018) # merging chem and discharge data
DOD.2018.test <- DOD.2018 %>%
filter(!is.na(Q))
View(DOD.2018.test)
ggplot(DOD.2018.test, aes(datetimeAK, Q)) +
geom_point() +
facet_wrap(~site.DI)
ggplot(DOD.2018.test, aes(datetimeAK, Q)) +
geom_point() +
facet_wrap(~site.ID)
ggplot(DOD.2018, aes(datetimeAK, Q)) +
geom_point() +
facet_wrap(~site.ID)
CARI.2018 <- read_csv("NEON_WaterQuality2018.csv",
col_types = cols(Discharge = col_double(),
fDOM = col_double(), NO3 = col_double(),
SpCond = col_double(), Turb = col_double()))
names(CARI.2018)[names(CARI.2018) == 'DateTime'] <- 'datetimeAK'
names(CARI.2018)[names(CARI.2018) == 'Site'] <- 'site.ID'
#plot(CARI.2018$datetimeAK, CARI.2018$Discharge)
attributes(CARI.2018$datetimeAK)$tzone <- "America/Anchorage" # making sure it is in AK timezone
CARI.2018$day <-  format(as.POSIXct(CARI.2018$datetimeAK,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
CARI.2018$day <-  as.POSIXct(CARI.2018$day, "%Y-%m-%d", tz="America/Anchorage")
# make a daily Q record for CARI
cari.final.discharge.2018 <- CARI.2018[,-c(4:7)]
CARI.daily.2018 <-  with(CARI.2018, tapply(Discharge, list(day, site.ID), mean))
CARI.daily.2018 <-  as.data.frame(CARI.daily.2018)
CARI.Q.2018 <-  as.data.frame(CARI.daily.2018$CARI)
CARI.Q.2018$day <-  as.Date(rownames(CARI.daily.2018))
names(CARI.Q.2018) <-  c("Discharge_Lsec", "day")
# subset data by site #
setwd("~/Documents/Storms_clean_repo")
FRCH.2018 <-  subset(DOD.2018, site.ID == "FRCH")
plot(FRCH.2018$datetimeAK, FRCH.2018$Q)
MOOS.2018 = subset(DOD.2018, site.ID == "MOOS")
View(FRCH.2018)
# Making a final discharge file for each site
# FRCH
frch.final.discharge.2018 <- subset(Q.2018, site.ID == "FRCH")
# MOOS
moos.final.discharge.2018 <- subset(Q.2018, site.ID == "MOOS")
Q.2018$day <-  format(as.POSIXct(Q.2018$datetimeAK,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q.2018$day <-  as.POSIXct(Q.2018$day, "%Y-%m-%d", tz="America/Anchorage")
# Making a daily Q record for each site
Q.daily.2018 <-  with(Q.2018, tapply(Q, list(day, site.ID), mean))
Q.daily.2018 <-  as.data.frame(Q.daily.2018)
FRCH.Q.2018 <-  as.data.frame(Q.daily.2018$FRCH)
FRCH.Q.2018$day <-  as.Date(rownames(Q.daily.2018))
names(FRCH.Q.2018) <-  c("Discharge_Lsec", "day")
MOOS.Q.2018 <-  as.data.frame(Q.daily.2018$MOOS)
MOOS.Q.2018$day <-  as.Date(rownames(Q.daily.2018))
names(MOOS.Q.2018) <-  c("Discharge_Lsec", "day")
# data wrangling - fill gaps #
# fxn #
fillgaps15 = function(df, dat, datquotes, largegap.num){
## Document gaps >= largegap.num (1 largegap.num = 15 min) ##
# (note - the criteria of what constitutes a "large" gap should be reevaluated depending on the trend being characterized)
is.na.rle <- rle(is.na(dat))
is.na.rle$values <- is.na.rle$values & is.na.rle$lengths >= (largegap.num)
biggaps = df[inverse.rle(is.na.rle), ]
tz(biggaps$datetimeAK) = "America/Anchorage"
biggaps = subset(biggaps, select = "datetimeAK")
# Make univariate time series, covert to zoo, then to ts #
ts.xts = subset(df, select = c("datetimeAK",datquotes))
ts.xts<-read.zoo(ts.xts, index.column=1, format="%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
ts.xts<-as.xts(ts.xts)
# remove leading and trailing NAs #
ts.xts = na.trim(ts.xts, is.na="any")
# Apply auto.arima and kalman filter to impute missing values #
fit2 = auto.arima(ts.xts)
kal = KalmanSmooth(ts.xts, fit2$model)
id.na<-which(is.na(ts.xts))
for(i in id.na)
ts.xts[i]<-fit2$model$Z %*% kal$smooth[i,]
# revert to dataframe #
ts.df = as.data.frame((ts.xts))
ts.df$date_timeAK = as.POSIXct(row.names(ts.df), tz="America/Anchorage")
names(ts.df) = c("dat_filled", "datetimeAK")
# remove large gaps #
ts.df$dat_filled[ts.df$date_timeAK %in% as.POSIXct(biggaps$datetimeAK)] = NA
# Replace large gaps with linear interpolation #
ts.df$dat_filled = na.interpolation(ts.df$dat_filled)
ts.df = subset(ts.df, select = c("dat_filled", "datetimeAK"))
return(ts.df)
}
View(frch.final.discharge.2018)
# frch.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ frch.spcond.1, data = FRCH.SpCond, FUN = mean)) # Averaging 15 minute intervals
# frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
#
# FRCH.turb = subset(FRCH.2018, select = c("DateTime","Turbidity.FNU"))
# FRCH.turb$Turbidity.FNU <- as.numeric(FRCH.turb$Turbidity.FNU)
# frch.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = FRCH.turb) # Averaging 15 minute intervals
# frch.turb.1 <- cut(FRCH.turb$DateTime, breaks = "15 min")
# frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ frch.turb.1, data = FRCH.turb, FUN = mean)) # Averaging 15 minute intervals
# frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
#
FRCH = left_join(frch.final.discharge.2018, FRCH.2018, by="datetimeAk")
# frch.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ frch.spcond.1, data = FRCH.SpCond, FUN = mean)) # Averaging 15 minute intervals
# frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
#
# FRCH.turb = subset(FRCH.2018, select = c("DateTime","Turbidity.FNU"))
# FRCH.turb$Turbidity.FNU <- as.numeric(FRCH.turb$Turbidity.FNU)
# frch.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = FRCH.turb) # Averaging 15 minute intervals
# frch.turb.1 <- cut(FRCH.turb$DateTime, breaks = "15 min")
# frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ frch.turb.1, data = FRCH.turb, FUN = mean)) # Averaging 15 minute intervals
# frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
#
FRCH = left_join(frch.final.discharge.2018, FRCH.2018, by="datetimeAK")
View(FRCH)
# frch.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ frch.spcond.1, data = FRCH.SpCond, FUN = mean)) # Averaging 15 minute intervals
# frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
#
# FRCH.turb = subset(FRCH.2018, select = c("DateTime","Turbidity.FNU"))
# FRCH.turb$Turbidity.FNU <- as.numeric(FRCH.turb$Turbidity.FNU)
# frch.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = FRCH.turb) # Averaging 15 minute intervals
# frch.turb.1 <- cut(FRCH.turb$DateTime, breaks = "15 min")
# frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ frch.turb.1, data = FRCH.turb, FUN = mean)) # Averaging 15 minute intervals
# frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
#
FRCH = full_join(frch.final.discharge.2018, FRCH.2018)
# Baseflow Separation #
# this wont work with any NAs so I have to remove NAs
any(is.na(FRCH.Q.2018$day))
any(is.na(FRCH.Q.2018$Discharge_Lsec))
FRCH.Q.2018 <- na.omit(FRCH.Q.2018) # Removed 17 rows - (151 to 134)
any(is.na(MOOS.Q.2018$day))
any(is.na(MOOS.Q.2018$Discharge_Lsec)) # no NAs in MOOS
any(is.na(CARI.Q.2018$day))
any(is.na(CARI.Q.2018$Discharge_Lsec))
CARI.Q.2018 <- na.omit(CARI.Q.2018) # Removed 4 rows - (81 to 77)
### examine the recursive digital filter at .9, .925, .95 levels ###
plot(FRCH$Q ~ FRCH$datetimeAK, type = "l", xlab = "", ylab = "Q (L/sec)",
xlim =  as.POSIXct(c("2018-05-01 00:00:00","2018-10-31 00:00:00"), tz="America/Anchorage"),
ylim = c(0, 1500), col="blue")
# FRCH
frch.final.discharge.2018 <- na.omit(frch.final.discharge.2018) # 6521-6472
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$Q)
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$Q, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt)
###.925 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$Q)
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$Q, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(FRCH.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt)
### .95 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$Q, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(FRCH.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt)
FRCH_bfQ_mn = mean(FRCH_Q_bf$bt)
FRCH_bfQ_mn
FRCH_bfQ_mn*2
POKE.st <- read_csv("~/Documents/DoD_2018_Jake/RainGauge/POKE.RainGauge.2018.csv")
attributes(POKE.st$DateTime)$tzone <- 'America/Anchorage'
### Sum daily discharge ###
POKE.st$twentyfour <- rollapplyr(POKE.st$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.st$fourtyeight <- rollapplyr(POKE.st$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
# Greater than 5 #
poke.five.twenty.four <- POKE.st[which(POKE.st$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- POKE.st[which(POKE.st$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
# Greater than 10 #
poke.ten.twenty.four <- POKE.st[which(POKE.st$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- POKE.st[which(POKE.st$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
### Precip Discharge Chem ###
#FRCH#
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(FRCH$Q ~ FRCH$datetimeAK, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$NO3 * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$NO3 * 25 ~ FRCH$datetimeAK, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
names(FRCH)
names(FRCH) <- c("DateTime", "Site", "MeanDischarge", "day",
"fDOM.QSU", "SpCond.uScm", "Turbidity.FNU",
"nitrateuM")
lines(FRCH$fDOM.QSU * 10 ~ FRCH$, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="blue",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
# NO chem until June 1st
# Storm 1 #
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-21 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-06-24 01:00:00", tz="America/Anchorage"), col="purple")
FRCH_storm1_06_21 = FRCH[FRCH$DateTime > as.POSIXct("2018-06-21 01:30:00", tz="America/Anchorage") &
FRCH$DateTime < as.POSIXct("2018-06-24 01:00:00", tz="America/Anchorage"),]
plot(FRCH_storm1_06_21$MeanDischarge ~ as.POSIXct(FRCH_storm1_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,600), col="blue", main="FRCH 180621 storm 1",
xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 6 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
# Storm 2a #
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-29 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-04 14:00:00", tz="America/Anchorage"), col="purple")
FRCH_storm2a_06_29 = FRCH[FRCH$DateTime > as.POSIXct("2018-06-29 18:30:00", tz="America/Anchorage") &
FRCH$DateTime < as.POSIXct("2018-07-04 14:00:00", tz="America/Anchorage"),]
plot(FRCH_storm2a_06_29$MeanDischarge ~ as.POSIXct(FRCH_storm2a_06_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,1200), col="blue", main="FRCH 180629 storm 2a",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
abline(v= as.POSIXct("2018-06-29 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-06-29 18:30:00"), col="purple")
abline(v= as.POSIXct("2018-06-29 23:30:00"), col="purple")
abline(v= as.POSIXct("2018-06-30 02:30:00"), col="purple")
abline(v= as.POSIXct("2018-07-04 24:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-04 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-04 23:00:00", ), col="purple")
rm(POKE.st)
POKE.st <- read_csv("~/Documents/DoD_2018_Jake/RainGauge/POKE.RainGauge.2018.csv")
head(POKE.st$DateTime)
attributes(POKE.st$DateTime)$tzone <- 'America/Anchorage'
head(POKE.st$DateTime)
rm(POKE.st)
### Sum daily discharge ###
POKE.st$twentyfour <- rollapplyr(POKE.st$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.st$fourtyeight <- rollapplyr(POKE.st$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
# Greater than 5 #
poke.five.twenty.four <- POKE.st[which(POKE.st$twentyfour >= 5),] # twenty four hour period where the precip is 5
POKE.st <- read_csv("~/Documents/DoD_2018_Jake/RainGauge/POKE.RainGauge.2018.csv")
### Sum daily discharge ###
POKE.st$twentyfour <- rollapplyr(POKE.st$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.st$fourtyeight <- rollapplyr(POKE.st$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
# Greater than 5 #
poke.five.twenty.four <- POKE.st[which(POKE.st$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- POKE.st[which(POKE.st$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
# Greater than 10 #
poke.ten.twenty.four <- POKE.st[which(POKE.st$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- POKE.st[which(POKE.st$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
### Precip Discharge Chem ###
#FRCH#
# rename the columns to what they were to save me a bunch of time going back and changing every call to a column
names(FRCH) <- c("DateTime", "Site", "MeanDischarge", "day",
"fDOM.QSU", "SpCond.uScm", "Turbidity.FNU",
"nitrateuM")
#plots
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="blue",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
# NO chem until June 1st
# Storm 1 #
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-21 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-06-24 01:00:00", tz="America/Anchorage"), col="purple")
FRCH_storm1_06_21 = FRCH[FRCH$DateTime > as.POSIXct("2018-06-21 01:30:00", tz="America/Anchorage") &
FRCH$DateTime < as.POSIXct("2018-06-24 01:00:00", tz="America/Anchorage"),]
plot(FRCH_storm1_06_21$MeanDischarge ~ as.POSIXct(FRCH_storm1_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,600), col="blue", main="FRCH 180621 storm 1",
xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 6 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
# Storm 2a #
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-29 18:30:00"), col="purple")
head(FRCH$DateTime)
abline(v= as.POSIXct("2018-06-29 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-04 14:00:00", ), col="purple")
abline(v= as.POSIXct("2018-07-04 23:45:00", ), col="purple")
# Storm 2b #
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-04 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-08 14:00:00", tz="America/Anchorage"), col="purple")
# Storm 2b #
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
head(FRCH$DateTime)
# Storm 2b #
attributes(FRCH$DateTime)$tzone <- "America/Anchorage"
head(FRCH$DateTime)
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-04 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-08 14:00:00", tz="America/Anchorage"), col="purple")
head(POKE.st$DateTime)
attributes(POKE.st$DateTime)$tzone <- "America/Anchorage"
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-04 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-08 14:00:00", tz="America/Anchorage"), col="purple")
# Storm 2b #
attributes(FRCH$DateTime)$tzone <- "America/Anchorage"
attributes(POKE.st$DateTime)$tzone <- "America/Anchorage"
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
abline(v= as.POSIXct("2018-07-04 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-08 14:00:00", tz="America/Anchorage"), col="purple")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
ylim = c(10,0),
axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-04 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-08 14:00:00", tz="America/Anchorage"), col="purple")
