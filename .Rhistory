theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave("~/GitHub/Storms_clean_repo/plots/HI_plots/2015/FRCH/FRCH.HI.median.boot.pdf", plot=g2, width = 8, height = 6, units ="in")
FRCH.HI.df$date <- as.Date(with(FRCH.HI.df, paste(month, day, sep = "-")), "%m-%d")
FRCH.HI.df$doy <- yday(FRCH.HI.df$date)
g0 <- ggplot(FRCH.HI.df, aes(x = doy, y = HI, label=doy, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave("~/GitHub/Storms_clean_repo/plots/HI_plots/2015/FRCH/FRCH.HI.median.boot.doy.pdf", plot=g2, width = 8, height = 6, units ="in")
library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)
setwd("~/Documents/Storms_clean_repo")
library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)
setwd("~/Documents/Storms_clean_repo")
here()
# Import data #
# 2015
FRCH_HI_doy_df_2015 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2015", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2015 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2015", "MOOS","MOOS.HI.df.doy.csv"))
HI.dat_2015 <- rbind(FRCH_HI_doy_df_2015, MOOS_HI_doy_df_2015)
HI.dat_2015$year <- "2015"
HI.dat <- HI.dat_2015
HI.mean<- HI.dat %>% group_by(site.ID, response, year) %>%
summarise_at(vars(HI), list(HI = median)) # takes the median by site response and year
FRCH.fDOM <- subset(HI.mean, site.ID == "FRCH" & response == "fDOM")
POKE.fDOM <- subset(HI.mean, site.ID == "POKE" & response == "fDOM")
MOOS.fDOM <- subset(HI.mean, site.ID == "MOOS" & response == "fDOM")
STRT.fDOM <- subset(HI.mean, site.ID == "STRT" & response == "fDOM")
VAUL.fDOM <- subset(HI.mean, site.ID == "VAUL" & response == "fDOM")
CARI.fDOM <- subset(HI.mean, site.ID == "CARI" & response == "fDOM")
FRCH.NO3 <- subset(HI.mean, site.ID == "FRCH" & response == "NO3")
POKE.NO3 <- subset(HI.mean, site.ID == "POKE" & response == "NO3")
MOOS.NO3 <- subset(HI.mean, site.ID == "MOOS" & response == "NO3")
STRT.NO3 <- subset(HI.mean, site.ID == "STRT" & response == "NO3")
VAUL.NO3 <- subset(HI.mean, site.ID == "VAUL" & response == "NO3")
CARI.NO3 <- subset(HI.mean, site.ID == "CARI" & response == "NO3")
FRCH.fDOM$burn <- "unburned"
POKE.fDOM$burn <- "burned"
MOOS.fDOM$burn <- "burned"
STRT.fDOM$burn <- "burned"
VAUL.fDOM$burn <- "unburned"
CARI.fDOM$burn <- "unburned"
FRCH.NO3$burn <- "unburned"
POKE.NO3$burn <- "burned"
MOOS.NO3$burn <- "burned"
STRT.NO3$burn <- "burned"
VAUL.NO3$burn <- "unburned"
CARI.NO3$burn <- "unburned"
fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM, CARI.fDOM)
no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3, CARI.NO3)
fdom.hi$year <- as.character(fdom.hi$year)
no3.hi$year <- as.character(no3.hi$year)
fdom.lm <- lm(fdom.hi$HI ~ fdom.hi$burn)
no3.lm <- lm(no3.hi$HI ~ no3.hi$burn)
fdom.hi %>%
ggplot(aes(x=burn,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("DOC") +
xlab("Catchment burned (%)") +
ylab("HI-Solute Storage")
no3.hi %>%
ggplot(aes(x=burn,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("NO3") +
xlab("Catchment burned (%)") +
ylab("HI-Solute Storage")
# Permafrost #
FRCH.fDOM$pf <- "Moderate"
POKE.fDOM$pf <- "Moderate"
MOOS.fDOM$pf <- "Moderate"
STRT.fDOM$pf <- "High"
VAUL.fDOM$pf <- "High"
CARI.fDOM$pf <- "Moderate"
FRCH.NO3$pf <- "Moderate"
POKE.NO3$pf <- "Moderate"
MOOS.NO3$pf <- "Moderate"
STRT.NO3$pf <- "High"
VAUL.NO3$pf <- "High"
CARI.NO3$pf <- "Moderate"
pf.fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM, CARI.fDOM)
pf.no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3, CARI.NO3)
pf.fdom.hi$year <- as.character(pf.fdom.hi$year)
pf.no3.hi$year <- as.character(pf.no3.hi$year)
pf.fdom.lm <- lm(pf.fdom.hi$HI ~ pf.fdom.hi$burn)
pf.no3.lm <- lm(pf.no3.hi$HI ~ pf.no3.hi$burn)
pf.fdom.hi %>%
ggplot(aes(x=pf,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("DOC") +
xlab("Permafrost Extent (%)") +
ylab("HI-Solute Storage")
pf.no3.hi %>%
ggplot(aes(x=pf,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("NO3") +
xlab("Permafrost Extent (%)") +
ylab("HI-Solute Storage")
### H 1.1: HI against precip ###
HI.mean.precip <- HI.dat %>% group_by(site.ID, year, storm.num) %>%
summarise_at(vars(HI), list(HI = median)) # take mean by site response and year
HI.mean.precip.response <- HI.dat %>% group_by(site.ID, year, storm.num, response) %>%
summarise_at(vars(HI), list(HI = median)) # take mean by site response and year
### USGS pulled data ###
# Peak stream flow for the Chena River
# 2015-05-12
# 2018-05-22
# 2019-05-12
# 2020-05-12
#2021-05-12
##############################################################################################################
#################################### Antecedent conditions #####################################################################
##############################################################################################################
setwd("Storm_Events/2015")
########################################## 2015 ########################################
### Import climate ###
CPCRW <- read_csv(here("Climate", "Precip", "CPCRW.RainGauge.2015.final.csv"))
CPCRW$datetimeAK <- force_tz(CPCRW$datetimeAK, "America/Anchorage") # it already is in AK time so I want to make it recognize it without changing the actually time value
# this needs to be updated to include 2015 data
airtempmean <- read.csv(here("Climate", "airtempmean.csv"))
airtempmean$datetimeAK <- airtempmean$date_timeAK
airtempmean$datetimeAK <- as.POSIXct(airtempmean$datetimeAK, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
### FRCH ####
FRCHstorm_file_list <- list.files(path = "All_sites/",
recursive=F,
pattern="FRCH",
full.names=TRUE)
FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
FRCH_storms$storm.num = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 449),
rep("storm6a", 1295),
rep("storm7", 240))
FRCH_storms$datetimeAK <- as.POSIXct(FRCH_storms$datetimeAK, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
FRCH.2015.storms.1<- left_join(FRCH_storms, CPCRW, by = "datetimeAK")
FRCH.2015.storms.1<- left_join(FRCH.2015.storms.1, airtempmean, by = "datetimeAK")
names(FRCH.2015.storms.1)[names(FRCH.2015.storms.1) == ''] <- 'x'
FRCH.2015.per.storm.1 <- FRCH.2015.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(mean), list(precip = sum), na.rm = TRUE)
temp <- FRCH.2015.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event
FRCH.2015.per.storm.1$temp <- temp$temp
# Reading in chem data to join with the antecedent moisture condition data
DOD.2015 <- read.csv(here("processed_sensor_data", "2015", "SUNA.EXO.int.corr.lab_2015.csv"))
DOD.2015 <- DOD.2015[c("datetimeAK", "Site", "fDOM.QSU.T.turb.col", "SpCond.uScm.adj",
"Turbidity.FNU.adj", "nitrateuM.mn.lab", "abs254.adj.mn")]
names(DOD.2015) <- c("datetimeAK", "site.ID", "fDOM", "SPC", "Turb", "NO3", "ABS_254")
# summing up week/month/threemonth antecedent precip
DOD.2015$datetimeAK <- ymd_hms(DOD.2015$datetimeAK) # converting character to datetime
DOD.2015$datetimeAK <- force_tz(DOD.2015$datetimeAK, "America/Anchorage") # converting character to datetime
DOD.2015 <- left_join(DOD.2015, CPCRW, by = "datetimeAK")
FRCH.2015 <- subset(DOD.2015, site.ID == "FRCH")
MOOS.2015 <- subset(DOD.2015, site.ID == "MOOS")
ts <- seq(as.POSIXct("2015-05-01", tz = "America/Anchorage"),
as.POSIXct("2015-10-31", tz = "America/Anchorage"),
by = "15 min")
head(ts)
ts <- as.data.frame(ts)
names(ts) <- c("datetimeAK")
FRCH.2015 <- left_join(ts, FRCH.2015, by = "datetimeAK")
FRCH.2015 <- left_join(FRCH.2015, airtempmean, by = "datetimeAK")
FRCH.2015$week <- rollapplyr(FRCH.2015$mean, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2015$month <- rollapplyr(FRCH.2015$mean, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2015$ThreeMonth <- rollapplyr(FRCH.2015$mean, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2015$temp.week <- rollapplyr(FRCH.2015$airtemp_100.1000cm_mean.x, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2015.storms.1 <- FRCH.2015.storms.1[,-c(1,3:9,11:20)]
# joining with storms
FRCH.2015.1 <- left_join(FRCH.2015.storms.1, FRCH.2015, by = c("datetimeAK")) # week month and 3 month precip totals
FRCH.2015.per.storm.2 <- FRCH.2015.1 %>% group_by(storm.num) %>%
summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
FRCH.2015.per.storm.3 <- FRCH.2015.1 %>% group_by(storm.num) %>%
summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm
FRCH.2015.per.storm.4 <- FRCH.2015.1 %>% group_by(storm.num) %>%
summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
# FRCH.2022.per.storm.5 <- FRCH.2022.1 %>% group_by(storm.num) %>%
#   summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping one week mean temperature leading up to a storm
HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2015" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2015" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2015" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2015" & site.ID == "FRCH" & response == "turb")
HI.mean.precip.frch.abs <- subset(HI.mean.precip.response, year == "2015" & site.ID == "FRCH" & response == "abs")
# NO3
HI.frch.no3.2015 <- left_join(HI.mean.precip.frch.NO3, FRCH.2015.per.storm.1, by = "storm.num")
HI.frch.no3.2015 <- left_join(HI.frch.no3.2015, FRCH.2015.per.storm.2, by = "storm.num")
HI.frch.no3.2015 <- left_join(HI.frch.no3.2015, FRCH.2015.per.storm.3, by = "storm.num")
HI.frch.no3.2015 <- left_join(HI.frch.no3.2015, FRCH.2015.per.storm.4, by = "storm.num")
#HI.frch.no3.2015 <- left_join(HI.frch.no3.2015, FRCH.2015.per.storm.5, by = "storm.num")
frch.lm.no3 <- lm(HI.frch.no3.2015$HI ~ HI.frch.no3.2015$precip) # model one with just total precip
frch.lm.no3.2 <- lm(HI.frch.no3.2015$HI ~ HI.frch.no3.2015$precip.week) # model one with just total precip
frch.lm.no3.3 <- lm(HI.frch.no3.2015$HI ~ HI.frch.no3.2015$precip.month) # model one with just total precip
frch.lm.no3.4 <- lm(HI.frch.no3.2015$HI ~ HI.frch.no3.2015$ThreeMonth) # model one with just total precip
# fDOM #
HI.frch.fDOM.2015 <- left_join(HI.mean.precip.frch.fDOM, FRCH.2015.per.storm.1, by = "storm.num")
HI.frch.fDOM.2015 <- left_join(HI.frch.fDOM.2015, FRCH.2015.per.storm.2, by = "storm.num")
HI.frch.fDOM.2015 <- left_join(HI.frch.fDOM.2015, FRCH.2015.per.storm.3, by = "storm.num")
HI.frch.fDOM.2015 <- left_join(HI.frch.fDOM.2015, FRCH.2015.per.storm.4, by = "storm.num")
#HI.frch.fDOM.2021 <- left_join(HI.frch.fDOM.2021, FRCH.2021.per.storm.5, by = "storm.num")
frch.lm.fDOM <- lm(HI.frch.fDOM.2015$HI ~ HI.frch.fDOM.2015$precip) # model one with just total precip
frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2015$HI ~ HI.frch.fDOM.2015$precip.week) # model one with just total precip
frch.lm.fDOM.3 <- lm(HI.frch.fDOM.2015$HI ~ HI.frch.fDOM.2015$precip.month) # model one with just total precip
frch.lm.fDOM.4 <- lm(HI.frch.fDOM.2015$HI ~ HI.frch.fDOM.2015$ThreeMonth) # model one with just total precip
#frch.lm.fDOM.5 <- lm(HI.frch.fDOM.2022$HI ~ HI.frch.fDOM.2022$temp.week) # model one with just total precip
# SPC #
HI.frch.SPC.2015 <- left_join(HI.mean.precip.frch.SPC, FRCH.2015.per.storm.1, by = "storm.num")
HI.frch.SPC.2015 <- left_join(HI.frch.SPC.2015, FRCH.2015.per.storm.2, by = "storm.num")
HI.frch.SPC.2015 <- left_join(HI.frch.SPC.2015, FRCH.2015.per.storm.3, by = "storm.num")
HI.frch.SPC.2015 <- left_join(HI.frch.SPC.2015, FRCH.2015.per.storm.4, by = "storm.num")
#HI.frch.SPC.2021 <- left_join(HI.frch.SPC.2021, FRCH.2021.per.storm.5, by = "storm.num")
frch.lm.SPC <- lm(HI.frch.SPC.2015$HI ~ HI.frch.SPC.2015$precip) # model one with just total precip
frch.lm.SPC.2 <- lm(HI.frch.SPC.2015$HI ~ HI.frch.SPC.2015$precip.week) # model one with just total precip
frch.lm.SPC.3 <- lm(HI.frch.SPC.2015$HI ~ HI.frch.SPC.2015$precip.month) # model one with just total precip
frch.lm.SPC.4 <- lm(HI.frch.SPC.2015$HI ~ HI.frch.SPC.2015$ThreeMonth) # model one with just total precip
#frch.lm.SPC.5 <- lm(HI.frch.SPC.2022$HI ~ HI.frch.SPC.2022$temp.week) # model one with just total precip
# turb #
HI.frch.turb.2015 <- left_join(HI.mean.precip.frch.turb, FRCH.2015.per.storm.1, by = "storm.num")
HI.frch.turb.2015 <- left_join(HI.frch.turb.2015, FRCH.2015.per.storm.2, by = "storm.num")
HI.frch.turb.2015 <- left_join(HI.frch.turb.2015, FRCH.2015.per.storm.3, by = "storm.num")
HI.frch.turb.2015 <- left_join(HI.frch.turb.2015, FRCH.2015.per.storm.4, by = "storm.num")
#HI.frch.turb.2021 <- left_join(HI.frch.turb.2021, FRCH.2021.per.storm.5, by = "storm.num")
frch.lm.turb <- lm(HI.frch.turb.2015$HI ~ HI.frch.turb.2015$precip) # model one with just total precip
frch.lm.turb.2 <- lm(HI.frch.turb.2015$HI ~ HI.frch.turb.2015$precip.week) # model one with just total precip
frch.lm.turb.3 <- lm(HI.frch.turb.2015$HI ~ HI.frch.turb.2015$precip.month) # model one with just total precip
frch.lm.turb.4 <- lm(HI.frch.turb.2015$HI ~ HI.frch.turb.2015$ThreeMonth) # model one with just total precip
#frch.lm.turb.5 <- lm(HI.frch.turb.2022$HI ~ HI.frch.turb.2022$temp.week) # model one with just total precip
# abs #
HI.frch.abs.2015 <- left_join(HI.mean.precip.frch.abs, FRCH.2015.per.storm.1, by = "storm.num")
HI.frch.abs.2015 <- left_join(HI.frch.abs.2015, FRCH.2015.per.storm.2, by = "storm.num")
HI.frch.abs.2015 <- left_join(HI.frch.abs.2015, FRCH.2015.per.storm.3, by = "storm.num")
HI.frch.abs.2015 <- left_join(HI.frch.abs.2015, FRCH.2015.per.storm.4, by = "storm.num")
#HI.frch.abs.2021 <- left_join(HI.frch.abs.2021, FRCH.2021.per.storm.5, by = "storm.num")
frch.lm.abs <- lm(HI.frch.abs.2015$HI ~ HI.frch.abs.2015$precip) # model one with just total precip
frch.lm.abs.2 <- lm(HI.frch.abs.2015$HI ~ HI.frch.abs.2015$precip.week) # model one with just total precip
frch.lm.abs.3 <- lm(HI.frch.abs.2015$HI ~ HI.frch.abs.2015$precip.month) # model one with just total precip
frch.lm.abs.4 <- lm(HI.frch.abs.2015$HI ~ HI.frch.abs.2015$ThreeMonth) # model one with just total precip
#frch.lm.abs.5 <- lm(HI.frch.turb.2022$HI ~ HI.frch.turb.2022$temp.week) # model one with just total precip
# this would be for intensity but we are not doing this right now if just comparing to the DOD stuff
# sum.time <- FRCH.2018.storms.1 %>%
#   mutate(grp=data.table::rleid(storm.num))%>%
#   group_by(grp) %>%
#   summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
#                                                          min(DateTime),units="hour"))%>%
#   group_by(storm.num) %>%
#   summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column for each individual storm and then I can generate an intensity metric which would be TotalPrecip/duration of event
#
# HI.frch.fDOM.2.2018 <- left_join(HI.frch.fDOM.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
# HI.frch.fDOM.2.2018$TOTAL.TIME <- as.numeric(HI.frch.fDOM.2.2018$TOTAL.TIME)
# HI.frch.fDOM.2.2018$Intensity <- HI.frch.fDOM.2.2018$precip/HI.frch.fDOM.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
#
# frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2.2018$HI ~ HI.frch.fDOM.2.2018$precip + HI.frch.fDOM.2.2018$Intensity) # model one with total precip and intensity
#
# br <- HI.frch.fDOM.2.2018 %>%
#   ggplot(aes(x=Intensity,
#              y=HI)) +
#   geom_point() +
#   geom_smooth(method = "lm") +
#   stat_poly_eq(formula = frch.formula,
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE) +
#   ggtitle("FRCH fDOM") +
#   xlab("Intensity (mm/hr)") +
#   ylab("HI-Solute Storage") +
#   theme_classic() # plot model
#
# HI.frch.SPC.2.2018 <- left_join(HI.frch.SPC.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
# HI.frch.SPC.2.2018$TOTAL.TIME <- as.numeric(HI.frch.SPC.2.2018$TOTAL.TIME)
# HI.frch.SPC.2.2018$Intensity <- HI.frch.SPC.2.2018$precip/HI.frch.SPC.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
#
# frch.lm.SPC.2 <- lm(HI.frch.SPC.2.2018$HI ~ HI.frch.SPC.2.2018$precip + HI.frch.SPC.2.2018$Intensity) # model one with total precip and intensity
#
# HI.frch.turb.2.2018 <- left_join(HI.frch.turb.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
# HI.frch.turb.2.2018$TOTAL.TIME <- as.numeric(HI.frch.turb.2.2018$TOTAL.TIME)
# HI.frch.turb.2.2018$Intensity <- HI.frch.turb.2.2018$precip/HI.frch.turb.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
#
# frch.lm.turb.2 <- lm(HI.frch.turb.2.2018$HI ~ HI.frch.turb.2.2018$precip + HI.frch.turb.2.2018$Intensity) # model one with total precip and intensity
# day of year # SEASONALITY
FRCH.2015.1$day <- julian(FRCH.2015.1$datetimeAK, origin = as.POSIXct('2015-01-01', tz = 'America/Anchorage')) # making a fractional day column
FRCH.2015.1$day <- as.numeric(FRCH.2015.1$day)
FRCH.2015.per.storm.5 <- FRCH.2015.1 %>% group_by(storm.num) %>%
summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm
HI.frch.fDOM.2.2015 <- left_join(HI.frch.fDOM.2015, FRCH.2015.per.storm.5, by = "storm.num")
frch.lm.fDOM.5 <- lm(HI.frch.fDOM.2.2015$HI ~ HI.frch.fDOM.2.2015$doy)
# HI.salcha.fDOM.2.2021 %>%
#   ggplot(aes(x=doy,
#              y=HI)) +
#   geom_point() +
#   geom_smooth(method = "lm") +
#   stat_poly_eq(formula = salcha.formula,
#                aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
#                parse = TRUE) +
#   ggtitle("SALCHA fDOM") +
#   xlab("Day of year") +
#   ylab("HI-Solute Storage") +
#   theme_classic() # plot model
HI.frch.SPC.2.2015 <- left_join(HI.frch.SPC.2015, FRCH.2015.per.storm.5, by = "storm.num")
frch.lm.SPC.5 <- lm(HI.frch.SPC.2.2015$HI ~ HI.frch.SPC.2.2015$doy)
HI.frch.turb.2.2015 <- left_join(HI.frch.turb.2015, FRCH.2015.per.storm.5, by = "storm.num")
frch.lm.turb.5 <- lm(HI.frch.turb.2.2015$HI ~ HI.frch.turb.2.2015$doy)
HI.frch.no3.2.2015 <- left_join(HI.frch.no3.2015, FRCH.2015.per.storm.5, by = "storm.num")
frch.lm.no3.5 <- lm(HI.frch.no3.2.2015$HI ~ HI.frch.no3.2.2015$doy)
HI.frch.abs.2.2015 <- left_join(HI.frch.abs.2015, FRCH.2015.per.storm.5, by = "storm.num")
frch.lm.abs.5 <- lm(HI.frch.turb.2.2015$HI ~ HI.frch.turb.2.2015$doy)
HI.frch.2015 <- rbind(HI.frch.no3.2.2015, HI.frch.fDOM.2.2015, HI.frch.SPC.2.2015, HI.frch.turb.2.2015, HI.frch.abs.2.2015) # merging all responses together
HI.frch.2015$date <- as.Date(HI.frch.2015$doy, origin = "2015-01-01")
origin_date <- as.Date("2015-05-12")
HI.frch.2015$TimeSinceChena <- julian(HI.frch.2015$date, origin_date)
write.csv(here("Storms_clean_repo", "Output_from_analysis", "04_Antecedent_Conditions", "2015", "HI.frch.2015.csv"))
write.csv(HI.frch.2015, here("Storms_clean_repo", "Output_from_analysis", "04_Antecedent_Conditions", "2015", "HI.frch.2015.csv"))
here()
write.csv(HI.frch.2015, here("Output_from_analysis", "04_Antecedent_Conditions", "2015", "HI.frch.2015.csv"))
library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)
storm_file_list_beta <- list.files(path="FRCH_MOOS/",
recursive=F,
pattern=".csv",
full.names=TRUE)
storm_list_beta<-do.call("list", lapply(storm_file_list_beta,
read.csv,
stringsAsFactors=FALSE,
header=T, row.names=1))
storm_file_list_beta = sub("FRCH_MOOS//", storm_file_list_beta, replacement = "")
# storm_file_list_beta = sub("~/Documents/Storms_clean_repo/Storm_Events/2015/FRCH_MOOS//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta
for(i in 1:length(storm_list_beta)){
storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(storm_list_beta[[i]][["valuedatetime"]],
"%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} # changing character format into datetime
#  organize storm data by site and solute
FRCH_storm_list_beta = storm_list_beta[c(1:42)] #42
FRCH_NO3_storm_list_beta = FRCH_storm_list_beta[c(grep("NO3", names(FRCH_storm_list_beta)))]
FRCH_fDOM_storm_list_beta = FRCH_storm_list_beta[c(grep("fDOM", names(FRCH_storm_list_beta)))]
FRCH_SpCond_storm_list_beta = FRCH_storm_list_beta[c(grep("SPC", names(FRCH_storm_list_beta)))]
FRCH_turb_storm_list_beta = FRCH_storm_list_beta[c(grep("turb", names(FRCH_storm_list_beta)))]
FRCH_abs_storm_list_beta = FRCH_storm_list_beta[c(grep("abs", names(FRCH_storm_list_beta)))]
FRCH_Q_storm_list_beta = FRCH_storm_list_beta[c(grep("Q", names(FRCH_storm_list_beta)))]
# normalize Q data
# FRCH
for(i in 1:length(FRCH_Q_storm_list_beta)){
FRCH_Q_storm_list_beta[[i]][["datavalue.norm"]] =
(FRCH_Q_storm_list_beta[[i]][["datavalue"]]-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
# normalize solute data
#
#NO3
for(i in 1:length(FRCH_NO3_storm_list_beta)){
FRCH_NO3_storm_list_beta[[i]][["datavalue.norm"]] =
(FRCH_NO3_storm_list_beta[[i]][["datavalue"]]-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
#fDOM
for(i in 1:length(FRCH_fDOM_storm_list_beta)){
FRCH_fDOM_storm_list_beta[[i]][["datavalue.norm"]] =
(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
#SPC
for(i in 1:length(FRCH_SpCond_storm_list_beta)){
FRCH_SpCond_storm_list_beta[[i]][["datavalue.norm"]] =
(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
#Turb
for(i in 1:length(FRCH_turb_storm_list_beta)){
FRCH_turb_storm_list_beta[[i]][["datavalue.norm"]] =
(FRCH_turb_storm_list_beta[[i]][["datavalue"]]-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
#abs
for(i in 1:length(FRCH_abs_storm_list_beta)){
FRCH_abs_storm_list_beta[[i]][["datavalue.norm"]] =
(FRCH_abs_storm_list_beta[[i]][["datavalue"]]-min(FRCH_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
(max(FRCH_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_abs_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
FRCH_NO3_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_NO3_storm_list_beta, inner_join, by = "valuedatetime")
View(FRCH_NO3_storm)
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 454),
rep("storm6a", 1299),
rep("storm7", 240))
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 454),
rep("storm6a", 1295),
rep("storm7", 240))
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 454),
rep("storm6a", 1294),
rep("storm7", 240))
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 454),
rep("storm6a", 1294),
rep("storm7", 242))
FRCH_NO3_storm$storm.ID = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 453),
rep("storm6a", 1295),
rep("storm7", 242))
