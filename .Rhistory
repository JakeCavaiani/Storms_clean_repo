geom_errorbar(aes(x=pctburn_lg, ymin=meanHI-seHI, ymax=meanHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn Extent") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.hi.burn
ggsave("HI_NO3_burn.pdf",
path = here("plots", "Catchment_characteristics", "HI"),
width = 7, height = 7)
vn = expression(paste("Mean ß-"*N*O[3]^"-"))
no3.beta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=meanHI-seHI, ymax=meanHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 6) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn Extent") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.beta.burn
no3.beta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=meanBETA-seHI, ymax=meanBETA+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 6) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn Extent") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.beta.burn
#no3.hi.burn
vn = expression(paste("Mean HI-"*N*O[3]^"-"))
vn = expression(paste("SD HI-"*N*O[3]^"-"))
no3.sdhi.slope <- ggplot(NO3_data, aes(x = Slope, y = sdHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=sdHI-seHI, ymax=sdHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 6) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment Slope") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.sdhi.slope
no3.sdhi.slope <- ggplot(NO3_data, aes(x = Slope, y = sdHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=Slope, ymin=sdHI-seHI, ymax=sdHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 6) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment Slope") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.sdhi.slope
ggsave("sdHI_NO3_slope.pdf",
path = here("plots", "Catchment_characteristics", "HI"),
width = 7, height = 7)
vn = expression(paste("SD ß-"*N*O[3]^"-"))
vn = expression(paste("SD ß-"*N*O[3]^"-"))
no3.sdbeta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=sdBETA-seHI, ymax=sdBETA+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 6) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn extent") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.sdbeta.burn
no3.sdbeta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=sdBETA-seHI, ymax=sdBETA+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn extent") +
ylab(vn) +
theme(aspect.ratio = 1)
vn = expression(paste("SD HI-"*N*O[3]^"-"))
no3.sdhi.slope <- ggplot(NO3_data, aes(x = Slope, y = sdHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=Slope, ymin=sdHI-seHI, ymax=sdHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment Slope") +
ylab(vn) +
theme(aspect.ratio = 1)
vn = expression(paste("Mean ß-"*N*O[3]^"-"))
no3.beta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=meanBETA-seHI, ymax=meanBETA+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn Extent") +
ylab(vn) +
theme(aspect.ratio = 1)
# NO3
gA <- ggplotGrob(no3.hi.burn)
gB <- ggplotGrob(no3.beta.burn)
gC <- ggplotGrob(no3.sdhi.slope)
gD <- ggplotGrob(no3.sdbeta.burn)
grid::grid.newpage()
grid.draw(cbind(rbind(gA, gB, size = "max"),
rbind(gC, gD, size = "max")))
CV.all <- AMC %>% group_by(response_var,site.ID) %>%
dplyr::summarise(n = n(),
meanHI = mean(Hyst_index, na.rm = TRUE),
meanBETA = mean(Beta_index, na.rm = TRUE),
sdHI = sd(Hyst_index, na.rm = TRUE),
sdBETA = sd(Beta_index, na.rm = TRUE),
CVhi = sdHI/meanHI,
CVbeta = sdBETA/meanBETA,
CatBurn = paste(burn),
CatPF = paste(pf),
Slope = as.numeric(SLOPE_MEAN),
fireyear_lg = as.numeric(fireyear_lg),
pctburn_lg = as.numeric(pctburn_lg),
areaburn_lg = as.numeric(areaburn_lg),
PF = as.numeric(Pf_Prob_1m_mean_x),
NDVI = as.numeric(NDVI_p50__mean)) %>%
mutate(seHI = sdHI/sqrt(n),
seBETA = sdBETA/sqrt(n))
CV.all <- CV.all[!duplicated(CV.all$meanHI), ] # removing duplicated rows
CV.all <- CV.all %>%
mutate(across(c(NDVI),
~ifelse(site.ID == "CARI", 0.2106070103, .)))
CV.all <- CV.all %>%
mutate(across(c(NDVI),
~ifelse(site.ID == "FRCH", 0.2125723437, .)))
CV.all <- CV.all %>%
mutate(across(c(NDVI),
~ifelse(site.ID == "MOOS", 0.2294949194, .)))
CV.all <- CV.all %>%
mutate(across(c(NDVI),
~ifelse(site.ID == "POKE", 0.232423168, .)))
CV.all <- CV.all %>%
mutate(across(c(NDVI),
~ifelse(site.ID == "STRT", 0.2558581085, .)))
CV.all <- CV.all %>%
mutate(across(c(NDVI),
~ifelse(site.ID == "VAUL", 0.227537246, .)))
# all years in one
CV.all[c("Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI")] <- lapply(CV.all[c("Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI")], function(x) c(scale(x)))
CV.all$Deciduous.2020 <- NA
CV.all <- CV.all %>%
mutate(across(c(Deciduous.2020),
~ifelse(site.ID == "VAUL", -1.068837,.)))
CV.all <- CV.all %>%
mutate(across(c(Deciduous.2020),
~ifelse(site.ID == "CARI", -1.3259120,.)))
CV.all <- CV.all %>%
mutate(across(c(Deciduous.2020),
~ifelse(site.ID == "STRT", -0.4386875,.)))
CV.all <- CV.all %>%
mutate(across(c(Deciduous.2020),
~ifelse(site.ID == "MOOS", 1.1782128,.)))
CV.all <- CV.all %>%
mutate(across(c(Deciduous.2020),
~ifelse(site.ID == "FRCH", 1.0810027,.)))
CV.all <- CV.all %>%
mutate(across(c(Deciduous.2020),
~ifelse(site.ID == "POKE", 0.5722677,.)))
CV_all_NO3 = subset(CV.all, response_var == "NO3")
# fDOM #
CV_all_fDOM = subset(CV.all, response_var == "fDOM")
# SPC #
CV_all_SPC = subset(CV.all, response_var == "SPC")
# turb #
CV_all_turb = subset(CV.all, response_var == "turb")
NO3_data<- CV_all_NO3[,c("site.ID", "n", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "Deciduous.2020", "CatBurn", "CatPF", "seHI", "seBETA")]
#no3.hi.burn
vn = expression(paste("Mean HI-"*N*O[3]^"-"))
no3.hi.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=meanHI-seHI, ymax=meanHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn Extent") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.hi.burn
vn = expression(paste("Mean ß-"*N*O[3]^"-"))
no3.beta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=meanBETA-seHI, ymax=meanBETA+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn Extent") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.beta.burn
no3.beta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=meanBETA-seBETA, ymax=meanBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn Extent") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.beta.burn
vn = expression(paste("Mean ß-"*N*O[3]^"-"))
no3.beta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=meanBETA-seBETA, ymax=meanBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn Extent") +
ylab(vn) +
theme(aspect.ratio = 1)
vn = expression(paste("SD ß-"*N*O[3]^"-"))
no3.sdbeta.burn <- ggplot(NO3_data, aes(x = pctburn_lg, y = sdBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
geom_errorbar(aes(x=pctburn_lg, ymin=sdBETA-seBETA, ymax=sdBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn extent") +
ylab(vn) +
theme(aspect.ratio = 1)
no3.sdbeta.burn
gA <- ggplotGrob(no3.hi.burn)
gB <- ggplotGrob(no3.beta.burn)
gC <- ggplotGrob(no3.sdhi.slope)
gD <- ggplotGrob(no3.sdbeta.burn)
grid::grid.newpage()
grid.draw(cbind(rbind(gA, gB, size = "max"),
rbind(gC, gD, size = "max")))
fDOM_data<- CV_all_fDOM[,c("site.ID", "n", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "Deciduous.2020", "CatBurn", "CatPF", "seHI", "seBETA")]
fdom.hi.slope <- ggplot(fDOM_data, aes(x = Slope, y = meanHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 6) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment slope") +
ylab("Mean HI-fDOM")
fdom.hi.slope
fdom.hi.slope <- ggplot(fDOM_data, aes(x = Slope, y = meanHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 6) +
geom_errorbar(aes(x=Slope, ymin=meanHI-seHI, ymax=meanHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment slope") +
ylab("Mean HI-fDOM")
fdom.hi.slope
fdom.hi.slope <- ggplot(fDOM_data, aes(x = Slope, y = meanHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=Slope, ymin=meanHI-seHI, ymax=meanHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment slope") +
ylab("Mean HI-fDOM")
fdom.hi.slope
View(CV_all_fDOM)
fDOM.beta.slope <- ggplot(fDOM_data, aes(x = Slope, y = meanBETA)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=Slope, ymin=meanBETA-seBETA, ymax=meanBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme_classic() +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment slope") +
ylab("Mean ß-fDOM")
fDOM.beta.slope
fDOM.sdhi.burn <- ggplot(fDOM_data, aes(x = pctburn_lg, y = sdHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
theme_classic()+
geom_errorbar(aes(x=pctburn_lg, ymin=sdHI-seHI, ymax=sdHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn extent") +
ylab("SD HI-fDOM")
fDOM.sdhi.burn
fDOM.sdbeta.slope <- ggplot(fDOM_data, aes(x = Slope, y = sdBETA)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "left",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_errorbar(aes(x=Slope, ymin=sdBETA-seBETA, ymax=sdBETA+seBETA), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Burn extent") +
ylab("SD ß-fDOM")
fDOM.sdbeta.slope
gA <- ggplotGrob(fdom.hi.slope)
gB <- ggplotGrob(fDOM.beta.slope)
gC <- ggplotGrob(fDOM.sdhi.burn)
gD <- ggplotGrob(fDOM.sdbeta.slope)
grid::grid.newpage()
grid.draw(cbind(rbind(gA, gB, size = "max"),
rbind(gC, gD, size = "max")))
fig <- arrangeGrob(cbind(rbind(gA, gB, size = "max"),
rbind(gC, gD, size = "max")))
SPC_data<- CV_all_SPC[,c("site.ID", "n", "meanHI", "meanBETA", "sdHI", "sdBETA", "Slope", "fireyear_lg", "pctburn_lg", "areaburn_lg", "PF", "NDVI", "Deciduous.2020", "CatBurn", "CatPF", "seHI", "seBETA")]
spc.hi.slope <- ggplot(SPC_data, aes(x = Slope, y = meanHI)) +
geom_point(size = 3) +
geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, color = "black") +
stat_poly_eq(formula = y~x,
label.y = "top", label.x = "right",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size = 5) +
geom_errorbar(aes(x=Slope, ymin=meanHI-seHI, ymax=meanHI+seHI), width=0.2, colour="black", alpha=0.9, size=1.0) +
theme_classic()+
theme(axis.text.x=element_text(size=20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.key.size = unit(2.0, 'cm'),
strip.text = element_text(size = 20)) +
xlab("Catchment slope") +
ylab("Mean HI-SPC")
spc.hi.slope
library(tidyverse)
library(stats)
library(readr)
library(ggplot2)
library(plotly)
library(GGally)
library(ggpmisc)
library(ggpubr)
library(ggExtra)
library(lubridate)
library(nlme)
library(MuMIn)
library(multcomp)
library(here)
#### MEAN SOLUTE CONCENTRATIONS ####
DOD_2018 <- read.csv(here("Q", "Q_chem", "DOD.2018.csv"))
View(DOD_2018)
