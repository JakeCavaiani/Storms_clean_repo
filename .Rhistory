STRT.HI.df = bind_rows(HIs.df.list, .id = "column_label")
STRT.HI.df$storm.ID = c(rep("STRT_storm1_08_19_NO3", 50),
rep("STRT_storm1_08_19_fDOM", 50),
rep("STRT_storm1_08_19_SPC", 50),
rep("STRT_storm1_08_19_turb", 50),
rep("STRT_storm1_08_19_abs", 50),
rep("STRT_storm2_09_04_NO3", 50),
rep("STRT_storm2_09_04_fDOM", 50),
rep("STRT_storm2_09_04_SPC", 50),
rep("STRT_storm2_09_04_turb", 50),
rep("STRT_storm2_09_04_abs", 50),
rep("STRT_storm3_09_22_NO3", 50),
rep("STRT_storm3_09_22_fDOM", 50),
rep("STRT_storm3_09_22_SPC", 50),
rep("STRT_storm3_09_22_turb", 50),
rep("STRT_storm3_09_22_abs", 50))
STRT.HI.df$storm.ID = as.factor(STRT.HI.df$storm.ID)
STRT.HI.df = separate(data=STRT.HI.df, col=storm.ID, into=c("site.ID","storm.num", "month", "day", "response"), sep = "_", remove = F)
par(mfrow=c(1,1))
median_cl_boot <- function(x, conf = 0.95) {
lconf <- (1 - conf)/2
uconf <- 1 - lconf
require(boot)
bmedian <- function(x, ind) median(x[ind])
bt <- boot(x, bmedian, 10000)
bb <- boot.ci(bt, conf = 0.95, type = "perc")
data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t,
uconf))
}
g0 <- ggplot(STRT.HI.df, aes(x = storm.num, y = HI, label=storm.num, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2022", "STRT", "STRT.HI.median.boot.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(STRT.HI.df, here("Output_from_analysis", "03_HI_FI", "2022", "STRT", "STRT.HI.df.csv"))
STRT.HI.df$date <- as.Date(with(STRT.HI.df, paste(month, day, sep = "-")), "%m-%d")
STRT.HI.df$doy <- yday(STRT.HI.df$date)
g0 <- ggplot(STRT.HI.df, aes(x = doy, y = HI, label=doy, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2022", "STRT", "STRT.HI.median.boot.doy.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(STRT.HI.df, here("Output_from_analysis", "03_HI_FI", "2022", "STRT", "STRT.HI.df.doy.csv"))
reticulate::repl_python()
CARI.hyst.results.list = list(py$hysdict_CARI_storm1_07_15_NO3,
py$hysdict_CARI_storm1_07_15_fDOM,
py$hysdict_CARI_storm1_07_15_SPC,
py$hysdict_CARI_storm1_07_15_turb,
py$hysdict_CARI_storm2_07_19_NO3,
py$hysdict_CARI_storm2_07_19_fDOM,
py$hysdict_CARI_storm2_07_19_SPC,
py$hysdict_CARI_storm2_07_19_turb,
py$hysdict_CARI_storm3_08_01_NO3,
py$hysdict_CARI_storm3_08_01_fDOM,
py$hysdict_CARI_storm3_08_01_SPC,
py$hysdict_CARI_storm3_08_01_turb,
py$hysdict_CARI_storm4a_08_05_NO3,
py$hysdict_CARI_storm4a_08_05_fDOM,
py$hysdict_CARI_storm4a_08_05_SPC,
py$hysdict_CARI_storm4a_08_05_turb,
py$hysdict_CARI_storm4b_08_06_NO3,
py$hysdict_CARI_storm4b_08_06_fDOM,
py$hysdict_CARI_storm4b_08_06_SPC,
py$hysdict_CARI_storm4b_08_06_turb,
py$hysdict_CARI_storm5_08_08_NO3,
py$hysdict_CARI_storm5_08_08_fDOM,
py$hysdict_CARI_storm5_08_08_SPC,
py$hysdict_CARI_storm5_08_08_turb,
py$hysdict_CARI_storm6_08_15_NO3,
py$hysdict_CARI_storm6_08_15_fDOM,
py$hysdict_CARI_storm6_08_15_SPC,
py$hysdict_CARI_storm6_08_15_turb,
py$hysdict_CARI_storm7_08_18_NO3,
py$hysdict_CARI_storm7_08_18_fDOM,
py$hysdict_CARI_storm7_08_18_SPC,
py$hysdict_CARI_storm7_08_18_turb,
py$hysdict_CARI_storm8_09_04_NO3,
py$hysdict_CARI_storm8_09_04_fDOM,
py$hysdict_CARI_storm8_09_04_SPC,
py$hysdict_CARI_storm8_09_04_turb)
CARI.hyst.results.list.2 = list()
for (i in 1:length(CARI.hyst.results.list)){
CARI.hyst.results.list.2[[i]] = as.data.frame(t(as.numeric(c(
CARI.hyst.results.list[[i]][["HI_mean_with_Interp"]],
CARI.hyst.results.list[[i]][["HI_standard_deviation_with_Interp"]],
CARI.hyst.results.list[[i]][["Normalized slope of response"]],
CARI.hyst.results.list[[i]][["interpolated Max width of response"]],
CARI.hyst.results.list[[i]][["Min response"]],
CARI.hyst.results.list[[i]][["Max response"]],
CARI.hyst.results.list[[i]][["Peak Q"]]
))))
names(CARI.hyst.results.list.2[[i]]) = c("HI_mean_Interp", "HI_sd_with_Interp", "N.S.", "Max_width_Interp", "Min_response", "Max_response", "Peak_Q")
}
HIs.list = list()
HIs.tests = list()
for (i in 1:length(CARI.hyst.results.list)){
HIs.list[[i]] = unlist(CARI.hyst.results.list[[i]][["Hysteresis_Index"]],recursive=FALSE)
HIs.tests[[i]] = as.data.frame(t(round(as.numeric(c(shapiro.test(HIs.list[[i]])$statistic, shapiro.test(HIs.list[[i]])$p.value,
t.test(HIs.list[[i]], mu=0)$statistic, t.test(HIs.list[[i]], mu=0)$p.value,
t.test(HIs.list[[i]], mu=0)$conf.int[1],t.test(HIs.list[[i]], mu=0)$conf.int[2],
wilcox.test(HIs.list[[i]], mu=0)$statistic, wilcox.test(HIs.list[[i]], mu=0)$p.value)), 4)))
names(HIs.tests[[i]]) = c("ShapiroTest.W", "ShapiroTest.p", "t.test.stat", "t.test.p", "t.test.CIlow", "t.test.CIhigh",
"wilcox.test.stat", "wilcox.test.p")
}
CARI.hyst.results.list.3 =list()
for (i in 1:length(CARI.hyst.results.list)){
CARI.hyst.results.list.3[[i]] = cbind(CARI.hyst.results.list.2[[i]], HIs.tests[[i]])
}
CARI.hyst.results.df = bind_rows(CARI.hyst.results.list.3, .id = "column_label")
CARI.hyst.results.df$storm.ID = c("CARI_storm1_07_15_NO3",
"CARI_storm1_07_15_fDOM",
"CARI_storm1_07_15_SPC",
"CARI_storm1_07_15_turb",
"CARI_storm2_07_19_NO3",
"CARI_storm2_07_19_fDOM",
"CARI_storm2_07_19_SPC",
"CARI_storm2_07_19_turb",
"CARI_storm3_08_01_NO3",
"CARI_storm3_08_01_fDOM",
"CARI_storm3_08_01_SPC",
"CARI_storm3_08_01_turb",
"CARI_storm4a_08_05_NO3",
"CARI_storm4a_08_05_fDOM",
"CARI_storm4a_08_05_SPC",
"CARI_storm4a_08_05_turb",
"CARI_storm4b_08_06_NO3",
"CARI_storm4b_08_06_fDOM",
"CARI_storm4b_08_06_SPC",
"CARI_storm4b_08_06_turb",
"CARI_storm5_08_08_NO3",
"CARI_storm5_08_08_fDOM",
"CARI_storm5_08_08_SPC",
"CARI_storm5_08_08_turb",
"CARI_storm6_08_15_NO3",
"CARI_storm6_08_15_fDOM",
"CARI_storm6_08_15_SPC",
"CARI_storm6_08_15_turb",
"CARI_storm7_08_18_NO3",
"CARI_storm7_08_18_fDOM",
"CARI_storm7_08_18_SPC",
"CARI_storm7_08_18_turb",
"CARI_storm8_09_04_NO3",
"CARI_storm8_09_04_fDOM",
"CARI_storm8_09_04_SPC",
"CARI_storm8_09_04_turb")
CARI.hyst.results.df$site.ID = "CARI"
write_csv(CARI.hyst.results.df, here("Output_from_analysis", "03_HI_FI", "2022", "CARI", "CARI.hyst.results.csv"))
# plot HI by normalized discharge
# HIs.Q.list =list()
# HIs.df.list = list()
# pdf("~/Documents/Storms/Output_from_analysis/HI_plots/2021/CARI/CARI.hyst.HI_Q.plots.pdf", width = 25, height =15, onefile=FALSE)
# par(mfrow=c(4,7))
# for (i in 1:length(HIs.list)) {
#   HIs.Q.list[[i]] = names(HIs.list[[i]])
#   HIs.Q.list[[i]] = (sapply(strsplit(HIs.Q.list[[i]], " "), "[[", 4))
#   HIs.Q.list[[i]] = as.numeric(gsub("%", "", HIs.Q.list[[i]]))
#   HIs.df.list[[i]] = as.data.frame(cbind(HIs.list[[i]], HIs.Q.list[[i]]))
#   HIs.df.list[[i]]= HIs.df.list[[i]][order(HIs.df.list[[i]][["V2"]]),]
# plot(HIs.df.list[[i]][["V1"]] ~ HIs.df.list[[i]][["V2"]], type="l",
#      ylab="norm.response", xlab="Q intervals", main= CARI.hyst.results.df$storm.ID[i])
# abline(h=0, lty=2)
# }
# dev.off()
## plot HI with bootstrapped 95% CIs around the median ##
HIs.Q.list =list()
HIs.df.list = list()
par(mfrow=c(1,1))
for (i in 1:length(HIs.list)) {
HIs.Q.list[[i]] = names(HIs.list[[i]])
HIs.Q.list[[i]] = (sapply(strsplit(HIs.Q.list[[i]], " "), "[[", 4))
HIs.Q.list[[i]] = as.numeric(gsub("%", "", HIs.Q.list[[i]]))
HIs.df.list[[i]] = as.data.frame(cbind(HIs.list[[i]], HIs.Q.list[[i]]))
HIs.df.list[[i]]= HIs.df.list[[i]][order(HIs.df.list[[i]][["V2"]]),]
names(HIs.df.list[[i]]) = c("HI", "Q_interval")
}
CARI.HI.df = bind_rows(HIs.df.list, .id = "column_label")
CARI.HI.df$storm.ID = c(rep("CARI_storm1_07_15_NO3", 50),
rep("CARI_storm1_07_15_fDOM", 50),
rep("CARI_storm1_07_15_SPC", 50),
rep("CARI_storm1_07_15_turb", 50),
rep("CARI_storm2_07_19_NO3", 50),
rep("CARI_storm2_07_19_fDOM", 50),
rep("CARI_storm2_07_19_SPC", 50),
rep("CARI_storm2_07_19_turb", 50),
rep("CARI_storm3_08_01_NO3", 49),
rep("CARI_storm3_08_01_fDOM", 50),
rep("CARI_storm3_08_01_SPC", 49),
rep("CARI_storm3_08_01_turb", 50),
rep("CARI_storm4a_08_05_NO3", 50),
rep("CARI_storm4a_08_05_fDOM", 50),
rep("CARI_storm4a_08_05_SPC", 50),
rep("CARI_storm4a_08_05_turb", 50),
rep("CARI_storm4b_08_06_NO3", 50),
rep("CARI_storm4b_08_06_fDOM", 50),
rep("CARI_storm4b_08_06_SPC", 50),
rep("CARI_storm4b_08_06_turb", 50),
rep("CARI_storm5_08_08_NO3", 50),
rep("CARI_storm5_08_08_fDOM", 50),
rep("CARI_storm5_08_08_SPC", 50),
rep("CARI_storm5_08_08_turb", 50),
rep("CARI_storm6_08_15_NO3", 50),
rep("CARI_storm6_08_15_fDOM", 50),
rep("CARI_storm6_08_15_SPC", 50),
rep("CARI_storm6_08_15_turb", 50),
rep("CARI_storm7_08_18_NO3", 50),
rep("CARI_storm7_08_18_fDOM", 50),
rep("CARI_storm7_08_18_SPC", 50),
rep("CARI_storm7_08_18_turb", 50),
rep("CARI_storm8_09_04_NO3", 50),
rep("CARI_storm8_09_04_fDOM", 50),
rep("CARI_storm8_09_04_SPC", 50),
rep("CARI_storm8_09_04_turb", 49))
CARI.HI.df$storm.ID = as.factor(CARI.HI.df$storm.ID)
CARI.HI.df = separate(data=CARI.HI.df, col=storm.ID, into=c("site.ID","storm.num", "month", "day", "response"), sep = "_", remove = F)
par(mfrow=c(1,1))
median_cl_boot <- function(x, conf = 0.95) {
lconf <- (1 - conf)/2
uconf <- 1 - lconf
require(boot)
bmedian <- function(x, ind) median(x[ind])
bt <- boot(x, bmedian, 10000)
bb <- boot.ci(bt, conf = 0.95, type = "perc")
data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t,
uconf))
}
g0 <- ggplot(CARI.HI.df, aes(x = storm.num, y = HI, label=storm.num, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2022", "CARI", "CARI.HI.median.boot.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(CARI.HI.df, here("Output_from_analysis", "03_HI_FI", "2022", "CARI", "CARI.HI.df.csv"))
CARI.HI.df$date <- as.Date(with(CARI.HI.df, paste(month, day, sep = "-")), "%m-%d")
CARI.HI.df$doy <- yday(CARI.HI.df$date)
g0 <- ggplot(CARI.HI.df, aes(x = doy, y = HI, label=doy, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave(here("plots", "HI_plots", "2022", "CARI", "CARI.HI.median.boot.doy.pdf"), plot = g2,
width = 8, height = 6, units = "in")
write.csv(CARI.HI.df, here("Output_from_analysis", "03_HI_FI", "2022", "CARI", "CARI.HI.df.doy.csv"))
library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)
FRCH_HI_doy_df_2015 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2015", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2015 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2015", "MOOS","MOOS.HI.df.doy.csv"))
# 2018
FRCH_HI_doy_df_2018 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2018", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2018 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2018", "MOOS","MOOS.HI.df.doy.csv"))
CARI_HI_doy_df_2018 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2018", "CARI","CARI.HI.df.doy.csv"))
# 2019
FRCH_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "MOOS","MOOS.HI.df.doy.csv"))
POKE_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "POKE","POKE.HI.df.doy.csv"))
STRT_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "STRT","STRT.HI.df.doy.csv"))
VAUL_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "VAUL","VAUL.HI.df.doy.csv"))
CARI_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "CARI","CARI.HI.df.doy.csv"))
# 2020
FRCH_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "MOOS","MOOS.HI.df.doy.csv"))
POKE_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "POKE","POKE.HI.df.doy.csv"))
STRT_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "STRT","STRT.HI.df.doy.csv"))
VAUL_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "VAUL","VAUL.HI.df.doy.csv"))
CARI_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "CARI","CARI.HI.df.doy.csv"))
# 2021
FRCH_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "MOOS","MOOS.HI.df.doy.csv"))
POKE_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "POKE","POKE.HI.df.doy.csv"))
STRT_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "STRT","STRT.HI.df.doy.csv"))
VAUL_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "VAUL","VAUL.HI.df.doy.csv"))
CARI_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "CARI","CARI.HI.df.doy.csv"))
# 2022
FRCH_HI_doy_df_2022 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2022", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2022 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2022", "MOOS","MOOS.HI.df.doy.csv"))
POKE_HI_doy_df_2022 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2022", "POKE","POKE.HI.df.doy.csv"))
STRT_HI_doy_df_2022 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2022", "STRT","STRT.HI.df.doy.csv"))
VAUL_HI_doy_df_2022 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2022", "VAUL","VAUL.HI.df.doy.csv"))
CARI_HI_doy_df_2022 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2022", "CARI","CARI.HI.df.doy.csv"))
HI.dat_2015 <- rbind(FRCH_HI_doy_df_2015, MOOS_HI_doy_df_2015)
HI.dat_2015$year <- "2015"
HI.dat_2018 <- rbind(FRCH_HI_doy_df_2018, MOOS_HI_doy_df_2018, CARI_HI_doy_df_2018)
HI.dat_2018$year <- "2018"
HI.dat_2019 <- rbind(FRCH_HI_doy_df_2019, MOOS_HI_doy_df_2019, POKE_HI_doy_df_2019,
STRT_HI_doy_df_2019, VAUL_HI_doy_df_2019, CARI_HI_doy_df_2019)
HI.dat_2019$year <- "2019"
HI.dat_2020 <- rbind(FRCH_HI_doy_df_2020, MOOS_HI_doy_df_2020, POKE_HI_doy_df_2020,
STRT_HI_doy_df_2020, VAUL_HI_doy_df_2020, CARI_HI_doy_df_2020)
HI.dat_2020$year <- "2020"
HI.dat_2021 <- rbind(FRCH_HI_doy_df_2021, MOOS_HI_doy_df_2021, POKE_HI_doy_df_2021,
STRT_HI_doy_df_2021, VAUL_HI_doy_df_2021, CARI_HI_doy_df_2021)
HI.dat_2021$year <- "2021"
HI.dat_2022 <- rbind(FRCH_HI_doy_df_2022, MOOS_HI_doy_df_2022, POKE_HI_doy_df_2022,
STRT_HI_doy_df_2022, VAUL_HI_doy_df_2022, CARI_HI_doy_df_2022)
HI.dat_2022$year <- "2022"
HI.dat <- rbind(HI.dat_2015, HI.dat_2018, HI.dat_2019, HI.dat_2020, HI.dat_2021, HI.dat_2022)
HI.mean<- HI.dat %>% group_by(site.ID, response, year) %>%
summarise_at(vars(HI), list(HI = median)) # takes the median by site response and year
FRCH.fDOM <- subset(HI.mean, site.ID == "FRCH" & response == "fDOM")
POKE.fDOM <- subset(HI.mean, site.ID == "POKE" & response == "fDOM")
MOOS.fDOM <- subset(HI.mean, site.ID == "MOOS" & response == "fDOM")
STRT.fDOM <- subset(HI.mean, site.ID == "STRT" & response == "fDOM")
VAUL.fDOM <- subset(HI.mean, site.ID == "VAUL" & response == "fDOM")
CARI.fDOM <- subset(HI.mean, site.ID == "CARI" & response == "fDOM")
FRCH.NO3 <- subset(HI.mean, site.ID == "FRCH" & response == "NO3")
POKE.NO3 <- subset(HI.mean, site.ID == "POKE" & response == "NO3")
MOOS.NO3 <- subset(HI.mean, site.ID == "MOOS" & response == "NO3")
STRT.NO3 <- subset(HI.mean, site.ID == "STRT" & response == "NO3")
VAUL.NO3 <- subset(HI.mean, site.ID == "VAUL" & response == "NO3")
CARI.NO3 <- subset(HI.mean, site.ID == "CARI" & response == "NO3")
FRCH.fDOM$burn <- "unburned"
POKE.fDOM$burn <- "burned"
MOOS.fDOM$burn <- "burned"
STRT.fDOM$burn <- "burned"
VAUL.fDOM$burn <- "unburned"
CARI.fDOM$burn <- "unburned"
FRCH.NO3$burn <- "unburned"
POKE.NO3$burn <- "burned"
MOOS.NO3$burn <- "burned"
STRT.NO3$burn <- "burned"
VAUL.NO3$burn <- "unburned"
CARI.NO3$burn <- "unburned"
fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM, CARI.fDOM)
no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3, CARI.NO3)
fdom.hi$year <- as.character(fdom.hi$year)
no3.hi$year <- as.character(no3.hi$year)
fdom.lm <- lm(fdom.hi$HI ~ fdom.hi$burn)
no3.lm <- lm(no3.hi$HI ~ no3.hi$burn)
fdom.hi %>%
ggplot(aes(x=burn,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("DOC") +
xlab("Catchment burned (%)") +
ylab("HI-Solute Storage")
no3.hi %>%
ggplot(aes(x=burn,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("NO3") +
xlab("Catchment burned (%)") +
ylab("HI-Solute Storage")
# Permafrost #
FRCH.fDOM$pf <- "Low"
POKE.fDOM$pf <- "Low"
MOOS.fDOM$pf <- "High"
STRT.fDOM$pf <- "Low"
VAUL.fDOM$pf <- "High"
CARI.fDOM$pf <- "Low"
FRCH.NO3$pf <- "Low"
POKE.NO3$pf <- "Low"
MOOS.NO3$pf <- "High"
STRT.NO3$pf <- "Low"
VAUL.NO3$pf <- "High"
CARI.NO3$pf <- "Low"
pf.fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM, CARI.fDOM)
pf.no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3, CARI.NO3)
pf.fdom.hi$year <- as.character(pf.fdom.hi$year)
pf.no3.hi$year <- as.character(pf.no3.hi$year)
pf.fdom.lm <- lm(pf.fdom.hi$HI ~ pf.fdom.hi$burn)
pf.no3.lm <- lm(pf.no3.hi$HI ~ pf.no3.hi$burn)
pf.fdom.hi %>%
ggplot(aes(x=pf,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("DOC") +
xlab("Permafrost Extent (%)") +
ylab("HI-Solute Storage")
pf.no3.hi %>%
ggplot(aes(x=pf,
y=HI,
color=year))+
geom_boxplot() +
geom_smooth(method = "lm") +
ylim(-1,1) +
ggtitle("NO3") +
xlab("Permafrost Extent (%)") +
ylab("HI-Solute Storage")
### H 1.1: HI against precip ###
HI.mean.precip <- HI.dat %>% group_by(site.ID, year, storm.num) %>%
summarise_at(vars(HI), list(HI = median)) # take mean by site response and year
HI.mean.precip.response <- HI.dat %>% group_by(site.ID, year, storm.num, response) %>%
summarise_at(vars(HI), list(HI = median)) # take mean by site response and year
########################################## 2015 ########################################
### Import climate ###
CPCRW <- read_csv(here("Climate", "Precip", "CPCRW.RainGauge.2015.final.csv"))
CPCRW$datetimeAK <- force_tz(CPCRW$datetimeAK, "America/Anchorage") # it already is in AK time so I want to make it recognize it without changing the actually time value
# this needs to be updated to include 2015 data
airtempmean <- read.csv(here("Climate", "airtempmean.csv"))
airtempmean$datetimeAK <- airtempmean$date_timeAK
airtempmean$datetimeAK <- as.POSIXct(airtempmean$datetimeAK, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
### FRCH ####
FRCHstorm_file_list <- list.files(path = "All_sites/",
recursive=F,
pattern="FRCH",
full.names=TRUE)
FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
FRCH_storms$storm.num = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 449),
rep("storm6a", 1295),
rep("storm7", 240))
FRCH_storms$datetimeAK <- as.POSIXct(FRCH_storms$datetimeAK, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
FRCH.2015.storms.1<- left_join(FRCH_storms, CPCRW, by = "datetimeAK")
FRCH_storms$datetimeAK <- as.POSIXct(FRCH_storms$datetimeAK, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
FRCH.2015.storms.1<- left_join(FRCH_storms, CPCRW, by = "datetimeAK")
FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
FRCH_storms$storm.num = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 449),
rep("storm6a", 1295),
rep("storm7", 240))
FRCH_storms$datetimeAK <- as.POSIXct(FRCH_storms$datetimeAK, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
FRCH.2015.storms.1<- left_join(FRCH_storms, CPCRW, by = "datetimeAK")
FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
##############################################################################################################
#################################### Antecedent conditions #####################################################################
##############################################################################################################
setwd("Storm_Events/2015")
########################################## 2015 ########################################
### Import climate ###
CPCRW <- read_csv(here("Climate", "Precip", "CPCRW.RainGauge.2015.final.csv"))
CPCRW$datetimeAK <- force_tz(CPCRW$datetimeAK, "America/Anchorage") # it already is in AK time so I want to make it recognize it without changing the actually time value
# this needs to be updated to include 2015 data
airtempmean <- read.csv(here("Climate", "airtempmean.csv"))
airtempmean$datetimeAK <- airtempmean$date_timeAK
airtempmean$datetimeAK <- as.POSIXct(airtempmean$datetimeAK, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
### FRCH ####
FRCHstorm_file_list <- list.files(path = "All_sites/",
recursive=F,
pattern="FRCH",
full.names=TRUE)
FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
FRCH_storms$storm.num = c(rep("storm1", 287),
rep("storm2", 331),
rep("storm3", 383),
rep("storm4", 299),
rep("storm5a", 449),
rep("storm6a", 1295),
rep("storm7", 240))
