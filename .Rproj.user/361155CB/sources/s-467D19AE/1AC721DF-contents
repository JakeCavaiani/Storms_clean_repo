#### READ ME ####
# The purpose of this script is to prepare DoD data for hysteresis analysis and, specifically, the hysteresisMetrics function.
# Step 1: Load in processed SUNA and EXO data from the previous year 
  # scripts within DoD 2018/2019/2020/2021
  #DoD->AK Sensors->2020-> SUNA->Processed & DoD->AK Sensors->2020-> EXO->Processed 
# Step 2: fill gaps in nitrate, fDOM, SpCond, and turbidity data
# Step 3: Define baseflow in each catchment.
# Step 4: Set criteria for storm delineation for each catchment based on some percentage over baseflow.
# Step 5: Delineate storms in each catchment.
# Step 6: IN PYTHON: convert R discharge df to pandas df containing a datetime column named 'valuedatetime', and discharge values in a column 'datavalue'
# Step 7: IN PYTHON: convert R response df(s) to pandas df(s) containing a datetime column named 'valuedatetime', and response values in a column 'datavalue'

library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(plyr)
library(imputeTS)
library(TSA)
library(bbmle)
library(zoo)
library(xts)
library(forecast)
library(stats)
library(lattice)
library(nlme)
library(geosphere)
library(car)
library(EcoHydRology)
library(dplyr)
library(readr)
################################## 2015 ####################################################################
# Load from local machine #
Q_2015 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2015/Q_2015.csv")
chem_2015 <- read_csv("~/Documents/DoD_2015/DOD.2015.csv")


attributes(chem_2015$DateTime)$tzone <- "America/Anchorage"
attributes(Q_2015$DateTime)$tzone <- "America/Anchorage"

DOD.2015 <- full_join(chem_2015, Q_2015)

write.csv(DOD.2015, "~/Documents/DoD_Discharge/Discharge_Chem/2015/DOD.2015.csv")

# subset data by site #
FRCH.2015 <-  subset(DOD.2019, site.ID == "FRCH")
head(FRCH.2019$DateTime)
STRT.2019 = subset(DOD.2019, site.ID == "STRT")
head(STRT.2019$DateTime)
POKE.2019 = subset(DOD.2019, site.ID == "POKE")
head(POKE.2019$DateTime)
VAUL.2019 = subset(DOD.2019, site.ID == "VAUL")
head(VAUL.2019$DateTime)
MOOS.2019 = subset(DOD.2019, site.ID == "MOOS")
head(MOOS.2019$DateTime)

frch.final.discharge.2019 <- subset(Q_2019, Site == "FRCH")
head(frch.final.discharge.2019$DateTime)
strt.final.discharge.2019 <- subset(Q_2019, Site == "STRT")
poke.final.discharge.2019 <- subset(Q_2019, Site == "POKE")
vaul.final.discharge.2019 <- subset(Q_2019, Site == "VAUL")
moos.final.discharge.2019 <- subset(Q_2019, Site == "MOOS")

Q_2019$day = format(as.POSIXct(Q_2019$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
attributes(Q_2019$DateTime)$tzone <- 'America/Anchorage'
Q_2019$day = as.POSIXct(Q_2019$day, "%Y-%m-%d", tz="America/Anchorage")

Q.daily.2019 = with(Q_2019, tapply(MeanDischarge, list(day, Site), mean))
Q.daily.2019 = as.data.frame(Q.daily.2019)

FRCH.Q.2019 = as.data.frame(Q.daily.2019$FRCH)
FRCH.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(FRCH.Q.2019) = c("Discharge_Lsec", "day")

STRT.Q.2019 = as.data.frame(Q.daily.2019$STRT)
STRT.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(STRT.Q.2019) = c("Discharge_Lsec", "day")

POKE.Q.2019 = as.data.frame(Q.daily.2019$POKE)
POKE.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(POKE.Q.2019) = c("Discharge_Lsec", "day")

VAUL.Q.2019 = as.data.frame(Q.daily.2019$VAUL)
VAUL.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(VAUL.Q.2019) = c("Discharge_Lsec", "day")

MOOS.Q.2019 = as.data.frame(Q.daily.2019$MOOS)
MOOS.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(MOOS.Q.2019) = c("Discharge_Lsec", "day")

# data wrangling - fill gaps #
# fxn #
fillgaps15 = function(df, dat, datquotes, largegap.num){
  ## Document gaps >= largegap.num (1 largegap.num = 15 min) ##
  # (note - the criteria of what constitutes a "large" gap should be reevaluated depending on the trend being characterized)
  is.na.rle <- rle(is.na(dat))
  is.na.rle$values <- is.na.rle$values & is.na.rle$lengths >= (largegap.num)
  biggaps = df[inverse.rle(is.na.rle), ]
  tz(biggaps$DateTime) = "America/Anchorage"
  biggaps = subset(biggaps, select = "DateTime")
  # Make univariate time series, covert to zoo, then to ts #
  ts.xts = subset(df, select = c("DateTime",datquotes))
  ts.xts<-read.zoo(ts.xts, index.column=1, format="%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
  ts.xts<-as.xts(ts.xts)
  # remove leading and trailing NAs #
  ts.xts = na.trim(ts.xts, is.na="any")
  # Apply auto.arima and kalman filter to impute missing values #
  fit2 = auto.arima(ts.xts) 
  kal = KalmanSmooth(ts.xts, fit2$model)
  id.na<-which(is.na(ts.xts))
  for(i in id.na) 
    ts.xts[i]<-fit2$model$Z %*% kal$smooth[i,]
  # revert to dataframe #
  ts.df = as.data.frame((ts.xts))
  ts.df$date_timeAK = as.POSIXct(row.names(ts.df), tz="America/Anchorage")
  names(ts.df) = c("dat_filled", "DateTime")
  # remove large gaps # 
  ts.df$dat_filled[ts.df$date_timeAK %in% as.POSIXct(biggaps$DateTime)] = NA
  # Replace large gaps with linear interpolation #
  ts.df$dat_filled = na.interpolation(ts.df$dat_filled)
  ts.df = subset(ts.df, select = c("dat_filled", "DateTime"))
  return(ts.df)
}


# FRCH # 
FRCH.no3 <- subset(FRCH.2019, select = c("datetimeAK","nitrateuM"))
#plot(FRCH$nitrateuM ~ FRCH$datetimeAK) # plot check 
names(FRCH.no3) = c("DateTime", "nitrateuM")

frch.no3.1 <- cut(FRCH.no3$DateTime, breaks="15 min")
frch.no3.final <- as.data.frame(aggregate(nitrateuM ~ frch.no3.1, data = FRCH.no3, FUN = mean)) # Averaging 15 minute intervals
frch.no3.final$DateTime <-as.POSIXct(frch.no3.final$frch.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

# FRCH.no3.fill <-  fillgaps15(frch.no3.final, frch.no3.final$nitrateuM, "nitrateuM", 16)# checking to see if the same amount of rows 


FRCH.fDOM = subset(FRCH.2019, select = c("datetimeAK","fDOM.QSU.mn"))
names(FRCH.fDOM) = c("DateTime", "fDOM.QSU.mn")

frch.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = FRCH.fDOM)# Averaging 15 minute intervals
names(frch.fdom.final) <- c("DateTime", "fDOM.QSU.mn") 

#FRCH.fDOM.fill = fillgaps15(frch.fdom.final, frch.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16) # Checking to see if there are the same amount of rows 

FRCH.SpCond = subset(FRCH.2019, select = c("DateTime","SpCond.uScm.mn"))
frch.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = FRCH.SpCond) # Averaging 15 minute intervals
frch.spcond.1 <- cut(FRCH.SpCond$DateTime, breaks = "15 min")
frch.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ frch.spcond.1, data = FRCH.SpCond, FUN = mean)) # Averaging 15 minute intervals
frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

FRCH.turb = subset(FRCH.2019, select = c("DateTime","Turbidity.FNU.mn"))
frch.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = FRCH.turb) # Averaging 15 minute intervals
frch.turb.1 <- cut(FRCH.turb$DateTime, breaks = "15 min")
frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ frch.turb.1, data = FRCH.turb, FUN = mean)) # Averaging 15 minute intervals
frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")


FRCH = left_join(frch.final.discharge.2019, frch.fdom.final, by="DateTime")
FRCH = left_join(FRCH, frch.no3.final, by="DateTime")
FRCH = left_join(FRCH, frch.spcond.final, by="DateTime")
FRCH = left_join(FRCH, frch.turb.final, by="DateTime")
FRCH <- FRCH[, -c(6,8,10)]

# STRT # 
STRT.no3 <- subset(STRT.2019, select = c("DateTime", "nitrateuM"))
#STRT.no3.2 = fillgaps15(strt.no3.final, strt.no3.final$nitrateuM, "nitrateuM", 16)
plot(STRT.no3$dat_filled, type="l")
names(STRT.no3) = c("DateTime", "nitrateuM")

strt.no3.1 <- cut(STRT.no3$DateTime, breaks="15 min")
strt.no3.final <- as.data.frame(aggregate(nitrateuM ~ strt.no3.1, data = STRT.no3, FUN = mean)) # Averaging 15 minute intervals
strt.no3.final$DateTime <-as.POSIXct(strt.no3.final$strt.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

STRT.fDOM = subset(STRT.2019, select = c("DateTime","fDOM.QSU.mn"))
strt.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = STRT.fDOM)# Averaging 15 minute intervals
names(strt.fdom.final) <- c("DateTime", "fDOM.QSU.mn") 
#strSTRT.fDOM.2 = fillgaps15(strt.fdom.final, strt.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16)
plot(STRT$dat_filled, type="l")
names(STRT.fDOM) = c("fDOM_filled", "DateTime")

STRT.SpCond = subset(STRT.2019, select = c("DateTime","SpCond.uScm.mn"))
strt.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = STRT.SpCond) # Averaging 15 minute intervals
strt.spcond.1 <- cut(STRT.SpCond$DateTime, breaks = "15 min")
strt.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ strt.spcond.1, data = STRT.SpCond, FUN = mean)) # Averaging 15 minute intervals
strt.spcond.final$DateTime <-as.POSIXct(strt.spcond.final$strt.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

STRT.turb = subset(STRT.2019, select = c("DateTime","Turbidity.FNU.mn"))
strt.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = STRT.turb) # Averaging 15 minute intervals
strt.turb.1 <- cut(STRT.turb$DateTime, breaks = "15 min")
strt.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ strt.turb.1, data = STRT.turb, FUN = mean)) # Averaging 15 minute intervals
strt.turb.final$DateTime <-as.POSIXct(strt.turb.final$strt.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")


STRT = left_join(strt.final.discharge.2019, strt.fdom.final, by="DateTime")
STRT = left_join(STRT, strt.no3.final, by="DateTime")
STRT = left_join(STRT, strt.spcond.final, by="DateTime")
STRT = left_join(STRT, strt.turb.final, by="DateTime")
STRT <- STRT[, -c(6,8,10)]

# POKE # 
POKE.no3 <- subset(POKE.2019, select = c("DateTime","nitrateuM"))
#plot(POKE$nitrateuM ~ POKE$datetimeAK) # plot check 
names(POKE.no3) = c("DateTime", "nitrateuM")

poke.no3.1 <- cut(POKE.no3$DateTime, breaks="15 min")
poke.no3.final <- as.data.frame(aggregate(nitrateuM ~ poke.no3.1, data = POKE.no3, FUN = mean)) # Averaging 15 minute intervals
poke.no3.final$DateTime <-as.POSIXct(poke.no3.final$poke.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

# POKE.no3.fill <-  fillgaps15(poke.no3.final, poke.no3.final$nitrateuM, "nitrateuM", 16)# checking to see if the same amount of rows 


POKE.fDOM = subset(POKE.2019, select = c("DateTime","fDOM.QSU.mn"))
names(POKE.fDOM) = c("DateTime", "fDOM.QSU.mn")

poke.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = POKE.fDOM)# Averaging 15 minute intervals
names(poke.fdom.final) <- c("DateTime", "fDOM.QSU.mn") 

#POKE.fDOM.fill = fillgaps15(poke.fdom.final, poke.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16) # Checking to see if there are the same amount of rows 

POKE.SpCond = subset(POKE.2019, select = c("DateTime","SpCond.uScm.mn"))
poke.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = POKE.SpCond) # Averaging 15 minute intervals
poke.spcond.1 <- cut(POKE.SpCond$DateTime, breaks = "15 min")
poke.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ poke.spcond.1, data = POKE.SpCond, FUN = mean)) # Averaging 15 minute intervals
poke.spcond.final$DateTime <-as.POSIXct(poke.spcond.final$poke.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

POKE.turb = subset(POKE.2019, select = c("DateTime","Turbidity.FNU.mn"))
poke.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = POKE.turb) # Averaging 15 minute intervals
poke.turb.1 <- cut(POKE.turb$DateTime, breaks = "15 min")
poke.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ poke.turb.1, data = POKE.turb, FUN = mean)) # Averaging 15 minute intervals
poke.turb.final$DateTime <-as.POSIXct(poke.turb.final$poke.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

POKE = left_join(poke.final.discharge.2019, poke.fdom.final, by="DateTime")
POKE = left_join(POKE, poke.no3.final, by="DateTime")
POKE = left_join(POKE, poke.spcond.final, by="DateTime")
POKE = left_join(POKE, poke.turb.final, by="DateTime")
POKE <- POKE[, -c(6,8,10)]

# VAUL # 
VAUL.no3 <- subset(VAUL.2019, select = c("DateTime","nitrateuM"))
#plot(VAUL$nitrateuM ~ VAUL$datetimeAK) # plot check 
names(VAUL.no3) = c("DateTime", "nitrateuM")

vaul.no3.1 <- cut(VAUL.no3$DateTime, breaks="15 min")
vaul.no3.final <- as.data.frame(aggregate(nitrateuM ~ vaul.no3.1, data = VAUL.no3, FUN = mean)) # Averaging 15 minute intervals
vaul.no3.final$DateTime <-as.POSIXct(vaul.no3.final$vaul.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

#VAUL.no3.fill <-  fillgaps15(vaul.no3.final, vaul.no3.final$nitrateuM, "nitrateuM", 16)# checking to see if the same amount of rows 


VAUL.fDOM = subset(VAUL.2019, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL.fDOM) = c("DateTime", "fDOM.QSU.mn")

vaul.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = VAUL.fDOM)# Averaging 15 minute intervals
names(vaul.fdom.final) <- c("DateTime", "fDOM.QSU.mn") 

#VAUL.fDOM.fill = fillgaps15(vaul.fdom.final, poke.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16) # Checking to see if there are the same amount of rows 

VAUL.SpCond = subset(VAUL.2019, select = c("DateTime","SpCond.uScm.mn"))
vaul.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = VAUL.SpCond) # Averaging 15 minute intervals
vaul.spcond.1 <- cut(VAUL.SpCond$DateTime, breaks = "15 min")
vaul.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ vaul.spcond.1, data = VAUL.SpCond, FUN = mean)) # Averaging 15 minute intervals
vaul.spcond.final$DateTime <-as.POSIXct(vaul.spcond.final$vaul.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

VAUL.turb = subset(VAUL.2019, select = c("DateTime","Turbidity.FNU.mn"))
vaul.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = VAUL.turb) # Averaging 15 minute intervals
vaul.turb.1 <- cut(VAUL.turb$DateTime, breaks = "15 min")
vaul.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ vaul.turb.1, data = VAUL.turb, FUN = mean)) # Averaging 15 minute intervals
vaul.turb.final$DateTime <-as.POSIXct(vaul.turb.final$vaul.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

VAUL = left_join(vaul.final.discharge.2019, vaul.fdom.final, by="DateTime")
VAUL = left_join(VAUL, vaul.no3.final, by="DateTime")
VAUL = left_join(VAUL, vaul.spcond.final, by="DateTime")
VAUL = left_join(VAUL, vaul.turb.final, by="DateTime")
VAUL <- VAUL[, -c(6,8,10)]


# MOOS #
MOOS.no3 <- subset(MOOS.2019, select = c("DateTime", "nitrateuM"))

#plot(MOOS.no3$dat_filled, type="l")
names(MOOS.no3) = c("DateTime", "nitrateuM")

moos.no3.1 <- cut(MOOS.no3$DateTime, breaks="15 min")
moos.no3.final <- as.data.frame(aggregate(nitrateuM ~ moos.no3.1, data = MOOS.no3, FUN = mean)) # Averaging 15 minute intervals
moos.no3.final$DateTime <-as.POSIXct(moos.no3.final$moos.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

#MOOS.no3.2 <-  fillgaps15(moos.no3.final, moos.no3.final$nitrateuM, "nitrateuM", 16) # fill gaps

MOOS.fDOM = subset(MOOS.2019, select = c("DateTime","fDOM.QSU.mn"))
moos.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = MOOS.fDOM)# Averaging 15 minute intervals

#MOOS.fDOM = fillgaps15(MOOS.fDOM, MOOS.fDOM$fDOM.RFU, "fDOM.RFU", 16)
#plot(MOOS$dat_filled, type="l")
names(MOOS.fDOM) = c("fDOM_filled", "DateTime")

MOOS.SpCond = subset(MOOS.2019, select = c("DateTime","SpCond.uScm.mn"))
moos.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = MOOS.SpCond) # Averaging 15 minute intervals
moos.spcond.1 <- cut(MOOS.SpCond$DateTime, breaks = "15 min")
moos.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ moos.spcond.1, data = MOOS.SpCond, FUN = mean)) # Averaging 15 minute intervals
moos.spcond.final$DateTime <-as.POSIXct(moos.spcond.final$moos.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

MOOS.turb = subset(MOOS.2019, select = c("DateTime","Turbidity.FNU.mn"))
moos.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = MOOS.turb) # Averaging 15 minute intervals
moos.turb.1 <- cut(MOOS.turb$DateTime, breaks = "15 min")
moos.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ moos.turb.1, data = MOOS.turb, FUN = mean)) # Averaging 15 minute intervals
moos.turb.final$DateTime <-as.POSIXct(moos.turb.final$moos.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

MOOS = left_join(moos.final.discharge.2019, moos.fdom.final, by="DateTime")
MOOS = left_join(MOOS, moos.no3.final, by="DateTime")
MOOS = left_join(MOOS, moos.spcond.final, by="DateTime")
MOOS = left_join(MOOS, moos.turb.final, by="DateTime")
MOOS <- MOOS[, -c(6,8,10)]

# Write CSV #
write.csv(FRCH, "~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2019.csv")
write.csv(STRT, "~/Documents/Storms/Q_Chem/STRT/STRT_chem_2019.csv")
write.csv(POKE, "~/Documents/Storms/Q_Chem/POKE/POKE_chem_2019.csv")
write.csv(VAUL, "~/Documents/Storms/Q_Chem/VAUL/VAUL_chem_2019.csv")
write.csv(MOOS, "~/Documents/Storms/Q_Chem/VAUL/MOOS_chem_2019.csv")


# Baseflow Separation #

any(is.na(FRCH.Q.2019$day))
any(is.na(FRCH.Q.2019$Discharge_Lsec)) 
FRCH.Q.2019 <- na.omit(FRCH.Q.2019) # Removed 14 rows - (178 to 164)

any(is.na(STRT.Q.2019$day))
any(is.na(STRT.Q.2019$Discharge_Lsec)) 
STRT.Q.2019 <- na.omit(STRT.Q.2019) # Removed 33 rows - (178 to 145)

any(is.na(POKE.Q.2019$day))
any(is.na(POKE.Q.2019$Discharge_Lsec)) 
POKE.Q.2019 <- na.omit(POKE.Q.2019) # Removed 40 rows - (178 to 138)

any(is.na(VAUL.Q.2019$day))
any(is.na(VAUL.Q.2019$Discharge_Lsec)) 
VAUL.Q.2019 <- na.omit(VAUL.Q.2019) # Removed 45 rows - (178 to 133)

any(is.na(MOOS.Q.2019$day))
any(is.na(MOOS.Q.2019$Discharge_Lsec)) 
MOOS.Q.2019 <- na.omit(MOOS.Q.2019) # Removed 34 rows - (178 to 144)


### examine the recursive digital filter at .9, .925, .95 levels ###
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type = "l", xlab = "", ylab = "Q (L/sec)",
     xlim =  as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0, 4000), col="blue")
#
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,2500), col="blue")

plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,1000), col="blue")

plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,8000), col="blue")

plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,5000), col="blue")

### Hydrograph Separation ###

# FRCH
frch.final.discharge.2019 <- na.omit(frch.final.discharge.2019) # Removed 2 rows
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2019$MeanDischarge)
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2019$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 

# STRT
strt.final.discharge.2019 <- na.omit(strt.final.discharge.2019) # Removed 2 rows

STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2019$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(STRT.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)

#POKE
poke.final.discharge.2019 <- na.omit(poke.final.discharge.2019) #removed 1 row

POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2019$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(POKE.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 

# VAUL
any(is.na(vaul.final.discharge.2019$MeanDischarge))
vaul.final.discharge.2019 <- na.omit(vaul.final.discharge.2019) # removed 489 rows

VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2019$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(VAUL.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

# MOOS
any(is.na(moos.final.discharge.2019$MeanDischarge))
moos.final.discharge.2019 <- na.omit(moos.final.discharge.2019) # removed 3 rows
MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2019$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(MOOS.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

###.925 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2019$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(FRCH_Q_bf, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(STRT_Q, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(POKE_Q, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(VAUL_Q, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(MOOS_Q, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 


### .95 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(FRCH_Q, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(STRT_Q, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(POKE_Q, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(VAUL_Q, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(MOOS_Q, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 


# Deliniate storms in FRCH #

# ID storms: Any events where Q reached 2X mean base flow 
# Pick starting points: manually select inflection pt when Q began to rise
# Pick ending points: manually select pt when Q reached pre-storm baseflow OR when another event occurred


FRCH_bfQ_mn = mean(FRCH_Q_bf$bt)
FRCH_bfQ_mn
FRCH_bfQ_mn*2

STRT_bfQ_mn = mean(STRT_Q_bf$bt)
STRT_bfQ_mn
STRT_bfQ_mn*2

VAUL_bfQ_mn = mean(VAUL_Q_bf$bt)
VAUL_bfQ_mn
VAUL_bfQ_mn*2

POKE_bfQ_mn = mean(POKE_Q_bf$bt)
POKE_bfQ_mn
POKE_bfQ_mn*2

MOOS_bfQ_mn = mean(MOOS_Q_bf$bt)
MOOS_bfQ_mn
MOOS_bfQ_mn*2

# Merge Discharge and Precip #

FRCH.st <- read_csv("~/Documents/DoD_2019/RainGauge/FRCH.RainGauge.2019.csv")
attributes(FRCH.st$Datetime)$tzone <- 'America/Anchorage'
FRCH.st$DateTime <- FRCH.st$Datetime
VAUL.st <- read_csv("~/Documents/DoD_2019/RainGauge/VAUL.RainGauge.2019.csv")
attributes(VAUL.st$DateTime)$tzone <- 'America/Anchorage'
POKE.st <- read_csv("~/Documents/DoD_2019/RainGauge/POKE.RainGauge.2019.csv")
attributes(POKE.st$DateTime)$tzone <- 'America/Anchorage'

frch.precip.discharge.2019 <- full_join(frch.final.discharge.2019, FRCH.st, by = "DateTime") # merging precip data and discharge
vaul.precip.discharge.2019 <- full_join(vaul.final.discharge.2019, VAUL.st, by = "DateTime") # merging precip data and discharge
poke.precip.discharge.2019 <- full_join(poke.final.discharge.2019, POKE.st, by = "DateTime") # merging precip data and discharge


### Sum daily discharge ###
frch.precip.discharge.2019$twentyfour <- rollapplyr(frch.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
frch.precip.discharge.2019$fourtyeight <- rollapplyr(frch.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

vaul.precip.discharge.2019$twentyfour <- rollapplyr(vaul.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge.2019$fourtyeight <- rollapplyr(vaul.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

poke.precip.discharge.2019$twentyfour <- rollapplyr(poke.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge.2019$fourtyeight <- rollapplyr(poke.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

# Greater than 5 #
frch.five.twenty.four <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
frch.five.fourty.eight <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

#strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 5
#strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

vaul.five.twenty.four <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

poke.five.twenty.four <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

# Greater than 10 #
frch.ten.twenty.four <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
frch.ten.fourty.eight <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

#strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
#strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

vaul.ten.twenty.four <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

poke.ten.twenty.four <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

write.csv(frch.precip.discharge, "frch.precip.discharge.csv", row.names = FALSE)
#write.csv(strt.precip.discharge, "strt.precip.discharge.csv", row.names = FALSE)
write.csv(vaul.precip.discharge, "vaul.precip.discharge.csv", row.names = FALSE)
write.csv(poke.precip.discharge, "poke.precip.discharge.csv", row.names = FALSE)

#

### Sum daily discharge ###
#FRCH.st$date <- as.Date(FRCH.st$datetimeAK)
#frch.daily.sum <- aggregate(FRCH.st["inst_rainfall_mm"], by = FRCH.st["date"], sum)
#frch.ten <- frch.daily.sum[which(frch.daily.sum$inst_rainfall_mm >= 10),]


#VAUL.st$date <- as.Date(VAUL.st$datetimeAK)
#vaul.daily.sum <- aggregate(VAUL.st["inst_rainfall_mm"], by = VAUL.st["date"], sum)
#vaul.ten <- vaul.daily.sum[which(vaul.daily.sum$inst_rainfall_mm >= 10),]
#par(mfrow=c(1,1))

#precip.cariboupeak$date <- as.Date(precip.cariboupeak$DateTime)
#poke.daily.sum <- aggregate(precip.cariboupeak["Precip"], by = precip.cariboupeak["date"], sum)
#poke.ten <- poke.daily.sum[which(poke.daily.sum$Precip >= 10),]

#plot(FRCH_Q$Discharge_Lsec ~ FRCH_Q$day, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,5000), col="blue", main="FRCH")
#lines(FRCH_Q_bf$bt ~ FRCH_Q$day, col="red")
#lines((C3_Q_bf$bt*1.3) ~ C3_Q$day, col="red", lty=2)
#lines((C3_Q_bf$bt*5) ~ C3_Q$day, col="red", lty=2)
#abline(h = FRCH_bfQ_mn*2, col="red", lty=2)
#par(mar=c(1))

### Precip Discharge Chem ###
#FRCH#
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col = "green", lwd = 0.1)

abline(v = as.POSIXct(frch.ten.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.ten.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 15 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

################################### 2018 ##################################################################
# Load from local machine #
Q.daily.2018 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2018/Q.daily.2018.csv")

EXO.2018 <- read_csv("~/Documents/DoD_2018/EXO_data/from_internal_harddrive/processed/EXO.processed.csv")
Q_2018 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2018/Q_2018.csv")
names(EXO.2018) <- c("X", "Date", "Time", "Time.s", "Site", "Fault", "Battery.V", "CablePwr.V", "fDOM.RFU", "fDOM.QSU", "Temp.C","Cond.uScm",  "SpCond.uScm", "Sal.psu", "nLFCond.uScm", "TDS.mgL", "Turbidity.FNU", "TSS.mgL")
EXO.2018$Date <- mdy(EXO.2018$Date)
EXO.2018$DateTime <- as.POSIXct(paste(EXO.2018$Date, EXO.2018$Time), format = "%Y-%m-%d %H:%M")
attributes(Q_2018$DateTime)$tzone <- "America/Anchorage"

EXO.Q.2018 <- full_join(EXO.2018, Q_2018)

EXO.Q.2018 <- EXO.Q.2018[, -c(1,2,3,4,6,7,8,9,11,12,14,15,16,18,20,21)] # removing unnecessary columns

EXO.Q.2018 <- EXO.Q.2018[, c(5,1,2,3,4)] # reorganizing column headers


# SUNA #
SUNA.2018 <- read_csv("~/Documents/DoD_2018/SUNA_data/from_internal_harddrive/processed/SUNA.processed.csv")
SUNA.2018 <- SUNA.2018[, -c(14:269)] # removing channels 
SUNA.2018 <- SUNA.2018[, -c(1,3,4,5,7:32,35,36,39)] # removing channels 
names(SUNA.2018)[names(SUNA.2018) == 'site.ID'] <- 'Site' # renaming columns to match
names(SUNA.2018)[names(SUNA.2018) == 'datetimeAK'] <- 'DateTime' # renaming columns to match
SUNA.2018 <- SUNA.2018[, c(5,1,2,3,4)] # reorder column headers
SUNA.2018$DateTime = lubridate::round_date(SUNA.2018$DateTime, "15 minutes") # round to the nearest 15 minute 

DOD.2018 <- full_join(EXO.Q.2018, SUNA.2018)
write_csv(DOD.2018, "~/Documents/DoD_Discharge/Discharge_Chem/2018/DOD.2018.csv")

CARI_2018 <- read_csv("~/Documents/NEON/CARI/WaterQuality2018.csv", 
                             col_types = cols(Discharge = col_double(), 
                                              fDOM = col_double(), NO3 = col_double(), 
                                              SpCond = col_double(), Turb = col_double()))
attributes(CARI_2018$DateTime)$tzone <- "America/Anchorage"

CARI_2018$day = format(as.POSIXct(CARI_2018$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
attributes(CARI_2018$DateTime)$tzone <- 'America/Anchorage'
CARI_2018$day = as.POSIXct(CARI_2018$day, "%Y-%m-%d", tz="America/Anchorage")
cari.final.discharge.2018 <- CARI_2018[,-c(4:8)]

CARI.daily.2018 = with(CARI_2018, tapply(Discharge, list(day, Site), mean))
CARI.daily.2018 = as.data.frame(CARI.daily.2018)

CARI.Q.2018 = as.data.frame(CARI.daily.2018$CARI)
CARI.Q.2018$day = as.Date(rownames(CARI.daily.2018))
names(CARI.Q.2018) = c("Discharge_Lsec", "day")

# subset data by site #
FRCH.2018 <-  subset(DOD.2018, Site == "FRCH")
head(FRCH.2018$DateTime)

MOOS.2018 = subset(DOD.2018, Site == "MOOS")
head(MOOS.2018$DateTime)

frch.final.discharge.2018 <- subset(Q_2018, Site == "FRCH")
head(frch.final.discharge.2018$DateTime)
attributes(frch.final.discharge.2018$DateTime)$tzone <-  'America/Anchorage'
moos.final.discharge.2018 <- subset(Q_2018, Site == "MOOS")
attributes(moos.final.discharge.2018$DateTime)$tzone <-  'America/Anchorage'
head(moos.final.discharge.2018$DateTime)

Q_2018$day = format(as.POSIXct(Q_2018$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q_2018$day = as.POSIXct(Q_2018$day, "%Y-%m-%d", tz="America/Anchorage")

Q.daily.2018 = with(Q_2018, tapply(Q, list(day, Site), mean))
Q.daily.2018 = as.data.frame(Q.daily.2018)

FRCH.Q.2018 = as.data.frame(Q.daily.2018$FRCH)
FRCH.Q.2018$day = as.Date(rownames(Q.daily.2018))
names(FRCH.Q.2018) = c("Discharge_Lsec", "day")

MOOS.Q.2018 = as.data.frame(Q.daily.2018$MOOS)
MOOS.Q.2018$day = as.Date(rownames(Q.daily.2018))
names(MOOS.Q.2018) = c("Discharge_Lsec", "day")

# data wrangling - fill gaps #
# fxn #
fillgaps15 = function(df, dat, datquotes, largegap.num){
  ## Document gaps >= largegap.num (1 largegap.num = 15 min) ##
  # (note - the criteria of what constitutes a "large" gap should be reevaluated depending on the trend being characterized)
  is.na.rle <- rle(is.na(dat))
  is.na.rle$values <- is.na.rle$values & is.na.rle$lengths >= (largegap.num)
  biggaps = df[inverse.rle(is.na.rle), ]
  tz(biggaps$DateTime) = "America/Anchorage"
  biggaps = subset(biggaps, select = "DateTime")
  # Make univariate time series, covert to zoo, then to ts #
  ts.xts = subset(df, select = c("DateTime",datquotes))
  ts.xts<-read.zoo(ts.xts, index.column=1, format="%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
  ts.xts<-as.xts(ts.xts)
  # remove leading and trailing NAs #
  ts.xts = na.trim(ts.xts, is.na="any")
  # Apply auto.arima and kalman filter to impute missing values #
  fit2 = auto.arima(ts.xts) 
  kal = KalmanSmooth(ts.xts, fit2$model)
  id.na<-which(is.na(ts.xts))
  for(i in id.na) 
    ts.xts[i]<-fit2$model$Z %*% kal$smooth[i,]
  # revert to dataframe #
  ts.df = as.data.frame((ts.xts))
  ts.df$date_timeAK = as.POSIXct(row.names(ts.df), tz="America/Anchorage")
  names(ts.df) = c("dat_filled", "DateTime")
  # remove large gaps # 
  ts.df$dat_filled[ts.df$date_timeAK %in% as.POSIXct(biggaps$DateTime)] = NA
  # Replace large gaps with linear interpolation #
  ts.df$dat_filled = na.interpolation(ts.df$dat_filled)
  ts.df = subset(ts.df, select = c("dat_filled", "DateTime"))
  return(ts.df)
}


# FRCH # 
FRCH.no3 <- subset(FRCH.2018, select = c("DateTime","nitrateuM"))
#plot(FRCH$nitrateuM ~ FRCH$datetimeAK) # plot check 
names(FRCH.no3) = c("DateTime", "nitrateuM")

frch.no3.1 <- cut(FRCH.no3$DateTime, breaks="15 min")
frch.no3.final <- as.data.frame(aggregate(nitrateuM ~ frch.no3.1, data = FRCH.no3, FUN = mean)) # Averaging 15 minute intervals
frch.no3.final$DateTime <-as.POSIXct(frch.no3.final$frch.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

FRCH.fDOM = subset(FRCH.2018, select = c("DateTime","fDOM.QSU"))
names(FRCH.fDOM) = c("DateTime", "fDOM.QSU")
FRCH.fDOM$fDOM.QSU <- as.numeric(FRCH.fDOM$fDOM.QSU)
frch.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = FRCH.fDOM)# Averaging 15 minute intervals
names(frch.fdom.final) <- c("DateTime", "fDOM.QSU") 

#FRCH.fDOM.fill = fillgaps15(frch.fdom.final, frch.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16) # Checking to see if there are the same amount of rows 

FRCH.SpCond = subset(FRCH.2018, select = c("DateTime","SpCond.uScm"))
FRCH.SpCond$SpCond.uScm <- as.numeric(FRCH.SpCond$SpCond.uScm)
frch.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = FRCH.SpCond) # Averaging 15 minute intervals
frch.spcond.1 <- cut(FRCH.SpCond$DateTime, breaks = "15 min")
frch.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ frch.spcond.1, data = FRCH.SpCond, FUN = mean)) # Averaging 15 minute intervals
frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

FRCH.turb = subset(FRCH.2018, select = c("DateTime","Turbidity.FNU"))
FRCH.turb$Turbidity.FNU <- as.numeric(FRCH.turb$Turbidity.FNU)
frch.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = FRCH.turb) # Averaging 15 minute intervals
frch.turb.1 <- cut(FRCH.turb$DateTime, breaks = "15 min")
frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ frch.turb.1, data = FRCH.turb, FUN = mean)) # Averaging 15 minute intervals
frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

FRCH = left_join(frch.final.discharge.2018, frch.fdom.final, by="DateTime")
FRCH = left_join(FRCH, frch.no3.final, by="DateTime")
FRCH = left_join(FRCH, frch.spcond.final, by="DateTime")
FRCH = left_join(FRCH, frch.turb.final, by="DateTime")
FRCH <- FRCH[, -c(6,8,10)]

# MOOS #
MOOS.no3 <- subset(MOOS.2018, select = c("DateTime","nitrateuM"))
names(MOOS.no3) = c("DateTime", "nitrateuM")

moos.no3.1 <- cut(MOOS.no3$DateTime, breaks="15 min")
moos.no3.final <- as.data.frame(aggregate(nitrateuM ~ moos.no3.1, data = MOOS.no3, FUN = mean)) # Averaging 15 minute intervals
moos.no3.final$DateTime <-as.POSIXct(moos.no3.final$moos.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

MOOS.fDOM = subset(MOOS.2018, select = c("DateTime","fDOM.QSU"))
names(MOOS.fDOM) = c("DateTime", "fDOM.QSU")
MOOS.fDOM$fDOM.QSU <- as.numeric(MOOS.fDOM$fDOM.QSU)
moos.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = MOOS.fDOM)# Averaging 15 minute intervals
names(moos.fdom.final) <- c("DateTime", "fDOM.QSU") 

MOOS.SpCond = subset(MOOS.2018, select = c("DateTime","SpCond.uScm"))
MOOS.SpCond$SpCond.uScm <- as.numeric(MOOS.SpCond$SpCond.uScm)
moos.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = MOOS.SpCond) # Averaging 15 minute intervals
moos.spcond.1 <- cut(MOOS.SpCond$DateTime, breaks = "15 min")
moos.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ moos.spcond.1, data = MOOS.SpCond, FUN = mean)) # Averaging 15 minute intervals
moos.spcond.final$DateTime <-as.POSIXct(moos.spcond.final$moos.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

MOOS.turb = subset(MOOS.2018, select = c("DateTime","Turbidity.FNU"))
MOOS.turb$Turbidity.FNU <- as.numeric(MOOS.turb$Turbidity.FNU)
moos.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = MOOS.turb) # Averaging 15 minute intervals
moos.turb.1 <- cut(MOOS.turb$DateTime, breaks = "15 min")
moos.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ moos.turb.1, data = MOOS.turb, FUN = mean)) # Averaging 15 minute intervals
moos.turb.final$DateTime <-as.POSIXct(moos.turb.final$moos.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

MOOS = left_join(moos.final.discharge.2018, moos.fdom.final, by="DateTime")
MOOS = left_join(MOOS, moos.no3.final, by="DateTime")
MOOS = left_join(MOOS, moos.spcond.final, by="DateTime")
MOOS = left_join(MOOS, moos.turb.final, by="DateTime")
MOOS <- MOOS[, -c(6,8,10)]
# Write CSV #
write_csv(FRCH, "~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2018.csv")
write_csv(MOOS, "~/Documents/Storms/Q_Chem/MOOS/MOOS_chem_2018.csv")

# Baseflow Separation #

any(is.na(FRCH.Q.2018$day))
any(is.na(FRCH.Q.2018$Discharge_Lsec)) 
FRCH.Q.2018 <- na.omit(FRCH.Q.2018) # Removed 14 rows - (150 to 134)

any(is.na(MOOS.Q.2018$day))
any(is.na(MOOS.Q.2018$Discharge_Lsec)) 

any(is.na(CARI.Q.2018$day))
any(is.na(CARI.Q.2018$Discharge_Lsec)) 
CARI.Q.2018 <- na.omit(CARI.Q.2018) # Removed 62 rows - (151 to 117)


FRCH$MeanDischarge <- FRCH$Q
MOOS$MeanDischarge <- MOOS$Q
### examine the recursive digital filter at .9, .925, .95 levels ###
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type = "l", xlab = "", ylab = "Q (L/sec)",
     xlim =  as.POSIXct(c("2018-05-01 00:00:00","2018-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0, 1500), col="blue")

plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,5000), col="blue")

ggplot(aes(x = DateTime, y = Discharge), data = CARI_2018) +
  geom_line(color="#A6CEE3", size=1.25) +
  theme_classic() +
  ggtitle("CARI measured Q") +
  xlab("Date") +
  ylab("Discharge (L/s)") +
  xlab("")

### Hydrograph Separation ###

frch.final.discharge.2018$MeanDischarge <- frch.final.discharge.2018$Q
moos.final.discharge.2018$MeanDischarge <- moos.final.discharge.2018$Q
# FRCH
frch.final.discharge.2018 <- na.omit(frch.final.discharge.2018) # 6521-6472

FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$MeanDischarge)
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 

# MOOS
moos.final.discharge.2018 <- na.omit(moos.final.discharge.2018) # none!

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2018$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(MOOS.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

# CARI
any(is.na(cari.final.discharge.2018$Discharge))
cari.final.discharge.2018 <- na.omit(cari.final.discharge.2018) # removed 432006-381662
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2018$Discharge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(CARI.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 


###.925 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$MeanDischarge)
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(FRCH.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 

# MOOS
MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2018$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(MOOS.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

#CARI
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2018$Discharge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(CARI.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 

### .95 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2018$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(FRCH.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 

# 
MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2018$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(MOOS.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

#
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2018$Discharge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(CARI.Q.2018, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 

# Deliniate storms in FRCH #

# ID storms: Any events where Q reached 2X mean base flow 
# Pick starting points: manually select inflection pt when Q began to rise
# Pick ending points: manually select pt when Q reached pre-storm baseflow OR when another event occurred

FRCH_bfQ_mn = mean(FRCH_Q_bf$bt)
FRCH_bfQ_mn
FRCH_bfQ_mn*2

MOOS_bfQ_mn = mean(MOOS_Q_bf$bt)
MOOS_bfQ_mn
MOOS_bfQ_mn*2

CARI_bfQ_mn = mean(CARI_Q_bf$bt)
CARI_bfQ_mn
CARI_bfQ_mn*2

# Merge Discharge and Precip #

POKE.st <- read_csv("~/Documents/DoD_2018/RainGauge/POKE.RainGauge.2018.csv")
attributes(POKE.st$DateTime)$tzone <- 'America/Anchorage'


### Sum daily discharge ###
POKE.st$twentyfour <- rollapplyr(POKE.st$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.st$fourtyeight <- rollapplyr(POKE.st$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

# Greater than 5 #
poke.five.twenty.four <- POKE.st[which(POKE.st$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- POKE.st[which(POKE.st$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

# Greater than 10 #
poke.ten.twenty.four <- POKE.st[which(POKE.st$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- POKE.st[which(POKE.st$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10


### Precip Discharge Chem ###
#FRCH#
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

# NO chem until June 20th 
# Storm 1 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-21 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-06-24 01:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm1_06_21 = FRCH[FRCH$DateTime > as.POSIXct("2018-06-21 01:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2018-06-24 01:00:00", tz="America/Anchorage"),]
plot(FRCH_storm1_06_21$MeanDischarge ~ as.POSIXct(FRCH_storm1_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,600), col="blue", main="FRCH 180621 storm 1",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 6 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-29 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-04 14:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm2a_06_29 = FRCH[FRCH$DateTime > as.POSIXct("2018-06-29 18:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2018-07-04 14:00:00", tz="America/Anchorage"),]
plot(FRCH_storm2a_06_29$MeanDischarge ~ as.POSIXct(FRCH_storm2a_06_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,1200), col="blue", main="FRCH 180629 storm 2a",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2b # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-04 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-08 14:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm2b_07_04 = FRCH[FRCH$DateTime > as.POSIXct("2018-07-04 14:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2018-07-08 14:00:00", tz="America/Anchorage"),]
plot(FRCH_storm2b_07_04$MeanDischarge ~ as.POSIXct(FRCH_storm2b_07_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,600), col="blue", main="FRCH 180704 storm 2b",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-10 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-14 23:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm3_07_10 = FRCH[FRCH$DateTime > as.POSIXct("2018-07-10 12:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2018-07-14 23:00:00", tz="America/Anchorage"),]
plot(FRCH_storm3_07_10$MeanDischarge ~ as.POSIXct(FRCH_storm3_07_10$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,600), col="blue", main="FRCH 180710 storm 3",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-28 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-15 02:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-16 15:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm4a_07_15 = FRCH[FRCH$DateTime > as.POSIXct("2018-07-15 02:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2018-07-16 15:00:00", tz="America/Anchorage"),]
plot(FRCH_storm4a_07_15$MeanDischarge ~ as.POSIXct(FRCH_storm4a_07_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(350,700), col="blue", main="FRCH 180715 storm 4a",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4b # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-16 15:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-24 15:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm4b_07_16 = FRCH[FRCH$DateTime > as.POSIXct("2018-07-16 15:15:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2018-07-24 15:00:00", tz="America/Anchorage"),]
plot(FRCH_storm4b_07_16$MeanDischarge ~ as.POSIXct(FRCH_storm4b_07_16$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,600), col="blue", main="FRCH 180716 storm 4b",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-01 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-01 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-04 17:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-11 15:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm5_08_04 = FRCH[FRCH$DateTime > as.POSIXct("2018-08-04 17:15:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2018-08-11 15:00:00", tz="America/Anchorage"),]
plot(FRCH_storm5_08_04$MeanDischarge ~ as.POSIXct(FRCH_storm5_08_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1000), col="blue", main="FRCH 180804 storm 5",
     xlim = as.POSIXct(c("2018-08-01 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00")))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-01 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-13 07:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-19 15:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm6_08_13 = FRCH[FRCH$DateTime > as.POSIXct("2018-08-13 07:15:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2018-08-19 15:00:00", tz="America/Anchorage"),]
plot(FRCH_storm6_08_13$MeanDischarge ~ as.POSIXct(FRCH_storm6_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,800), col="blue", main="FRCH 180813 storm 6",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-23 14:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-26 02:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm7_08_23 = FRCH[FRCH$DateTime > as.POSIXct("2018-08-23 14:15:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2018-08-26 02:00:00", tz="America/Anchorage"),]
plot(FRCH_storm7_08_23$MeanDischarge ~ as.POSIXct(FRCH_storm7_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,700), col="blue", main="FRCH 180823 storm 7",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 4 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 100 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-26 04:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-27 20:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm8a_08_26 = FRCH[FRCH$DateTime > as.POSIXct("2018-08-26 04:00:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2018-08-27 20:00:00", tz="America/Anchorage"),]
plot(FRCH_storm8a_08_26$MeanDischarge ~ as.POSIXct(FRCH_storm8a_08_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,700), col="blue", main="FRCH 180826 storm 8a",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 6 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8b # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-27 20:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-29 20:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm8b_08_27 = FRCH[FRCH$DateTime > as.POSIXct("2018-08-27 20:00:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2018-08-29 20:00:00", tz="America/Anchorage"),]
plot(FRCH_storm8b_08_27$MeanDischarge ~ as.POSIXct(FRCH_storm8b_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,800), col="blue", main="FRCH 180827 storm 8b",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-29 20:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-01 05:45:00", tz="America/Anchorage"), col="purple")

FRCH_storm9_08_29 = FRCH[FRCH$DateTime > as.POSIXct("2018-08-29 20:00:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2018-09-01 05:45:00", tz="America/Anchorage"),]
plot(FRCH_storm9_08_29$MeanDischarge ~ as.POSIXct(FRCH_storm9_08_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,800), col="blue", main="FRCH 180829 storm 9",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 7 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-01 05:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-15 20:45:00", tz="America/Anchorage"), col="purple")

FRCH_storm10_09_01 = FRCH[FRCH$DateTime > as.POSIXct("2018-09-01 05:00:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2018-09-15 20:45:00", tz="America/Anchorage"),]
plot(FRCH_storm10_09_01$MeanDischarge ~ as.POSIXct(FRCH_storm10_09_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1400), col="blue", main="FRCH 180901 storm 10a",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 7 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# Storm 11a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-22 06:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-24 03:45:00", tz="America/Anchorage"), col="purple")

FRCH_storm11a_09_22 = FRCH[FRCH$DateTime > as.POSIXct("2018-09-22 06:00:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2018-09-24 03:45:00", tz="America/Anchorage"),]
plot(FRCH_storm11a_09_22$MeanDischarge ~ as.POSIXct(FRCH_storm11a_09_22$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(600,1000), col="blue", main="FRCH 180922 storm 11a",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 11b# 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-24 03:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-29 15:45:00", tz="America/Anchorage"), col="purple")

FRCH_storm11b_09_24 = FRCH[FRCH$DateTime > as.POSIXct("2018-09-24 03:45:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2018-09-29 15:45:00", tz="America/Anchorage"),]
plot(FRCH_storm11b_09_24$MeanDischarge ~ as.POSIXct(FRCH_storm11b_09_24$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(600,1000), col="blue", main="FRCH 180924 storm 11b",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No storm for the remainder of the season # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-10-01 00:00:00","2018-10-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 15 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$SpCond.uScm * 7 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$Turbidity.FNU * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-10-01 00:00:00","2018-10-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)


# modify format and save FRCH storms # 
# nitrateuM, fDOM.QSU 
FRCH_storm1_06_21_Q = subset(FRCH_storm1_06_21, select = c("DateTime","MeanDischarge"))
names(FRCH_storm1_06_21_Q) = c("valuedatetime","datavalue")
FRCH_storm1_06_21_NO3 = subset(FRCH_storm1_06_21, select = c("DateTime","nitrateuM"))
names(FRCH_storm1_06_21_NO3) = c("valuedatetime","datavalue")
FRCH_storm1_06_21_fDOM = subset(FRCH_storm1_06_21, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm1_06_21_fDOM) = c("valuedatetime","datavalue")
FRCH_storm1_06_21_SPC = subset(FRCH_storm1_06_21, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm1_06_21_SPC) = c("valuedatetime","datavalue")
FRCH_storm1_06_21_turb = subset(FRCH_storm1_06_21, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm1_06_21_turb) = c("valuedatetime","datavalue")

FRCH_storm2a_06_29_Q = subset(FRCH_storm2a_06_29, select = c("DateTime","MeanDischarge"))
names(FRCH_storm2a_06_29_Q) = c("valuedatetime","datavalue")
FRCH_storm2a_06_29_NO3 = subset(FRCH_storm2a_06_29, select = c("DateTime","nitrateuM"))
names(FRCH_storm2a_06_29_NO3) = c("valuedatetime","datavalue")
FRCH_storm2a_06_29_fDOM = subset(FRCH_storm2a_06_29, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm2a_06_29_fDOM) = c("valuedatetime","datavalue")
FRCH_storm2a_06_29_SPC = subset(FRCH_storm2a_06_29, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm2a_06_29_SPC) = c("valuedatetime","datavalue")
FRCH_storm2a_06_29_turb = subset(FRCH_storm2a_06_29, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm2a_06_29_turb) = c("valuedatetime","datavalue")

FRCH_storm2b_07_04_Q = subset(FRCH_storm2b_07_04, select = c("DateTime","MeanDischarge"))
names(FRCH_storm2b_07_04_Q) = c("valuedatetime","datavalue")
FRCH_storm2b_07_04_NO3 = subset(FRCH_storm2b_07_04, select = c("DateTime","nitrateuM"))
names(FRCH_storm2b_07_04_NO3) = c("valuedatetime","datavalue")
FRCH_storm2b_07_04_fDOM = subset(FRCH_storm2b_07_04, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm2b_07_04_fDOM) = c("valuedatetime","datavalue")
FRCH_storm2b_07_04_SPC = subset(FRCH_storm2b_07_04, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm2b_07_04_SPC) = c("valuedatetime","datavalue")
FRCH_storm2b_07_04_turb = subset(FRCH_storm2b_07_04, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm2b_07_04_turb) = c("valuedatetime","datavalue")

FRCH_storm3_07_10_Q = subset(FRCH_storm3_07_10, select = c("DateTime","MeanDischarge"))
names(FRCH_storm3_07_10_Q) = c("valuedatetime","datavalue")
FRCH_storm3_07_10_NO3 = subset(FRCH_storm3_07_10, select = c("DateTime","nitrateuM"))
names(FRCH_storm3_07_10_NO3) = c("valuedatetime","datavalue")
FRCH_storm3_07_10_fDOM = subset(FRCH_storm3_07_10, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm3_07_10_fDOM) = c("valuedatetime","datavalue")
FRCH_storm3_07_10_SPC = subset(FRCH_storm3_07_10, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm3_07_10_SPC) = c("valuedatetime","datavalue")
FRCH_storm3_07_10_turb = subset(FRCH_storm3_07_10, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm3_07_10_turb) = c("valuedatetime","datavalue")

FRCH_storm4a_07_15_Q = subset(FRCH_storm4a_07_15, select = c("DateTime","MeanDischarge"))
names(FRCH_storm4a_07_15_Q) = c("valuedatetime","datavalue")
FRCH_storm4a_07_15_NO3 = subset(FRCH_storm4a_07_15, select = c("DateTime","nitrateuM"))
names(FRCH_storm4a_07_15_NO3) = c("valuedatetime","datavalue")
FRCH_storm4a_07_15_fDOM = subset(FRCH_storm4a_07_15, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm4a_07_15_fDOM) = c("valuedatetime","datavalue")
FRCH_storm4a_07_15_SPC = subset(FRCH_storm4a_07_15, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm4a_07_15_SPC) = c("valuedatetime","datavalue")
FRCH_storm4a_07_15_turb = subset(FRCH_storm4a_07_15, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm4a_07_15_turb) = c("valuedatetime","datavalue")

FRCH_storm4b_07_16_Q = subset(FRCH_storm4b_07_16, select = c("DateTime","MeanDischarge"))
names(FRCH_storm4b_07_16_Q) = c("valuedatetime","datavalue")
FRCH_storm4b_07_16_NO3 = subset(FRCH_storm4b_07_16, select = c("DateTime","nitrateuM"))
names(FRCH_storm4b_07_16_NO3) = c("valuedatetime","datavalue")
FRCH_storm4b_07_16_fDOM = subset(FRCH_storm4b_07_16, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm4b_07_16_fDOM) = c("valuedatetime","datavalue")
FRCH_storm4b_07_16_SPC = subset(FRCH_storm4b_07_16, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm4b_07_16_SPC) = c("valuedatetime","datavalue")
FRCH_storm4b_07_16_turb = subset(FRCH_storm4b_07_16, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm4b_07_16_turb) = c("valuedatetime","datavalue")

FRCH_storm5_08_04_Q = subset(FRCH_storm5_08_04, select = c("DateTime","MeanDischarge"))
names(FRCH_storm5_08_04_Q) = c("valuedatetime","datavalue")
FRCH_storm5_08_04_NO3 = subset(FRCH_storm5_08_04, select = c("DateTime","nitrateuM"))
names(FRCH_storm5_08_04_NO3) = c("valuedatetime","datavalue")
FRCH_storm5_08_04_fDOM = subset(FRCH_storm5_08_04, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm5_08_04_fDOM) = c("valuedatetime","datavalue")
FRCH_storm5_08_04_SPC = subset(FRCH_storm5_08_04, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm5_08_04_SPC) = c("valuedatetime","datavalue")
FRCH_storm5_08_04_turb = subset(FRCH_storm5_08_04, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm5_08_04_turb) = c("valuedatetime","datavalue")

FRCH_storm6_08_13_Q = subset(FRCH_storm6_08_13, select = c("DateTime","MeanDischarge"))
names(FRCH_storm6_08_13_Q) = c("valuedatetime","datavalue")
FRCH_storm6_08_13_NO3 = subset(FRCH_storm6_08_13, select = c("DateTime","nitrateuM"))
names(FRCH_storm6_08_13_NO3) = c("valuedatetime","datavalue")
FRCH_storm6_08_13_fDOM = subset(FRCH_storm6_08_13, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm6_08_13_fDOM) = c("valuedatetime","datavalue")
FRCH_storm6_08_13_SPC = subset(FRCH_storm6_08_13, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm6_08_13_SPC) = c("valuedatetime","datavalue")
FRCH_storm6_08_13_turb = subset(FRCH_storm6_08_13, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm6_08_13_turb) = c("valuedatetime","datavalue")

FRCH_storm7_08_23_Q = subset(FRCH_storm7_08_23, select = c("DateTime","MeanDischarge"))
names(FRCH_storm7_08_23_Q) = c("valuedatetime","datavalue")
FRCH_storm7_08_23_NO3 = subset(FRCH_storm7_08_23, select = c("DateTime","nitrateuM"))
names(FRCH_storm7_08_23_NO3) = c("valuedatetime","datavalue")
FRCH_storm7_08_23_fDOM = subset(FRCH_storm7_08_23, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm7_08_23_fDOM) = c("valuedatetime","datavalue")
FRCH_storm7_08_23_SPC = subset(FRCH_storm7_08_23, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm7_08_23_SPC) = c("valuedatetime","datavalue")
FRCH_storm7_08_23_turb = subset(FRCH_storm7_08_23, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm7_08_23_turb) = c("valuedatetime","datavalue")

FRCH_storm8a_08_26_Q = subset(FRCH_storm8a_08_26, select = c("DateTime","MeanDischarge"))
names(FRCH_storm8a_08_26_Q) = c("valuedatetime","datavalue")
FRCH_storm8a_08_26_NO3 = subset(FRCH_storm8a_08_26, select = c("DateTime","nitrateuM"))
names(FRCH_storm8a_08_26_NO3) = c("valuedatetime","datavalue")
FRCH_storm8a_08_26_fDOM = subset(FRCH_storm8a_08_26, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm8a_08_26_fDOM) = c("valuedatetime","datavalue")
FRCH_storm8a_08_26_SPC = subset(FRCH_storm8a_08_26, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm8a_08_26_SPC) = c("valuedatetime","datavalue")
FRCH_storm8a_08_26_turb = subset(FRCH_storm8a_08_26, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm8a_08_26_turb) = c("valuedatetime","datavalue")

FRCH_storm8b_08_27_Q = subset(FRCH_storm8b_08_27, select = c("DateTime","MeanDischarge"))
names(FRCH_storm8b_08_27_Q) = c("valuedatetime","datavalue")
FRCH_storm8b_08_27_NO3 = subset(FRCH_storm8b_08_27, select = c("DateTime","nitrateuM"))
names(FRCH_storm8b_08_27_NO3) = c("valuedatetime","datavalue")
FRCH_storm8b_08_27_fDOM = subset(FRCH_storm8b_08_27, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm8b_08_27_fDOM) = c("valuedatetime","datavalue")
FRCH_storm8b_08_27_SPC = subset(FRCH_storm8b_08_27, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm8b_08_27_SPC) = c("valuedatetime","datavalue")
FRCH_storm8b_08_27_turb = subset(FRCH_storm8b_08_27, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm8b_08_27_turb) = c("valuedatetime","datavalue")

FRCH_storm9_08_29_Q = subset(FRCH_storm9_08_29, select = c("DateTime","MeanDischarge"))
names(FRCH_storm9_08_29_Q) = c("valuedatetime","datavalue")
FRCH_storm9_08_29_NO3 = subset(FRCH_storm9_08_29, select = c("DateTime","nitrateuM"))
names(FRCH_storm9_08_29_NO3) = c("valuedatetime","datavalue")
FRCH_storm9_08_29_fDOM = subset(FRCH_storm9_08_29, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm9_08_29_fDOM) = c("valuedatetime","datavalue")
FRCH_storm9_08_29_SPC = subset(FRCH_storm9_08_29, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm9_08_29_SPC) = c("valuedatetime","datavalue")
FRCH_storm9_08_29_turb = subset(FRCH_storm9_08_29, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm9_08_29_turb) = c("valuedatetime","datavalue")

FRCH_storm10_09_01_Q = subset(FRCH_storm10_09_01, select = c("DateTime","MeanDischarge"))
names(FRCH_storm10_09_01_Q) = c("valuedatetime","datavalue")
FRCH_storm10_09_01_NO3 = subset(FRCH_storm10_09_01, select = c("DateTime","nitrateuM"))
names(FRCH_storm10_09_01_NO3) = c("valuedatetime","datavalue")
FRCH_storm10_09_01_fDOM = subset(FRCH_storm10_09_01, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm10_09_01_fDOM) = c("valuedatetime","datavalue")
FRCH_storm10_09_01_SPC = subset(FRCH_storm10_09_01, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm10_09_01_SPC) = c("valuedatetime","datavalue")
FRCH_storm10_09_01_turb = subset(FRCH_storm10_09_01, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm10_09_01_turb) = c("valuedatetime","datavalue")

FRCH_storm11a_09_22_Q = subset(FRCH_storm11a_09_22, select = c("DateTime","MeanDischarge"))
names(FRCH_storm11a_09_22_Q) = c("valuedatetime","datavalue")
FRCH_storm11a_09_22_NO3 = subset(FRCH_storm11a_09_22, select = c("DateTime","nitrateuM"))
names(FRCH_storm11a_09_22_NO3) = c("valuedatetime","datavalue")
FRCH_storm11a_09_22_fDOM = subset(FRCH_storm11a_09_22, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm11a_09_22_fDOM) = c("valuedatetime","datavalue")
FRCH_storm11a_09_22_SPC = subset(FRCH_storm11a_09_22, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm11a_09_22_SPC) = c("valuedatetime","datavalue")
FRCH_storm11a_09_22_turb = subset(FRCH_storm11a_09_22, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm11a_09_22_turb) = c("valuedatetime","datavalue")

FRCH_storm11b_09_24_Q = subset(FRCH_storm11b_09_24, select = c("DateTime","MeanDischarge"))
names(FRCH_storm11b_09_24_Q) = c("valuedatetime","datavalue")
FRCH_storm11b_09_24_NO3 = subset(FRCH_storm11b_09_24, select = c("DateTime","nitrateuM"))
names(FRCH_storm11b_09_24_NO3) = c("valuedatetime","datavalue")
FRCH_storm11b_09_24_fDOM = subset(FRCH_storm11b_09_24, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm11b_09_24_fDOM) = c("valuedatetime","datavalue")
FRCH_storm11b_09_24_SPC = subset(FRCH_storm11b_09_24, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm11b_09_24_SPC) = c("valuedatetime","datavalue")
FRCH_storm11b_09_24_turb = subset(FRCH_storm11b_09_24, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm11b_09_24_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(FRCH_storm1_06_21, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm1_06_21.csv")
write.csv(FRCH_storm1_06_21_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm1_06_21_Q.csv")
write.csv(FRCH_storm1_06_21_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm1_06_21_NO3.csv")
write.csv(FRCH_storm1_06_21_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm1_06_21_fDOM.csv")
write.csv(FRCH_storm1_06_21_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm1_06_21_SPC.csv")
write.csv(FRCH_storm1_06_21_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm1_06_21_Turb.csv")

write.csv(FRCH_storm2a_06_29, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2a_06_29.csv")
write.csv(FRCH_storm2a_06_29_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2a_06_29_Q.csv")
write.csv(FRCH_storm2a_06_29_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2a_06_29_NO3.csv")
write.csv(FRCH_storm2a_06_29_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2a_06_29_fDOM.csv")
write.csv(FRCH_storm2a_06_29_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2a_06_29_SPC.csv")
write.csv(FRCH_storm2a_06_29_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2a_06_29_Turb.csv")

write.csv(FRCH_storm2b_07_04, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2b_07_04.csv")
write.csv(FRCH_storm2b_07_04_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2b_07_04_Q.csv")
write.csv(FRCH_storm2b_07_04_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2b_07_04_NO3.csv")
write.csv(FRCH_storm2b_07_04_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2b_07_04_fDOM.csv")
write.csv(FRCH_storm2b_07_04_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2b_07_04_SPC.csv")
write.csv(FRCH_storm2b_07_04_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm2b_07_04_Turb.csv")

write.csv(FRCH_storm3_07_10, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm3_07_10.csv")
write.csv(FRCH_storm3_07_10_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm3_07_10_Q.csv")
write.csv(FRCH_storm3_07_10_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm3_07_10_NO3.csv")
write.csv(FRCH_storm3_07_10_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm3_07_10_fDOM.csv")
write.csv(FRCH_storm3_07_10_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm3_07_10_SPC.csv")
write.csv(FRCH_storm3_07_10_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm3_07_10_Turb.csv")

write.csv(FRCH_storm4a_07_15, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4a_07_15.csv")
write.csv(FRCH_storm4a_07_15_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4a_07_15_Q.csv")
write.csv(FRCH_storm4a_07_15_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4a_07_15_NO3.csv")
write.csv(FRCH_storm4a_07_15_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4a_07_15_fDOM.csv")
write.csv(FRCH_storm4a_07_15_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4a_07_15_SPC.csv")
write.csv(FRCH_storm4a_07_15_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4a_07_15_Turb.csv")

write.csv(FRCH_storm4b_07_16, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4b_07_16.csv")
write.csv(FRCH_storm4b_07_16_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4b_07_16_Q.csv")
write.csv(FRCH_storm4b_07_16_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4b_07_16_NO3.csv")
write.csv(FRCH_storm4b_07_16_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4b_07_16_fDOM.csv")
write.csv(FRCH_storm4b_07_16_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4b_07_16_SPC.csv")
write.csv(FRCH_storm4b_07_16_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm4b_07_16_Turb.csv")

write.csv(FRCH_storm5_08_04, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm5_08_04.csv")
write.csv(FRCH_storm5_08_04_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm5_08_04_Q.csv")
write.csv(FRCH_storm5_08_04_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm5_08_04_NO3.csv")
write.csv(FRCH_storm5_08_04_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm5_08_04_fDOM.csv")
write.csv(FRCH_storm5_08_04_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm5_08_04_SPC.csv")
write.csv(FRCH_storm5_08_04_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm5_08_04_Turb.csv")

write.csv(FRCH_storm6_08_13, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm6_08_13.csv")
write.csv(FRCH_storm6_08_13_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm6_08_13_Q.csv")
write.csv(FRCH_storm6_08_13_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm6_08_13_NO3.csv")
write.csv(FRCH_storm6_08_13_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm6_08_13_fDOM.csv")
write.csv(FRCH_storm6_08_13_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm6_08_13_SPC.csv")
write.csv(FRCH_storm6_08_13_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm6_08_13_Turb.csv")

write.csv(FRCH_storm7_08_23, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm7_08_23.csv")
write.csv(FRCH_storm7_08_23_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm7_08_23_Q.csv")
write.csv(FRCH_storm7_08_23_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm7_08_23_NO3.csv")
write.csv(FRCH_storm7_08_23_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm7_08_23_fDOM.csv")
write.csv(FRCH_storm7_08_23_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm7_08_23_SPC.csv")
write.csv(FRCH_storm7_08_23_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm7_08_23_Turb.csv")

write.csv(FRCH_storm8a_08_26, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8a_08_26.csv")
write.csv(FRCH_storm8a_08_26_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8a_08_26_Q.csv")
write.csv(FRCH_storm8a_08_26_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8a_08_26_NO3.csv")
write.csv(FRCH_storm8a_08_26_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8a_08_26_fDOM.csv")
write.csv(FRCH_storm8a_08_26_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8a_08_26_SPC.csv")
write.csv(FRCH_storm8a_08_26_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8a_08_26_Turb.csv")

write.csv(FRCH_storm8b_08_27, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8b_08_27.csv")
write.csv(FRCH_storm8b_08_27_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8b_08_27_Q.csv")
write.csv(FRCH_storm8b_08_27_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8b_08_27_NO3.csv")
write.csv(FRCH_storm8b_08_27_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8b_08_27_fDOM.csv")
write.csv(FRCH_storm8b_08_27_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8b_08_27_SPC.csv")
write.csv(FRCH_storm8b_08_27_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm8b_08_27_Turb.csv")

write.csv(FRCH_storm9_08_29, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm9_08_29.csv")
write.csv(FRCH_storm9_08_29_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm9_08_29_Q.csv")
write.csv(FRCH_storm9_08_29_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm9_08_29_NO3.csv")
write.csv(FRCH_storm9_08_29_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm9_08_29_fDOM.csv")
write.csv(FRCH_storm9_08_29_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm9_08_29_SPC.csv")
write.csv(FRCH_storm9_08_29_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm9_08_29_Turb.csv")

write.csv(FRCH_storm10_09_01, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm10_09_01.csv")
write.csv(FRCH_storm10_09_01_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm10_09_01_Q.csv")
write.csv(FRCH_storm10_09_01_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm10_09_01_NO3.csv")
write.csv(FRCH_storm10_09_01_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm10_09_01_fDOM.csv")
write.csv(FRCH_storm10_09_01_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm10_09_01_SPC.csv")
write.csv(FRCH_storm10_09_01_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm10_09_01_Turb.csv")

write.csv(FRCH_storm11a_09_22, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11a_09_22.csv")
write.csv(FRCH_storm11a_09_22_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11a_09_22_Q.csv")
write.csv(FRCH_storm11a_09_22_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11a_09_22_NO3.csv")
write.csv(FRCH_storm11a_09_22_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11a_09_22_fDOM.csv")
write.csv(FRCH_storm11a_09_22_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11a_09_22_SPC.csv")
write.csv(FRCH_storm11a_09_22_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11a_09_22_Turb.csv")

write.csv(FRCH_storm11b_09_24, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11b_09_24.csv")
write.csv(FRCH_storm11b_09_24_Q, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11b_09_24_Q.csv")
write.csv(FRCH_storm11b_09_24_NO3, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11b_09_24_NO3.csv")
write.csv(FRCH_storm11b_09_24_fDOM, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11b_09_24_fDOM.csv")
write.csv(FRCH_storm11b_09_24_SPC, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11b_09_24_SPC.csv")
write.csv(FRCH_storm11b_09_24_turb, "~/Documents/Storms/Storm_Events/2018/FRCH/FRCH_storm11b_09_24_Turb.csv")


### Precip Discharge Chem ###
#MOOS#
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 100 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

# NO chem until June 20th 
# Storm 1 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-21 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-06-23 01:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm1_06_21 = MOOS[MOOS$DateTime > as.POSIXct("2018-06-21 20:30:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-06-23 01:45:00", tz="America/Anchorage"),]
plot(MOOS_storm1_06_21$MeanDischarge ~ as.POSIXct(MOOS_storm1_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1000), col="blue", main="MOOS 180621 storm 1",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2a # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-29 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-01 09:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm2a_06_29 = MOOS[MOOS$DateTime > as.POSIXct("2018-06-29 20:30:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-07-01 09:45:00", tz="America/Anchorage"),]
plot(MOOS_storm2a_06_29$MeanDischarge ~ as.POSIXct(MOOS_storm2a_06_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,3000), col="blue", main="MOOS 180629 storm 2a",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2b # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-01 09:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-04 18:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm2b_07_01 = MOOS[MOOS$DateTime > as.POSIXct("2018-07-01 09:45:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2018-07-04 18:45:00", tz="America/Anchorage"),]
plot(MOOS_storm2b_07_01$MeanDischarge ~ as.POSIXct(MOOS_storm2b_07_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,3000), col="blue", main="MOOS 180701 storm 2b",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2c # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-04 18:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-08 18:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm2c_07_04 = MOOS[MOOS$DateTime > as.POSIXct("2018-07-04 18:45:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2018-07-08 18:45:00", tz="America/Anchorage"),]
plot(MOOS_storm2c_07_04$MeanDischarge ~ as.POSIXct(MOOS_storm2c_07_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,3000), col="blue", main="MOOS 180704 storm 2c",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-09 18:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-14 18:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm3_07_09 = MOOS[MOOS$DateTime > as.POSIXct("2018-07-09 18:45:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2018-07-14 18:45:00", tz="America/Anchorage"),]
plot(MOOS_storm3_07_09$MeanDischarge ~ as.POSIXct(MOOS_storm3_07_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,2000), col="blue", main="MOOS 180709 storm 3",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-20 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-30 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-15 10:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-20 12:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm4_07_15 = MOOS[MOOS$DateTime > as.POSIXct("2018-07-15 10:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-07-20 12:45:00", tz="America/Anchorage"),]
plot(MOOS_storm4_07_15$MeanDischarge ~ as.POSIXct(MOOS_storm4_07_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,2000), col="blue", main="MOOS 180715 storm 4",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-30 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-14 00:00:00","2018-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-07-30 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-30 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-04 18:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-10 12:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm5_08_04 = MOOS[MOOS$DateTime > as.POSIXct("2018-08-04 18:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-08-10 12:45:00", tz="America/Anchorage"),]
plot(MOOS_storm5_08_04$MeanDischarge ~ as.POSIXct(MOOS_storm5_08_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(600,2000), col="blue", main="MOOS 180804 storm 5",
     xlim = as.POSIXct(c("2018-07-30 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-30 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-13 14:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-20 12:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm6_08_13 = MOOS[MOOS$DateTime > as.POSIXct("2018-08-13 14:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-08-20 12:45:00", tz="America/Anchorage"),]
plot(MOOS_storm6_08_13$MeanDischarge ~ as.POSIXct(MOOS_storm6_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,2500), col="blue", main="MOOS 180813 storm 6",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-23 17:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-26 07:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm7_08_23 = MOOS[MOOS$DateTime > as.POSIXct("2018-08-23 17:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-08-26 07:45:00", tz="America/Anchorage"),]
plot(MOOS_storm7_08_23$MeanDischarge ~ as.POSIXct(MOOS_storm7_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,2500), col="blue", main="MOOS 180823 storm 7",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8a # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-26 07:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-27 23:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm8a_08_26 = MOOS[MOOS$DateTime > as.POSIXct("2018-08-26 07:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-08-27 23:45:00", tz="America/Anchorage"),]
plot(MOOS_storm8a_08_26$MeanDischarge ~ as.POSIXct(MOOS_storm8a_08_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,2500), col="blue", main="MOOS 180826 storm 8a",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8b # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-27 23:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-29 23:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm8b_08_27 = MOOS[MOOS$DateTime > as.POSIXct("2018-08-27 23:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-08-29 23:45:00", tz="America/Anchorage"),]
plot(MOOS_storm8b_08_27$MeanDischarge ~ as.POSIXct(MOOS_storm8b_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,2500), col="blue", main="MOOS 180827 storm 8b",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 35 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-29 23:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-01 05:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm9_08_29 = MOOS[MOOS$DateTime > as.POSIXct("2018-08-29 23:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-09-01 05:45:00", tz="America/Anchorage"),]
plot(MOOS_storm9_08_29$MeanDischarge ~ as.POSIXct(MOOS_storm9_08_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,2500), col="blue", main="MOOS 180829 storm 9",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 100 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-10 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-01 05:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-10 05:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm10_09_01 = MOOS[MOOS$DateTime > as.POSIXct("2018-09-01 05:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2018-09-10 05:45:00", tz="America/Anchorage"),]
plot(MOOS_storm10_09_01$MeanDischarge ~ as.POSIXct(MOOS_storm10_09_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,4500), col="blue", main="MOOS 180901 storm 10",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 50 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 25 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 11a# 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-22 05:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-23 18:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm11a_09_22 = MOOS[MOOS$DateTime > as.POSIXct("2018-09-22 05:45:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2018-09-23 18:45:00", tz="America/Anchorage"),]
plot(MOOS_storm11a_09_22$MeanDischarge ~ as.POSIXct(MOOS_storm11a_09_22$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,3000), col="blue", main="MOOS 180922 storm 11a",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 50 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 20 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 11b# 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-23 18:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-24 12:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm11b_09_23 = MOOS[MOOS$DateTime > as.POSIXct("2018-09-23 18:45:00", tz="America/Anchorage") &
                             MOOS$DateTime < as.POSIXct("2018-09-24 12:45:00", tz="America/Anchorage"),]
plot(MOOS_storm11b_09_23$MeanDischarge ~ as.POSIXct(MOOS_storm11b_09_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,3000), col="blue", main="MOOS 180923 storm 11b",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 50 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 20 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 150 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-24 12:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-30 23:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm12_09_24 = MOOS[MOOS$DateTime > as.POSIXct("2018-09-24 12:45:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2018-09-30 23:45:00", tz="America/Anchorage"),]
plot(MOOS_storm12_09_24$MeanDischarge ~ as.POSIXct(MOOS_storm12_09_24$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,3000), col="blue", main="MOOS 180924 storm 12",
     xlim = as.POSIXct(c("2018-09-01 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))

# Alarms but no response in discharge and chem so no storm # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-09-30 00:00:00","2018-10-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-30 00:00:00","2018-10-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)

# modify format and save MOOS storms # 
# nitrateuM, fDOM.QSU 
MOOS_storm1_06_21_Q = subset(MOOS_storm1_06_21, select = c("DateTime","MeanDischarge"))
names(MOOS_storm1_06_21_Q) = c("valuedatetime","datavalue")
MOOS_storm1_06_21_NO3 = subset(MOOS_storm1_06_21, select = c("DateTime","nitrateuM"))
names(MOOS_storm1_06_21_NO3) = c("valuedatetime","datavalue")
MOOS_storm1_06_21_fDOM = subset(MOOS_storm1_06_21, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm1_06_21_fDOM) = c("valuedatetime","datavalue")
MOOS_storm1_06_21_SPC = subset(MOOS_storm1_06_21, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm1_06_21_SPC) = c("valuedatetime","datavalue")
MOOS_storm1_06_21_turb = subset(MOOS_storm1_06_21, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm1_06_21_turb) = c("valuedatetime","datavalue")

MOOS_storm2a_06_29_Q = subset(MOOS_storm2a_06_29, select = c("DateTime","MeanDischarge"))
names(MOOS_storm2a_06_29_Q) = c("valuedatetime","datavalue")
MOOS_storm2a_06_29_NO3 = subset(MOOS_storm2a_06_29, select = c("DateTime","nitrateuM"))
names(MOOS_storm2a_06_29_NO3) = c("valuedatetime","datavalue")
MOOS_storm2a_06_29_fDOM = subset(MOOS_storm2a_06_29, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm2a_06_29_fDOM) = c("valuedatetime","datavalue")
MOOS_storm2a_06_29_SPC = subset(MOOS_storm2a_06_29, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm2a_06_29_SPC) = c("valuedatetime","datavalue")
MOOS_storm2a_06_29_turb = subset(MOOS_storm2a_06_29, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm2a_06_29_turb) = c("valuedatetime","datavalue")

MOOS_storm2b_07_01_Q = subset(MOOS_storm2b_07_01, select = c("DateTime","MeanDischarge"))
names(MOOS_storm2b_07_01_Q) = c("valuedatetime","datavalue")
MOOS_storm2b_07_01_NO3 = subset(MOOS_storm2b_07_01, select = c("DateTime","nitrateuM"))
names(MOOS_storm2b_07_01_NO3) = c("valuedatetime","datavalue")
MOOS_storm2b_07_01_fDOM = subset(MOOS_storm2b_07_01, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm2b_07_01_fDOM) = c("valuedatetime","datavalue")
MOOS_storm2b_07_01_SPC = subset(MOOS_storm2b_07_01, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm2b_07_01_SPC) = c("valuedatetime","datavalue")
MOOS_storm2b_07_01_turb = subset(MOOS_storm2b_07_01, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm2b_07_01_turb) = c("valuedatetime","datavalue")

MOOS_storm2c_07_04_Q = subset(MOOS_storm2c_07_04, select = c("DateTime","MeanDischarge"))
names(MOOS_storm2c_07_04_Q) = c("valuedatetime","datavalue")
MOOS_storm2c_07_04_NO3 = subset(MOOS_storm2c_07_04, select = c("DateTime","nitrateuM"))
names(MOOS_storm2c_07_04_NO3) = c("valuedatetime","datavalue")
MOOS_storm2c_07_04_fDOM = subset(MOOS_storm2c_07_04, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm2c_07_04_fDOM) = c("valuedatetime","datavalue")
MOOS_storm2c_07_04_SPC = subset(MOOS_storm2c_07_04, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm2c_07_04_SPC) = c("valuedatetime","datavalue")
MOOS_storm2c_07_04_turb = subset(MOOS_storm2c_07_04, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm2c_07_04_turb) = c("valuedatetime","datavalue")

MOOS_storm3_07_09_Q = subset(MOOS_storm3_07_09, select = c("DateTime","MeanDischarge"))
names(MOOS_storm3_07_09_Q) = c("valuedatetime","datavalue")
MOOS_storm3_07_09_NO3 = subset(MOOS_storm3_07_09, select = c("DateTime","nitrateuM"))
names(MOOS_storm3_07_09_NO3) = c("valuedatetime","datavalue")
MOOS_storm3_07_09_fDOM = subset(MOOS_storm3_07_09, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm3_07_09_fDOM) = c("valuedatetime","datavalue")
MOOS_storm3_07_09_SPC = subset(MOOS_storm3_07_09, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm3_07_09_SPC) = c("valuedatetime","datavalue")
MOOS_storm3_07_09_turb = subset(MOOS_storm3_07_09, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm3_07_09_turb) = c("valuedatetime","datavalue")

MOOS_storm4_07_15_Q = subset(MOOS_storm4_07_15, select = c("DateTime","MeanDischarge"))
names(MOOS_storm4_07_15_Q) = c("valuedatetime","datavalue")
MOOS_storm4_07_15_NO3 = subset(MOOS_storm4_07_15, select = c("DateTime","nitrateuM"))
names(MOOS_storm4_07_15_NO3) = c("valuedatetime","datavalue")
MOOS_storm4_07_15_fDOM = subset(MOOS_storm4_07_15, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm4_07_15_fDOM) = c("valuedatetime","datavalue")
MOOS_storm4_07_15_SPC = subset(MOOS_storm4_07_15, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm4_07_15_SPC) = c("valuedatetime","datavalue")
MOOS_storm4_07_15_turb = subset(MOOS_storm4_07_15, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm4_07_15_turb) = c("valuedatetime","datavalue")

MOOS_storm5_08_04_Q = subset(MOOS_storm5_08_04, select = c("DateTime","MeanDischarge"))
names(MOOS_storm5_08_04_Q) = c("valuedatetime","datavalue")
MOOS_storm5_08_04_NO3 = subset(MOOS_storm5_08_04, select = c("DateTime","nitrateuM"))
names(MOOS_storm5_08_04_NO3) = c("valuedatetime","datavalue")
MOOS_storm5_08_04_fDOM = subset(MOOS_storm5_08_04, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm5_08_04_fDOM) = c("valuedatetime","datavalue")
MOOS_storm5_08_04_SPC = subset(MOOS_storm5_08_04, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm5_08_04_SPC) = c("valuedatetime","datavalue")
MOOS_storm5_08_04_turb = subset(MOOS_storm5_08_04, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm5_08_04_turb) = c("valuedatetime","datavalue")

MOOS_storm6_08_13_Q = subset(MOOS_storm6_08_13, select = c("DateTime","MeanDischarge"))
names(MOOS_storm6_08_13_Q) = c("valuedatetime","datavalue")
MOOS_storm6_08_13_NO3 = subset(MOOS_storm6_08_13, select = c("DateTime","nitrateuM"))
names(MOOS_storm6_08_13_NO3) = c("valuedatetime","datavalue")
MOOS_storm6_08_13_fDOM = subset(MOOS_storm6_08_13, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm6_08_13_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6_08_13_SPC = subset(MOOS_storm6_08_13, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm6_08_13_SPC) = c("valuedatetime","datavalue")
MOOS_storm6_08_13_turb = subset(MOOS_storm6_08_13, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm6_08_13_turb) = c("valuedatetime","datavalue")

MOOS_storm7_08_23_Q = subset(MOOS_storm7_08_23, select = c("DateTime","MeanDischarge"))
names(MOOS_storm7_08_23_Q) = c("valuedatetime","datavalue")
MOOS_storm7_08_23_NO3 = subset(MOOS_storm7_08_23, select = c("DateTime","nitrateuM"))
names(MOOS_storm7_08_23_NO3) = c("valuedatetime","datavalue")
MOOS_storm7_08_23_fDOM = subset(MOOS_storm7_08_23, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm7_08_23_fDOM) = c("valuedatetime","datavalue")
MOOS_storm7_08_23_SPC = subset(MOOS_storm7_08_23, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm7_08_23_SPC) = c("valuedatetime","datavalue")
MOOS_storm7_08_23_turb = subset(MOOS_storm7_08_23, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm7_08_23_turb) = c("valuedatetime","datavalue")

MOOS_storm8a_08_26_Q = subset(MOOS_storm8a_08_26, select = c("DateTime","MeanDischarge"))
names(MOOS_storm8a_08_26_Q) = c("valuedatetime","datavalue")
MOOS_storm8a_08_26_NO3 = subset(MOOS_storm8a_08_26, select = c("DateTime","nitrateuM"))
names(MOOS_storm8a_08_26_NO3) = c("valuedatetime","datavalue")
MOOS_storm8a_08_26_fDOM = subset(MOOS_storm8a_08_26, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm8a_08_26_fDOM) = c("valuedatetime","datavalue")
MOOS_storm8a_08_26_SPC = subset(MOOS_storm8a_08_26, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm8a_08_26_SPC) = c("valuedatetime","datavalue")
MOOS_storm8a_08_26_turb = subset(MOOS_storm8a_08_26, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm8a_08_26_turb) = c("valuedatetime","datavalue")

MOOS_storm8b_08_27_Q = subset(MOOS_storm8b_08_27, select = c("DateTime","MeanDischarge"))
names(MOOS_storm8b_08_27_Q) = c("valuedatetime","datavalue")
MOOS_storm8b_08_27_NO3 = subset(MOOS_storm8b_08_27, select = c("DateTime","nitrateuM"))
names(MOOS_storm8b_08_27_NO3) = c("valuedatetime","datavalue")
MOOS_storm8b_08_27_fDOM = subset(MOOS_storm8b_08_27, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm8b_08_27_fDOM) = c("valuedatetime","datavalue")
MOOS_storm8b_08_27_SPC = subset(MOOS_storm8b_08_27, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm8b_08_27_SPC) = c("valuedatetime","datavalue")
MOOS_storm8b_08_27_turb = subset(MOOS_storm8b_08_27, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm8b_08_27_turb) = c("valuedatetime","datavalue")

MOOS_storm9_08_29_Q = subset(MOOS_storm9_08_29, select = c("DateTime","MeanDischarge"))
names(MOOS_storm9_08_29_Q) = c("valuedatetime","datavalue")
MOOS_storm9_08_29_NO3 = subset(MOOS_storm9_08_29, select = c("DateTime","nitrateuM"))
names(MOOS_storm9_08_29_NO3) = c("valuedatetime","datavalue")
MOOS_storm9_08_29_fDOM = subset(MOOS_storm9_08_29, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm9_08_29_fDOM) = c("valuedatetime","datavalue")
MOOS_storm9_08_29_SPC = subset(MOOS_storm9_08_29, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm9_08_29_SPC) = c("valuedatetime","datavalue")
MOOS_storm9_08_29_turb = subset(MOOS_storm9_08_29, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm9_08_29_turb) = c("valuedatetime","datavalue")

MOOS_storm10_09_01_Q = subset(MOOS_storm10_09_01, select = c("DateTime","MeanDischarge"))
names(MOOS_storm10_09_01_Q) = c("valuedatetime","datavalue")
MOOS_storm10_09_01_NO3 = subset(MOOS_storm10_09_01, select = c("DateTime","nitrateuM"))
names(MOOS_storm10_09_01_NO3) = c("valuedatetime","datavalue")
MOOS_storm10_09_01_fDOM = subset(MOOS_storm10_09_01, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm10_09_01_fDOM) = c("valuedatetime","datavalue")
MOOS_storm10_09_01_SPC = subset(MOOS_storm10_09_01, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm10_09_01_SPC) = c("valuedatetime","datavalue")
MOOS_storm10_09_01_turb = subset(MOOS_storm10_09_01, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm10_09_01_turb) = c("valuedatetime","datavalue")

MOOS_storm11a_09_22_Q = subset(MOOS_storm11a_09_22, select = c("DateTime","MeanDischarge"))
names(MOOS_storm11a_09_22_Q) = c("valuedatetime","datavalue")
MOOS_storm11a_09_22_NO3 = subset(MOOS_storm11a_09_22, select = c("DateTime","nitrateuM"))
names(MOOS_storm11a_09_22_NO3) = c("valuedatetime","datavalue")
MOOS_storm11a_09_22_fDOM = subset(MOOS_storm11a_09_22, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm11a_09_22_fDOM) = c("valuedatetime","datavalue")
MOOS_storm11a_09_22_SPC = subset(MOOS_storm11a_09_22, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm11a_09_22_SPC) = c("valuedatetime","datavalue")
MOOS_storm11a_09_22_turb = subset(MOOS_storm11a_09_22, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm11a_09_22_turb) = c("valuedatetime","datavalue")

MOOS_storm11b_09_23_Q = subset(MOOS_storm11b_09_23, select = c("DateTime","MeanDischarge"))
names(MOOS_storm11b_09_23_Q) = c("valuedatetime","datavalue")
MOOS_storm11b_09_23_NO3 = subset(MOOS_storm11b_09_23, select = c("DateTime","nitrateuM"))
names(MOOS_storm11b_09_23_NO3) = c("valuedatetime","datavalue")
MOOS_storm11b_09_23_fDOM = subset(MOOS_storm11b_09_23, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm11b_09_23_fDOM) = c("valuedatetime","datavalue")
MOOS_storm11b_09_23_SPC = subset(MOOS_storm11b_09_23, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm11b_09_23_SPC) = c("valuedatetime","datavalue")
MOOS_storm11b_09_23_turb = subset(MOOS_storm11b_09_23, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm11b_09_23_turb) = c("valuedatetime","datavalue")

MOOS_storm12_09_24_Q = subset(MOOS_storm12_09_24, select = c("DateTime","MeanDischarge"))
names(MOOS_storm12_09_24_Q) = c("valuedatetime","datavalue")
MOOS_storm12_09_24_NO3 = subset(MOOS_storm12_09_24, select = c("DateTime","nitrateuM"))
names(MOOS_storm12_09_24_NO3) = c("valuedatetime","datavalue")
MOOS_storm12_09_24_fDOM = subset(MOOS_storm12_09_24, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm12_09_24_fDOM) = c("valuedatetime","datavalue")
MOOS_storm12_09_24_SPC = subset(MOOS_storm12_09_24, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm12_09_24_SPC) = c("valuedatetime","datavalue")
MOOS_storm12_09_24_turb = subset(MOOS_storm12_09_24, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm12_09_24_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(MOOS_storm1_06_21, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm1_06_21.csv")
write.csv(MOOS_storm1_06_21_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm1_06_21_Q.csv")
write.csv(MOOS_storm1_06_21_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm1_06_21_NO3.csv")
write.csv(MOOS_storm1_06_21_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm1_06_21_fDOM.csv")
write.csv(MOOS_storm1_06_21_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm1_06_21_SPC.csv")
write.csv(MOOS_storm1_06_21_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm1_06_21_Turb.csv")

write.csv(MOOS_storm2a_06_29, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2a_06_29.csv")
write.csv(MOOS_storm2a_06_29_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2a_06_29_Q.csv")
write.csv(MOOS_storm2a_06_29_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2a_06_29_NO3.csv")
write.csv(MOOS_storm2a_06_29_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2a_06_29_fDOM.csv")
write.csv(MOOS_storm2a_06_29_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2a_06_29_SPC.csv")
write.csv(MOOS_storm2a_06_29_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2a_06_29_Turb.csv")

write.csv(MOOS_storm2b_07_01, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2b_07_01.csv")
write.csv(MOOS_storm2b_07_01_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2b_07_01_Q.csv")
write.csv(MOOS_storm2b_07_01_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2b_07_01_NO3.csv")
write.csv(MOOS_storm2b_07_01_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2b_07_01_fDOM.csv")
write.csv(MOOS_storm2b_07_01_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2b_07_01_SPC.csv")
write.csv(MOOS_storm2b_07_01_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2b_07_01_Turb.csv")

write.csv(MOOS_storm2c_07_04, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2c_07_04.csv")
write.csv(MOOS_storm2c_07_04_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2c_07_04_Q.csv")
write.csv(MOOS_storm2c_07_04_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2c_07_04_NO3.csv")
write.csv(MOOS_storm2c_07_04_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2c_07_04_fDOM.csv")
write.csv(MOOS_storm2c_07_04_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2c_07_04_SPC.csv")
write.csv(MOOS_storm2c_07_04_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm2c_07_04_Turb.csv")

write.csv(MOOS_storm3_07_09, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm3_07_09.csv")
write.csv(MOOS_storm3_07_09_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm3_07_09_Q.csv")
write.csv(MOOS_storm3_07_09_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm3_07_09_NO3.csv")
write.csv(MOOS_storm3_07_09_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm3_07_09_fDOM.csv")
write.csv(MOOS_storm3_07_09_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm3_07_09_SPC.csv")
write.csv(MOOS_storm3_07_09_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm3_07_09_Turb.csv")

write.csv(MOOS_storm4_07_15, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm4_07_15.csv")
write.csv(MOOS_storm4_07_15_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm4_07_15_Q.csv")
write.csv(MOOS_storm4_07_15_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm4_07_15_NO3.csv")
write.csv(MOOS_storm4_07_15_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm4_07_15_fDOM.csv")
write.csv(MOOS_storm4_07_15_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm4_07_15_SPC.csv")
write.csv(MOOS_storm4_07_15_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm4_07_15_Turb.csv")

write.csv(MOOS_storm5_08_04, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm5_08_04.csv")
write.csv(MOOS_storm5_08_04_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm5_08_04_Q.csv")
write.csv(MOOS_storm5_08_04_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm5_08_04_NO3.csv")
write.csv(MOOS_storm5_08_04_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm5_08_04_fDOM.csv")
write.csv(MOOS_storm5_08_04_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm5_08_04_SPC.csv")
write.csv(MOOS_storm5_08_04_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm5_08_04_Turb.csv")

write.csv(MOOS_storm6_08_13, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm6_08_13.csv")
write.csv(MOOS_storm6_08_13_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm6_08_13_Q.csv")
write.csv(MOOS_storm6_08_13_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm6_08_13_NO3.csv")
write.csv(MOOS_storm6_08_13_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm6_08_13_fDOM.csv")
write.csv(MOOS_storm6_08_13_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm6_08_13_SPC.csv")
write.csv(MOOS_storm6_08_13_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm6_08_13_Turb.csv")

write.csv(MOOS_storm7_08_23, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm7_08_23.csv")
write.csv(MOOS_storm7_08_23_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm7_08_23_Q.csv")
write.csv(MOOS_storm7_08_23_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm7_08_23_NO3.csv")
write.csv(MOOS_storm7_08_23_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm7_08_23_fDOM.csv")
write.csv(MOOS_storm7_08_23_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm7_08_23_SPC.csv")
write.csv(MOOS_storm7_08_23_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm7_08_23_Turb.csv")

write.csv(MOOS_storm8a_08_26, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8a_08_26.csv")
write.csv(MOOS_storm8a_08_26_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8a_08_26_Q.csv")
write.csv(MOOS_storm8a_08_26_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8a_08_26_NO3.csv")
write.csv(MOOS_storm8a_08_26_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8a_08_26_fDOM.csv")
write.csv(MOOS_storm8a_08_26_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8a_08_26_SPC.csv")
write.csv(MOOS_storm8a_08_26_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8a_08_26_Turb.csv")

write.csv(MOOS_storm8b_08_27, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8b_08_27.csv")
write.csv(MOOS_storm8b_08_27_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8b_08_27_Q.csv")
write.csv(MOOS_storm8b_08_27_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8b_08_27_NO3.csv")
write.csv(MOOS_storm8b_08_27_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8b_08_27_fDOM.csv")
write.csv(MOOS_storm8b_08_27_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8b_08_27_SPC.csv")
write.csv(MOOS_storm8b_08_27_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm8b_08_27_Turb.csv")

write.csv(MOOS_storm9_08_29, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm9_08_29.csv")
write.csv(MOOS_storm9_08_29_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm9_08_29_Q.csv")
write.csv(MOOS_storm9_08_29_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm9_08_29_NO3.csv")
write.csv(MOOS_storm9_08_29_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm9_08_29_fDOM.csv")
write.csv(MOOS_storm9_08_29_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm9_08_29_SPC.csv")
write.csv(MOOS_storm9_08_29_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm9_08_29_Turb.csv")

write.csv(MOOS_storm10_09_01, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm10_09_01.csv")
write.csv(MOOS_storm10_09_01_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm10_09_01_Q.csv")
write.csv(MOOS_storm10_09_01_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm10_09_01_NO3.csv")
write.csv(MOOS_storm10_09_01_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm10_09_01_fDOM.csv")
write.csv(MOOS_storm10_09_01_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm10_09_01_SPC.csv")
write.csv(MOOS_storm10_09_01_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm10_09_01_Turb.csv")

write.csv(MOOS_storm11a_09_22, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11a_09_22.csv")
write.csv(MOOS_storm11a_09_22_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11a_09_22_Q.csv")
write.csv(MOOS_storm11a_09_22_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11a_09_22_NO3.csv")
write.csv(MOOS_storm11a_09_22_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11a_09_22_fDOM.csv")
write.csv(MOOS_storm11a_09_22_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11a_09_22_SPC.csv")
write.csv(MOOS_storm11a_09_22_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11a_09_22_Turb.csv")

write.csv(MOOS_storm11b_09_23, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11b_09_23.csv")
write.csv(MOOS_storm11b_09_23_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11b_09_23_Q.csv")
write.csv(MOOS_storm11b_09_23_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11b_09_23_NO3.csv")
write.csv(MOOS_storm11b_09_23_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11b_09_23_fDOM.csv")
write.csv(MOOS_storm11b_09_23_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11b_09_23_SPC.csv")
write.csv(MOOS_storm11b_09_23_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm11b_09_23_Turb.csv")

write.csv(MOOS_storm12_09_24, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm12_09_24.csv")
write.csv(MOOS_storm12_09_24_Q, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm12_09_24_Q.csv")
write.csv(MOOS_storm12_09_24_NO3, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm12_09_24_NO3.csv")
write.csv(MOOS_storm12_09_24_fDOM, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm12_09_24_fDOM.csv")
write.csv(MOOS_storm12_09_24_SPC, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm12_09_24_SPC.csv")
write.csv(MOOS_storm12_09_24_turb, "~/Documents/Storms/Storm_Events/2018/MOOS/MOOS_storm12_09_24_Turb.csv")


### Precip Discharge Chem ###
#CARI#
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-01 0:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 10 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 0.5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))

# Storm 1 # 
# no chem
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-05-15 00:00:00","2018-05-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-15 00:00:00","2018-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-05-21 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-05-22 18:00:00", tz="America/Anchorage"), col="purple")

CARI_storm1_05_21 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-05-21 01:30:00", tz="America/Anchorage") &
                           CARI_2018$DateTime < as.POSIXct("2018-05-22 18:00:00", tz="America/Anchorage"),]
plot(CARI_storm1_05_21$Discharge ~ as.POSIXct(CARI_storm1_05_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="CARI 180521 storm 1",
     xlim = as.POSIXct(c("2018-05-15 00:00:00","2018-05-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 10 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 0.5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-15 00:00:00","2018-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2 # 
# no chem
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-05-15 00:00:00","2018-05-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-15 00:00:00","2018-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-05-23 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-05-25 18:00:00", tz="America/Anchorage"), col="purple")

CARI_storm2_05_23 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-05-23 18:30:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-05-25 18:00:00", tz="America/Anchorage"),]
plot(CARI_storm2_05_23$Discharge ~ as.POSIXct(CARI_storm2_05_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="CARI 180523 storm 2",
     xlim = as.POSIXct(c("2018-05-15 00:00:00","2018-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-15 00:00:00","2018-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 1 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-05-31 00:00:00","2018-06-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-31 00:00:00","2018-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-10 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-06-13 18:00:00", tz="America/Anchorage"), col="purple")

CARI_storm1_06_10 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-06-10 10:30:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-06-13 18:00:00", tz="America/Anchorage"),]
plot(CARI_storm1_06_10$Discharge ~ as.POSIXct(CARI_storm1_06_10$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,600), col="blue", main="CARI 180610 storm 1",
     xlim = as.POSIXct(c("2018-05-31 00:00:00","2018-06-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-05-31 00:00:00","2018-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-21 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-06-23 18:00:00", tz="America/Anchorage"), col="purple")

CARI_storm2_06_21 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-06-21 20:30:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-06-23 18:00:00", tz="America/Anchorage"),]
plot(CARI_storm2_06_21$Discharge ~ as.POSIXct(CARI_storm2_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,600), col="blue", main="CARI 180621 storm 2",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-29 06:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-06-30 15:00:00", tz="America/Anchorage"), col="purple")

CARI_storm3_06_29 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-06-29 06:30:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-06-30 15:00:00", tz="America/Anchorage"),]
plot(CARI_storm3_06_29$Discharge ~ as.POSIXct(CARI_storm3_06_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,800), col="blue", main="CARI 180629 storm 3",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-15 00:00:00","2018-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4a # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-30 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-30 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-06-30 15:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-01 12:00:00", tz="America/Anchorage"), col="purple")

CARI_storm4a_06_30 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-06-30 15:30:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-07-01 12:00:00", tz="America/Anchorage"),]
plot(CARI_storm4a_06_30$Discharge ~ as.POSIXct(CARI_storm4a_06_30$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,800), col="blue", main="CARI 180630 storm 4a",
     xlim = as.POSIXct(c("2018-06-30 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-30 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4b # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-06-30 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-30 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-07-01 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-07-03 12:00:00", tz="America/Anchorage"), col="purple")

CARI_storm4b_07_01 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-07-01 14:30:00", tz="America/Anchorage") &
                                 CARI_2018$DateTime < as.POSIXct("2018-07-03 12:00:00", tz="America/Anchorage"),]
plot(CARI_storm4b_07_01$Discharge ~ as.POSIXct(CARI_storm4b_07_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,1000), col="blue", main="CARI 180701 storm 4b",
     xlim = as.POSIXct(c("2018-06-30 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-06-30 00:00:00","2018-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5a # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-04 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-05 08:00:00", tz="America/Anchorage"), col="purple")

CARI_storm5a_08_04 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-08-04 12:30:00", tz="America/Anchorage") &
                                 CARI_2018$DateTime < as.POSIXct("2018-08-05 08:00:00", tz="America/Anchorage"),]
plot(CARI_storm5a_08_04$Discharge ~ as.POSIXct(CARI_storm5a_08_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,600), col="blue", main="CARI 180804 storm 5a",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5b # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-05 08:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-06 15:00:00", tz="America/Anchorage"), col="purple")

CARI_storm5b_08_05 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-08-05 08:30:00", tz="America/Anchorage") &
                                 CARI_2018$DateTime < as.POSIXct("2018-08-06 15:00:00", tz="America/Anchorage"),]
plot(CARI_storm5b_08_05$Discharge ~ as.POSIXct(CARI_storm5b_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,1000), col="blue", main="CARI 180805 storm 5b",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 30 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5c # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-06 15:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-12 15:00:00", tz="America/Anchorage"), col="purple")

CARI_storm5c_08_06 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-08-06 15:00:00", tz="America/Anchorage") &
                                 CARI_2018$DateTime < as.POSIXct("2018-08-12 15:00:00", tz="America/Anchorage"),]
plot(CARI_storm5c_08_06$Discharge ~ as.POSIXct(CARI_storm5c_08_06$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,1000), col="blue", main="CARI 180806 storm 5c",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-07-31 00:00:00","2018-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-13 17:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-20 15:00:00", tz="America/Anchorage"), col="purple")

CARI_storm6_08_13 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-08-13 17:00:00", tz="America/Anchorage") &
                                 CARI_2018$DateTime < as.POSIXct("2018-08-20 15:00:00", tz="America/Anchorage"),]
plot(CARI_storm6_08_13$Discharge ~ as.POSIXct(CARI_storm6_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,1200), col="blue", main="CARI 180813 storm 6",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-21 05:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-22 23:00:00", tz="America/Anchorage"), col="purple")

CARI_storm7_08_21 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-08-21 05:00:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-08-22 23:00:00", tz="America/Anchorage"),]
plot(CARI_storm7_08_21$Discharge ~ as.POSIXct(CARI_storm7_08_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,700), col="blue", main="CARI 180821 storm 7",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-24 12:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-26 12:00:00", tz="America/Anchorage"), col="purple")

CARI_storm8_08_24 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-08-24 12:00:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-08-26 12:00:00", tz="America/Anchorage"),]
plot(CARI_storm8_08_24$Discharge ~ as.POSIXct(CARI_storm8_08_24$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,700), col="blue", main="CARI 180824 storm 8",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-26 12:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-08-30 06:00:00", tz="America/Anchorage"), col="purple")

CARI_storm9_08_26 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-08-26 12:00:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-08-30 06:00:00", tz="America/Anchorage"),]
plot(CARI_storm9_08_26$Discharge ~ as.POSIXct(CARI_storm9_08_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,700), col="blue", main="CARI 180826 storm 9",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-12 00:00:00","2018-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-08-30 10:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-02 03:00:00", tz="America/Anchorage"), col="purple")

CARI_storm10_08_30 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-08-30 10:00:00", tz="America/Anchorage") &
                                CARI_2018$DateTime < as.POSIXct("2018-09-02 03:00:00", tz="America/Anchorage"),]
plot(CARI_storm10_08_30$Discharge ~ as.POSIXct(CARI_storm10_08_30$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1500), col="blue", main="CARI 180830 storm 10",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 11 # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-02 03:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-04 03:00:00", tz="America/Anchorage"), col="purple")

CARI_storm11_09_02 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-09-02 03:00:00", tz="America/Anchorage") &
                                 CARI_2018$DateTime < as.POSIXct("2018-09-04 03:00:00", tz="America/Anchorage"),]
plot(CARI_storm11_09_02$Discharge ~ as.POSIXct(CARI_storm11_09_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1000), col="blue", main="CARI 180902 storm 11",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-08-30 00:00:00","2018-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12a # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-09-15 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-15 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-20 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-25 08:00:00", tz="America/Anchorage"), col="purple")

CARI_storm12a_09_20 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-09-20 23:00:00", tz="America/Anchorage") &
                                 CARI_2018$DateTime < as.POSIXct("2018-09-25 08:00:00", tz="America/Anchorage"),]
plot(CARI_storm12a_09_20$Discharge ~ as.POSIXct(CARI_storm12a_09_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1500), col="blue", main="CARI 180920 storm 12a",
     xlim = as.POSIXct(c("2018-09-15 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-15 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12b # 
plot(CARI_2018$Discharge ~ CARI_2018$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2018-09-15 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-15 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2018-09-25 09:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2018-09-30 20:00:00", tz="America/Anchorage"), col="purple")

CARI_storm12b_09_25 = CARI_2018[CARI_2018$DateTime > as.POSIXct("2018-09-25 09:00:00", tz="America/Anchorage") &
                                  CARI_2018$DateTime < as.POSIXct("2018-09-30 20:00:00", tz="America/Anchorage"),]
plot(CARI_storm12b_09_25$Discharge ~ as.POSIXct(CARI_storm12b_09_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1000), col="blue", main="CARI 180925 storm 12b",
     xlim = as.POSIXct(c("2018-09-15 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"))
lines(CARI_2018$NO3 * 20 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$fDOM * 7 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$SpCond * 5 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2018$Turb * 300 ~ CARI_2018$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2018-05-01 00:00:00","2018-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2018-09-15 00:00:00","2018-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# fDOM NO3 SPC Turb # 
CARI_storm1_06_10_Q = subset(CARI_storm1_06_10, select = c("DateTime","Discharge"))
names(CARI_storm1_06_10_Q) = c("valuedatetime","datavalue")
CARI_storm1_06_10_NO3 = subset(CARI_storm1_06_10, select = c("DateTime","NO3"))
names(CARI_storm1_06_10_NO3) = c("valuedatetime","datavalue")
CARI_storm1_06_10_fDOM = subset(CARI_storm1_06_10, select = c("DateTime","fDOM"))
names(CARI_storm1_06_10_fDOM) = c("valuedatetime","datavalue")
CARI_storm1_06_10_SPC = subset(CARI_storm1_06_10, select = c("DateTime","SpCond"))
names(CARI_storm1_06_10_SPC) = c("valuedatetime","datavalue")
CARI_storm1_06_10_turb = subset(CARI_storm1_06_10, select = c("DateTime","Turb"))
names(CARI_storm1_06_10_turb) = c("valuedatetime","datavalue")


CARI_storm2_06_21_Q = subset(CARI_storm2_06_21, select = c("DateTime","Discharge"))
names(CARI_storm2_06_21_Q) = c("valuedatetime","datavalue")
CARI_storm2_06_21_NO3 = subset(CARI_storm2_06_21, select = c("DateTime","NO3"))
names(CARI_storm2_06_21_NO3) = c("valuedatetime","datavalue")
CARI_storm2_06_21_fDOM = subset(CARI_storm2_06_21, select = c("DateTime","fDOM"))
names(CARI_storm2_06_21_fDOM) = c("valuedatetime","datavalue")
CARI_storm2_06_21_SPC = subset(CARI_storm2_06_21, select = c("DateTime","SpCond"))
names(CARI_storm2_06_21_SPC) = c("valuedatetime","datavalue")
CARI_storm2_06_21_turb = subset(CARI_storm2_06_21, select = c("DateTime","Turb"))
names(CARI_storm2_06_21_turb) = c("valuedatetime","datavalue")

CARI_storm3_06_29_Q = subset(CARI_storm3_06_29, select = c("DateTime","Discharge"))
names(CARI_storm3_06_29_Q) = c("valuedatetime","datavalue")
CARI_storm3_06_29_NO3 = subset(CARI_storm3_06_29, select = c("DateTime","NO3"))
names(CARI_storm3_06_29_NO3) = c("valuedatetime","datavalue")
CARI_storm3_06_29_fDOM = subset(CARI_storm3_06_29, select = c("DateTime","fDOM"))
names(CARI_storm3_06_29_fDOM) = c("valuedatetime","datavalue")
CARI_storm3_06_29_SPC = subset(CARI_storm3_06_29, select = c("DateTime","SpCond"))
names(CARI_storm3_06_29_SPC) = c("valuedatetime","datavalue")
CARI_storm3_06_29_turb = subset(CARI_storm3_06_29, select = c("DateTime","Turb"))
names(CARI_storm3_06_29_turb) = c("valuedatetime","datavalue")

CARI_storm4a_06_30_Q = subset(CARI_storm4a_06_30, select = c("DateTime","Discharge"))
names(CARI_storm4a_06_30_Q) = c("valuedatetime","datavalue")
CARI_storm4a_06_30_NO3 = subset(CARI_storm4a_06_30, select = c("DateTime","NO3"))
names(CARI_storm4a_06_30_NO3) = c("valuedatetime","datavalue")
CARI_storm4a_06_30_fDOM = subset(CARI_storm4a_06_30, select = c("DateTime","fDOM"))
names(CARI_storm4a_06_30_fDOM) = c("valuedatetime","datavalue")
CARI_storm4a_06_30_SPC = subset(CARI_storm4a_06_30, select = c("DateTime","SpCond"))
names(CARI_storm4a_06_30_SPC) = c("valuedatetime","datavalue")
CARI_storm4a_06_30_turb = subset(CARI_storm4a_06_30, select = c("DateTime","Turb"))
names(CARI_storm4a_06_30_turb) = c("valuedatetime","datavalue")

CARI_storm4b_07_01_Q = subset(CARI_storm4b_07_01, select = c("DateTime","Discharge"))
names(CARI_storm4b_07_01_Q) = c("valuedatetime","datavalue")
CARI_storm4b_07_01_NO3 = subset(CARI_storm4b_07_01, select = c("DateTime","NO3"))
names(CARI_storm4b_07_01_NO3) = c("valuedatetime","datavalue")
CARI_storm4b_07_01_fDOM = subset(CARI_storm4b_07_01, select = c("DateTime","fDOM"))
names(CARI_storm4b_07_01_fDOM) = c("valuedatetime","datavalue")
CARI_storm4b_07_01_SPC = subset(CARI_storm4b_07_01, select = c("DateTime","SpCond"))
names(CARI_storm4b_07_01_SPC) = c("valuedatetime","datavalue")
CARI_storm4b_07_01_turb = subset(CARI_storm4b_07_01, select = c("DateTime","Turb"))
names(CARI_storm4b_07_01_turb) = c("valuedatetime","datavalue")

CARI_storm5a_08_04_Q = subset(CARI_storm5a_08_04, select = c("DateTime","Discharge"))
names(CARI_storm5a_08_04_Q) = c("valuedatetime","datavalue")
CARI_storm5a_08_04_NO3 = subset(CARI_storm5a_08_04, select = c("DateTime","NO3"))
names(CARI_storm5a_08_04_NO3) = c("valuedatetime","datavalue")
CARI_storm5a_08_04_fDOM = subset(CARI_storm5a_08_04, select = c("DateTime","fDOM"))
names(CARI_storm5a_08_04_fDOM) = c("valuedatetime","datavalue")
CARI_storm5a_08_04_SPC = subset(CARI_storm5a_08_04, select = c("DateTime","SpCond"))
names(CARI_storm5a_08_04_SPC) = c("valuedatetime","datavalue")
CARI_storm5a_08_04_turb = subset(CARI_storm5a_08_04, select = c("DateTime","Turb"))
names(CARI_storm5a_08_04_turb) = c("valuedatetime","datavalue")

CARI_storm5b_08_05_Q = subset(CARI_storm5b_08_05, select = c("DateTime","Discharge"))
names(CARI_storm5b_08_05_Q) = c("valuedatetime","datavalue")
CARI_storm5b_08_05_NO3 = subset(CARI_storm5b_08_05, select = c("DateTime","NO3"))
names(CARI_storm5b_08_05_NO3) = c("valuedatetime","datavalue")
CARI_storm5b_08_05_fDOM = subset(CARI_storm5b_08_05, select = c("DateTime","fDOM"))
names(CARI_storm5b_08_05_fDOM) = c("valuedatetime","datavalue")
CARI_storm5b_08_05_SPC = subset(CARI_storm5b_08_05, select = c("DateTime","SpCond"))
names(CARI_storm5b_08_05_SPC) = c("valuedatetime","datavalue")
CARI_storm5b_08_05_turb = subset(CARI_storm5b_08_05, select = c("DateTime","Turb"))
names(CARI_storm5b_08_05_turb) = c("valuedatetime","datavalue")

CARI_storm5c_08_06_Q = subset(CARI_storm5c_08_06, select = c("DateTime","Discharge"))
names(CARI_storm5c_08_06_Q) = c("valuedatetime","datavalue")
CARI_storm5c_08_06_NO3 = subset(CARI_storm5c_08_06, select = c("DateTime","NO3"))
names(CARI_storm5c_08_06_NO3) = c("valuedatetime","datavalue")
CARI_storm5c_08_06_fDOM = subset(CARI_storm5c_08_06, select = c("DateTime","fDOM"))
names(CARI_storm5c_08_06_fDOM) = c("valuedatetime","datavalue")
CARI_storm5c_08_06_SPC = subset(CARI_storm5c_08_06, select = c("DateTime","SpCond"))
names(CARI_storm5c_08_06_SPC) = c("valuedatetime","datavalue")
CARI_storm5c_08_06_turb = subset(CARI_storm5c_08_06, select = c("DateTime","Turb"))
names(CARI_storm5c_08_06_turb) = c("valuedatetime","datavalue")

CARI_storm6_08_13_Q = subset(CARI_storm6_08_13, select = c("DateTime","Discharge"))
names(CARI_storm6_08_13_Q) = c("valuedatetime","datavalue")
CARI_storm6_08_13_NO3 = subset(CARI_storm6_08_13, select = c("DateTime","NO3"))
names(CARI_storm6_08_13_NO3) = c("valuedatetime","datavalue")
CARI_storm6_08_13_fDOM = subset(CARI_storm6_08_13, select = c("DateTime","fDOM"))
names(CARI_storm6_08_13_fDOM) = c("valuedatetime","datavalue")
CARI_storm6_08_13_SPC = subset(CARI_storm6_08_13, select = c("DateTime","SpCond"))
names(CARI_storm6_08_13_SPC) = c("valuedatetime","datavalue")
CARI_storm6_08_13_turb = subset(CARI_storm6_08_13, select = c("DateTime","Turb"))
names(CARI_storm6_08_13_turb) = c("valuedatetime","datavalue")

CARI_storm7_08_21_Q = subset(CARI_storm7_08_21, select = c("DateTime","Discharge"))
names(CARI_storm7_08_21_Q) = c("valuedatetime","datavalue")
CARI_storm7_08_21_NO3 = subset(CARI_storm7_08_21, select = c("DateTime","NO3"))
names(CARI_storm7_08_21_NO3) = c("valuedatetime","datavalue")
CARI_storm7_08_21_fDOM = subset(CARI_storm7_08_21, select = c("DateTime","fDOM"))
names(CARI_storm7_08_21_fDOM) = c("valuedatetime","datavalue")
CARI_storm7_08_21_SPC = subset(CARI_storm7_08_21, select = c("DateTime","SpCond"))
names(CARI_storm7_08_21_SPC) = c("valuedatetime","datavalue")
CARI_storm7_08_21_turb = subset(CARI_storm7_08_21, select = c("DateTime","Turb"))
names(CARI_storm7_08_21_turb) = c("valuedatetime","datavalue")

CARI_storm8_08_24_Q = subset(CARI_storm8_08_24, select = c("DateTime","Discharge"))
names(CARI_storm8_08_24_Q) = c("valuedatetime","datavalue")
CARI_storm8_08_24_NO3 = subset(CARI_storm8_08_24, select = c("DateTime","NO3"))
names(CARI_storm8_08_24_NO3) = c("valuedatetime","datavalue")
CARI_storm8_08_24_fDOM = subset(CARI_storm8_08_24, select = c("DateTime","fDOM"))
names(CARI_storm8_08_24_fDOM) = c("valuedatetime","datavalue")
CARI_storm8_08_24_SPC = subset(CARI_storm8_08_24, select = c("DateTime","SpCond"))
names(CARI_storm8_08_24_SPC) = c("valuedatetime","datavalue")
CARI_storm8_08_24_turb = subset(CARI_storm8_08_24, select = c("DateTime","Turb"))
names(CARI_storm8_08_24_turb) = c("valuedatetime","datavalue")

CARI_storm9_08_26_Q = subset(CARI_storm9_08_26, select = c("DateTime","Discharge"))
names(CARI_storm9_08_26_Q) = c("valuedatetime","datavalue")
CARI_storm9_08_26_NO3 = subset(CARI_storm9_08_26, select = c("DateTime","NO3"))
names(CARI_storm9_08_26_NO3) = c("valuedatetime","datavalue")
CARI_storm9_08_26_fDOM = subset(CARI_storm9_08_26, select = c("DateTime","fDOM"))
names(CARI_storm9_08_26_fDOM) = c("valuedatetime","datavalue")
CARI_storm9_08_26_SPC = subset(CARI_storm9_08_26, select = c("DateTime","SpCond"))
names(CARI_storm9_08_26_SPC) = c("valuedatetime","datavalue")
CARI_storm9_08_26_turb = subset(CARI_storm9_08_26, select = c("DateTime","Turb"))
names(CARI_storm9_08_26_turb) = c("valuedatetime","datavalue")

CARI_storm10_08_30_Q = subset(CARI_storm10_08_30, select = c("DateTime","Discharge"))
names(CARI_storm10_08_30_Q) = c("valuedatetime","datavalue")
CARI_storm10_08_30_NO3 = subset(CARI_storm10_08_30, select = c("DateTime","NO3"))
names(CARI_storm10_08_30_NO3) = c("valuedatetime","datavalue")
CARI_storm10_08_30_fDOM = subset(CARI_storm10_08_30, select = c("DateTime","fDOM"))
names(CARI_storm10_08_30_fDOM) = c("valuedatetime","datavalue")
CARI_storm10_08_30_SPC = subset(CARI_storm10_08_30, select = c("DateTime","SpCond"))
names(CARI_storm10_08_30_SPC) = c("valuedatetime","datavalue")
CARI_storm10_08_30_turb = subset(CARI_storm10_08_30, select = c("DateTime","Turb"))
names(CARI_storm10_08_30_turb) = c("valuedatetime","datavalue")

CARI_storm11_09_02_Q = subset(CARI_storm11_09_02, select = c("DateTime","Discharge"))
names(CARI_storm11_09_02_Q) = c("valuedatetime","datavalue")
CARI_storm11_09_02_NO3 = subset(CARI_storm11_09_02, select = c("DateTime","NO3"))
names(CARI_storm11_09_02_NO3) = c("valuedatetime","datavalue")
CARI_storm11_09_02_fDOM = subset(CARI_storm11_09_02, select = c("DateTime","fDOM"))
names(CARI_storm11_09_02_fDOM) = c("valuedatetime","datavalue")
CARI_storm11_09_02_SPC = subset(CARI_storm11_09_02, select = c("DateTime","SpCond"))
names(CARI_storm11_09_02_SPC) = c("valuedatetime","datavalue")
CARI_storm11_09_02_turb = subset(CARI_storm11_09_02, select = c("DateTime","Turb"))
names(CARI_storm11_09_02_turb) = c("valuedatetime","datavalue")

CARI_storm12a_09_20_Q = subset(CARI_storm12a_09_20, select = c("DateTime","Discharge"))
names(CARI_storm12a_09_20_Q) = c("valuedatetime","datavalue")
CARI_storm12a_09_20_NO3 = subset(CARI_storm12a_09_20, select = c("DateTime","NO3"))
names(CARI_storm12a_09_20_NO3) = c("valuedatetime","datavalue")
CARI_storm12a_09_20_fDOM = subset(CARI_storm12a_09_20, select = c("DateTime","fDOM"))
names(CARI_storm12a_09_20_fDOM) = c("valuedatetime","datavalue")
CARI_storm12a_09_20_SPC = subset(CARI_storm12a_09_20, select = c("DateTime","SpCond"))
names(CARI_storm12a_09_20_SPC) = c("valuedatetime","datavalue")
CARI_storm12a_09_20_turb = subset(CARI_storm12a_09_20, select = c("DateTime","Turb"))
names(CARI_storm12a_09_20_turb) = c("valuedatetime","datavalue")

CARI_storm12b_09_25_Q = subset(CARI_storm12b_09_25, select = c("DateTime","Discharge"))
names(CARI_storm12b_09_25_Q) = c("valuedatetime","datavalue")
CARI_storm12b_09_25_NO3 = subset(CARI_storm12b_09_25, select = c("DateTime","NO3"))
names(CARI_storm12b_09_25_NO3) = c("valuedatetime","datavalue")
CARI_storm12b_09_25_fDOM = subset(CARI_storm12b_09_25, select = c("DateTime","fDOM"))
names(CARI_storm12b_09_25_fDOM) = c("valuedatetime","datavalue")
CARI_storm12b_09_25_SPC = subset(CARI_storm12b_09_25, select = c("DateTime","SpCond"))
names(CARI_storm12b_09_25_SPC) = c("valuedatetime","datavalue")
CARI_storm12b_09_25_turb = subset(CARI_storm12b_09_25, select = c("DateTime","Turb"))
names(CARI_storm12b_09_25_turb) = c("valuedatetime","datavalue")

#Write csv #
write.csv(CARI_storm1_06_10, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm1_06_10.csv")
write.csv(CARI_storm1_06_10_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm1_06_10_Q.csv")
write.csv(CARI_storm1_06_10_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm1_06_10_NO3.csv")
write.csv(CARI_storm1_06_10_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm1_06_10_fDOM.csv")
write.csv(CARI_storm1_06_10_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm1_06_10_SPC.csv")
write.csv(CARI_storm1_06_10_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm1_06_10_Turb.csv")

write.csv(CARI_storm2_06_21, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm2_06_21.csv")
write.csv(CARI_storm2_06_21_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm2_06_21_Q.csv")
write.csv(CARI_storm2_06_21_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm2_06_21_NO3.csv")
write.csv(CARI_storm2_06_21_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm2_06_21_fDOM.csv")
write.csv(CARI_storm2_06_21_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm2_06_21_SPC.csv")
write.csv(CARI_storm2_06_21_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm2_06_21_Turb.csv")

write.csv(CARI_storm3_06_29, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm3_06_29.csv")
write.csv(CARI_storm3_06_29_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm3_06_29_Q.csv")
write.csv(CARI_storm3_06_29_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm3_06_29_NO3.csv")
write.csv(CARI_storm3_06_29_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm3_06_29_fDOM.csv")
write.csv(CARI_storm3_06_29_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm3_06_29_SPC.csv")
write.csv(CARI_storm3_06_29_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm3_06_29_Turb.csv")

write.csv(CARI_storm4a_06_30, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4a_06_30.csv")
write.csv(CARI_storm4a_06_30_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4a_06_30_Q.csv")
write.csv(CARI_storm4a_06_30_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4a_06_30_NO3.csv")
write.csv(CARI_storm4a_06_30_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4a_06_30_fDOM.csv")
write.csv(CARI_storm4a_06_30_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4a_06_30_SPC.csv")
write.csv(CARI_storm4a_06_30_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4a_06_30_Turb.csv")

write.csv(CARI_storm4b_07_01, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4b_07_01.csv")
write.csv(CARI_storm4b_07_01_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4b_07_01_Q.csv")
write.csv(CARI_storm4b_07_01_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4b_07_01_NO3.csv")
write.csv(CARI_storm4b_07_01_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4b_07_01_fDOM.csv")
write.csv(CARI_storm4b_07_01_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4b_07_01_SPC.csv")
write.csv(CARI_storm4b_07_01_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm4b_07_01_Turb.csv")

write.csv(CARI_storm5a_08_04, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5a_08_04.csv")
write.csv(CARI_storm5a_08_04_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5a_08_04_Q.csv")
write.csv(CARI_storm5a_08_04_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5a_08_04_NO3.csv")
write.csv(CARI_storm5a_08_04_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5a_08_04_fDOM.csv")
write.csv(CARI_storm5a_08_04_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5a_08_04_SPC.csv")
write.csv(CARI_storm5a_08_04_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5a_08_04_Turb.csv")

write.csv(CARI_storm5b_08_05, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5b_08_05.csv")
write.csv(CARI_storm5b_08_05_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5b_08_05_Q.csv")
write.csv(CARI_storm5b_08_05_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5b_08_05_NO3.csv")
write.csv(CARI_storm5b_08_05_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5b_08_05_fDOM.csv")
write.csv(CARI_storm5b_08_05_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5b_08_05_SPC.csv")
write.csv(CARI_storm5b_08_05_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5b_08_05_Turb.csv")

write.csv(CARI_storm5c_08_06, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5c_08_06.csv")
write.csv(CARI_storm5c_08_06_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5c_08_06_Q.csv")
write.csv(CARI_storm5c_08_06_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5c_08_06_NO3.csv")
write.csv(CARI_storm5c_08_06_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5c_08_06_fDOM.csv")
write.csv(CARI_storm5c_08_06_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5c_08_06_SPC.csv")
write.csv(CARI_storm5c_08_06_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm5c_08_06_Turb.csv")

write.csv(CARI_storm6_08_13, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm6_08_13.csv")
write.csv(CARI_storm6_08_13_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm6_08_13_Q.csv")
write.csv(CARI_storm6_08_13_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm6_08_13_NO3.csv")
write.csv(CARI_storm6_08_13_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm6_08_13_fDOM.csv")
write.csv(CARI_storm6_08_13_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm6_08_13_SPC.csv")
write.csv(CARI_storm6_08_13_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm6_08_13_Turb.csv")

write.csv(CARI_storm7_08_21, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm7_08_21.csv")
write.csv(CARI_storm7_08_21_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm7_08_21_Q.csv")
write.csv(CARI_storm7_08_21_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm7_08_21_NO3.csv")
write.csv(CARI_storm7_08_21_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm7_08_21_fDOM.csv")
write.csv(CARI_storm7_08_21_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm7_08_21_SPC.csv")
write.csv(CARI_storm7_08_21_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm7_08_21_Turb.csv")

write.csv(CARI_storm8_08_24, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm8_08_24.csv")
write.csv(CARI_storm8_08_24_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm8_08_24_Q.csv")
write.csv(CARI_storm8_08_24_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm8_08_24_NO3.csv")
write.csv(CARI_storm8_08_24_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm8_08_24_fDOM.csv")
write.csv(CARI_storm8_08_24_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm8_08_24_SPC.csv")
write.csv(CARI_storm8_08_24_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm8_08_24_Turb.csv")

write.csv(CARI_storm9_08_26, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm9_08_26.csv")
write.csv(CARI_storm9_08_26_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm9_08_26_Q.csv")
write.csv(CARI_storm9_08_26_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm9_08_26_NO3.csv")
write.csv(CARI_storm9_08_26_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm9_08_26_fDOM.csv")
write.csv(CARI_storm9_08_26_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm9_08_26_SPC.csv")
write.csv(CARI_storm9_08_26_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm9_08_26_Turb.csv")

write.csv(CARI_storm10_08_30, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm10_08_30.csv")
write.csv(CARI_storm10_08_30_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm10_08_30_Q.csv")
write.csv(CARI_storm10_08_30_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm10_08_30_NO3.csv")
write.csv(CARI_storm10_08_30_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm10_08_30_fDOM.csv")
write.csv(CARI_storm10_08_30_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm10_08_30_SPC.csv")
write.csv(CARI_storm10_08_30_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm10_08_30_Turb.csv")

write.csv(CARI_storm11_09_02, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm11_09_02.csv")
write.csv(CARI_storm11_09_02_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm11_09_02_Q.csv")
write.csv(CARI_storm11_09_02_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm11_09_02_NO3.csv")
write.csv(CARI_storm11_09_02_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm11_09_02_fDOM.csv")
write.csv(CARI_storm11_09_02_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm11_09_02_SPC.csv")
write.csv(CARI_storm11_09_02_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm11_09_02_Turb.csv")

write.csv(CARI_storm12a_09_20, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12a_09_20.csv")
write.csv(CARI_storm12a_09_20_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12a_09_20_Q.csv")
write.csv(CARI_storm12a_09_20_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12a_09_20_NO3.csv")
write.csv(CARI_storm12a_09_20_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12a_09_20_fDOM.csv")
write.csv(CARI_storm12a_09_20_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12a_09_20_SPC.csv")
write.csv(CARI_storm12a_09_20_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12a_09_20_Turb.csv")

write.csv(CARI_storm12b_09_25, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12b_09_25.csv")
write.csv(CARI_storm12b_09_25_Q, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12b_09_25_Q.csv")
write.csv(CARI_storm12b_09_25_NO3, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12b_09_25_NO3.csv")
write.csv(CARI_storm12b_09_25_fDOM, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12b_09_25_fDOM.csv")
write.csv(CARI_storm12b_09_25_SPC, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12b_09_25_SPC.csv")
write.csv(CARI_storm12b_09_25_turb, "~/Documents/Storms/Storm_Events/2018/CARI/CARI_storm12b_09_25_Turb.csv")

# add burst data to storm data #

# load storm data #

storm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI/", 
                              recursive=F, 
                              pattern=".csv", 
                              full.names=TRUE)

storm_list<-do.call("list", lapply(storm_file_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   header=T, row.names=1))

storm_file_list = sub("~/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//", storm_file_list, replacement = "")
storm_file_list = sub(".csv", storm_file_list, replacement = "")
names(storm_list) = storm_file_list

for(i in 1:length(storm_list)){
  storm_list[[i]][["valuedatetime"]] = as.POSIXct(storm_list[[i]][["valuedatetime"]],
                                                  "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} # changing character format into datetime 

#  organize storm data by site and solute #
CARI_storm_list = storm_list[c(1:80)] # 80
FRCH_storm_list = storm_list[c(81:155)] # 75
MOOS_storm_list = storm_list[c(156:235)] # 80

CARI_NO3_storm_list = CARI_storm_list[c(grep("NO3", names(CARI_storm_list)))]
CARI_fDOM_storm_list = CARI_storm_list[c(grep("fDOM", names(CARI_storm_list)))]
CARI_SpCond_storm_list = CARI_storm_list[c(grep("SPC", names(CARI_storm_list)))]
CARI_turb_storm_list = CARI_storm_list[c(grep("Turb", names(CARI_storm_list)))]

FRCH_NO3_storm_list = FRCH_storm_list[c(grep("NO3", names(FRCH_storm_list)))]
FRCH_fDOM_storm_list = FRCH_storm_list[c(grep("fDOM", names(FRCH_storm_list)))]
FRCH_SpCond_storm_list = FRCH_storm_list[c(grep("SPC", names(FRCH_storm_list)))]
FRCH_turb_storm_list = FRCH_storm_list[c(grep("Turb", names(FRCH_storm_list)))]

MOOS_NO3_storm_list = MOOS_storm_list[c(grep("NO3", names(MOOS_storm_list)))]
MOOS_fDOM_storm_list = MOOS_storm_list[c(grep("fDOM", names(MOOS_storm_list)))]
MOOS_SpCond_storm_list = MOOS_storm_list[c(grep("SPC", names(MOOS_storm_list)))]
MOOS_turb_storm_list = MOOS_storm_list[c(grep("Turb", names(MOOS_storm_list)))]

# load burst SUNA data #

FRCHfile_list <- list.files(path="~/Documents/DoD_2018/SUNA_data/from_internal_harddrive/raw/FRCH/", 
                          recursive=F, 
                          pattern=".CSV", 
                          full.names=TRUE)

MOOSfile_list <- list.files(path="~/Documents/DoD_2018/SUNA_data/from_internal_harddrive/raw/MOOS/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

# Merge all data files for sensor #
#correct header=14

SUNA.FRCH<-do.call("rbind", lapply(FRCHfile_list, 
                                 read.csv, 
                                 stringsAsFactors=FALSE, 
                                 skip=14, header=FALSE))

SUNA.MOOS<-do.call("rbind", lapply(MOOSfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

# Variable names for SUNA output file #
pre<-"ch"
suff<-seq(12:267)
ch<-paste(pre, suff)
SUNAnames<-c("ID", "date_yearday", "time_fhoursUTC", "nitrateuM", "nitratemgL", "abs254", 
             "abs350", "brtrace", "specave", "darkvaluefit", "inttimefac", ch, "int_TC", 
             "spec_TC", "lamp_TC", "lamptimecum", "relhum", "mainV", "lampV", "intV", 
             "mainmA", "fit1", "fit2", "fitbase1", "fitbase2", "fitRMSE", "CTDtime", 
             "CTDsal", "CTDT", "CTDdBar", "checksum")
names(SUNA.FRCH)<-SUNAnames
names(SUNA.MOOS)<-SUNAnames


# Remove unneeded columns #

#remove raw channel data
SUNA.FRCHr<-SUNA.FRCH[,c(1:11,268:286)]
SUNA.MOOSr<-SUNA.MOOS[,c(1:11,268:286)]

#remove dark frames. 
### <<Note: Change date below>> ###
sum(SUNA.FRCHr$ID == 'DF')
SUNA.FRCHr %>% group_by(ID) %>% tally()
SUNA.FRCHrlf<-SUNA.FRCHr[!grepl("DF", SUNA.FRCHr$ID),]


SUNA.MOOSr %>% group_by(ID) %>% tally()
SUNA.MOOSrlf<-SUNA.MOOSr[!grepl("DF", SUNA.MOOSr$ID),]


### Date and time reformatting ###
## FRCH ##
# create separate year and day columns
year_day <- t(sapply(SUNA.FRCHrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$day<-as.numeric(year_day$day)
year_day$year<-as.numeric(year_day$year)
SUNA.FRCHrlf<-cbind(SUNA.FRCHrlf, year_day)
# combine hours and julian day into fractional days
SUNA.FRCHrlf$day_timeUTC<-SUNA.FRCHrlf$day+(SUNA.FRCHrlf$time_fhoursUTC/24)
# assign year to 2018 data
origin18 <- as.POSIXct("2017-12-31 00:00:00", tz="GMT")
SUNA.FRCHrlf$date_timeUTC<-origin18 + SUNA.FRCHrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.FRCHrlf$date_timeAK<-as.POSIXct(format(SUNA.FRCHrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.FRCHrlf$date_timeAK)
class(SUNA.FRCHrlf$date_timeAK)
tz(SUNA.FRCHrlf$date_timeAK) = "America/Anchorage"

## MOOS ##
# create separate year and day columns
year_day <- t(sapply(SUNA.MOOSrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$day<-as.numeric(year_day$day)
year_day$year<-as.numeric(year_day$year)
SUNA.MOOSrlf<-cbind(SUNA.MOOSrlf, year_day)
# combine hours and julian day into fractional days
SUNA.MOOSrlf$day_timeUTC<-SUNA.MOOSrlf$day+(SUNA.MOOSrlf$time_fhoursUTC/24)
# assign year to 2018 data
origin18 <- as.POSIXct("2017-12-31 00:00:00", tz="GMT")
SUNA.MOOSrlf$date_timeUTC<-origin18 + SUNA.MOOSrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.MOOSrlf$date_timeAK<-as.POSIXct(format(SUNA.MOOSrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.MOOSrlf$date_timeAK)
class(SUNA.MOOSrlf$date_timeAK)
tz(SUNA.MOOSrlf$date_timeAK) = "America/Anchorage"

### reduce columns ###
SUNA.FRCH.burst = subset(SUNA.FRCHrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.MOOS.burst = subset(SUNA.MOOSrlf, select = c("date_timeAK", "nitrateuM"))

### round to nearest 15 min ###

SUNA.FRCH.burst$date_timeAK = lubridate::round_date(SUNA.FRCH.burst$date_timeAK, "15 minutes") 
SUNA.MOOS.burst$date_timeAK = lubridate::round_date(SUNA.MOOS.burst$date_timeAK, "15 minutes") 

# load burst EXO data #

### load and stitch EXO data ###

# FRCH #
FRCHfile_list <- list.files(path="~/Documents/DoD_2018/EXO_data/from_internal_harddrive/raw/FRCH/", 
                          recursive=F, 
                          pattern=".csv", 
                          full.names=TRUE)

EXO.FRCH<-do.call("rbind", lapply(FRCHfile_list, 
                                read.csv, 
                                stringsAsFactors=FALSE, 
                                skip = 20,
                                header=T, blank.lines.skip = TRUE, fill = TRUE))

names(EXO.FRCH) <- c("Date..MM.DD.YYYY.", "Time..HH.mm.ss.","Time..Fract..Sec.", "Site.Name",  "Fault.Code",
                     "Battery.V", "Cable.Pwr.V", "fDOM.RFU","fDOM.QSU", "Temp..C", "Cond.µS.cm", "SpCond.µS.cm",
                     "Sal.psu","nLF.Cond.µS.cm", "TDS.mg.L", "Turbidity.FNU", "TSS.mg.L")
EXO.FRCH <- EXO.FRCH[-1,]
                     


# MOOS #
MOOSfile_list <- list.files(path="~/Documents/DoD_2018/EXO_data/from_internal_harddrive/raw/MOOS/", 
                          recursive=F, 
                          pattern=".csv", 
                          full.names=TRUE)

EXO.MOOS<-do.call("rbind", lapply(MOOSfile_list, 
                                read.csv, 
                                stringsAsFactors=FALSE, 
                                skip = 20,
                                header=T))

names(EXO.MOOS) <- c("Date..MM.DD.YYYY.", "Time..HH.mm.ss.","Time..Fract..Sec.", "Site.Name",  "Fault.Code",
                     "Battery.V", "Cable.Pwr.V", "fDOM.RFU","fDOM.QSU", "Temp..C", "Cond.µS.cm", "SpCond.µS.cm",
                     "Sal.psu","nLF.Cond.µS.cm", "TDS.mg.L", "Turbidity.FNU", "TSS.mg.L")
EXO.MOOS <- EXO.MOOS[-1,]

### format dates ###

## FRCH ##
# put date and time in same column
EXO.FRCH$date_time = paste(EXO.FRCH$Date..MM.DD.YYYY., EXO.FRCH$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.FRCH$date_timeET<-as.POSIXct(EXO.FRCH$date_time, "%m/%d/%y %H:%M:%S", tz="America/New_York")
# convert to Alaska Time
EXO.FRCH$date_timeAK <- mdy_hms(EXO.FRCH$date_time)
attributes(EXO.FRCH$date_timeAK)$tzone <- "America/Anchorage"
head(EXO.FRCH)
class(EXO.FRCH$date_timeAK)
tz(EXO.FRCH$date_timeAK)

## MOOS ##
# put date and time in same column
EXO.MOOS$date_time = paste(EXO.MOOS$Date..MM.DD.YYYY., EXO.MOOS$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.MOOS$date_timeET<-as.POSIXct(EXO.MOOS$date_time, "%m/%d/%y %H:%M:%S", tz="America/New_York")

# convert to Alaska Time
EXO.MOOS$date_timeAK <- mdy_hms(EXO.MOOS$date_time)
attributes(EXO.MOOS$date_timeAK)$tzone <- "America/Anchorage"
head(EXO.MOOS)
class(EXO.MOOS$date_timeAK)
tz(EXO.MOOS$date_timeAK)

### Variable names ###
names(EXO.FRCH)
names(EXO.FRCH)<-(c("Date", "Time", "Time_s", "Site", "FaultCode", 
                  "BatteryV", "CablePwrV", "fDOMRFU", "fDOMQSU","TempC","ConduScm", 
                  "SpConduScm","Salpsu","nLFConduScm","TDSmgL", "TurbidityFNU",
                  "TSSmgL", "date_time", "date_timeET", "date_timeAK"))


names(EXO.MOOS)
names(EXO.MOOS)<-(c("Date", "Time", "Time_s", "Site", "FaultCode", 
                  "BatteryV", "CablePwrV", "fDOMRFU", "fDOMQSU","TempC","ConduScm", 
                  "SpConduScm","Salpsu","nLFConduScm","TDSmgL", "TurbidityFNU",
                  "TSSmgL", "date_time", "date_timeET", "date_timeAK"))

### reduce columns ###
EXO.FRCH.burst = subset(EXO.FRCH, select=c("date_timeAK", "fDOMQSU", "SpConduScm", "TurbidityFNU"))
EXO.MOOS.burst = subset(EXO.MOOS, select=c("date_timeAK", "fDOMQSU", "SpConduScm", "TurbidityFNU"))

### round to nearest 15 min ###
EXO.FRCH.burst$date_timeAK = lubridate::round_date(EXO.FRCH.burst$date_timeAK, "15 minutes") 
EXO.MOOS.burst$date_timeAK = lubridate::round_date(EXO.MOOS.burst$date_timeAK, "15 minutes") 

### fDOM outlier removal and baseline corrections ########
# plot #
library(ggplot2)
ggplot(EXO.FRCH.burst) +
  geom_point(aes(x = EXO.FRCH.burst$date_timeAK, y = EXO.FRCH.burst$fDOMQSU))

plot(EXO.FRCH.burst$fDOMQSU~ EXO.FRCH.burst$date_timeAK)
plot(EXO.MOOS.burst$fDOMQSU~ EXO.MOOS.burst$date_timeAK)

# FRCH #
EXO.FRCH.burst$fDOMQSU <- as.numeric(EXO.FRCH.burst$fDOMQSU)
EXO.FRCH.burst$SpConduScm <- as.numeric(EXO.FRCH.burst$SpConduScm)
EXO.FRCH.burst$TurbidityFNU <- as.numeric(EXO.FRCH.burst$TurbidityFNU)

EXO.FRCH.burst <- EXO.FRCH.burst[-21222, ]
EXO.FRCH.burst.1 <- filter(EXO.FRCH.burst, EXO.FRCH.burst$fDOMQSU > 25)
EXO.FRCH.burst <- filter(EXO.FRCH.burst, EXO.FRCH.burst$fDOMQSU > 25)
EXO.FRCH.burst$fDOMQSU[EXO.FRCH.burst$fDOMQSU<25] <- NA
EXO.C2.burst$fDOMQSU[EXO.C2.burst$fDOMQSU < 20 &
                       EXO.C2.burst$date_timeAK > as.POSIXct("2017-06-14") &
                       EXO.C2.burst$date_timeAK < as.POSIXct("2017-06-16")] <- NA 
plot(EXO.FRCH.burst.1$fDOMQSU ~ EXO.FRCH.burst.1$date_timeAK)


# match NAs in DOD.2018 to bursts #####

DOD_2018 <- read_csv("~/Documents/DoD_Discharge/Discharge_Chem/2018/DOD.2018.csv")

DOD_2018$date_timeAK = as.POSIXct(DOD_2018$DateTime, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

DOD_2018$site.ID <- DOD_2018$Site
FRCH = subset(DOD_2018, site.ID == "FRCH")


## NO3 ##
temp = inner_join(SUNA.FRCH.burst, subset(FRCH, select=c("date_timeAK", "nitrateuM")), by= "date_timeAK")
temp$nitrateuM = ifelse(is.na(temp$nitrate_uM), NA, temp$nitrateuM)
SUNA.FRCH.burst$nitrateuM = temp$nitrateuM

## fDOM.QSU ##
temp= inner_join(subset(EXO.FRCH.burst, select=c("date_timeAK", "fDOM.QSU")), 
                 subset(FRCH, select=c("date_timeAK", "fDOM.QSU")), 
                 by= "date_timeAK")
temp$fDOM.QSU.x = ifelse(is.na(temp$fDOM.QSU.x), NA, temp$fDOM.QSU.x)
EXO.FRCH.burst$fDOMQSU = temp$fDOMQSU

## SpConduScm ##
temp= inner_join(subset(EXO.FRCH.burst, select=c("date_timeAK", "SpCond.µS.cm")), 
                 subset(FRCH, select=c("date_timeAK", "SpCond.uScm")), 
                 by= "date_timeAK")
temp$SpCond.uScm = ifelse(is.na(temp$SpCond.uScm), NA, temp$SpCond.uScm)
EXO.FRCH.burst$SpCond.µS.cm = temp$SpCond.uScm

## TurbidityFNU ##
temp= inner_join(subset(EXO.FRCH.burst, select=c("date_timeAK", "TurbidityFNU")), 
                 subset(FRCH, select=c("date_timeAK", "Turbidity_FNU")), 
                 by= "date_timeAK")
temp$TurbidityFNU = ifelse(is.na(temp$Turbidity_FNU), NA, temp$TurbidityFNU)
EXO.C2.burst$TurbidityFNU = temp$TurbidityFNU


#### save clean-ish burst data ####

EXO.FRCH.burst$site.ID <- "FRCH"
EXO.MOOS.burst$site.ID <- "MOOS"
SUNA.FRCH.burst$site.ID <- "FRCH"
SUNA.MOOS.burst$site.ID <- "MOOS"

write.csv(SUNA.FRCH.burst, "~/Documents/DoD_2018/Stitched_data/SUNA.FRCH.burst.csv")
write.csv(SUNA.MOOS.burst, "~/Documents/DoD_2018/Stitched_data/SUNA.MOOS.burst.csv")


write.csv(EXO.FRCH.burst, "~/Documents/DoD_2018/Stitched_data/EXO.FRCH.burst.csv")
write.csv(EXO.MOOS.burst, "~/Documents/DoD_2018/Stitched_data/EXO.MOOS.burst.csv")

#### join burst and storm data ####

### NO3 ###

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]] = inner_join(FRCH_NO3_storm_list[[i]], SUNA.FRCH.burst, by=c("valuedatetime" = "date_timeAK"))
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]] = inner_join(MOOS_NO3_storm_list[[i]], SUNA.MOOS.burst, by=c("valuedatetime" = "date_timeAK"))
}

### fDOM ###

for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]] = inner_join(FRCH_fDOM_storm_list[[i]], 
                                       subset(EXO.FRCH.burst, select=c("date_timeAK", "fDOMQSU")), 
                                       by=c("valuedatetime" = "date_timeAK"))
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]] = inner_join(MOOS_fDOM_storm_list[[i]], 
                                         subset(EXO.MOOS.burst, select=c("date_timeAK", "fDOMQSU")), 
                                         by=c("valuedatetime" = "date_timeAK"))
}

### SpCond ###

for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]] = inner_join(FRCH_SpCond_storm_list[[i]], 
                                         subset(EXO.FRCH.burst, select=c("date_timeAK", "SpConduScm")), 
                                         by=c("valuedatetime" = "date_timeAK"))
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]] = inner_join(MOOS_SpCond_storm_list[[i]], 
                                           subset(EXO.MOOS.burst, select=c("date_timeAK", "SpConduScm")), 
                                           by=c("valuedatetime" = "date_timeAK"))
}

### turb ###

for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]] = inner_join(FRCH_turb_storm_list[[i]], 
                                       subset(EXO.FRCH.burst, select=c("date_timeAK", "TurbidityFNU")), 
                                       by=c("valuedatetime" = "date_timeAK"))
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]] = inner_join(MOOS_turb_storm_list[[i]], 
                                         subset(EXO.MOOS.burst, select=c("date_timeAK", "TurbidityFNU")), 
                                         by=c("valuedatetime" = "date_timeAK"))
}




# save storm with burst data #

saveRDS(FRCH_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2018/FRCH_NO3_storm_list.RData")
saveRDS(FRCH_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2018/FRCH_fDOM_storm_list.RData")
saveRDS(FRCH_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2018/FRCH_SpCond_storm_list.RData")
saveRDS(FRCH_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2018/FRCH_turb_storm_list.RData")

saveRDS(MOOS_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2018/MOOS_NO3_storm_list.RData")
saveRDS(MOOS_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2018/MOOS_fDOM_storm_list.RData")
saveRDS(MOOS_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2018/MOOS_SpCond_storm_list.RData")
saveRDS(MOOS_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2018/MOOS_turb_storm_list.RData")



############################################## 2019 ######################################################

# Load from local machine #
Q.daily.2019 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2019/Q.daily.2019.csv")

#Download cleaned 2019 EXO data from github # 
EXO.2019<-read.csv(url("https://raw.githubusercontent.com/UAF-Alex/DoD_2019/master/EXO_processed/EXO.aord.csv?token=GHSAT0AAAAAABQJFHFAT4TN2WJN2MG652UKYOZ2NSQ"))
EXO.2019 <- read_csv("~/Desktop/EXO.2019.csv")
#EXO.2019 <- read.csv("~/Documents/DoD_2019/EXO_processed/EXO.aord.csv")
Q_2019 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2019/Q_2019.csv")
EXO.2019$DateTime <- as.POSIXct(EXO.2019$datetimeAK)
EXO.2019$Site <- EXO.2019$site.ID
EXO.2019$datetimeAK <- as.POSIXct(EXO.2019$datetimeAK)
attributes(EXO.2019$DateTime)$tzone <- "America/Anchorage"
attributes(Q_2019$DateTime)$tzone <- "America/Anchorage"

EXO.Q.2019 <- full_join(EXO.2019, Q_2019)
# SUNA #
FRCH_SUNA.2019 <- read_csv("~/Documents/DoD_2019/SUNA_processed/FRCH_SUNA_burst_detailed_clean.csv")
MOOS_SUNA.2019 <- read_csv("~/Documents/DoD_2019/SUNA_processed/MOOS_SUNA_burst_detailed_clean.csv")
POKE_SUNA.2019 <- read_csv("~/Documents/DoD_2019/SUNA_processed/POKE_SUNA_burst_detailed_clean.csv")
STRT_SUNA.2019 <- read_csv("~/Documents/DoD_2019/SUNA_processed/STRT_SUNA_burst_detailed_clean.csv")
#VAUL_SUNA <- read_csv("SUNA_processed/VAUL_SUNA_burst_detailed_clean.csv")
VAUL_SUNA.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSTkYfg9UenSi49vHJCj4wwcrjcEu1GUWpvL_ED31ps7nfFAL-4SthrvwAXkV5Y748N3vK4LnT6FAch/pub?output=csv"
VAUL_SUNA.2019 <- read.csv(url(VAUL_SUNA.url))
FRCH_SUNA.2019$Site <- FRCH_SUNA.2019$site.ID
MOOS_SUNA.2019$Site <- MOOS_SUNA.2019$site.ID
POKE_SUNA.2019$Site <- POKE_SUNA.2019$site.ID
STRT_SUNA.2019$Site <- STRT_SUNA.2019$site.ID
VAUL_SUNA.2019$Site <- VAUL_SUNA.2019$site.ID

FRCH_SUNA.2019$DateTime <- FRCH_SUNA.2019$datetimeAK
MOOS_SUNA.2019$DateTime <- MOOS_SUNA.2019$datetimeAK
POKE_SUNA.2019$DateTime <- POKE_SUNA.2019$datetimeAK
STRT_SUNA.2019$DateTime <- STRT_SUNA.2019$datetimeAK
VAUL_SUNA.2019$DateTime <- VAUL_SUNA.2019$datetimeAK

SUNA.ALL.2019 <- rbind(FRCH_SUNA.2019, MOOS_SUNA.2019,
                       POKE_SUNA.2019, STRT_SUNA.2019)
                      
attributes(SUNA.ALL.2019$DateTime)$tzone <- "America/Anchorage"

DOD.2019 <- full_join(EXO.Q.2019, SUNA.ALL.2019)
DOD.2019.final <- DOD.2019[,-c(1:3,18,19,20,21,22,29,32,33,34,35,36:55)] # removing unnecessary columns
DOD.2019.final <- as_tibble(DOD.2019.final)
colnames(DOD.2019.final)
DOD.2019.final2 <- DOD.2019.final[, c(16,15,17,1,2,9,10,11,12,21,22,3,4,5,6,7,8,13,14,18,19,20,23,24)] # reorganizing columns 
DOD.2019.final2 <- as.data.frame(DOD.2019.final2)
write.csv(DOD.2019.final2, "~/Documents/DoD_Discharge/Discharge_Chem/2019/DOD.2019.csv")

CARI_2019 <- read_csv("~/Documents/NEON/CARI/WaterQuality2019.csv", 
                             col_types = cols(fDOM = col_double(), 
                                              SpCond = col_double(), Turb = col_double()))
attributes(CARI_2019$DateTime)$tzone <- "America/Anchorage"

CARI_2019$day = format(as.POSIXct(CARI_2019$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
attributes(CARI_2019$DateTime)$tzone <- 'America/Anchorage'
CARI_2019$day = as.POSIXct(CARI_2019$day, "%Y-%m-%d", tz="America/Anchorage")
cari.final.discharge.2019 <- CARI_2019[,-c(4:8)]

CARI.daily.2019 = with(CARI_2019, tapply(Discharge, list(day, Site), mean))
CARI.daily.2019 = as.data.frame(CARI.daily.2019)

CARI.Q.2019 = as.data.frame(CARI.daily.2019$CARI)
CARI.Q.2019$day = as.Date(rownames(CARI.daily.2019))
names(CARI.Q.2019) = c("Discharge_Lsec", "day")

#DOD.2019.final2 <- read_csv("~/Documents/DoD_Discharge/Discharge_Chem/2019/DOD.2019.csv")
#attributes(DOD.2019.final2$DateTime)$tzone <- "America/Anchorage"

# subset data by site #
FRCH.2019 <-  subset(DOD.2019.final2, Site == "FRCH")
head(FRCH.2019$DateTime)
STRT.2019 = subset(DOD.2019.final2, Site == "STRT")
head(STRT.2019$DateTime)
POKE.2019 = subset(DOD.2019.final2, Site == "POKE")
head(POKE.2019$DateTime)
VAUL.2019 = subset(DOD.2019.final2, Site == "VAUL")
head(VAUL.2019$DateTime)
MOOS.2019 = subset(DOD.2019.final2, Site == "MOOS")
head(MOOS.2019$DateTime)

frch.final.discharge.2019 <- subset(Q_2019, Site == "FRCH")
head(frch.final.discharge.2019$DateTime)
strt.final.discharge.2019 <- subset(Q_2019, Site == "STRT")
poke.final.discharge.2019 <- subset(Q_2019, Site == "POKE")
vaul.final.discharge.2019 <- subset(Q_2019, Site == "VAUL")
moos.final.discharge.2019 <- subset(Q_2019, Site == "MOOS")

Q_2019$day = format(as.POSIXct(Q_2019$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
attributes(Q_2019$DateTime)$tzone <- 'America/Anchorage'
Q_2019$day = as.POSIXct(Q_2019$day, "%Y-%m-%d", tz="America/Anchorage")

Q.daily.2019 = with(Q_2019, tapply(Q, list(day, Site), mean))
Q.daily.2019 = as.data.frame(Q.daily.2019)

FRCH.Q.2019 = as.data.frame(Q.daily.2019$FRCH)
FRCH.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(FRCH.Q.2019) = c("Discharge_Lsec", "day")

STRT.Q.2019 = as.data.frame(Q.daily.2019$STRT)
STRT.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(STRT.Q.2019) = c("Discharge_Lsec", "day")

POKE.Q.2019 = as.data.frame(Q.daily.2019$POKE)
POKE.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(POKE.Q.2019) = c("Discharge_Lsec", "day")

VAUL.Q.2019 = as.data.frame(Q.daily.2019$VAUL)
VAUL.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(VAUL.Q.2019) = c("Discharge_Lsec", "day")

MOOS.Q.2019 = as.data.frame(Q.daily.2019$MOOS)
MOOS.Q.2019$day = as.Date(rownames(Q.daily.2019))
names(MOOS.Q.2019) = c("Discharge_Lsec", "day")

# data wrangling - fill gaps #
# fxn #
fillgaps15 = function(df, dat, datquotes, largegap.num){
  ## Document gaps >= largegap.num (1 largegap.num = 15 min) ##
  # (note - the criteria of what constitutes a "large" gap should be reevaluated depending on the trend being characterized)
  is.na.rle <- rle(is.na(dat))
  is.na.rle$values <- is.na.rle$values & is.na.rle$lengths >= (largegap.num)
  biggaps = df[inverse.rle(is.na.rle), ]
  tz(biggaps$DateTime) = "America/Anchorage"
  biggaps = subset(biggaps, select = "DateTime")
  # Make univariate time series, covert to zoo, then to ts #
  ts.xts = subset(df, select = c("DateTime",datquotes))
  ts.xts<-read.zoo(ts.xts, index.column=1, format="%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
  ts.xts<-as.xts(ts.xts)
  # remove leading and trailing NAs #
  ts.xts = na.trim(ts.xts, is.na="any")
  # Apply auto.arima and kalman filter to impute missing values #
  fit2 = auto.arima(ts.xts) 
  kal = KalmanSmooth(ts.xts, fit2$model)
  id.na<-which(is.na(ts.xts))
  for(i in id.na) 
    ts.xts[i]<-fit2$model$Z %*% kal$smooth[i,]
  # revert to dataframe #
  ts.df = as.data.frame((ts.xts))
  ts.df$date_timeAK = as.POSIXct(row.names(ts.df), tz="America/Anchorage")
  names(ts.df) = c("dat_filled", "DateTime")
  # remove large gaps # 
  ts.df$dat_filled[ts.df$date_timeAK %in% as.POSIXct(biggaps$DateTime)] = NA
  # Replace large gaps with linear interpolation #
  ts.df$dat_filled = na.interpolation(ts.df$dat_filled)
  ts.df = subset(ts.df, select = c("dat_filled", "DateTime"))
  return(ts.df)
}


# FRCH # 
FRCH.no3 <- subset(FRCH.2019, select = c("DateTime","nitrateuM"))
#plot(FRCH$nitrateuM ~ FRCH$datetimeAK) # plot check 
names(FRCH.no3) = c("DateTime", "nitrateuM")

frch.no3.1 <- cut(FRCH.no3$DateTime, breaks="15 min")
frch.no3.final <- as.data.frame(aggregate(nitrateuM ~ frch.no3.1, data = FRCH.no3, FUN = mean)) # Averaging 15 minute intervals
frch.no3.final$DateTime <-as.POSIXct(frch.no3.final$frch.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

# FRCH.no3.fill <-  fillgaps15(frch.no3.final, frch.no3.final$nitrateuM, "nitrateuM", 16)# checking to see if the same amount of rows 


FRCH.fDOM = subset(FRCH.2019, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH.fDOM) = c("DateTime", "fDOM.QSU.mn")

frch.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = FRCH.fDOM)# Averaging 15 minute intervals
names(frch.fdom.final) <- c("DateTime", "fDOM.QSU.mn") 

#FRCH.fDOM.fill = fillgaps15(frch.fdom.final, frch.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16) # Checking to see if there are the same amount of rows 

FRCH.SpCond = subset(FRCH.2019, select = c("DateTime","SpCond.uScm.mn"))
frch.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = FRCH.SpCond) # Averaging 15 minute intervals
frch.spcond.1 <- cut(FRCH.SpCond$DateTime, breaks = "15 min")
frch.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ frch.spcond.1, data = FRCH.SpCond, FUN = mean)) # Averaging 15 minute intervals
frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

FRCH.turb = subset(FRCH.2019, select = c("DateTime","Turbidity.FNU.mn"))
frch.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = FRCH.turb) # Averaging 15 minute intervals
frch.turb.1 <- cut(FRCH.turb$DateTime, breaks = "15 min")
frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ frch.turb.1, data = FRCH.turb, FUN = mean)) # Averaging 15 minute intervals
frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")


FRCH = left_join(frch.final.discharge.2019, frch.fdom.final, by="DateTime")
FRCH = left_join(FRCH, frch.no3.final, by="DateTime")
FRCH = left_join(FRCH, frch.spcond.final, by="DateTime")
FRCH = left_join(FRCH, frch.turb.final, by="DateTime")
FRCH <- FRCH[, -c(6,8,10)]

# STRT # 
STRT.no3 <- subset(STRT.2019, select = c("DateTime", "nitrateuM"))
#STRT.no3.2 = fillgaps15(strt.no3.final, strt.no3.final$nitrateuM, "nitrateuM", 16)
#plot(STRT.no3$dat_filled, type="l")
names(STRT.no3) = c("DateTime", "nitrateuM")

strt.no3.1 <- cut(STRT.no3$DateTime, breaks="15 min")
strt.no3.final <- as.data.frame(aggregate(nitrateuM ~ strt.no3.1, data = STRT.no3, FUN = mean)) # Averaging 15 minute intervals
strt.no3.final$DateTime <-as.POSIXct(strt.no3.final$strt.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

STRT.fDOM = subset(STRT.2019, select = c("DateTime","fDOM.QSU.mn"))
strt.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = STRT.fDOM)# Averaging 15 minute intervals
names(strt.fdom.final) <- c("DateTime", "fDOM.QSU.mn") 
#strSTRT.fDOM.2 = fillgaps15(strt.fdom.final, strt.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16)
#plot(STRT$dat_filled, type="l")
names(STRT.fDOM) = c("fDOM_filled", "DateTime")

STRT.SpCond = subset(STRT.2019, select = c("DateTime","SpCond.uScm.mn"))
strt.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = STRT.SpCond) # Averaging 15 minute intervals
strt.spcond.1 <- cut(STRT.SpCond$DateTime, breaks = "15 min")
strt.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ strt.spcond.1, data = STRT.SpCond, FUN = mean)) # Averaging 15 minute intervals
strt.spcond.final$DateTime <-as.POSIXct(strt.spcond.final$strt.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

STRT.turb = subset(STRT.2019, select = c("DateTime","Turbidity.FNU.mn"))
strt.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = STRT.turb) # Averaging 15 minute intervals
strt.turb.1 <- cut(STRT.turb$DateTime, breaks = "15 min")
strt.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ strt.turb.1, data = STRT.turb, FUN = mean)) # Averaging 15 minute intervals
strt.turb.final$DateTime <-as.POSIXct(strt.turb.final$strt.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")


STRT = left_join(strt.final.discharge.2019, strt.fdom.final, by="DateTime")
STRT = left_join(STRT, strt.no3.final, by="DateTime")
STRT = left_join(STRT, strt.spcond.final, by="DateTime")
STRT = left_join(STRT, strt.turb.final, by="DateTime")
STRT <- STRT[, -c(6,8,10)]

# POKE # 
POKE.no3 <- subset(POKE.2019, select = c("DateTime","nitrateuM"))
#plot(POKE$nitrateuM ~ POKE$datetimeAK) # plot check 
names(POKE.no3) = c("DateTime", "nitrateuM")

poke.no3.1 <- cut(POKE.no3$DateTime, breaks="15 min")
poke.no3.final <- as.data.frame(aggregate(nitrateuM ~ poke.no3.1, data = POKE.no3, FUN = mean)) # Averaging 15 minute intervals
poke.no3.final$DateTime <-as.POSIXct(poke.no3.final$poke.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

# POKE.no3.fill <-  fillgaps15(poke.no3.final, poke.no3.final$nitrateuM, "nitrateuM", 16)# checking to see if the same amount of rows 
POKE.fDOM = subset(POKE.2019, select = c("DateTime","fDOM.QSU.mn"))
names(POKE.fDOM) = c("DateTime", "fDOM.QSU.mn")

poke.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = POKE.fDOM)# Averaging 15 minute intervals
names(poke.fdom.final) <- c("DateTime", "fDOM.QSU.mn") 

#POKE.fDOM.fill = fillgaps15(poke.fdom.final, poke.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16) # Checking to see if there are the same amount of rows 

POKE.SpCond = subset(POKE.2019, select = c("DateTime","SpCond.uScm.mn"))
poke.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = POKE.SpCond) # Averaging 15 minute intervals
poke.spcond.1 <- cut(POKE.SpCond$DateTime, breaks = "15 min")
poke.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ poke.spcond.1, data = POKE.SpCond, FUN = mean)) # Averaging 15 minute intervals
poke.spcond.final$DateTime <-as.POSIXct(poke.spcond.final$poke.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

POKE.turb = subset(POKE.2019, select = c("DateTime","Turbidity.FNU.mn"))
poke.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = POKE.turb) # Averaging 15 minute intervals
poke.turb.1 <- cut(POKE.turb$DateTime, breaks = "15 min")
poke.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ poke.turb.1, data = POKE.turb, FUN = mean)) # Averaging 15 minute intervals
poke.turb.final$DateTime <-as.POSIXct(poke.turb.final$poke.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

POKE = left_join(poke.final.discharge.2019, poke.fdom.final, by="DateTime")
POKE = left_join(POKE, poke.no3.final, by="DateTime")
POKE = left_join(POKE, poke.spcond.final, by="DateTime")
POKE = left_join(POKE, poke.turb.final, by="DateTime")
POKE <- POKE[, -c(6,8,10)]

# VAUL # 
VAUL.no3 <- subset(VAUL.2019, select = c("DateTime","nitrateuM"))
#plot(VAUL$nitrateuM ~ VAUL$datetimeAK) # plot check 
names(VAUL.no3) = c("DateTime", "nitrateuM")

vaul.no3.1 <- cut(VAUL.no3$DateTime, breaks="15 min")
vaul.no3.final <- as.data.frame(aggregate(nitrateuM ~ vaul.no3.1, data = VAUL.no3, FUN = mean)) # Averaging 15 minute intervals
vaul.no3.final$DateTime <-as.POSIXct(vaul.no3.final$vaul.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

#VAUL.no3.fill <-  fillgaps15(vaul.no3.final, vaul.no3.final$nitrateuM, "nitrateuM", 16)# checking to see if the same amount of rows 


VAUL.fDOM = subset(VAUL.2019, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL.fDOM) = c("DateTime", "fDOM.QSU.mn")

vaul.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = VAUL.fDOM)# Averaging 15 minute intervals
names(vaul.fdom.final) <- c("DateTime", "fDOM.QSU.mn") 

#VAUL.fDOM.fill = fillgaps15(vaul.fdom.final, poke.fdom.final$fDOM.QSU.mn, "fDOM.QSU.mn", 16) # Checking to see if there are the same amount of rows 

VAUL.SpCond = subset(VAUL.2019, select = c("DateTime","SpCond.uScm.mn"))
vaul.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = VAUL.SpCond) # Averaging 15 minute intervals
vaul.spcond.1 <- cut(VAUL.SpCond$DateTime, breaks = "15 min")
vaul.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ vaul.spcond.1, data = VAUL.SpCond, FUN = mean)) # Averaging 15 minute intervals
vaul.spcond.final$DateTime <-as.POSIXct(vaul.spcond.final$vaul.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

VAUL.turb = subset(VAUL.2019, select = c("DateTime","Turbidity.FNU.mn"))
vaul.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = VAUL.turb) # Averaging 15 minute intervals
vaul.turb.1 <- cut(VAUL.turb$DateTime, breaks = "15 min")
vaul.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ vaul.turb.1, data = VAUL.turb, FUN = mean)) # Averaging 15 minute intervals
vaul.turb.final$DateTime <-as.POSIXct(vaul.turb.final$vaul.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

VAUL = left_join(vaul.final.discharge.2019, vaul.fdom.final, by="DateTime")
VAUL = left_join(VAUL, vaul.no3.final, by="DateTime")
VAUL = left_join(VAUL, vaul.spcond.final, by="DateTime")
VAUL = left_join(VAUL, vaul.turb.final, by="DateTime")
VAUL <- VAUL[, -c(6,8)]


# MOOS #
MOOS.no3 <- subset(MOOS.2019, select = c("DateTime", "nitrateuM"))

#plot(MOOS.no3$dat_filled, type="l")
names(MOOS.no3) = c("DateTime", "nitrateuM")

moos.no3.1 <- cut(MOOS.no3$DateTime, breaks="15 min")
moos.no3.final <- as.data.frame(aggregate(nitrateuM ~ moos.no3.1, data = MOOS.no3, FUN = mean)) # Averaging 15 minute intervals
moos.no3.final$DateTime <-as.POSIXct(moos.no3.final$moos.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

#MOOS.no3.2 <-  fillgaps15(moos.no3.final, moos.no3.final$nitrateuM, "nitrateuM", 16) # fill gaps

MOOS.fDOM = subset(MOOS.2019, select = c("DateTime","fDOM.QSU.mn"))
moos.fdom.final = aggregate(fDOM.QSU.mn ~ DateTime, FUN=mean, data = MOOS.fDOM)# Averaging 15 minute intervals

#MOOS.fDOM = fillgaps15(MOOS.fDOM, MOOS.fDOM$fDOM.RFU, "fDOM.RFU", 16)
#plot(MOOS$dat_filled, type="l")
names(MOOS.fDOM) = c("fDOM_filled", "DateTime")

MOOS.SpCond = subset(MOOS.2019, select = c("DateTime","SpCond.uScm.mn"))
moos.spcond.final = aggregate(SpCond.uScm.mn ~ DateTime, FUN=mean, data = MOOS.SpCond) # Averaging 15 minute intervals
moos.spcond.1 <- cut(MOOS.SpCond$DateTime, breaks = "15 min")
moos.spcond.final <- as.data.frame(aggregate(SpCond.uScm.mn ~ moos.spcond.1, data = MOOS.SpCond, FUN = mean)) # Averaging 15 minute intervals
moos.spcond.final$DateTime <-as.POSIXct(moos.spcond.final$moos.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

MOOS.turb = subset(MOOS.2019, select = c("DateTime","Turbidity.FNU.mn"))
moos.turb.final = aggregate(Turbidity.FNU.mn ~ DateTime, FUN=mean, data = MOOS.turb) # Averaging 15 minute intervals
moos.turb.1 <- cut(MOOS.turb$DateTime, breaks = "15 min")
moos.turb.final <- as.data.frame(aggregate(Turbidity.FNU.mn ~ moos.turb.1, data = MOOS.turb, FUN = mean)) # Averaging 15 minute intervals
moos.turb.final$DateTime <-as.POSIXct(moos.turb.final$moos.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

MOOS = left_join(moos.final.discharge.2019, moos.fdom.final, by="DateTime")
MOOS = left_join(MOOS, moos.no3.final, by="DateTime")
MOOS = left_join(MOOS, moos.spcond.final, by="DateTime")
MOOS = left_join(MOOS, moos.turb.final, by="DateTime")
MOOS <- MOOS[, -c(6,8,10)]

# Write CSV #
write.csv(FRCH, "~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2019.csv", row.names = FALSE)
write.csv(STRT, "~/Documents/Storms/Q_Chem/STRT/STRT_chem_2019.csv", row.names = FALSE)
write.csv(POKE, "~/Documents/Storms/Q_Chem/POKE/POKE_chem_2019.csv", row.names = FALSE)
write.csv(VAUL, "~/Documents/Storms/Q_Chem/VAUL/VAUL_chem_2019.csv", row.names = FALSE)
write.csv(MOOS, "~/Documents/Storms/Q_Chem/VAUL/MOOS_chem_2019.csv", row.names = FALSE)


# Baseflow Separation #

any(is.na(FRCH.Q.2019$day))
any(is.na(FRCH.Q.2019$Discharge_Lsec)) 
FRCH.Q.2019 <- na.omit(FRCH.Q.2019) # Removed 14 rows - (178 to 164)

any(is.na(STRT.Q.2019$day))
any(is.na(STRT.Q.2019$Discharge_Lsec)) 
STRT.Q.2019 <- na.omit(STRT.Q.2019) # Removed 33 rows - (178 to 145)

any(is.na(POKE.Q.2019$day))
any(is.na(POKE.Q.2019$Discharge_Lsec)) 
POKE.Q.2019 <- na.omit(POKE.Q.2019) # Removed 40 rows - (178 to 138)

any(is.na(VAUL.Q.2019$day))
any(is.na(VAUL.Q.2019$Discharge_Lsec)) 
VAUL.Q.2019 <- na.omit(VAUL.Q.2019) # Removed 45 rows - (178 to 133)

any(is.na(MOOS.Q.2019$day))
any(is.na(MOOS.Q.2019$Discharge_Lsec)) 
MOOS.Q.2019 <- na.omit(MOOS.Q.2019) # Removed 34 rows - (178 to 144)

any(is.na(CARI.Q.2019$day))
any(is.na(CARI.Q.2019$Discharge_Lsec)) 
CARI.Q.2019 <- na.omit(CARI.Q.2019) # Removed 62 rows - (167 to 105)


### examine the recursive digital filter at .9, .925, .95 levels ###
plot(FRCH$Q ~ FRCH$DateTime, type = "l", xlab = "", ylab = "Q (L/sec)",
     xlim =  as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0, 3000), col="blue")
#
plot(POKE$Q ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,2500), col="blue")

plot(VAUL$Q ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,1000), col="blue")

plot(STRT$Q ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,8000), col="blue")

plot(MOOS$Q ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,5000), col="blue")

ggplot(aes(x = DateTime, y = Discharge), data = CARI_2019) +
  geom_line(color="#A6CEE3", size=1.25) +
  theme_classic() +
  ggtitle("CARI measured Q") +
  xlab("Date") +
  ylab("Discharge (L/s)") +
  xlab("")

### Hydrograph Separation ###

# FRCH
frch.final.discharge.2019 <- na.omit(frch.final.discharge.2019) # Removed 2 rows
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2019$Q)
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2019$Q, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 

# STRT
strt.final.discharge.2019 <- na.omit(strt.final.discharge.2019) # Removed 2 rows

STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2019$Q, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(STRT.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)

#POKE
poke.final.discharge.2019 <- na.omit(poke.final.discharge.2019) #removed 1 row

POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2019$Q, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(POKE.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 

# VAUL
any(is.na(vaul.final.discharge.2019$Q))
vaul.final.discharge.2019 <- na.omit(vaul.final.discharge.2019) # removed 489 rows

VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2019$Q, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(VAUL.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

# MOOS
any(is.na(moos.final.discharge.2019$Q))
moos.final.discharge.2019 <- na.omit(moos.final.discharge.2019) # removed 3 rows
MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2019$Q, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(MOOS.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

# CARI
any(is.na(cari.final.discharge.2019$Discharge))
cari.final.discharge.2019 <- na.omit(cari.final.discharge.2019) # removed 478106-368464
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2019$Discharge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(CARI.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 

###.925 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2019$Q, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(FRCH.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2019$Q, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(STRT.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2019$Q, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(POKE.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2019$Q, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(VAUL.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2019$Q, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(MOOS.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 
#
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2019$Discharge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(CARI.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 


### .95 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2019$Q, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(FRCH.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2019$Q, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(STRT.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2019$Q, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(POKE.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2019$Q, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(VAUL.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2019$Q, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(MOOS.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 
#
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2019$Discharge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(CARI.Q.2019, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 


# Deliniate storms in FRCH #

# ID storms: Any events where Q reached 2X mean base flow 
# Pick starting points: manually select inflection pt when Q began to rise
# Pick ending points: manually select pt when Q reached pre-storm baseflow OR when another event occurred


FRCH_bfQ_mn = mean(FRCH_Q_bf$bt)
FRCH_bfQ_mn
FRCH_bfQ_mn*2

STRT_bfQ_mn = mean(STRT_Q_bf$bt)
STRT_bfQ_mn
STRT_bfQ_mn*2

VAUL_bfQ_mn = mean(VAUL_Q_bf$bt)
VAUL_bfQ_mn
VAUL_bfQ_mn*2

POKE_bfQ_mn = mean(POKE_Q_bf$bt)
POKE_bfQ_mn
POKE_bfQ_mn*2

MOOS_bfQ_mn = mean(MOOS_Q_bf$bt)
MOOS_bfQ_mn
MOOS_bfQ_mn*2

CARI_bfQ_mn = mean(CARI_Q_bf$bt)
CARI_bfQ_mn
CARI_bfQ_mn*2

# Merge Discharge and Precip #

FRCH.st <- read_csv("~/Documents/DoD_2019/RainGauge/FRCH.RainGauge.2019.csv")
attributes(FRCH.st$Datetime)$tzone <- 'America/Anchorage'
FRCH.st$DateTime <- FRCH.st$Datetime
VAUL.st <- read_csv("~/Documents/DoD_2019/RainGauge/VAUL.RainGauge.2019.csv")
attributes(VAUL.st$DateTime)$tzone <- 'America/Anchorage'
POKE.st <- read_csv("~/Documents/DoD_2019/RainGauge/POKE.RainGauge.2019.csv")
attributes(POKE.st$DateTime)$tzone <- 'America/Anchorage'

frch.precip.discharge.2019 <- full_join(frch.final.discharge.2019, FRCH.st, by = "DateTime") # merging precip data and discharge
vaul.precip.discharge.2019 <- full_join(vaul.final.discharge.2019, VAUL.st, by = "DateTime") # merging precip data and discharge
poke.precip.discharge.2019 <- full_join(poke.final.discharge.2019, POKE.st, by = "DateTime") # merging precip data and discharge


### Sum daily discharge ###
frch.precip.discharge.2019$twentyfour <- rollapplyr(frch.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
frch.precip.discharge.2019$fourtyeight <- rollapplyr(frch.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

vaul.precip.discharge.2019$twentyfour <- rollapplyr(vaul.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge.2019$fourtyeight <- rollapplyr(vaul.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

poke.precip.discharge.2019$twentyfour <- rollapplyr(poke.precip.discharge.2019$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge.2019$fourtyeight <- rollapplyr(poke.precip.discharge.2019$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

# Greater than 5 #
frch.five.twenty.four <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
frch.five.fourty.eight <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

#strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 5
#strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

vaul.five.twenty.four <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

poke.five.twenty.four <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

# Greater than 10 #
frch.ten.twenty.four <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
frch.ten.fourty.eight <- frch.precip.discharge.2019[which(frch.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

#strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
#strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

vaul.ten.twenty.four <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge.2019[which(vaul.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

poke.ten.twenty.four <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge.2019[which(poke.precip.discharge.2019$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

write.csv(frch.precip.discharge, "frch.precip.discharge.csv", row.names = FALSE)
#write.csv(strt.precip.discharge, "strt.precip.discharge.csv", row.names = FALSE)
write.csv(vaul.precip.discharge, "vaul.precip.discharge.csv", row.names = FALSE)
write.csv(poke.precip.discharge, "poke.precip.discharge.csv", row.names = FALSE)

#

### Sum daily discharge ###
#FRCH.st$date <- as.Date(FRCH.st$datetimeAK)
#frch.daily.sum <- aggregate(FRCH.st["inst_rainfall_mm"], by = FRCH.st["date"], sum)
#frch.ten <- frch.daily.sum[which(frch.daily.sum$inst_rainfall_mm >= 10),]


#VAUL.st$date <- as.Date(VAUL.st$datetimeAK)
#vaul.daily.sum <- aggregate(VAUL.st["inst_rainfall_mm"], by = VAUL.st["date"], sum)
#vaul.ten <- vaul.daily.sum[which(vaul.daily.sum$inst_rainfall_mm >= 10),]
#par(mfrow=c(1,1))

#precip.cariboupeak$date <- as.Date(precip.cariboupeak$DateTime)
#poke.daily.sum <- aggregate(precip.cariboupeak["Precip"], by = precip.cariboupeak["date"], sum)
#poke.ten <- poke.daily.sum[which(poke.daily.sum$Precip >= 10),]

#plot(FRCH_Q$Discharge_Lsec ~ FRCH_Q$day, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,5000), col="blue", main="FRCH")
#lines(FRCH_Q_bf$bt ~ FRCH_Q$day, col="red")
#lines((C3_Q_bf$bt*1.3) ~ C3_Q$day, col="red", lty=2)
#lines((C3_Q_bf$bt*5) ~ C3_Q$day, col="red", lty=2)
#abline(h = FRCH_bfQ_mn*2, col="red", lty=2)
#par(mar=c(1))

### Precip Discharge Chem ###
FRCH$MeanDischarge <- FRCH$Q
#FRCH#
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)')
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col = "green", lwd = 0.1)

abline(v = as.POSIXct(frch.ten.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.ten.twenty.four$DateTime), col = "green", lwd = 0.1)
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 15 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

### Storms ### 
# FRCH # no alarms in this date frame 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)

# Storm 1 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-30 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-30 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-05-31 13:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-10 15:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm1_05_31 = FRCH[FRCH$DateTime > as.POSIXct("2019-05-31 13:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2019-06-10 22:00:00", tz="America/Anchorage"),]
plot(FRCH_storm1_05_31$MeanDischarge ~ as.POSIXct(FRCH_storm1_05_31$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,4000), col="blue", main="FRCH 200531 storm 1",
     xlim = as.POSIXct(c("2019-05-30 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-30 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 15 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-30 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-30 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-15 07:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-17 01:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm2_06_15 = FRCH[FRCH$DateTime > as.POSIXct("2019-06-15 07:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2019-06-17 01:00:00", tz="America/Anchorage"),]
plot(FRCH_storm2_06_15$MeanDischarge ~ as.POSIXct(FRCH_storm2_06_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200615 storm 2",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-18 05:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-20 08:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm3_06_18 = FRCH[FRCH$DateTime > as.POSIXct("2019-06-18 05:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2019-06-20 08:00:00", tz="America/Anchorage"),]
plot(FRCH_storm3_06_18$MeanDischarge ~ as.POSIXct(FRCH_storm3_06_18$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200618 storm 3",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-20 09:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-22 10:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm4_06_20 = FRCH[FRCH$DateTime > as.POSIXct("2019-06-20 09:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2019-06-22 10:00:00", tz="America/Anchorage"),]
plot(FRCH_storm4_06_20$MeanDischarge ~ as.POSIXct(FRCH_storm4_06_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200620 storm 4",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-22 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-24 20:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm5_06_22 = FRCH[FRCH$DateTime > as.POSIXct("2019-06-22 10:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2019-06-24 20:00:00", tz="America/Anchorage"),]
plot(FRCH_storm5_06_22$MeanDischarge ~ as.POSIXct(FRCH_storm5_06_22$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200622 storm 5",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-12 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-12 03:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-14 20:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm6_07_12 = FRCH[FRCH$DateTime > as.POSIXct("2019-07-12 03:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2019-07-14 20:00:00", tz="America/Anchorage"),]
plot(FRCH_storm6_07_12$MeanDischarge ~ as.POSIXct(FRCH_storm6_07_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200712 storm 6",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-25 19:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-27 05:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm7_07_25 = FRCH[FRCH$DateTime > as.POSIXct("2019-07-25 19:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2019-07-27 05:00:00", tz="America/Anchorage"),]
plot(FRCH_storm7_07_25$MeanDischarge ~ as.POSIXct(FRCH_storm7_07_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200725 storm 7",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-28 03:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-29 06:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm8_07_28 = FRCH[FRCH$DateTime > as.POSIXct("2019-07-28 03:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2019-07-29 06:00:00", tz="America/Anchorage"),]
plot(FRCH_storm8_07_28$MeanDischarge ~ as.POSIXct(FRCH_storm8_07_28$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200728 storm 8",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-29 07:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-29 23:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm9a_07_29 = FRCH[FRCH$DateTime > as.POSIXct("2019-07-29 07:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2019-07-29 23:00:00", tz="America/Anchorage"),]
plot(FRCH_storm9a_07_29$MeanDischarge ~ as.POSIXct(FRCH_storm9a_07_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200729 storm 9a",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9b # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-30 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-31 15:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm9b_07_30 = FRCH[FRCH$DateTime > as.POSIXct("2019-07-30 01:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2019-07-31 15:00:00", tz="America/Anchorage"),]
plot(FRCH_storm9b_07_30$MeanDischarge ~ as.POSIXct(FRCH_storm9b_07_30$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="FRCH 200730 storm 9b",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-01 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-02 08:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm10a_08_01 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-01 01:30:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2019-08-02 08:00:00", tz="America/Anchorage"),]
plot(FRCH_storm10a_08_01$MeanDischarge ~ as.POSIXct(FRCH_storm10a_08_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="FRCH 200801 storm 10a",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10b # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-02 08:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-03 08:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm10b_08_02 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-02 08:00:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2019-08-03 08:00:00", tz="America/Anchorage"),]
plot(FRCH_storm10b_08_02$MeanDischarge ~ as.POSIXct(FRCH_storm10b_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="FRCH 200802 storm 10b",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10c # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-03 08:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-05 12:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm10c_08_03 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-03 08:00:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2019-08-05 12:00:00", tz="America/Anchorage"),]
plot(FRCH_storm10c_08_03$MeanDischarge ~ as.POSIXct(FRCH_storm10c_08_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="FRCH 200803 storm 10c",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 11 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-05 13:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-10 13:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm11_08_05 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-05 13:00:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2019-08-10 13:00:00", tz="America/Anchorage"),]
plot(FRCH_storm11_08_05$MeanDischarge ~ as.POSIXct(FRCH_storm11_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,4000), col="blue", main="FRCH 200805 storm 11",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-12 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-14 21:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm12a_08_12 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-12 23:00:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2019-08-14 21:00:00", tz="America/Anchorage"),]
plot(FRCH_storm12a_08_12$MeanDischarge ~ as.POSIXct(FRCH_storm12a_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="FRCH 200811 storm 12a",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 5 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12b # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-14 22:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-15 15:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm12b_08_14 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-14 22:00:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2019-08-15 15:00:00", tz="America/Anchorage"),]
plot(FRCH_storm12b_08_14$MeanDischarge ~ as.POSIXct(FRCH_storm12b_08_14$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,2000), col="blue", main="FRCH 200815 storm 12b",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 15 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12c # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-15 15:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-20 23:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm12c_08_15 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-15 15:00:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2019-08-20 23:00:00", tz="America/Anchorage"),]
plot(FRCH_storm12c_08_15$MeanDischarge ~ as.POSIXct(FRCH_storm12c_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,2500), col="blue", main="FRCH 200815 storm 12c",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 15 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12d # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-21 00:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-22 01:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm12d_08_21 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-21 00:00:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2019-08-22 01:00:00", tz="America/Anchorage"),]
plot(FRCH_storm12d_08_21$MeanDischarge ~ as.POSIXct(FRCH_storm12d_08_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,3000), col="blue", main="FRCH 200821 storm 12d",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12e # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-23 10:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-24 18:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm12e_08_23 = FRCH[FRCH$DateTime > as.POSIXct("2019-08-23 10:00:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2019-08-24 18:00:00", tz="America/Anchorage"),]
plot(FRCH_storm12e_08_23$MeanDischarge ~ as.POSIXct(FRCH_storm12e_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,3000), col="blue", main="FRCH 200823 storm 12e",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 13 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-31 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-31 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-09-20 13:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-09-24 15:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm13_09_20 = FRCH[FRCH$DateTime > as.POSIXct("2019-09-20 13:00:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2019-09-24 15:00:00", tz="America/Anchorage"),]
plot(FRCH_storm13_09_20$MeanDischarge ~ as.POSIXct(FRCH_storm13_09_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="FRCH 200920 storm 13",
     xlim = as.POSIXct(c("2019-08-31 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-31 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-31 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-31 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 14 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-10-01 15:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-08 05:00:00", tz="America/Anchorage"), col="purple")

FRCH_storm14_10_01 = FRCH[FRCH$DateTime > as.POSIXct("2019-10-01 15:00:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2019-10-08 05:00:00", tz="America/Anchorage"),]
plot(FRCH_storm14_10_01$MeanDischarge ~ as.POSIXct(FRCH_storm14_10_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1200), col="blue", main="FRCH 201001 storm 14",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU.mn * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# modify format and save FRCH storms # 
# nitrateuM, fDOM.QSU 
FRCH_storm1_05_31_Q = subset(FRCH_storm1_05_31, select = c("DateTime","MeanDischarge"))
names(FRCH_storm1_05_31_Q) = c("valuedatetime","datavalue")
FRCH_storm1_05_31_NO3 = subset(FRCH_storm1_05_31, select = c("DateTime","nitrateuM"))
names(FRCH_storm1_05_31_NO3) = c("valuedatetime","datavalue")
FRCH_storm1_05_31_fDOM = subset(FRCH_storm1_05_31, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm1_05_31_fDOM) = c("valuedatetime","datavalue")
FRCH_storm1_05_31_SPC = subset(FRCH_storm1_05_31, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm1_05_31_SPC) = c("valuedatetime","datavalue")
FRCH_storm1_05_31_turb = subset(FRCH_storm1_05_31, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm1_05_31_turb) = c("valuedatetime","datavalue")

FRCH_storm2_06_15_Q = subset(FRCH_storm2_06_15, select = c("DateTime","MeanDischarge"))
names(FRCH_storm2_06_15_Q) = c("valuedatetime","datavalue")
FRCH_storm2_06_15_NO3 = subset(FRCH_storm2_06_15, select = c("DateTime","nitrateuM"))
names(FRCH_storm2_06_15_NO3) = c("valuedatetime","datavalue")
FRCH_storm2_06_15_fDOM = subset(FRCH_storm2_06_15, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm2_06_15_fDOM) = c("valuedatetime","datavalue")
FRCH_storm2_06_15_SPC = subset(FRCH_storm2_06_15, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm2_06_15_SPC) = c("valuedatetime","datavalue")
FRCH_storm2_06_15_turb = subset(FRCH_storm2_06_15, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm2_06_15_turb) = c("valuedatetime","datavalue")

FRCH_storm3_06_18_Q = subset(FRCH_storm3_06_18, select = c("DateTime","MeanDischarge"))
names(FRCH_storm3_06_18_Q) = c("valuedatetime","datavalue")
FRCH_storm3_06_18_NO3 = subset(FRCH_storm3_06_18, select = c("DateTime","nitrateuM"))
names(FRCH_storm3_06_18_NO3) = c("valuedatetime","datavalue")
FRCH_storm3_06_18_fDOM = subset(FRCH_storm3_06_18, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm3_06_18_fDOM) = c("valuedatetime","datavalue")
FRCH_storm3_06_18_SPC = subset(FRCH_storm3_06_18, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm3_06_18_SPC) = c("valuedatetime","datavalue")
FRCH_storm3_06_18_turb = subset(FRCH_storm3_06_18, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm3_06_18_turb) = c("valuedatetime","datavalue")

FRCH_storm4_06_20_Q = subset(FRCH_storm4_06_20, select = c("DateTime","MeanDischarge"))
names(FRCH_storm4_06_20_Q) = c("valuedatetime","datavalue")
FRCH_storm4_06_20_NO3 = subset(FRCH_storm4_06_20, select = c("DateTime","nitrateuM"))
names(FRCH_storm4_06_20_NO3) = c("valuedatetime","datavalue")
FRCH_storm4_06_20_fDOM = subset(FRCH_storm4_06_20, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm4_06_20_fDOM) = c("valuedatetime","datavalue")
FRCH_storm4_06_20_SPC = subset(FRCH_storm4_06_20, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm4_06_20_SPC) = c("valuedatetime","datavalue")
FRCH_storm4_06_20_turb = subset(FRCH_storm4_06_20, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm4_06_20_turb) = c("valuedatetime","datavalue")

FRCH_storm5_06_22_Q = subset(FRCH_storm5_06_22, select = c("DateTime","MeanDischarge"))
names(FRCH_storm5_06_22_Q) = c("valuedatetime","datavalue")
FRCH_storm5_06_22_NO3 = subset(FRCH_storm5_06_22, select = c("DateTime","nitrateuM"))
names(FRCH_storm5_06_22_NO3) = c("valuedatetime","datavalue")
FRCH_storm5_06_22_fDOM = subset(FRCH_storm5_06_22, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm5_06_22_fDOM) = c("valuedatetime","datavalue")
FRCH_storm5_06_22_SPC = subset(FRCH_storm5_06_22, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm5_06_22_SPC) = c("valuedatetime","datavalue")
FRCH_storm5_06_22_turb = subset(FRCH_storm5_06_22, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm5_06_22_turb) = c("valuedatetime","datavalue")

FRCH_storm6_07_12_Q = subset(FRCH_storm6_07_12, select = c("DateTime","MeanDischarge"))
names(FRCH_storm6_07_12_Q) = c("valuedatetime","datavalue")
FRCH_storm6_07_12_NO3 = subset(FRCH_storm6_07_12, select = c("DateTime","nitrateuM"))
names(FRCH_storm6_07_12_NO3) = c("valuedatetime","datavalue")
FRCH_storm6_07_12_fDOM = subset(FRCH_storm6_07_12, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm6_07_12_fDOM) = c("valuedatetime","datavalue")
FRCH_storm6_07_12_SPC = subset(FRCH_storm6_07_12, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm6_07_12_SPC) = c("valuedatetime","datavalue")
FRCH_storm6_07_12_turb = subset(FRCH_storm6_07_12, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm6_07_12_turb) = c("valuedatetime","datavalue")

FRCH_storm7_07_25_Q = subset(FRCH_storm7_07_25, select = c("DateTime","MeanDischarge"))
names(FRCH_storm7_07_25_Q) = c("valuedatetime","datavalue")
FRCH_storm7_07_25_NO3 = subset(FRCH_storm7_07_25, select = c("DateTime","nitrateuM"))
names(FRCH_storm7_07_25_NO3) = c("valuedatetime","datavalue")
FRCH_storm7_07_25_fDOM = subset(FRCH_storm7_07_25, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm7_07_25_fDOM) = c("valuedatetime","datavalue")
FRCH_storm7_07_25_SPC = subset(FRCH_storm7_07_25, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm7_07_25_SPC) = c("valuedatetime","datavalue")
FRCH_storm7_07_25_turb = subset(FRCH_storm7_07_25, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm7_07_25_turb) = c("valuedatetime","datavalue")

FRCH_storm8_07_28_Q = subset(FRCH_storm8_07_28, select = c("DateTime","MeanDischarge"))
names(FRCH_storm8_07_28_Q) = c("valuedatetime","datavalue")
FRCH_storm8_07_28_NO3 = subset(FRCH_storm8_07_28, select = c("DateTime","nitrateuM"))
names(FRCH_storm8_07_28_NO3) = c("valuedatetime","datavalue")
FRCH_storm8_07_28_fDOM = subset(FRCH_storm8_07_28, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm8_07_28_fDOM) = c("valuedatetime","datavalue")
FRCH_storm8_07_28_SPC = subset(FRCH_storm8_07_28, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm8_07_28_SPC) = c("valuedatetime","datavalue")
FRCH_storm8_07_28_turb = subset(FRCH_storm8_07_28, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm8_07_28_turb) = c("valuedatetime","datavalue")

FRCH_storm9a_07_29_Q = subset(FRCH_storm9a_07_29, select = c("DateTime","MeanDischarge"))
names(FRCH_storm9a_07_29_Q) = c("valuedatetime","datavalue")
FRCH_storm9a_07_29_NO3 = subset(FRCH_storm9a_07_29, select = c("DateTime","nitrateuM"))
names(FRCH_storm9a_07_29_NO3) = c("valuedatetime","datavalue")
FRCH_storm9a_07_29_fDOM = subset(FRCH_storm9a_07_29, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm9a_07_29_fDOM) = c("valuedatetime","datavalue")
FRCH_storm9a_07_29_SPC = subset(FRCH_storm9a_07_29, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm9a_07_29_SPC) = c("valuedatetime","datavalue")
FRCH_storm9a_07_29_turb = subset(FRCH_storm9a_07_29, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm9a_07_29_turb) = c("valuedatetime","datavalue")

FRCH_storm9b_07_30_Q = subset(FRCH_storm9b_07_30, select = c("DateTime","MeanDischarge"))
names(FRCH_storm9b_07_30_Q) = c("valuedatetime","datavalue")
FRCH_storm9b_07_30_NO3 = subset(FRCH_storm9b_07_30, select = c("DateTime","nitrateuM"))
names(FRCH_storm9b_07_30_NO3) = c("valuedatetime","datavalue")
FRCH_storm9b_07_30_fDOM = subset(FRCH_storm9b_07_30, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm9b_07_30_fDOM) = c("valuedatetime","datavalue")
FRCH_storm9b_07_30_SPC = subset(FRCH_storm9b_07_30, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm9b_07_30_SPC) = c("valuedatetime","datavalue")
FRCH_storm9b_07_30_turb = subset(FRCH_storm9b_07_30, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm9b_07_30_turb) = c("valuedatetime","datavalue")

FRCH_storm10a_08_01_Q = subset(FRCH_storm10a_08_01, select = c("DateTime","MeanDischarge"))
names(FRCH_storm10a_08_01_Q) = c("valuedatetime","datavalue")
FRCH_storm10a_08_01_NO3 = subset(FRCH_storm10a_08_01, select = c("DateTime","nitrateuM"))
names(FRCH_storm10a_08_01_NO3) = c("valuedatetime","datavalue")
FRCH_storm10a_08_01_fDOM = subset(FRCH_storm10a_08_01, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm10a_08_01_fDOM) = c("valuedatetime","datavalue")
FRCH_storm10a_08_01_SPC = subset(FRCH_storm10a_08_01, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm10a_08_01_SPC) = c("valuedatetime","datavalue")
FRCH_storm10a_08_01_turb = subset(FRCH_storm10a_08_01, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm10a_08_01_turb) = c("valuedatetime","datavalue")

FRCH_storm10b_08_02_Q = subset(FRCH_storm10b_08_02, select = c("DateTime","MeanDischarge"))
names(FRCH_storm10b_08_02_Q) = c("valuedatetime","datavalue")
FRCH_storm10b_08_02_NO3 = subset(FRCH_storm10b_08_02, select = c("DateTime","nitrateuM"))
names(FRCH_storm10b_08_02_NO3) = c("valuedatetime","datavalue")
FRCH_storm10b_08_02_fDOM = subset(FRCH_storm10b_08_02, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm10b_08_02_fDOM) = c("valuedatetime","datavalue")
FRCH_storm10b_08_02_SPC = subset(FRCH_storm10b_08_02, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm10b_08_02_SPC) = c("valuedatetime","datavalue")
FRCH_storm10b_08_02_turb = subset(FRCH_storm10b_08_02, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm10b_08_02_turb) = c("valuedatetime","datavalue")

FRCH_storm10c_08_03_Q = subset(FRCH_storm10c_08_03, select = c("DateTime","MeanDischarge"))
names(FRCH_storm10c_08_03_Q) = c("valuedatetime","datavalue")
FRCH_storm10c_08_03_NO3 = subset(FRCH_storm10c_08_03, select = c("DateTime","nitrateuM"))
names(FRCH_storm10c_08_03_NO3) = c("valuedatetime","datavalue")
FRCH_storm10c_08_03_fDOM = subset(FRCH_storm10c_08_03, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm10c_08_03_fDOM) = c("valuedatetime","datavalue")
FRCH_storm10c_08_03_SPC = subset(FRCH_storm10c_08_03, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm10c_08_03_SPC) = c("valuedatetime","datavalue")
FRCH_storm10c_08_03_turb = subset(FRCH_storm10c_08_03, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm10c_08_03_turb) = c("valuedatetime","datavalue")

FRCH_storm11_08_05_Q = subset(FRCH_storm11_08_05, select = c("DateTime","MeanDischarge"))
names(FRCH_storm11_08_05_Q) = c("valuedatetime","datavalue")
FRCH_storm11_08_05_NO3 = subset(FRCH_storm11_08_05, select = c("DateTime","nitrateuM"))
names(FRCH_storm11_08_05_NO3) = c("valuedatetime","datavalue")
FRCH_storm11_08_05_fDOM = subset(FRCH_storm11_08_05, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm11_08_05_fDOM) = c("valuedatetime","datavalue")
FRCH_storm11_08_05_SPC = subset(FRCH_storm11_08_05, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm11_08_05_SPC) = c("valuedatetime","datavalue")
FRCH_storm11_08_05_turb = subset(FRCH_storm11_08_05, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm11_08_05_turb) = c("valuedatetime","datavalue")

FRCH_storm12a_08_12_Q = subset(FRCH_storm12a_08_12, select = c("DateTime","MeanDischarge"))
names(FRCH_storm12a_08_12_Q) = c("valuedatetime","datavalue")
FRCH_storm12a_08_12_NO3 = subset(FRCH_storm12a_08_12, select = c("DateTime","nitrateuM"))
names(FRCH_storm12a_08_12_NO3) = c("valuedatetime","datavalue")
FRCH_storm12a_08_12_fDOM = subset(FRCH_storm12a_08_12, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm12a_08_12_fDOM) = c("valuedatetime","datavalue")
FRCH_storm12a_08_12_SPC = subset(FRCH_storm12a_08_12, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm12a_08_12_SPC) = c("valuedatetime","datavalue")
FRCH_storm12a_08_12_turb = subset(FRCH_storm12a_08_12, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm12a_08_12_turb) = c("valuedatetime","datavalue")

FRCH_storm12b_08_14_Q = subset(FRCH_storm12b_08_14, select = c("DateTime","MeanDischarge"))
names(FRCH_storm12b_08_14_Q) = c("valuedatetime","datavalue")
FRCH_storm12b_08_14_NO3 = subset(FRCH_storm12b_08_14, select = c("DateTime","nitrateuM"))
names(FRCH_storm12b_08_14_NO3) = c("valuedatetime","datavalue")
FRCH_storm12b_08_14_fDOM = subset(FRCH_storm12b_08_14, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm12b_08_14_fDOM) = c("valuedatetime","datavalue")
FRCH_storm12b_08_14_SPC = subset(FRCH_storm12b_08_14, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm12b_08_14_SPC) = c("valuedatetime","datavalue")
FRCH_storm12b_08_14_turb = subset(FRCH_storm12b_08_14, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm12b_08_14_turb) = c("valuedatetime","datavalue")

FRCH_storm12c_08_15_Q = subset(FRCH_storm12c_08_15, select = c("DateTime","MeanDischarge"))
names(FRCH_storm12c_08_15_Q) = c("valuedatetime","datavalue")
FRCH_storm12c_08_15_NO3 = subset(FRCH_storm12c_08_15, select = c("DateTime","nitrateuM"))
names(FRCH_storm12c_08_15_NO3) = c("valuedatetime","datavalue")
FRCH_storm12c_08_15_fDOM = subset(FRCH_storm12c_08_15, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm12c_08_15_fDOM) = c("valuedatetime","datavalue")
FRCH_storm12c_08_15_SPC = subset(FRCH_storm12c_08_15, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm12c_08_15_SPC) = c("valuedatetime","datavalue")
FRCH_storm12c_08_15_turb = subset(FRCH_storm12c_08_15, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm12c_08_15_turb) = c("valuedatetime","datavalue")

FRCH_storm12d_08_21_Q = subset(FRCH_storm12d_08_21, select = c("DateTime","MeanDischarge"))
names(FRCH_storm12d_08_21_Q) = c("valuedatetime","datavalue")
FRCH_storm12d_08_21_NO3 = subset(FRCH_storm12d_08_21, select = c("DateTime","nitrateuM"))
names(FRCH_storm12d_08_21_NO3) = c("valuedatetime","datavalue")
FRCH_storm12d_08_21_fDOM = subset(FRCH_storm12d_08_21, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm12d_08_21_fDOM) = c("valuedatetime","datavalue")
FRCH_storm12d_08_21_SPC = subset(FRCH_storm12d_08_21, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm12d_08_21_SPC) = c("valuedatetime","datavalue")
FRCH_storm12d_08_21_turb = subset(FRCH_storm12d_08_21, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm12d_08_21_turb) = c("valuedatetime","datavalue")

FRCH_storm12e_08_23_Q = subset(FRCH_storm12e_08_23, select = c("DateTime","MeanDischarge"))
names(FRCH_storm12e_08_23_Q) = c("valuedatetime","datavalue")
FRCH_storm12e_08_23_NO3 = subset(FRCH_storm12e_08_23, select = c("DateTime","nitrateuM"))
names(FRCH_storm12e_08_23_NO3) = c("valuedatetime","datavalue")
FRCH_storm12e_08_23_fDOM = subset(FRCH_storm12e_08_23, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm12e_08_23_fDOM) = c("valuedatetime","datavalue")
FRCH_storm12e_08_23_SPC = subset(FRCH_storm12e_08_23, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm12e_08_23_SPC) = c("valuedatetime","datavalue")
FRCH_storm12e_08_23_turb = subset(FRCH_storm12e_08_23, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm12e_08_23_turb) = c("valuedatetime","datavalue")

FRCH_storm13_09_20_Q = subset(FRCH_storm13_09_20, select = c("DateTime","MeanDischarge"))
names(FRCH_storm13_09_20_Q) = c("valuedatetime","datavalue")
FRCH_storm13_09_20_NO3 = subset(FRCH_storm13_09_20, select = c("DateTime","nitrateuM"))
names(FRCH_storm13_09_20_NO3) = c("valuedatetime","datavalue")
FRCH_storm13_09_20_fDOM = subset(FRCH_storm13_09_20, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm13_09_20_fDOM) = c("valuedatetime","datavalue")
FRCH_storm13_09_20_SPC = subset(FRCH_storm13_09_20, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm13_09_20_SPC) = c("valuedatetime","datavalue")
FRCH_storm13_09_20_turb = subset(FRCH_storm13_09_20, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm13_09_20_turb) = c("valuedatetime","datavalue")

FRCH_storm14_10_01_Q = subset(FRCH_storm14_10_01, select = c("DateTime","MeanDischarge"))
names(FRCH_storm14_10_01_Q) = c("valuedatetime","datavalue")
FRCH_storm14_10_01_NO3 = subset(FRCH_storm14_10_01, select = c("DateTime","nitrateuM"))
names(FRCH_storm14_10_01_NO3) = c("valuedatetime","datavalue")
FRCH_storm14_10_01_fDOM = subset(FRCH_storm14_10_01, select = c("DateTime","fDOM.QSU.mn"))
names(FRCH_storm14_10_01_fDOM) = c("valuedatetime","datavalue")
FRCH_storm14_10_01_SPC = subset(FRCH_storm14_10_01, select = c("DateTime","SpCond.uScm.mn"))
names(FRCH_storm14_10_01_SPC) = c("valuedatetime","datavalue")
FRCH_storm14_10_01_turb = subset(FRCH_storm14_10_01, select = c("DateTime","Turbidity.FNU.mn"))
names(FRCH_storm14_10_01_turb) = c("valuedatetime","datavalue")


### Write csv ###
write.csv(FRCH_storm1_05_31, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm1_05_31.csv")
write.csv(FRCH_storm1_05_31_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm1_05_31_Q.csv")
write.csv(FRCH_storm1_05_31_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm1_05_31_NO3.csv")
write.csv(FRCH_storm1_05_31_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm1_05_31_fDOM.csv")
write.csv(FRCH_storm1_05_31_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm1_05_31_SPC.csv")
write.csv(FRCH_storm1_05_31_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm1_05_31_Turb.csv")

write.csv(FRCH_storm2_06_15, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm2_06_15.csv")
write.csv(FRCH_storm2_06_15_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm2_06_15_Q.csv")
write.csv(FRCH_storm2_06_15_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm2_06_15_NO3.csv")
write.csv(FRCH_storm2_06_15_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm2_06_15_fDOM.csv")
write.csv(FRCH_storm2_06_15_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm2_06_15_SPC.csv")
write.csv(FRCH_storm2_06_15_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm2_06_15_Turb.csv")

write.csv(FRCH_storm3_06_18, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm3_06_18.csv")
write.csv(FRCH_storm3_06_18_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm3_06_18_Q.csv")
write.csv(FRCH_storm3_06_18_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm3_06_18_NO3.csv")
write.csv(FRCH_storm3_06_18_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm3_06_18_fDOM.csv")
write.csv(FRCH_storm3_06_18_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm3_06_18_SPC.csv")
write.csv(FRCH_storm3_06_18_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm3_06_18_Turb.csv")

write.csv(FRCH_storm4_06_20, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm4_06_20.csv")
write.csv(FRCH_storm4_06_20_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm4_06_20_Q.csv")
write.csv(FRCH_storm4_06_20_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm4_06_20_NO3.csv")
write.csv(FRCH_storm4_06_20_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm4_06_20_fDOM.csv")
write.csv(FRCH_storm4_06_20_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm4_06_20_SPC.csv")
write.csv(FRCH_storm4_06_20_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm4_06_20_Turb.csv")

write.csv(FRCH_storm5_06_22, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm5_06_22.csv")
write.csv(FRCH_storm5_06_22_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm5_06_22_Q.csv")
write.csv(FRCH_storm5_06_22_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm5_06_22_NO3.csv")
write.csv(FRCH_storm5_06_22_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm5_06_22_fDOM.csv")
write.csv(FRCH_storm5_06_22_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm5_06_22_SPC.csv")
write.csv(FRCH_storm5_06_22_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm5_06_22_Turb.csv")

write.csv(FRCH_storm6_07_12, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm6_07_12.csv")
write.csv(FRCH_storm6_07_12_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm6_07_12_Q.csv")
write.csv(FRCH_storm6_07_12_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm6_07_12_NO3.csv")
write.csv(FRCH_storm6_07_12_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm6_07_12_fDOM.csv")
write.csv(FRCH_storm6_07_12_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm6_07_12_SPC.csv")
write.csv(FRCH_storm6_07_12_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm6_07_12_Turb.csv")

write.csv(FRCH_storm7_07_25, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm7_07_25.csv")
write.csv(FRCH_storm7_07_25_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm7_07_25_Q.csv")
write.csv(FRCH_storm7_07_25_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm7_07_25_NO3.csv")
write.csv(FRCH_storm7_07_25_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm7_07_25_fDOM.csv")
write.csv(FRCH_storm7_07_25_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm7_07_25_SPC.csv")
write.csv(FRCH_storm7_07_25_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm7_07_25_Turb.csv")

write.csv(FRCH_storm8_07_28, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm8_07_28.csv")
write.csv(FRCH_storm8_07_28_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm8_07_28_Q.csv")
write.csv(FRCH_storm8_07_28_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm8_07_28_NO3.csv")
write.csv(FRCH_storm8_07_28_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm8_07_28_fDOM.csv")
write.csv(FRCH_storm8_07_28_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm8_07_28_SPC.csv")
write.csv(FRCH_storm8_07_28_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm8_07_28_Turb.csv")

write.csv(FRCH_storm9a_07_29, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9a_07_29.csv")
write.csv(FRCH_storm9a_07_29_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9a_07_29_Q.csv")
write.csv(FRCH_storm9a_07_29_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9a_07_29_NO3.csv")
write.csv(FRCH_storm9a_07_29_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9a_07_29_fDOM.csv")
write.csv(FRCH_storm9a_07_29_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9a_07_29_SPC.csv")
write.csv(FRCH_storm9a_07_29_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9a_07_29_Turb.csv")

write.csv(FRCH_storm9b_07_30, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9b_07_30.csv")
write.csv(FRCH_storm9b_07_30_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9b_07_30_Q.csv")
write.csv(FRCH_storm9b_07_30_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9b_07_30_NO3.csv")
write.csv(FRCH_storm9b_07_30_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9b_07_30_fDOM.csv")
write.csv(FRCH_storm9b_07_30_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9b_07_30_SPC.csv")
write.csv(FRCH_storm9b_07_30_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9b_07_30_Turb.csv")

write.csv(FRCH_storm10a_08_01, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10a_08_01.csv")
write.csv(FRCH_storm10a_08_01_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10a_08_01_Q.csv")
write.csv(FRCH_storm10a_08_01_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10a_08_01_NO3.csv")
write.csv(FRCH_storm10a_08_01_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10a_08_01_fDOM.csv")
write.csv(FRCH_storm10a_08_01_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10a_08_01_SPC.csv")
write.csv(FRCH_storm10a_08_01_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10a_08_01_Turb.csv")

write.csv(FRCH_storm10b_08_02, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10b_08_02.csv")
write.csv(FRCH_storm10b_08_02_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10b_08_02_Q.csv")
write.csv(FRCH_storm10b_08_02_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10b_08_02_NO3.csv")
write.csv(FRCH_storm10b_08_02_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10b_08_02_fDOM.csv")
write.csv(FRCH_storm10b_08_02_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10b_08_02_SPC.csv")
write.csv(FRCH_storm10b_08_02_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10b_08_02_Turb.csv")

write.csv(FRCH_storm10c_08_03, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10c_08_03.csv")
write.csv(FRCH_storm10c_08_03_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10c_08_03_Q.csv")
write.csv(FRCH_storm10c_08_03_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10c_08_03_NO3.csv")
write.csv(FRCH_storm10c_08_03_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10c_08_03_fDOM.csv")
write.csv(FRCH_storm10c_08_03_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10c_08_03_SPC.csv")
write.csv(FRCH_storm10c_08_03_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10c_08_03_Turb.csv")

write.csv(FRCH_storm11_08_05, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm11_08_05.csv")
write.csv(FRCH_storm11_08_05_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm11_08_05_Q.csv")
write.csv(FRCH_storm11_08_05_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm11_08_05_NO3.csv")
write.csv(FRCH_storm11_08_05_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm11_08_05_fDOM.csv")
write.csv(FRCH_storm11_08_05_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm11_08_05_SPC.csv")
write.csv(FRCH_storm11_08_05_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm11_08_05_Turb.csv")

write.csv(FRCH_storm12a_08_12, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12a_08_12.csv")
write.csv(FRCH_storm12a_08_12_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12a_08_12_Q.csv")
write.csv(FRCH_storm12a_08_12_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12a_08_12_NO3.csv")
write.csv(FRCH_storm12a_08_12_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12a_08_12_fDOM.csv")
write.csv(FRCH_storm12a_08_12_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12a_08_12_SPC.csv")
write.csv(FRCH_storm12a_08_12_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12a_08_12_Turb.csv")

write.csv(FRCH_storm12b_08_14, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12b_08_14.csv")
write.csv(FRCH_storm12b_08_14_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12b_08_14_Q.csv")
write.csv(FRCH_storm12b_08_14_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12b_08_14_NO3.csv")
write.csv(FRCH_storm12b_08_14_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12b_08_14_fDOM.csv")
write.csv(FRCH_storm12b_08_14_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12b_08_14_SPC.csv")
write.csv(FRCH_storm12b_08_14_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12b_08_14_Turb.csv")

write.csv(FRCH_storm12c_08_15, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12c_08_15.csv")
write.csv(FRCH_storm12c_08_15_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12c_08_15_Q.csv")
write.csv(FRCH_storm12c_08_15_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12c_08_15_NO3.csv")
write.csv(FRCH_storm12c_08_15_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12c_08_15_fDOM.csv")
write.csv(FRCH_storm12c_08_15_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12c_08_15_SPC.csv")
write.csv(FRCH_storm12c_08_15_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12c_08_15_Turb.csv")

write.csv(FRCH_storm12d_08_21, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12d_08_21.csv")
write.csv(FRCH_storm12d_08_21_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12d_08_21_Q.csv")
write.csv(FRCH_storm12d_08_21_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12d_08_21_NO3.csv")
write.csv(FRCH_storm12d_08_21_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12d_08_21_fDOM.csv")
write.csv(FRCH_storm12d_08_21_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12d_08_21_SPC.csv")
write.csv(FRCH_storm12d_08_21_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12d_08_21_Turb.csv")

write.csv(FRCH_storm12e_08_23, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12e_08_23.csv")
write.csv(FRCH_storm12e_08_23_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12e_08_23_Q.csv")
write.csv(FRCH_storm12e_08_23_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12e_08_23_NO3.csv")
write.csv(FRCH_storm12e_08_23_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12e_08_23_fDOM.csv")
write.csv(FRCH_storm12e_08_23_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12e_08_23_SPC.csv")
write.csv(FRCH_storm12e_08_23_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12e_08_23_Turb.csv")

write.csv(FRCH_storm13_09_20, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm13_09_20.csv")
write.csv(FRCH_storm13_09_20_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm13_09_20_Q.csv")
write.csv(FRCH_storm13_09_20_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm13_09_20_NO3.csv")
write.csv(FRCH_storm13_09_20_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm13_09_20_fDOM.csv")
write.csv(FRCH_storm13_09_20_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm13_09_20_SPC.csv")
write.csv(FRCH_storm13_09_20_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm13_09_20_Turb.csv")

write.csv(FRCH_storm14_10_01, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm14_10_01.csv")
write.csv(FRCH_storm14_10_01_Q, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm14_10_01_Q.csv")
write.csv(FRCH_storm14_10_01_NO3, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm14_10_01_NO3.csv")
write.csv(FRCH_storm14_10_01_fDOM, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm14_10_01_fDOM.csv")
write.csv(FRCH_storm14_10_01_SPC, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm14_10_01_SPC.csv")
write.csv(FRCH_storm14_10_01_turb, "~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm14_10_01_Turb.csv")

FRCH.st$datetimeAK <- FRCH.st$DateTime
frch.five.fourty.eight$datetimeAK <- frch.five.fourty.eight$DateTime
frch.five.twenty.four$datetimeAK <- frch.five.twenty.four$DateTime
STRT$MeanDischarge <- STRT$Q
#STRT#
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col = "green", lwd = 0.1)
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 105 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 52 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 25 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 300 ~ STRT$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

### Storms ### # STRT #
# Storm 1 #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-30 00:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-05-31 12:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-07 04:00:00", tz="America/Anchorage"), col="purple")

STRT_storm1_05_31 = STRT[STRT$DateTime > as.POSIXct("2019-05-31 12:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2019-06-07 04:00:00", tz="America/Anchorage"),]
plot(STRT_storm1_05_31$MeanDischarge ~ as.POSIXct(STRT_storm1_05_31$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,3000), col="blue", main="STRT 190531 storm 1",
     xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 105 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 30 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 300 ~ STRT$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No storm #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-07 00:00:00","2019-06-14 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-06-07 0:00:00","2019-06-14 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-05-31 19:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-07 13:00:00", tz="America/Anchorage"), col="purple")

# 3 24 hour alarms # No response in discharge or chem...no storms
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-14 00:00:00","2019-06-21 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 105 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-14 00:00:00","2019-06-21 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 52 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-14 00:00:00","2019-06-21 20:00:00"), tz="America/Anchorage"))

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-06-14 0:00:00","2019-06-21 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-05-31 19:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-07 13:00:00", tz="America/Anchorage"), col="purple")

# 24 hour alarm # No response in discharge or chemistry...no storm 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-21 21:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 105 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-21 21:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 52 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-21 21:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"))

par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-06-21 21:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-05-31 19:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-07 13:00:00", tz="America/Anchorage"), col="purple")

# No storms #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-10 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-01 0:00:00","2019-07-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-05-31 19:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-07 13:00:00", tz="America/Anchorage"), col="purple")

# Storm 2 #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-11 00:00:00","2019-07-20 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-11 0:00:00","2019-07-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-12 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-15 17:00:00", tz="America/Anchorage"), col="purple")

STRT_storm2_07_12 = STRT[STRT$DateTime > as.POSIXct("2019-07-12 20:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2019-07-15 17:00:00", tz="America/Anchorage"),]
plot(STRT_storm2_07_12$MeanDischarge ~ as.POSIXct(STRT_storm2_07_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(750,1400), col="blue", main="STRT 190712 storm 2",
     xlim = as.POSIXct(c("2019-07-11 0:00:00","2019-07-20 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 9 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-11 0:00:00","2019-07-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# About 5 storms...continual climb and then a peak and then it goes down and then back up...How do I delineate the first continual rise #
# Storm 3 #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-21 00:00:00","2019-08-14 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-14 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-25 20:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-05 15:45:00", tz="America/Anchorage"), col="purple")


STRT_storm3a_07_25 = STRT[STRT$DateTime > as.POSIXct("2019-07-25 20:45:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2019-08-05 15:45:00", tz="America/Anchorage"),]
plot(STRT_storm3a_07_25$MeanDischarge ~ as.POSIXct(STRT_storm3a_07_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,7000), col="blue", main="STRT 190725 storm 3a",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-14 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 9 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-14 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm b #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-21 00:00:00","2019-08-15 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-05 15:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-08 15:00:00", tz="America/Anchorage"), col="purple")

STRT_storm3b_08_05 = STRT[STRT$DateTime > as.POSIXct("2019-08-05 15:15:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2019-08-08 15:00:00", tz="America/Anchorage"),]
plot(STRT_storm3b_08_05$MeanDischarge ~ as.POSIXct(STRT_storm3b_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,7000), col="blue", main="STRT 190805 storm 3b",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-15 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 3c #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-21 00:00:00","2019-08-15 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-12 21:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-14 17:00:00", tz="America/Anchorage"), col="purple")

STRT_storm3c_08_12 = STRT[STRT$DateTime > as.POSIXct("2019-08-12 21:15:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2019-08-14 17:00:00", tz="America/Anchorage"),]
plot(STRT_storm3c_08_12$MeanDischarge ~ as.POSIXct(STRT_storm3c_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,7000), col="blue", main="STRT 190812 storm 3c",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-15 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-21 0:00:00","2019-08-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 4 #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 105 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-21 21:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 52 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-21 21:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"))

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-15 19:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-20 16:00:00", tz="America/Anchorage"), col="purple")

STRT_storm4_08_15 = STRT[STRT$DateTime > as.POSIXct("2019-08-15 19:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2019-08-20 16:00:00", tz="America/Anchorage"),]
plot(STRT_storm4_08_15$MeanDischarge ~ as.POSIXct(STRT_storm4_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(4000,8000), col="blue", main="STRT 190816 storm 4",
     xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 60 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 150 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5 #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-20 22:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-21 23:00:00", tz="America/Anchorage"), col="purple")

STRT_storm5_08_20 = STRT[STRT$DateTime > as.POSIXct("2019-08-20 22:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2019-08-21 23:00:00", tz="America/Anchorage"),]
plot(STRT_storm5_08_20$MeanDischarge ~ as.POSIXct(STRT_storm5_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(3500,4500), col="blue", main="STRT 190821 storm 5",
     xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 140 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 60 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 200 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-30 0:00:00","2019-06-07 20:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-15 21:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)



#  steep incline in discharge...not correct? maybe check the field notebook...maybe a cleaning   #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-15 00:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-15 0:00:00","2019-08-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-24 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-20 23:00:00", tz="America/Anchorage"), col="purple")

#  no storms   #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-31 00:00:00","2019-09-10 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-31 0:00:00","2019-09-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-24 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-20 23:00:00", tz="America/Anchorage"), col="purple")

# storm 6 #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-20 00:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-09-20 19:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-09-23 09:00:00", tz="America/Anchorage"), col="purple")

STRT_storm6_09_20 = STRT[STRT$DateTime > as.POSIXct("2019-09-20 19:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2019-09-23 09:00:00", tz="America/Anchorage"),]
plot(STRT_storm6_09_20$MeanDischarge ~ as.POSIXct(STRT_storm6_09_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(2000,3000), col="blue", main="STRT 190920 storm 6",
     xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 90 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 45 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 150 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7a  #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-30 00:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-10-01 15:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-04 05:00:00", tz="America/Anchorage"), col="purple")

STRT_storm7a_10_01 = STRT[STRT$DateTime > as.POSIXct("2019-10-01 22:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2019-10-04 05:00:00", tz="America/Anchorage"),]
plot(STRT_storm7a_10_01$MeanDischarge ~ as.POSIXct(STRT_storm7a_10_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(2000,3000), col="blue", main="STRT 191001 storm 7",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 90 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 45 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 150 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7b #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-30 00:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-10-04 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-07 05:00:00", tz="America/Anchorage"), col="purple")

STRT_storm7b_10_04 = STRT[STRT$DateTime > as.POSIXct("2019-10-04 10:15:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2019-10-07 05:00:00", tz="America/Anchorage"),]
plot(STRT_storm7b_10_04$MeanDischarge ~ as.POSIXct(STRT_storm7b_10_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(2000,3000), col="blue", main="STRT 191004 storm 7b",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 90 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 45 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 150 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7c #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-30 00:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-10-09 12:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-12 05:00:00", tz="America/Anchorage"), col="purple")

STRT_storm7c_10_09 = STRT[STRT$DateTime > as.POSIXct("2019-10-09 12:15:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2019-10-12 05:00:00", tz="America/Anchorage"),]
plot(STRT_storm7c_10_09$MeanDischarge ~ as.POSIXct(STRT_storm7c_10_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(2000,3000), col="blue", main="STRT 191009 storm 7c",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 90 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU.mn * 45 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm.mn * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU.mn * 150 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-09-20 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# modify format and save STRT storms # 
STRT_storm1_05_31_Q = subset(STRT_storm1_05_31, select = c("DateTime","MeanDischarge"))
names(STRT_storm1_05_31_Q) = c("valuedatetime","datavalue")
STRT_storm1_05_31_NO3 = subset(STRT_storm1_05_31, select = c("DateTime","nitrateuM"))
names(STRT_storm1_05_31_NO3) = c("valuedatetime","datavalue")
STRT_storm1_05_31_fDOM = subset(STRT_storm1_05_31, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm1_05_31_fDOM) = c("valuedatetime","datavalue")
STRT_storm1_05_31_SPC = subset(STRT_storm1_05_31, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm1_05_31_SPC) = c("valuedatetime","datavalue")
STRT_storm1_05_31_turb = subset(STRT_storm1_05_31, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm1_05_31_turb) = c("valuedatetime","datavalue")

STRT_storm2_07_12_Q = subset(STRT_storm2_07_12, select = c("DateTime","MeanDischarge"))
names(STRT_storm2_07_12_Q) = c("valuedatetime","datavalue")
STRT_storm2_07_12_NO3 = subset(STRT_storm2_07_12, select = c("DateTime","nitrateuM"))
names(STRT_storm2_07_12_NO3) = c("valuedatetime","datavalue")
STRT_storm2_07_12_fDOM = subset(STRT_storm2_07_12, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm2_07_12_fDOM) = c("valuedatetime","datavalue")
STRT_storm2_07_12_SPC = subset(STRT_storm2_07_12, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm2_07_12_SPC) = c("valuedatetime","datavalue")
STRT_storm2_07_12_turb = subset(STRT_storm2_07_12, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm2_07_12_turb) = c("valuedatetime","datavalue")

STRT_storm3a_07_25_Q = subset(STRT_storm3a_07_25, select = c("DateTime","MeanDischarge"))
names(STRT_storm3a_07_25_Q) = c("valuedatetime","datavalue")
STRT_storm3a_07_25_NO3 = subset(STRT_storm3a_07_25, select = c("DateTime","nitrateuM"))
names(STRT_storm3a_07_25_NO3) = c("valuedatetime","datavalue")
STRT_storm3a_07_25_fDOM = subset(STRT_storm3a_07_25, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm3a_07_25_fDOM) = c("valuedatetime","datavalue")
STRT_storm3a_07_25_SPC = subset(STRT_storm3a_07_25, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm3a_07_25_SPC) = c("valuedatetime","datavalue")
STRT_storm3a_07_25_turb = subset(STRT_storm3a_07_25, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm3a_07_25_turb) = c("valuedatetime","datavalue")

STRT_storm3b_08_05_Q = subset(STRT_storm3b_08_05, select = c("DateTime","MeanDischarge"))
names(STRT_storm3b_08_05_Q) = c("valuedatetime","datavalue")
STRT_storm3b_08_05_NO3 = subset(STRT_storm3b_08_05, select = c("DateTime","nitrateuM"))
names(STRT_storm3b_08_05_NO3) = c("valuedatetime","datavalue")
STRT_storm3b_08_05_fDOM = subset(STRT_storm3b_08_05, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm3b_08_05_fDOM) = c("valuedatetime","datavalue")
STRT_storm3b_08_05_SPC = subset(STRT_storm3b_08_05, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm3b_08_05_SPC) = c("valuedatetime","datavalue")
STRT_storm3b_08_05_turb = subset(STRT_storm3b_08_05, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm3b_08_05_turb) = c("valuedatetime","datavalue")

STRT_storm3c_08_12_Q = subset(STRT_storm3c_08_12, select = c("DateTime","MeanDischarge"))
names(STRT_storm3c_08_12_Q) = c("valuedatetime","datavalue")
STRT_storm3c_08_12_NO3 = subset(STRT_storm3c_08_12, select = c("DateTime","nitrateuM"))
names(STRT_storm3c_08_12_NO3) = c("valuedatetime","datavalue")
STRT_storm3c_08_12_fDOM = subset(STRT_storm3c_08_12, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm3c_08_12_fDOM) = c("valuedatetime","datavalue")
STRT_storm3c_08_12_SPC = subset(STRT_storm3c_08_12, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm3c_08_12_SPC) = c("valuedatetime","datavalue")
STRT_storm3c_08_12_turb = subset(STRT_storm3c_08_12, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm3c_08_12_turb) = c("valuedatetime","datavalue")

STRT_storm4_08_15_Q = subset(STRT_storm4_08_15, select = c("DateTime","MeanDischarge"))
names(STRT_storm4_08_15_Q) = c("valuedatetime","datavalue")
STRT_storm4_08_15_NO3 = subset(STRT_storm4_08_15, select = c("DateTime","nitrateuM"))
names(STRT_storm4_08_15_NO3) = c("valuedatetime","datavalue")
STRT_storm4_08_15_fDOM = subset(STRT_storm4_08_15, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm4_08_15_fDOM) = c("valuedatetime","datavalue")
STRT_storm4_08_15_SPC = subset(STRT_storm4_08_15, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm4_08_15_SPC) = c("valuedatetime","datavalue")
STRT_storm4_08_15_turb = subset(STRT_storm4_08_15, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm4_08_15_turb) = c("valuedatetime","datavalue")

STRT_storm5_08_20_Q = subset(STRT_storm5_08_20, select = c("DateTime","MeanDischarge"))
names(STRT_storm5_08_20_Q) = c("valuedatetime","datavalue")
STRT_storm5_08_20_NO3 = subset(STRT_storm5_08_20, select = c("DateTime","nitrateuM"))
names(STRT_storm5_08_20_NO3) = c("valuedatetime","datavalue")
STRT_storm5_08_20_fDOM = subset(STRT_storm5_08_20, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm5_08_20_fDOM) = c("valuedatetime","datavalue")
STRT_storm5_08_20_SPC = subset(STRT_storm5_08_20, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm5_08_20_SPC) = c("valuedatetime","datavalue")
STRT_storm5_08_20_turb = subset(STRT_storm5_08_20, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm5_08_20_turb) = c("valuedatetime","datavalue")

STRT_storm6_09_20_Q = subset(STRT_storm6_09_20, select = c("DateTime","MeanDischarge"))
names(STRT_storm6_09_20_Q) = c("valuedatetime","datavalue")
STRT_storm6_09_20_NO3 = subset(STRT_storm6_09_20, select = c("DateTime","nitrateuM"))
names(STRT_storm6_09_20_NO3) = c("valuedatetime","datavalue")
STRT_storm6_09_20_fDOM = subset(STRT_storm6_09_20, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm6_09_20_fDOM) = c("valuedatetime","datavalue")
STRT_storm6_09_20_SPC = subset(STRT_storm6_09_20, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm6_09_20_SPC) = c("valuedatetime","datavalue")
STRT_storm6_09_20_turb = subset(STRT_storm6_09_20, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm6_09_20_turb) = c("valuedatetime","datavalue")

STRT_storm7a_10_01_Q = subset(STRT_storm7a_10_01, select = c("DateTime","MeanDischarge"))
names(STRT_storm7a_10_01_Q) = c("valuedatetime","datavalue")
STRT_storm7a_10_01_NO3 = subset(STRT_storm7a_10_01, select = c("DateTime","nitrateuM"))
names(STRT_storm7a_10_01_NO3) = c("valuedatetime","datavalue")
STRT_storm7a_10_01_fDOM = subset(STRT_storm7a_10_01, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm7a_10_01_fDOM) = c("valuedatetime","datavalue")
STRT_storm7a_10_01_SPC = subset(STRT_storm7a_10_01, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm7a_10_01_SPC) = c("valuedatetime","datavalue")
STRT_storm7a_10_01_turb = subset(STRT_storm7a_10_01, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm7a_10_01_turb) = c("valuedatetime","datavalue")

STRT_storm7b_10_04_Q = subset(STRT_storm7b_10_04, select = c("DateTime","MeanDischarge"))
names(STRT_storm7b_10_04_Q) = c("valuedatetime","datavalue")
STRT_storm7b_10_04_NO3 = subset(STRT_storm7b_10_04, select = c("DateTime","nitrateuM"))
names(STRT_storm7b_10_04_NO3) = c("valuedatetime","datavalue")
STRT_storm7b_10_04_fDOM = subset(STRT_storm7b_10_04, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm7b_10_04_fDOM) = c("valuedatetime","datavalue")
STRT_storm7b_10_04_SPC = subset(STRT_storm7b_10_04, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm7b_10_04_SPC) = c("valuedatetime","datavalue")
STRT_storm7b_10_04_turb = subset(STRT_storm7b_10_04, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm7b_10_04_turb) = c("valuedatetime","datavalue")

STRT_storm7c_10_09_Q = subset(STRT_storm7c_10_09, select = c("DateTime","MeanDischarge"))
names(STRT_storm7c_10_09_Q) = c("valuedatetime","datavalue")
STRT_storm7c_10_09_NO3 = subset(STRT_storm7c_10_09, select = c("DateTime","nitrateuM"))
names(STRT_storm7c_10_09_NO3) = c("valuedatetime","datavalue")
STRT_storm7c_10_09_fDOM = subset(STRT_storm7c_10_09, select = c("DateTime","fDOM.QSU.mn"))
names(STRT_storm7c_10_09_fDOM) = c("valuedatetime","datavalue")
STRT_storm7c_10_09_SPC = subset(STRT_storm7c_10_09, select = c("DateTime","SpCond.uScm.mn"))
names(STRT_storm7c_10_09_SPC) = c("valuedatetime","datavalue")
STRT_storm7c_10_09_turb = subset(STRT_storm7c_10_09, select = c("DateTime","Turbidity.FNU.mn"))
names(STRT_storm7c_10_09_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(STRT_storm1_05_31, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm1_05_31.csv")
write.csv(STRT_storm1_05_31_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm1_05_31_Q.csv")
write.csv(STRT_storm1_05_31_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm1_05_31_NO3.csv")
write.csv(STRT_storm1_05_31_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm1_05_31_fDOM.csv")
write.csv(STRT_storm1_05_31_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm1_05_31_SPC.csv")
write.csv(STRT_storm1_05_31_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm1_05_31_Turb.csv")

write.csv(STRT_storm2_07_12, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm2_07_12.csv")
write.csv(STRT_storm2_07_12_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm2_07_12_Q.csv")
write.csv(STRT_storm2_07_12_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm2_07_12_NO3.csv")
write.csv(STRT_storm2_07_12_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm2_07_12_fDOM.csv")
write.csv(STRT_storm2_07_12_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm2_07_12_SPC.csv")
write.csv(STRT_storm2_07_12_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm2_07_12_Turb.csv")

write.csv(STRT_storm3a_07_25, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3a_07_25.csv")
write.csv(STRT_storm3a_07_25_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3a_07_25_Q.csv")
write.csv(STRT_storm3a_07_25_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3a_07_25_NO3.csv")
write.csv(STRT_storm3a_07_25_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3a_07_25_fDOM.csv")
write.csv(STRT_storm3a_07_25_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3a_07_25_SPC.csv")
write.csv(STRT_storm3a_07_25_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3a_07_25_Turb.csv")

write.csv(STRT_storm3b_08_05, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3b_08_05.csv")
write.csv(STRT_storm3b_08_05_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3b_08_05_Q.csv")
write.csv(STRT_storm3b_08_05_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3b_08_05_NO3.csv")
write.csv(STRT_storm3b_08_05_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3b_08_05_fDOM.csv")
write.csv(STRT_storm3b_08_05_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3b_08_05_SPC.csv")
write.csv(STRT_storm3b_08_05_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3b_08_05_Turb.csv")

write.csv(STRT_storm3c_08_12, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3c_08_12.csv")
write.csv(STRT_storm3c_08_12_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3c_08_12_Q.csv")
write.csv(STRT_storm3c_08_12_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3c_08_12_NO3.csv")
write.csv(STRT_storm3c_08_12_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3c_08_12_fDOM.csv")
write.csv(STRT_storm3c_08_12_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3c_08_12_SPC.csv")
write.csv(STRT_storm3c_08_12_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3c_08_12_Turb.csv")

write.csv(STRT_storm4_08_15, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm4_08_15.csv")
write.csv(STRT_storm4_08_15_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm4_08_15_Q.csv")
write.csv(STRT_storm4_08_15_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm4_08_15_NO3.csv")
write.csv(STRT_storm4_08_15_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm4_08_15_fDOM.csv")
write.csv(STRT_storm4_08_15_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm4_08_15_SPC.csv")
write.csv(STRT_storm4_08_15_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm4_08_15_Turb.csv")

write.csv(STRT_storm5_08_20, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm5_08_20.csv")
write.csv(STRT_storm5_08_20_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm5_08_20_Q.csv")
write.csv(STRT_storm5_08_20_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm5_08_20_NO3.csv")
write.csv(STRT_storm5_08_20_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm5_08_20_fDOM.csv")
write.csv(STRT_storm5_08_20_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm5_08_20_SPC.csv")
write.csv(STRT_storm5_08_20_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm5_08_20_Turb.csv")

write.csv(STRT_storm6_09_20, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm6_09_20.csv")
write.csv(STRT_storm6_09_20_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm6_09_20_Q.csv")
write.csv(STRT_storm6_09_20_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm6_09_20_NO3.csv")
write.csv(STRT_storm6_09_20_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm6_09_20_fDOM.csv")
write.csv(STRT_storm6_09_20_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm6_09_20_SPC.csv")
write.csv(STRT_storm6_09_20_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm6_09_20_Turb.csv")

write.csv(STRT_storm7a_10_01, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7_10_01.csv")
write.csv(STRT_storm7a_10_01_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7_10_01_Q.csv")
write.csv(STRT_storm7a_10_01_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7_10_01_NO3.csv")
write.csv(STRT_storm7a_10_01_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7_10_01_fDOM.csv")
write.csv(STRT_storm7a_10_01_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7_10_01_SPC.csv")
write.csv(STRT_storm7a_10_01_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7_10_01_Turb.csv")

write.csv(STRT_storm7b_10_04, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7b_10_04.csv")
write.csv(STRT_storm7b_10_04_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7b_10_04_Q.csv")
write.csv(STRT_storm7b_10_04_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7b_10_04_NO3.csv")
write.csv(STRT_storm7b_10_04_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7b_10_04_fDOM.csv")
write.csv(STRT_storm7b_10_04_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7b_10_04_SPC.csv")
write.csv(STRT_storm7b_10_04_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7b_10_04_Turb.csv")

write.csv(STRT_storm7c_10_09, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7c_10_09.csv")
write.csv(STRT_storm7c_10_09_Q, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7c_10_09_Q.csv")
write.csv(STRT_storm7c_10_09_NO3, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7c_10_09_NO3.csv")
write.csv(STRT_storm7c_10_09_fDOM, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7c_10_09_fDOM.csv")
write.csv(STRT_storm7c_10_09_SPC, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7c_10_09_SPC.csv")
write.csv(STRT_storm7c_10_09_turb, "~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7c_10_09_Turb.csv")


vaul.five.fourty.eight$datetimeAK <- vaul.five.fourty.eight$DateTime
vaul.five.twenty.four$datetimeAK <- vaul.five.twenty.four$DateTime
VAUL.st$datetimeAK <- VAUL.st$DateTime
VAUL$MeanDischarge <- VAUL$Q
#VAUL#
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'VAUL precip. (mm)')
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col = "green", lwd = 0.1)
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

### Storms ### 
# VAUL # no alarms in this date frame 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-06-14 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-06-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)

# No alarms in this time frame # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-15 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-06-15 00:00:00","2019-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)

# Storm 1 # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-13 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-15 05:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm1_07_13 = VAUL[VAUL$DateTime > as.POSIXct("2019-07-13 05:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2019-07-15 05:15:00", tz="America/Anchorage"),]
plot(VAUL_storm1_07_13$MeanDischarge ~ as.POSIXct(VAUL_storm1_07_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,200), col="blue", main="VAUL 190713 storm 1",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 6 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 20 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-01 00:00:00","2019-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2 # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-26 01:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-28 05:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm2_07_26 = VAUL[VAUL$DateTime > as.POSIXct("2019-07-26 01:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2019-07-28 05:15:00", tz="America/Anchorage"),]
plot(VAUL_storm2_07_26$MeanDischarge ~ as.POSIXct(VAUL_storm2_07_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,200), col="blue", main="VAUL 190726 storm 2",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.75 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 6 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 20 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-29 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-31 05:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm3_07_29 = VAUL[VAUL$DateTime > as.POSIXct("2019-07-29 05:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2019-07-31 05:15:00", tz="America/Anchorage"),]
plot(VAUL_storm3_07_29$MeanDischarge ~ as.POSIXct(VAUL_storm3_07_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,200), col="blue", main="VAUL 190729 storm 3",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.75 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 6 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 20 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-16 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4a # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-02 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-03 02:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm4a_08_02 = VAUL[VAUL$DateTime > as.POSIXct("2019-08-02 05:15:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2019-08-03 02:15:00", tz="America/Anchorage"),]
plot(VAUL_storm4a_08_02$MeanDischarge ~ as.POSIXct(VAUL_storm4a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(100,500), col="blue", main="VAUL 190802 storm 4a",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.75 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 6 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 20 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4b # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-03 03:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-05 10:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm4b_08_03 = VAUL[VAUL$DateTime > as.POSIXct("2019-08-03 03:15:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2019-08-05 10:15:00", tz="America/Anchorage"),]
plot(VAUL_storm4b_08_03$MeanDischarge ~ as.POSIXct(VAUL_storm4b_08_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(100,400), col="blue", main="VAUL 190803 storm 4b",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.75 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 6 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 20 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4c # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-05 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-12 19:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm4c_08_05 = VAUL[VAUL$DateTime > as.POSIXct("2019-08-05 10:15:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2019-08-12 19:15:00", tz="America/Anchorage"),]
plot(VAUL_storm4c_08_05$MeanDischarge ~ as.POSIXct(VAUL_storm4c_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(100,300), col="blue", main="VAUL 190805 storm 4c",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.75 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 6 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 20 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-01 00:00:00","2019-08-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-10 00:00:00","2019-08-20 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-10 00:00:00","2019-08-20 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-12 21:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-15 18:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm5_08_12 = VAUL[VAUL$DateTime > as.POSIXct("2019-08-12 21:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2019-08-15 18:15:00", tz="America/Anchorage"),]
plot(VAUL_storm5_08_12$MeanDischarge ~ as.POSIXct(VAUL_storm5_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(100,300), col="blue", main="VAUL 190812 storm 5",
     xlim = as.POSIXct(c("2019-08-10 00:00:00","2019-08-20 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.75 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 20 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-10 00:00:00","2019-08-20 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-10 00:00:00","2019-08-20 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-10 00:00:00","2019-08-20 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-15 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-18 14:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm6_08_15 = VAUL[VAUL$DateTime > as.POSIXct("2019-08-15 20:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2019-08-18 14:15:00", tz="America/Anchorage"),]
plot(VAUL_storm6_08_15$MeanDischarge ~ as.POSIXct(VAUL_storm6_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(100,300), col="blue", main="VAUL 190815 storm 6",
     xlim = as.POSIXct(c("2019-08-10 00:00:00","2019-08-20 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.75 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 20 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-10 00:00:00","2019-08-20 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No alarms in this window # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-21 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)


plot(VAUL.st.final$inst_rainfall_mm ~ VAUL.st.final$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-08-21 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)

# No alarms in this window # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-01 00:00:00","2019-09-14 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)


plot(VAUL.st.final$inst_rainfall_mm ~ VAUL.st.final$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-01 00:00:00","2019-09-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)

# storm 7 # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-15 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-15 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-09-19 02:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-09-20 05:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm7_09_19 = VAUL[VAUL$DateTime > as.POSIXct("2019-09-19 02:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2019-09-20 05:15:00", tz="America/Anchorage"),]
plot(VAUL_storm7_09_19$MeanDischarge ~ as.POSIXct(VAUL_storm7_09_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,150), col="blue", main="VAUL 190919 storm 7",
     xlim = as.POSIXct(c("2019-09-15 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.50 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 10 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-15 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 8a # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-09-29 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-01 04:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm8a_09_29 = VAUL[VAUL$DateTime > as.POSIXct("2019-09-29 10:15:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2019-10-01 04:15:00", tz="America/Anchorage"),]
plot(VAUL_storm8a_09_29$MeanDischarge ~ as.POSIXct(VAUL_storm8a_09_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,200), col="blue", main="VAUL 190929 storm 8a",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.50 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 10 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 8b # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-10-01 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-04 04:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm8b_10_01 = VAUL[VAUL$DateTime > as.POSIXct("2019-10-01 20:15:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2019-10-04 04:15:00", tz="America/Anchorage"),]
plot(VAUL_storm8b_10_01$MeanDischarge ~ as.POSIXct(VAUL_storm8b_10_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,300), col="blue", main="VAUL 191001 storm 8b",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.50 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 10 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 8c # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
abline(v = as.POSIXct(vaul.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-10-04 04:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-09 04:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm8c_10_04 = VAUL[VAUL$DateTime > as.POSIXct("2019-10-04 04:15:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2019-10-09 04:15:00", tz="America/Anchorage"),]
plot(VAUL_storm8c_10_04$MeanDischarge ~ as.POSIXct(VAUL_storm8c_10_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,300), col="blue", main="VAUL 191004 storm 8c",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU.mn * 0.50 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm.mn / 3 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU.mn * 10 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-09-25 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# nitrateuM, fDOM.QSU SPC Turb
#Storm 1 #
VAUL_storm1_07_13_Q = subset(VAUL_storm1_07_13, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm1_07_13_Q) = c("valuedatetime","datavalue")
VAUL_storm1_07_13_NO3 = subset(VAUL_storm1_07_13, select = c("DateTime","nitrateuM"))
names(VAUL_storm1_07_13_NO3) = c("valuedatetime","datavalue")
VAUL_storm1_07_13_fDOM = subset(VAUL_storm1_07_13, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm1_07_13_fDOM) = c("valuedatetime","datavalue")
VAUL_storm1_07_13_SPC = subset(VAUL_storm1_07_13, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm1_07_13_SPC) = c("valuedatetime","datavalue")
VAUL_storm1_07_13_turb = subset(VAUL_storm1_07_13, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm1_07_13_turb) = c("valuedatetime","datavalue")


VAUL_storm2_07_26_Q = subset(VAUL_storm2_07_26, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm2_07_26_Q) = c("valuedatetime","datavalue")
VAUL_storm2_07_26_NO3 = subset(VAUL_storm2_07_26, select = c("DateTime","nitrateuM"))
names(VAUL_storm2_07_26_NO3) = c("valuedatetime","datavalue")
VAUL_storm2_07_26_fDOM = subset(VAUL_storm2_07_26, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm2_07_26_fDOM) = c("valuedatetime","datavalue")
VAUL_storm2_07_26_SPC = subset(VAUL_storm2_07_26, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm2_07_26_SPC) = c("valuedatetime","datavalue")
VAUL_storm2_07_26_turb = subset(VAUL_storm2_07_26, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm2_07_26_turb) = c("valuedatetime","datavalue")

VAUL_storm3_07_29_Q = subset(VAUL_storm3_07_29, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm3_07_29_Q) = c("valuedatetime","datavalue")
VAUL_storm3_07_29_NO3 = subset(VAUL_storm3_07_29, select = c("DateTime","nitrateuM"))
names(VAUL_storm3_07_29_NO3) = c("valuedatetime","datavalue")
VAUL_storm3_07_29_fDOM = subset(VAUL_storm3_07_29, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm3_07_29_fDOM) = c("valuedatetime","datavalue")
VAUL_storm3_07_29_SPC = subset(VAUL_storm3_07_29, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm3_07_29_SPC) = c("valuedatetime","datavalue")
VAUL_storm3_07_29_turb = subset(VAUL_storm3_07_29, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm3_07_29_turb) = c("valuedatetime","datavalue")

VAUL_storm4a_08_02_Q = subset(VAUL_storm4a_08_02, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm4a_08_02_Q) = c("valuedatetime","datavalue")
VAUL_storm4a_08_02_NO3 = subset(VAUL_storm4a_08_02, select = c("DateTime","nitrateuM"))
names(VAUL_storm4a_08_02_NO3) = c("valuedatetime","datavalue")
VAUL_storm4a_08_02_fDOM = subset(VAUL_storm4a_08_02, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm4a_08_02_fDOM) = c("valuedatetime","datavalue")
VAUL_storm4a_08_02_SPC = subset(VAUL_storm4a_08_02, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm4a_08_02_SPC) = c("valuedatetime","datavalue")
VAUL_storm4a_08_02_turb = subset(VAUL_storm4a_08_02, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm4a_08_02_turb) = c("valuedatetime","datavalue")

VAUL_storm4b_08_03_Q = subset(VAUL_storm4b_08_03, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm4b_08_03_Q) = c("valuedatetime","datavalue")
VAUL_storm4b_08_03_NO3 = subset(VAUL_storm4b_08_03, select = c("DateTime","nitrateuM"))
names(VAUL_storm4b_08_03_NO3) = c("valuedatetime","datavalue")
VAUL_storm4b_08_03_fDOM = subset(VAUL_storm4b_08_03, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm4b_08_03_fDOM) = c("valuedatetime","datavalue")
VAUL_storm4b_08_03_SPC = subset(VAUL_storm4b_08_03, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm4b_08_03_SPC) = c("valuedatetime","datavalue")
VAUL_storm4b_08_03_turb = subset(VAUL_storm4b_08_03, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm4b_08_03_turb) = c("valuedatetime","datavalue")

VAUL_storm4c_08_05_Q = subset(VAUL_storm4c_08_05, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm4c_08_05_Q) = c("valuedatetime","datavalue")
VAUL_storm4c_08_05_NO3 = subset(VAUL_storm4c_08_05, select = c("DateTime","nitrateuM"))
names(VAUL_storm4c_08_05_NO3) = c("valuedatetime","datavalue")
VAUL_storm4c_08_05_fDOM = subset(VAUL_storm4c_08_05, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm4c_08_05_fDOM) = c("valuedatetime","datavalue")
VAUL_storm4c_08_05_SPC = subset(VAUL_storm4c_08_05, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm4c_08_05_SPC) = c("valuedatetime","datavalue")
VAUL_storm4c_08_05_turb = subset(VAUL_storm4c_08_05, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm4c_08_05_turb) = c("valuedatetime","datavalue")

VAUL_storm5_08_12_Q = subset(VAUL_storm5_08_12, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm5_08_12_Q) = c("valuedatetime","datavalue")
VAUL_storm5_08_12_NO3 = subset(VAUL_storm5_08_12, select = c("DateTime","nitrateuM"))
names(VAUL_storm5_08_12_NO3) = c("valuedatetime","datavalue")
VAUL_storm5_08_12_fDOM = subset(VAUL_storm5_08_12, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm5_08_12_fDOM) = c("valuedatetime","datavalue")
VAUL_storm5_08_12_SPC = subset(VAUL_storm5_08_12, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm5_08_12_SPC) = c("valuedatetime","datavalue")
VAUL_storm5_08_12_turb = subset(VAUL_storm5_08_12, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm5_08_12_turb) = c("valuedatetime","datavalue")

VAUL_storm6_08_15_Q = subset(VAUL_storm6_08_15, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm6_08_15_Q) = c("valuedatetime","datavalue")
VAUL_storm6_08_15_NO3 = subset(VAUL_storm6_08_15, select = c("DateTime","nitrateuM"))
names(VAUL_storm6_08_15_NO3) = c("valuedatetime","datavalue")
VAUL_storm6_08_15_fDOM = subset(VAUL_storm6_08_15, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm6_08_15_fDOM) = c("valuedatetime","datavalue")
VAUL_storm6_08_15_SPC = subset(VAUL_storm6_08_15, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm6_08_15_SPC) = c("valuedatetime","datavalue")
VAUL_storm6_08_15_turb = subset(VAUL_storm6_08_15, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm6_08_15_turb) = c("valuedatetime","datavalue")

VAUL_storm7_09_19_Q = subset(VAUL_storm7_09_19, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm7_09_19_Q) = c("valuedatetime","datavalue")
VAUL_storm7_09_19_NO3 = subset(VAUL_storm7_09_19, select = c("DateTime","nitrateuM"))
names(VAUL_storm7_09_19_NO3) = c("valuedatetime","datavalue")
VAUL_storm7_09_19_fDOM = subset(VAUL_storm7_09_19, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm7_09_19_fDOM) = c("valuedatetime","datavalue")
VAUL_storm7_09_19_SPC = subset(VAUL_storm7_09_19, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm7_09_19_SPC) = c("valuedatetime","datavalue")
VAUL_storm7_09_19_turb = subset(VAUL_storm7_09_19, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm7_09_19_turb) = c("valuedatetime","datavalue")

VAUL_storm8a_09_29_Q = subset(VAUL_storm8a_09_29, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm8a_09_29_Q) = c("valuedatetime","datavalue")
VAUL_storm8a_09_29_NO3 = subset(VAUL_storm8a_09_29, select = c("DateTime","nitrateuM"))
names(VAUL_storm8a_09_29_NO3) = c("valuedatetime","datavalue")
VAUL_storm8a_09_29_fDOM = subset(VAUL_storm8a_09_29, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm8a_09_29_fDOM) = c("valuedatetime","datavalue")
VAUL_storm8a_09_29_SPC = subset(VAUL_storm8a_09_29, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm8a_09_29_SPC) = c("valuedatetime","datavalue")
VAUL_storm8a_09_29_turb = subset(VAUL_storm8a_09_29, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm8a_09_29_turb) = c("valuedatetime","datavalue")

VAUL_storm8b_10_01_Q = subset(VAUL_storm8b_10_01, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm8b_10_01_Q) = c("valuedatetime","datavalue")
VAUL_storm8b_10_01_NO3 = subset(VAUL_storm8b_10_01, select = c("DateTime","nitrateuM"))
names(VAUL_storm8b_10_01_NO3) = c("valuedatetime","datavalue")
VAUL_storm8b_10_01_fDOM = subset(VAUL_storm8b_10_01, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm8b_10_01_fDOM) = c("valuedatetime","datavalue")
VAUL_storm8b_10_01_SPC = subset(VAUL_storm8b_10_01, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm8b_10_01_SPC) = c("valuedatetime","datavalue")
VAUL_storm8b_10_01_turb = subset(VAUL_storm8b_10_01, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm8b_10_01_turb) = c("valuedatetime","datavalue")

VAUL_storm8c_10_04_Q = subset(VAUL_storm8c_10_04, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm8c_10_04_Q) = c("valuedatetime","datavalue")
VAUL_storm8c_10_04_NO3 = subset(VAUL_storm8c_10_04, select = c("DateTime","nitrateuM"))
names(VAUL_storm8c_10_04_NO3) = c("valuedatetime","datavalue")
VAUL_storm8c_10_04_fDOM = subset(VAUL_storm8c_10_04, select = c("DateTime","fDOM.QSU.mn"))
names(VAUL_storm8c_10_04_fDOM) = c("valuedatetime","datavalue")
VAUL_storm8c_10_04_SPC = subset(VAUL_storm8c_10_04, select = c("DateTime","SpCond.uScm.mn"))
names(VAUL_storm8c_10_04_SPC) = c("valuedatetime","datavalue")
VAUL_storm8c_10_04_turb = subset(VAUL_storm8c_10_04, select = c("DateTime","Turbidity.FNU.mn"))
names(VAUL_storm8c_10_04_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(VAUL_storm1_07_13, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm1_07_13.csv")
write.csv(VAUL_storm1_07_13_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm1_07_13_Q.csv")
write.csv(VAUL_storm1_07_13_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm1_07_13_NO3.csv")
write.csv(VAUL_storm1_07_13_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm1_07_13_fDOM.csv")
write.csv(VAUL_storm1_07_13_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm1_07_13_SPC.csv")
write.csv(VAUL_storm1_07_13_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm1_07_13_turb.csv")

write.csv(VAUL_storm2_07_26, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm2_07_26.csv")
write.csv(VAUL_storm2_07_26_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm2_07_26_Q.csv")
write.csv(VAUL_storm2_07_26_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm2_07_26_NO3.csv")
write.csv(VAUL_storm2_07_26_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm2_07_26_fDOM.csv")
write.csv(VAUL_storm2_07_26_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm2_07_26_SPC.csv")
write.csv(VAUL_storm2_07_26_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm2_07_26_turb.csv")

write.csv(VAUL_storm3_07_29, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm3_07_29.csv")
write.csv(VAUL_storm3_07_29_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm3_07_29_Q.csv")
write.csv(VAUL_storm3_07_29_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm3_07_29_NO3.csv")
write.csv(VAUL_storm3_07_29_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm3_07_29_fDOM.csv")
write.csv(VAUL_storm3_07_29_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm3_07_29_SPC.csv")
write.csv(VAUL_storm3_07_29_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm3_07_29_turb.csv")

write.csv(VAUL_storm4a_08_02, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4a_08_02.csv")
write.csv(VAUL_storm4a_08_02_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4a_08_02_Q.csv")
write.csv(VAUL_storm4a_08_02_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4a_08_02_NO3.csv")
write.csv(VAUL_storm4a_08_02_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4a_08_02_fDOM.csv")
write.csv(VAUL_storm4a_08_02_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4a_08_02_SPC.csv")
write.csv(VAUL_storm4a_08_02_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4a_08_02_turb.csv")

write.csv(VAUL_storm4b_08_03, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4b_08_03.csv")
write.csv(VAUL_storm4b_08_03_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4b_08_03_Q.csv")
write.csv(VAUL_storm4b_08_03_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4b_08_03_NO3.csv")
write.csv(VAUL_storm4b_08_03_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4b_08_03_fDOM.csv")
write.csv(VAUL_storm4b_08_03_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4b_08_03_SPC.csv")
write.csv(VAUL_storm4b_08_03_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4b_08_03_turb.csv")

write.csv(VAUL_storm4c_08_05, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4c_08_05.csv")
write.csv(VAUL_storm4c_08_05_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4c_08_05_Q.csv")
write.csv(VAUL_storm4c_08_05_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4c_08_05_NO3.csv")
write.csv(VAUL_storm4c_08_05_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4c_08_05_fDOM.csv")
write.csv(VAUL_storm4c_08_05_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4c_08_05_SPC.csv")
write.csv(VAUL_storm4c_08_05_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4c_08_05_turb.csv")

write.csv(VAUL_storm5_08_12, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm5_08_12.csv")
write.csv(VAUL_storm5_08_12_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm5_08_12_Q.csv")
write.csv(VAUL_storm5_08_12_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm5_08_12_NO3.csv")
write.csv(VAUL_storm5_08_12_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm5_08_12_fDOM.csv")
write.csv(VAUL_storm5_08_12_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm5_08_12_SPC.csv")
write.csv(VAUL_storm5_08_12_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm5_08_12_turb.csv")

write.csv(VAUL_storm6_08_15, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm6_08_15.csv")
write.csv(VAUL_storm6_08_15_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm6_08_15_Q.csv")
write.csv(VAUL_storm6_08_15_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm6_08_15_NO3.csv")
write.csv(VAUL_storm6_08_15_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm6_08_15_fDOM.csv")
write.csv(VAUL_storm6_08_15_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm6_08_15_SPC.csv")
write.csv(VAUL_storm6_08_15_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm6_08_15_turb.csv")

write.csv(VAUL_storm7_09_19, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm7_09_19.csv")
write.csv(VAUL_storm7_09_19_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm7_09_19_Q.csv")
write.csv(VAUL_storm7_09_19_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm7_09_19_NO3.csv")
write.csv(VAUL_storm7_09_19_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm7_09_19_fDOM.csv")
write.csv(VAUL_storm7_09_19_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm7_09_19_SPC.csv")
write.csv(VAUL_storm7_09_19_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm7_09_19_turb.csv")

write.csv(VAUL_storm8a_09_29, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8a_09_29.csv")
write.csv(VAUL_storm8a_09_29_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8a_09_29_Q.csv")
write.csv(VAUL_storm8a_09_29_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8a_09_29_NO3.csv")
write.csv(VAUL_storm8a_09_29_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8a_09_29_fDOM.csv")
write.csv(VAUL_storm8a_09_29_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8a_09_29_SPC.csv")
write.csv(VAUL_storm8a_09_29_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8a_09_29_turb.csv")

write.csv(VAUL_storm8b_10_01, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8b_10_01.csv")
write.csv(VAUL_storm8b_10_01_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8b_10_01_Q.csv")
write.csv(VAUL_storm8b_10_01_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8b_10_01_NO3.csv")
write.csv(VAUL_storm8b_10_01_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8b_10_01_fDOM.csv")
write.csv(VAUL_storm8b_10_01_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8b_10_01_SPC.csv")
write.csv(VAUL_storm8b_10_01_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8b_10_01_turb.csv")

write.csv(VAUL_storm8c_10_04, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8c_10_04.csv")
write.csv(VAUL_storm8c_10_04_Q, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8c_10_04_Q.csv")
write.csv(VAUL_storm8c_10_04_NO3, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8c_10_04_NO3.csv")
write.csv(VAUL_storm8c_10_04_fDOM, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8c_10_04_fDOM.csv")
write.csv(VAUL_storm8c_10_04_SPC, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8c_10_04_SPC.csv")
write.csv(VAUL_storm8c_10_04_turb, "~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8c_10_04_turb.csv")

poke.five.fourty.eight$datetimeAK <- poke.five.fourty.eight$DateTime
poke.five.twenty.four$datetimeAK <- poke.five.twenty.four$DateTime
POKE$MeanDischarge <- POKE$Q

#POKE#
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col = "green", lwd = 0.1)

par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 80 ~ POKE$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

### Storms ### 
# POKE # No alarms in this date frame
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)

# POKE # No alarms in this date frame
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)

# storm 1 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-14 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-30 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-01 07:15:00", tz="America/Anchorage"), col="purple")

POKE_storm1_06_30 = POKE[POKE$DateTime > as.POSIXct("2019-06-30 05:15:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2019-07-01 07:15:00", tz="America/Anchorage"),]
plot(POKE_storm1_06_30$MeanDischarge ~ as.POSIXct(POKE_storm1_06_30$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,300), col="blue", main="POKE 190630 storm 1",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-14 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 1.5 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-14 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-12 07:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-13 06:15:00", tz="America/Anchorage"), col="purple")

POKE_storm2_07_12 = POKE[POKE$DateTime > as.POSIXct("2019-07-12 07:15:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2019-07-13 06:15:00", tz="America/Anchorage"),]
plot(POKE_storm2_07_12$MeanDischarge ~ as.POSIXct(POKE_storm2_07_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="POKE 190712 storm 2",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-14 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 1.5 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 3 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-26 01:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-27 14:15:00", tz="America/Anchorage"), col="purple")

POKE_storm3_07_26 = POKE[POKE$DateTime > as.POSIXct("2019-07-26 01:15:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2019-07-27 14:15:00", tz="America/Anchorage"),]
plot(POKE_storm3_07_26$MeanDischarge ~ as.POSIXct(POKE_storm3_07_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="POKE 190726 storm 3",
     xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 1.5 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 4 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-31 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-02 01:15:00", tz="America/Anchorage"), col="purple")

POKE_storm4_07_31 = POKE[POKE$DateTime > as.POSIXct("2019-07-31 20:15:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2019-08-02 01:15:00", tz="America/Anchorage"),]
plot(POKE_storm4_07_31$MeanDischarge ~ as.POSIXct(POKE_storm4_07_31$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="POKE 190731 storm 4",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 1.5 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5a #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-02 03:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-03 01:15:00", tz="America/Anchorage"), col="purple")

POKE_storm5a_08_02 = POKE[POKE$DateTime > as.POSIXct("2019-08-02 03:15:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2019-08-03 01:15:00", tz="America/Anchorage"),]
plot(POKE_storm5a_08_02$MeanDischarge ~ as.POSIXct(POKE_storm5a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="POKE 190802 storm 5a",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
lines(POKE$nitrateuM * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 1.5 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5b #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-03 01:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-05 13:15:00", tz="America/Anchorage"), col="purple")

POKE_storm5b_08_03 = POKE[POKE$DateTime > as.POSIXct("2019-08-03 01:15:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2019-08-05 13:15:00", tz="America/Anchorage"),]
plot(POKE_storm5b_08_03$MeanDischarge ~ as.POSIXct(POKE_storm5b_08_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="POKE 190803 storm 5b",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 1.5 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5c #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-05 13:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-06 17:15:00", tz="America/Anchorage"), col="purple")

POKE_storm5c_08_05 = POKE[POKE$DateTime > as.POSIXct("2019-08-05 13:15:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2019-08-06 17:15:00", tz="America/Anchorage"),]
plot(POKE_storm5c_08_05$MeanDischarge ~ as.POSIXct(POKE_storm5c_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="POKE 190805 storm 5c",
     xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 8 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 60 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))

par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5d #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-10 06:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-11 07:15:00", tz="America/Anchorage"), col="purple")

POKE_storm5d_08_10 = POKE[POKE$DateTime > as.POSIXct("2019-08-10 06:15:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2019-08-11 07:15:00", tz="America/Anchorage"),]
plot(POKE_storm5d_08_10$MeanDischarge ~ as.POSIXct(POKE_storm5d_08_10$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,1000), col="blue", main="POKE 190810 storm 5d",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 8 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 60 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 6a #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-12 18:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-13 07:15:00", tz="America/Anchorage"), col="purple")

POKE_storm6a_08_12 = POKE[POKE$DateTime > as.POSIXct("2019-08-12 18:15:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2019-08-13 07:15:00", tz="America/Anchorage"),]
plot(POKE_storm6a_08_12$MeanDischarge ~ as.POSIXct(POKE_storm6a_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,1000), col="blue", main="POKE 190810 storm 6a",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 8 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 60 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 6b #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-13 07:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-15 16:15:00", tz="America/Anchorage"), col="purple")

POKE_storm6b_08_13 = POKE[POKE$DateTime > as.POSIXct("2019-08-13 07:15:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2019-08-15 16:15:00", tz="America/Anchorage"),]
plot(POKE_storm6b_08_13$MeanDischarge ~ as.POSIXct(POKE_storm6b_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,1000), col="blue", main="POKE 190813 storm 6b",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 8 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 60 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-15 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-15 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-15 18:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-18 13:15:00", tz="America/Anchorage"), col="purple")

POKE_storm7_08_15 = POKE[POKE$DateTime > as.POSIXct("2019-08-15 18:15:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2019-08-18 13:15:00", tz="America/Anchorage"),]
plot(POKE_storm7_08_15$MeanDischarge ~ as.POSIXct(POKE_storm7_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,1000), col="blue", main="POKE 190815 storm 7",
     xlim = as.POSIXct(c("2019-08-15 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 8 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 60 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-15 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storms? # beaver removal....no alarms 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-25 00:00:00","2019-09-14 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)


plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-25 00:00:00","2019-09-14 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-16 02:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-18 13:15:00", tz="America/Anchorage"), col="purple")

# storm 8 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-15 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-09-15 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-09-29 13:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-09-30 13:15:00", tz="America/Anchorage"), col="purple")

POKE_storm8_09_29 = POKE[POKE$DateTime > as.POSIXct("2019-09-29 13:15:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2019-09-30 13:15:00", tz="America/Anchorage"),]
plot(POKE_storm8_09_29$MeanDischarge ~ as.POSIXct(POKE_storm8_09_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,700), col="blue", main="POKE 190929 storm 8",
     xlim = as.POSIXct(c("2019-09-15 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 3.5 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 100 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-09-15 00:00:00","2019-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 9 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-10-01 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-10-01 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-10-01 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-10-01 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$datetimeAK), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$datetimeAK), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-10-04 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-06 13:15:00", tz="America/Anchorage"), col="purple")

POKE_storm9_10_04 = POKE[POKE$DateTime > as.POSIXct("2019-10-04 08:15:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2019-10-06 13:15:00", tz="America/Anchorage"),]
plot(POKE_storm9_10_04$MeanDischarge ~ as.POSIXct(POKE_storm9_10_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,700), col="blue", main="POKE 191004 storm 9",
     xlim = as.POSIXct(c("2019-10-01 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$fDOM.QSU.mn * 10 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm.mn * 5 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU.mn * 60 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-08-05 13:15:00","2019-08-06 17:15:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-10-01 00:00:00","2019-10-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# nitrateuM, fDOM.QSU SPC Turb
POKE_storm1_06_30_Q = subset(POKE_storm1_06_30, select = c("DateTime", "MeanDischarge"))
names(POKE_storm1_06_30_Q) = c("valuedatetime","datavalue")
POKE_storm1_06_30_NO3 = subset(POKE_storm1_06_30, select = c("DateTime","nitrateuM"))
names(POKE_storm1_06_30_NO3) = c("valuedatetime","datavalue")
POKE_storm1_06_30_fDOM = subset(POKE_storm1_06_30, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm1_06_30_fDOM) = c("valuedatetime","datavalue")
POKE_storm1_06_30_SPC = subset(POKE_storm1_06_30, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm1_06_30_SPC) = c("valuedatetime","datavalue")
POKE_storm1_06_30_turb = subset(POKE_storm1_06_30, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm1_06_30_turb) = c("valuedatetime","datavalue")

#Storm 2 #
POKE_storm2_07_12_Q = subset(POKE_storm2_07_12, select = c("DateTime", "MeanDischarge"))
names(POKE_storm2_07_12_Q) = c("valuedatetime","datavalue")
POKE_storm2_07_12_NO3 = subset(POKE_storm2_07_12, select = c("DateTime","nitrateuM"))
names(POKE_storm2_07_12_NO3) = c("valuedatetime","datavalue")
POKE_storm2_07_12_fDOM = subset(POKE_storm2_07_12, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm2_07_12_fDOM) = c("valuedatetime","datavalue")
POKE_storm2_07_12_SPC = subset(POKE_storm2_07_12, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm2_07_12_SPC) = c("valuedatetime","datavalue")
POKE_storm2_07_12_turb = subset(POKE_storm2_07_12, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm2_07_12_turb) = c("valuedatetime","datavalue")

#Storm 3 #
POKE_storm3_07_26_Q = subset(POKE_storm3_07_26, select = c("DateTime", "MeanDischarge"))
names(POKE_storm3_07_26_Q) = c("valuedatetime","datavalue")
POKE_storm3_07_26_NO3 = subset(POKE_storm3_07_26, select = c("DateTime","nitrateuM"))
names(POKE_storm3_07_26_NO3) = c("valuedatetime","datavalue")
POKE_storm3_07_26_fDOM = subset(POKE_storm3_07_26, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm3_07_26_fDOM) = c("valuedatetime","datavalue")
POKE_storm3_07_26_SPC = subset(POKE_storm3_07_26, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm3_07_26_SPC) = c("valuedatetime","datavalue")
POKE_storm3_07_26_turb = subset(POKE_storm3_07_26, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm3_07_26_turb) = c("valuedatetime","datavalue")

#Storm 4 #
POKE_storm4_07_31_Q = subset(POKE_storm4_07_31, select = c("DateTime", "MeanDischarge"))
names(POKE_storm4_07_31_Q) = c("valuedatetime","datavalue")
POKE_storm4_07_31_NO3 = subset(POKE_storm4_07_31, select = c("DateTime","nitrateuM"))
names(POKE_storm4_07_31_NO3) = c("valuedatetime","datavalue")
POKE_storm4_07_31_fDOM = subset(POKE_storm4_07_31, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm4_07_31_fDOM) = c("valuedatetime","datavalue")
POKE_storm4_07_31_SPC = subset(POKE_storm4_07_31, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm4_07_31_SPC) = c("valuedatetime","datavalue")
POKE_storm4_07_31_turb = subset(POKE_storm4_07_31, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm4_07_31_turb) = c("valuedatetime","datavalue")

#Storm 5a #
POKE_storm5a_08_02_Q = subset(POKE_storm5a_08_02, select = c("DateTime", "MeanDischarge"))
names(POKE_storm5a_08_02_Q) = c("valuedatetime","datavalue")
POKE_storm5a_08_02_NO3 = subset(POKE_storm5a_08_02, select = c("DateTime","nitrateuM"))
names(POKE_storm5a_08_02_NO3) = c("valuedatetime","datavalue")
POKE_storm5a_08_02_fDOM = subset(POKE_storm5a_08_02, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm5a_08_02_fDOM) = c("valuedatetime","datavalue")
POKE_storm5a_08_02_SPC = subset(POKE_storm5a_08_02, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm5a_08_02_SPC) = c("valuedatetime","datavalue")
POKE_storm5a_08_02_turb = subset(POKE_storm5a_08_02, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm5a_08_02_turb) = c("valuedatetime","datavalue")

#Storm 5b #
POKE_storm5b_08_03_Q = subset(POKE_storm5b_08_03, select = c("DateTime", "MeanDischarge"))
names(POKE_storm5b_08_03_Q) = c("valuedatetime","datavalue")
POKE_storm5b_08_03_NO3 = subset(POKE_storm5b_08_03, select = c("DateTime","nitrateuM"))
names(POKE_storm5b_08_03_NO3) = c("valuedatetime","datavalue")
POKE_storm5b_08_03_fDOM = subset(POKE_storm5b_08_03, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm5b_08_03_fDOM) = c("valuedatetime","datavalue")
POKE_storm5b_08_03_SPC = subset(POKE_storm5b_08_03, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm5b_08_03_SPC) = c("valuedatetime","datavalue")
POKE_storm5b_08_03_turb = subset(POKE_storm5b_08_03, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm5b_08_03_turb) = c("valuedatetime","datavalue")

#Storm 5c #
POKE_storm5c_08_05_Q = subset(POKE_storm5c_08_05, select = c("DateTime", "MeanDischarge"))
names(POKE_storm5c_08_05_Q) = c("valuedatetime","datavalue")
POKE_storm5c_08_05_NO3 = subset(POKE_storm5c_08_05, select = c("DateTime","nitrateuM"))
names(POKE_storm5c_08_05_NO3) = c("valuedatetime","datavalue")
POKE_storm5c_08_05_fDOM = subset(POKE_storm5c_08_05, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm5c_08_05_fDOM) = c("valuedatetime","datavalue")
POKE_storm5c_08_05_SPC = subset(POKE_storm5c_08_05, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm5c_08_05_SPC) = c("valuedatetime","datavalue")
POKE_storm5c_08_05_turb = subset(POKE_storm5c_08_05, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm5c_08_05_turb) = c("valuedatetime","datavalue")

#Storm 5d #
POKE_storm5d_08_10_Q = subset(POKE_storm5d_08_10, select = c("DateTime", "MeanDischarge"))
names(POKE_storm5d_08_10_Q) = c("valuedatetime","datavalue")
POKE_storm5d_08_10_NO3 = subset(POKE_storm5d_08_10, select = c("DateTime","nitrateuM"))
names(POKE_storm5d_08_10_NO3) = c("valuedatetime","datavalue")
POKE_storm5d_08_10_fDOM = subset(POKE_storm5d_08_10, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm5d_08_10_fDOM) = c("valuedatetime","datavalue")
POKE_storm5d_08_10_SPC = subset(POKE_storm5d_08_10, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm5d_08_10_SPC) = c("valuedatetime","datavalue")
POKE_storm5d_08_10_turb = subset(POKE_storm5d_08_10, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm5d_08_10_turb) = c("valuedatetime","datavalue")

#Storm 6a #
POKE_storm6a_08_12_Q = subset(POKE_storm6a_08_12, select = c("DateTime", "MeanDischarge"))
names(POKE_storm6a_08_12_Q) = c("valuedatetime","datavalue")
POKE_storm6a_08_12_NO3 = subset(POKE_storm6a_08_12, select = c("DateTime","nitrateuM"))
names(POKE_storm6a_08_12_NO3) = c("valuedatetime","datavalue")
POKE_storm6a_08_12_fDOM = subset(POKE_storm6a_08_12, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm6a_08_12_fDOM) = c("valuedatetime","datavalue")
POKE_storm6a_08_12_SPC = subset(POKE_storm6a_08_12, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm6a_08_12_SPC) = c("valuedatetime","datavalue")
POKE_storm6a_08_12_turb = subset(POKE_storm6a_08_12, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm6a_08_12_turb) = c("valuedatetime","datavalue")

#Storm 6b #
POKE_storm6b_08_13_Q = subset(POKE_storm6b_08_13, select = c("DateTime", "MeanDischarge"))
names(POKE_storm6a_08_13_Q) = c("valuedatetime","datavalue")
POKE_storm6b_08_13_NO3 = subset(POKE_storm6b_08_13, select = c("DateTime","nitrateuM"))
names(POKE_storm6b_08_13_NO3) = c("valuedatetime","datavalue")
POKE_storm6b_08_13_fDOM = subset(POKE_storm6b_08_13, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm6b_08_13_fDOM) = c("valuedatetime","datavalue")
POKE_storm6b_08_13_SPC = subset(POKE_storm6b_08_13, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm6b_08_13_SPC) = c("valuedatetime","datavalue")
POKE_storm6b_08_13_turb = subset(POKE_storm6b_08_13, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm6b_08_13_turb) = c("valuedatetime","datavalue")

#Storm 7 #
POKE_storm7_08_15_Q = subset(POKE_storm7_08_15, select = c("DateTime", "MeanDischarge"))
names(POKE_storm7_08_15_Q) = c("valuedatetime","datavalue")
POKE_storm7_08_15_NO3 = subset(POKE_storm7_08_15, select = c("DateTime","nitrateuM"))
names(POKE_storm7_08_15_NO3) = c("valuedatetime","datavalue")
POKE_storm7_08_15_fDOM = subset(POKE_storm7_08_15, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm7_08_15_fDOM) = c("valuedatetime","datavalue")
POKE_storm7_08_15_SPC = subset(POKE_storm7_08_15, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm7_08_15_SPC) = c("valuedatetime","datavalue")
POKE_storm7_08_15_turb = subset(POKE_storm7_08_15, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm7_08_15_turb) = c("valuedatetime","datavalue")

#Storm 8 #
POKE_storm8_09_29_Q = subset(POKE_storm8_09_29, select = c("DateTime", "MeanDischarge"))
names(POKE_storm8_09_29_Q) = c("valuedatetime","datavalue")
POKE_storm8_09_29_NO3 = subset(POKE_storm8_09_29, select = c("DateTime","nitrateuM"))
names(POKE_storm8_09_29_NO3) = c("valuedatetime","datavalue")
POKE_storm8_09_29_fDOM = subset(POKE_storm8_09_29, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm8_09_29_fDOM) = c("valuedatetime","datavalue")
POKE_storm8_09_29_SPC = subset(POKE_storm8_09_29, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm8_09_29_SPC) = c("valuedatetime","datavalue")
POKE_storm8_09_29_turb = subset(POKE_storm8_09_29, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm8_09_29_turb) = c("valuedatetime","datavalue")

#Storm 9 #
POKE_storm9_10_04_Q = subset(POKE_storm9_10_04, select = c("DateTime", "MeanDischarge"))
names(POKE_storm9_10_04_Q) = c("valuedatetime","datavalue")
POKE_storm9_10_04_NO3 = subset(POKE_storm9_10_04, select = c("DateTime","nitrateuM"))
names(POKE_storm9_10_04_NO3) = c("valuedatetime","datavalue")
POKE_storm9_10_04_fDOM = subset(POKE_storm9_10_04, select = c("DateTime","fDOM.QSU.mn"))
names(POKE_storm9_10_04_fDOM) = c("valuedatetime","datavalue")
POKE_storm9_10_04_SPC = subset(POKE_storm9_10_04, select = c("DateTime","SpCond.uScm.mn"))
names(POKE_storm9_10_04_SPC) = c("valuedatetime","datavalue")
POKE_storm9_10_04_turb = subset(POKE_storm9_10_04, select = c("DateTime","Turbidity.FNU.mn"))
names(POKE_storm9_10_04_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(POKE_storm1_06_30, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm1_06_30.csv")
write.csv(POKE_storm1_06_30_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm1_06_30_Q.csv")
write.csv(POKE_storm1_06_30_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm1_06_30_NO3.csv")
write.csv(POKE_storm1_06_30_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm1_06_30_fDOM.csv")
write.csv(POKE_storm1_06_30_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm1_06_30_SPC.csv")
write.csv(POKE_storm1_06_30_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm1_06_30_Turb.csv")

write.csv(POKE_storm2_07_12, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm2_07_12.csv")
write.csv(POKE_storm2_07_12_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm2_07_12_Q.csv")
write.csv(POKE_storm2_07_12_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm2_07_12_NO3.csv")
write.csv(POKE_storm2_07_12_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm2_07_12_fDOM.csv")
write.csv(POKE_storm2_07_12_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm2_07_12_SPC.csv")
write.csv(POKE_storm2_07_12_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm2_07_12_Turb.csv")

write.csv(POKE_storm3_07_26, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm3_07_26.csv")
write.csv(POKE_storm3_07_26_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm3_07_26_Q.csv")
write.csv(POKE_storm3_07_26_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm3_07_26_NO3.csv")
write.csv(POKE_storm3_07_26_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm3_07_26_fDOM.csv")
write.csv(POKE_storm3_07_26_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm3_07_26_SPC.csv")
write.csv(POKE_storm3_07_26_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm3_07_26_Turb.csv")

write.csv(POKE_storm4_07_31, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm4_07_31.csv")
write.csv(POKE_storm4_07_31_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm4_07_31_Q.csv")
write.csv(POKE_storm4_07_31_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm4_07_31_NO3.csv")
write.csv(POKE_storm4_07_31_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm4_07_31_fDOM.csv")
write.csv(POKE_storm4_07_31_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm4_07_31_SPC.csv")
write.csv(POKE_storm4_07_31_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm4_07_31_Turb.csv")

write.csv(POKE_storm5a_08_02, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5a_08_02.csv")
write.csv(POKE_storm5a_08_02_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5a_08_02_Q.csv")
write.csv(POKE_storm5a_08_02_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5a_08_02_NO3.csv")
write.csv(POKE_storm5a_08_02_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5a_08_02_fDOM.csv")
write.csv(POKE_storm5a_08_02_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5a_08_02_SPC.csv")
write.csv(POKE_storm5a_08_02_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5a_08_02_Turb.csv")

write.csv(POKE_storm5b_08_03, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5b_08_03.csv")
write.csv(POKE_storm5b_08_03_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5b_08_03_Q.csv")
write.csv(POKE_storm5b_08_03_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5b_08_03_NO3.csv")
write.csv(POKE_storm5b_08_03_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5b_08_03_fDOM.csv")
write.csv(POKE_storm5b_08_03_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5b_08_03_SPC.csv")
write.csv(POKE_storm5b_08_03_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5b_08_03_Turb.csv")

write.csv(POKE_storm5c_08_05, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5c_08_05.csv")
write.csv(POKE_storm5c_08_05_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5c_08_05_Q.csv")
write.csv(POKE_storm5c_08_05_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5c_08_05_NO3.csv")
write.csv(POKE_storm5c_08_05_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5c_08_05_fDOM.csv")
write.csv(POKE_storm5c_08_05_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5c_08_05_SPC.csv")
write.csv(POKE_storm5c_08_05_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5c_08_05_Turb.csv")

write.csv(POKE_storm5d_08_10, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5d_08_10.csv")
write.csv(POKE_storm5d_08_10_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5d_08_10_Q.csv")
write.csv(POKE_storm5d_08_10_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5d_08_10_NO3.csv")
write.csv(POKE_storm5d_08_10_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5d_08_10_fDOM.csv")
write.csv(POKE_storm5d_08_10_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5d_08_10_SPC.csv")
write.csv(POKE_storm5d_08_10_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5d_08_10_Turb.csv")

write.csv(POKE_storm6a_08_12, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6a_08_12.csv")
write.csv(POKE_storm6a_08_12_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6a_08_12_Q.csv")
write.csv(POKE_storm6a_08_12_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6a_08_12_NO3.csv")
write.csv(POKE_storm6a_08_12_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6a_08_12_fDOM.csv")
write.csv(POKE_storm6a_08_12_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6a_08_12_SPC.csv")
write.csv(POKE_storm6a_08_12_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6a_08_12_Turb.csv")

write.csv(POKE_storm6b_08_13, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6b_08_13.csv")
write.csv(POKE_storm6b_08_13_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6b_08_13_Q.csv")
write.csv(POKE_storm6b_08_13_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6b_08_13_NO3.csv")
write.csv(POKE_storm6b_08_13_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6b_08_13_fDOM.csv")
write.csv(POKE_storm6b_08_13_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6b_08_13_SPC.csv")
write.csv(POKE_storm6b_08_13_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6b_08_13_Turb.csv")

write.csv(POKE_storm7_08_15, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm7_08_15.csv")
write.csv(POKE_storm7_08_15_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm7_08_15_Q.csv")
write.csv(POKE_storm7_08_15_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm7_08_15_NO3.csv")
write.csv(POKE_storm7_08_15_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm7_08_15_fDOM.csv")
write.csv(POKE_storm7_08_15_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm7_08_15_SPC.csv")
write.csv(POKE_storm7_08_15_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm7_08_15_Turb.csv")

write.csv(POKE_storm8_09_29, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm8_09_29.csv")
write.csv(POKE_storm8_09_29_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm8_09_29_Q.csv")
write.csv(POKE_storm8_09_29_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm8_09_29_NO3.csv")
write.csv(POKE_storm8_09_29_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm8_09_29_fDOM.csv")
write.csv(POKE_storm8_09_29_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm8_09_29_SPC.csv")
write.csv(POKE_storm8_09_29_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm8_09_29_Turb.csv")

write.csv(POKE_storm9_10_04, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm9_10_04.csv")
write.csv(POKE_storm9_10_04_Q, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm9_10_04_Q.csv")
write.csv(POKE_storm9_10_04_NO3, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm9_10_04_NO3.csv")
write.csv(POKE_storm9_10_04_fDOM, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm9_10_04_fDOM.csv")
write.csv(POKE_storm9_10_04_SPC, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm9_10_04_SPC.csv")
write.csv(POKE_storm9_10_04_turb, "~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm9_10_04_Turb.csv")

#MOOS#
MOOS$MeanDischarge <- MOOS$Q
# FRCH rain gauge installed on the 11th of June. 
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-11-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col = "green", lwd = 0.1)

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)

plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-11-01 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(MOOS$nitrateuM * 55 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))


### STORMS MOOS ###
# Storm 1 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-06-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-06-01 0:00:00","2019-06-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-01 00:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-08 08:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm1_06_01 = MOOS[MOOS$DateTime > as.POSIXct("2019-06-01 00:15:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2019-06-08 08:00:00", tz="America/Anchorage"),]
plot(MOOS_storm1_06_01$MeanDischarge ~ as.POSIXct(MOOS_storm1_06_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,3000), col="blue", main="MOOS 190601 storm 1",
     xlim = as.POSIXct(c("2019-06-01 0:00:00","2019-06-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 55 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-06-01 0:00:00","2019-06-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# 3 alarms go off for 24 hour window but not a lot of response in discharge or chem no storm # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-11 00:00:00","2019-06-20 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(MOOS$nitrateuM * 55 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-06-11 0:00:00","2019-06-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-01 06:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-08 16:00:00", tz="America/Anchorage"), col="purple")

# 1 alarm go off for 24 hour window but not a lot of response in discharge # 
# second alarm i see a slight response in fdom...im going to delineate it and see what happens
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-21 00:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(MOOS$nitrateuM * 55 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-06-21 0:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-22 06:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-23 05:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm2_06_22 = MOOS[MOOS$DateTime > as.POSIXct("2019-06-22 06:15:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2019-06-23 05:00:00", tz="America/Anchorage"),]
plot(MOOS_storm2_06_22$MeanDischarge ~ as.POSIXct(MOOS_storm2_06_22$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1000), col="blue", main="MOOS 190622 storm 2",
     xlim = as.POSIXct(c("2019-06-21 0:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-06-21 0:00:00","2019-06-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No alarms # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-30 00:00:00","2019-07-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-06-30 0:00:00","2019-07-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-01 06:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-06-08 16:00:00", tz="America/Anchorage"), col="purple")

# storm 3 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-11 00:00:00","2019-07-20 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-11 0:00:00","2019-07-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-12 17:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-15 08:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm3_07_12 = MOOS[MOOS$DateTime > as.POSIXct("2019-07-12 17:15:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2019-07-15 08:00:00", tz="America/Anchorage"),]
plot(MOOS_storm3_07_12$MeanDischarge ~ as.POSIXct(MOOS_storm3_07_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1000), col="blue", main="MOOS 190713 storm 3",
     xlim = as.POSIXct(c("2019-07-11 0:00:00","2019-07-20 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 5 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 20 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-07-11 0:00:00","2019-07-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4 #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-25 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-28 08:15:00", tz="America/Anchorage"), col="purple")

MOOS_storm4_07_25 = MOOS[MOOS$DateTime > as.POSIXct("2019-07-25 23:00:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2019-07-28 15:15:00", tz="America/Anchorage"),]
plot(MOOS_storm4_07_25$MeanDischarge ~ as.POSIXct(MOOS_storm4_07_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1000), col="blue", main="MOOS 190725 storm 4",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 5 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# 5 #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-29 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-01 03:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm5_07_29 = MOOS[MOOS$DateTime > as.POSIXct("2019-07-29 08:15:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2019-08-01 03:00:00", tz="America/Anchorage"),]
plot(MOOS_storm5_07_29$MeanDischarge ~ as.POSIXct(MOOS_storm5_07_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1000), col="blue", main="MOOS 190729 storm 5",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 5 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# 6a #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-01 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-02 10:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm6a_08_01 = MOOS[MOOS$DateTime > as.POSIXct("2019-08-01 05:15:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2019-08-02 10:00:00", tz="America/Anchorage"),]
plot(MOOS_storm6a_08_01$MeanDischarge ~ as.POSIXct(MOOS_storm6a_08_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1000), col="blue", main="MOOS 190801 storm 6",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 5 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# 6b #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-02 10:0:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-03 10:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm6b_08_02 = MOOS[MOOS$DateTime > as.POSIXct("2019-08-02 10:0:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2019-08-03 10:00:00", tz="America/Anchorage"),]
plot(MOOS_storm6b_08_02$MeanDischarge ~ as.POSIXct(MOOS_storm6b_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,2000), col="blue", main="MOOS 190802 storm 6b",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 5 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# 6c #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-03 10:0:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-05 18:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm6c_08_03 = MOOS[MOOS$DateTime > as.POSIXct("2019-08-03 10:0:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2019-08-05 18:00:00", tz="America/Anchorage"),]
plot(MOOS_storm6c_08_03$MeanDischarge ~ as.POSIXct(MOOS_storm6c_08_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,2250), col="blue", main="MOOS 190803 storm 6c",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 5 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# 6d #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-05 18:0:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-10 18:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm6d_08_05 = MOOS[MOOS$DateTime > as.POSIXct("2019-08-05 18:0:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2019-08-10 18:00:00", tz="America/Anchorage"),]
plot(MOOS_storm6d_08_05$MeanDischarge ~ as.POSIXct(MOOS_storm6d_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,2500), col="blue", main="MOOS 190805 storm 6d",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 5 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-07-20 23:45:00","2019-08-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# 1 storm on top of the other #
# 7a #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-13 04:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-14 22:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm7a_08_13 = MOOS[MOOS$DateTime > as.POSIXct("2019-08-13 04:15:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2019-08-14 22:00:00", tz="America/Anchorage"),]
plot(MOOS_storm7a_08_13$MeanDischarge ~ as.POSIXct(MOOS_storm7a_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,3000), col="blue", main="MOOS 190813 storm 7a",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 5 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# 7b #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-14 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-15 20:15:00", tz="America/Anchorage"), col="purple")

MOOS_storm7b_08_14 = MOOS[MOOS$DateTime > as.POSIXct("2019-08-14 23:00:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2019-08-15 20:15:00", tz="America/Anchorage"),]
plot(MOOS_storm7b_08_14$MeanDischarge ~ as.POSIXct(MOOS_storm7b_08_14$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,3000), col="blue", main="MOOS 190814 storm 7b",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 12 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 20 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# 7c #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-11 00:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-15 22:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-20 10:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm7c_08_15 = MOOS[MOOS$DateTime > as.POSIXct("2019-08-15 22:15:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2019-08-20 10:00:00", tz="America/Anchorage"),]
plot(MOOS_storm7c_08_15$MeanDischarge ~ as.POSIXct(MOOS_storm7c_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,5000), col="blue", main="MOOS 190815 storm 7c",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-25 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 17 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 25 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-08-11 0:00:00","2019-08-25 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# alarm on the down swing of the last storm # no response in discharge or chem no storm 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-20 20:15:00","2019-08-31 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(MOOS$nitrateuM * 55 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-08-20 20:15:00","2019-08-31 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-16 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-20 18:00:00", tz="America/Anchorage"), col="purple")

# No alarms #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-31 00:00:00","2019-09-10 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-08-31 0:00:00","2019-09-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-16 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-20 18:00:00", tz="America/Anchorage"), col="purple")

# Storm 8 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-11 00:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-09-11 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-09-21 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-09-23 04:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm8_09_21 = MOOS[MOOS$DateTime > as.POSIXct("2019-09-21 08:15:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2019-09-23 04:00:00", tz="America/Anchorage"),]
plot(MOOS_storm8_09_21$MeanDischarge ~ as.POSIXct(MOOS_storm8_09_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,3000), col="blue", main="MOOS 190921 storm 8",
     xlim = as.POSIXct(c("2019-09-11 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-09-11 0:00:00","2019-09-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# Storm 9 #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-30 00:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-10-02 03:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-10-07 16:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm9_10_02 = MOOS[MOOS$DateTime > as.POSIXct("2019-10-02 03:15:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2019-10-07 16:00:00", tz="America/Anchorage"),]

plot(MOOS_storm9_10_02$MeanDischarge ~ as.POSIXct(MOOS_storm9_10_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,3000), col="blue", main="MOOS 191002 storm 9",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU.mn * 8 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm.mn * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU.mn * 70 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$Datetime, type="h",
     xlim = as.POSIXct(c("2019-09-30 0:00:00","2019-10-15 20:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# nitrateuM, fDOM.QSU  MOOS #
# Storm 1 #
MOOS_storm1_06_01_Q = subset(MOOS_storm1_06_01, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm1_06_01_Q) = c("valuedatetime","datavalue")
MOOS_storm1_06_01_NO3 = subset(MOOS_storm1_06_01, select = c("DateTime","nitrateuM"))
names(MOOS_storm1_06_01_NO3) = c("valuedatetime","datavalue")
MOOS_storm1_06_01_fDOM = subset(MOOS_storm1_06_01, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm1_06_01_fDOM) = c("valuedatetime","datavalue")
MOOS_storm1_06_01_SPC = subset(MOOS_storm1_06_01, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm1_06_01_SPC) = c("valuedatetime","datavalue")
MOOS_storm1_06_01_turb = subset(MOOS_storm1_06_01, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm1_06_01_turb) = c("valuedatetime","datavalue")

#MOOS_storm2_06_01_Q = subset(MOOS_storm1_06_01, select = c("DateTime", "MeanDischarge"))
#names(MOOS_storm1_06_01_Q) = c("valuedatetime","datavalue")
#MOOS_storm1_06_01_NO3 = subset(MOOS_storm1_06_01, select = c("DateTime","nitrateuM"))
#names(MOOS_storm1_06_01_NO3) = c("valuedatetime","datavalue")
#MOOS_storm1_06_01_fDOM = subset(MOOS_storm1_06_01, select = c("DateTime","fDOM.QSU.mn"))
#names(MOOS_storm1_06_01_fDOM) = c("valuedatetime","datavalue")
#MOOS_storm1_06_01_SPC = subset(MOOS_storm1_06_01, select = c("DateTime","SpCond.uScm.mn"))
#names(MOOS_storm1_06_01_SPC) = c("valuedatetime","datavalue")
#MOOS_storm1_06_01_turb = subset(MOOS_storm1_06_01, select = c("DateTime","Turbidity.FNU.mn"))
#names(MOOS_storm1_06_01_turb) = c("valuedatetime","datavalue")

MOOS_storm3_07_12_Q = subset(MOOS_storm3_07_12, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm3_07_12_Q) = c("valuedatetime","datavalue")
MOOS_storm3_07_12_NO3 = subset(MOOS_storm3_07_12, select = c("DateTime","nitrateuM"))
names(MOOS_storm3_07_12_NO3) = c("valuedatetime","datavalue")
MOOS_storm3_07_12_fDOM = subset(MOOS_storm3_07_12, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm3_07_12_fDOM) = c("valuedatetime","datavalue")
MOOS_storm3_07_12_SPC = subset(MOOS_storm3_07_12, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm3_07_12_SPC) = c("valuedatetime","datavalue")
MOOS_storm3_07_12_turb = subset(MOOS_storm3_07_12, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm3_07_12_turb) = c("valuedatetime","datavalue")

MOOS_storm4_07_25_Q = subset(MOOS_storm4_07_25, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm4_07_25_Q) = c("valuedatetime","datavalue")
MOOS_storm4_07_25_NO3 = subset(MOOS_storm4_07_25, select = c("DateTime","nitrateuM"))
names(MOOS_storm4_07_25_NO3) = c("valuedatetime","datavalue")
MOOS_storm4_07_25_fDOM = subset(MOOS_storm4_07_25, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm4_07_25_fDOM) = c("valuedatetime","datavalue")
MOOS_storm4_07_25_SPC = subset(MOOS_storm4_07_25, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm4_07_25_SPC) = c("valuedatetime","datavalue")
MOOS_storm4_07_25_turb = subset(MOOS_storm4_07_25, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm4_07_25_turb) = c("valuedatetime","datavalue")

MOOS_storm5_07_29_Q = subset(MOOS_storm5_07_29, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm5_07_29_Q) = c("valuedatetime","datavalue")
MOOS_storm5_07_29_NO3 = subset(MOOS_storm5_07_29, select = c("DateTime","nitrateuM"))
names(MOOS_storm5_07_29_NO3) = c("valuedatetime","datavalue")
MOOS_storm5_07_29_fDOM = subset(MOOS_storm5_07_29, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm5_07_29_fDOM) = c("valuedatetime","datavalue")
MOOS_storm5_07_29_SPC = subset(MOOS_storm5_07_29, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm5_07_29_SPC) = c("valuedatetime","datavalue")
MOOS_storm5_07_29_turb = subset(MOOS_storm5_07_29, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm5_07_29_turb) = c("valuedatetime","datavalue")

MOOS_storm6a_08_01_Q = subset(MOOS_storm6a_08_01, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm6a_08_01_Q) = c("valuedatetime","datavalue")
MOOS_storm6a_08_01_NO3 = subset(MOOS_storm6a_08_01, select = c("DateTime","nitrateuM"))
names(MOOS_storm6a_08_01_NO3) = c("valuedatetime","datavalue")
MOOS_storm6a_08_01_fDOM = subset(MOOS_storm6a_08_01, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm6a_08_01_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6a_08_01_SPC = subset(MOOS_storm6a_08_01, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm6a_08_01_SPC) = c("valuedatetime","datavalue")
MOOS_storm6a_08_01_turb = subset(MOOS_storm6a_08_01, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm6a_08_01_turb) = c("valuedatetime","datavalue")

MOOS_storm6b_08_02_Q = subset(MOOS_storm6b_08_02, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm6b_08_02_Q) = c("valuedatetime","datavalue")
MOOS_storm6b_08_02_NO3 = subset(MOOS_storm6b_08_02, select = c("DateTime","nitrateuM"))
names(MOOS_storm6b_08_02_NO3) = c("valuedatetime","datavalue")
MOOS_storm6b_08_02_fDOM = subset(MOOS_storm6b_08_02, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm6b_08_02_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6b_08_02_SPC = subset(MOOS_storm6b_08_02, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm6b_08_02_SPC) = c("valuedatetime","datavalue")
MOOS_storm6b_08_02_turb = subset(MOOS_storm6b_08_02, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm6b_08_02_turb) = c("valuedatetime","datavalue")

MOOS_storm6c_08_03_Q = subset(MOOS_storm6c_08_03, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm6c_08_03_Q) = c("valuedatetime","datavalue")
MOOS_storm6c_08_03_NO3 = subset(MOOS_storm6c_08_03, select = c("DateTime","nitrateuM"))
names(MOOS_storm6c_08_03_NO3) = c("valuedatetime","datavalue")
MOOS_storm6c_08_03_fDOM = subset(MOOS_storm6c_08_03, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm6c_08_03_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6c_08_03_SPC = subset(MOOS_storm6c_08_03, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm6c_08_03_SPC) = c("valuedatetime","datavalue")
MOOS_storm6c_08_03_turb = subset(MOOS_storm6c_08_03, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm6c_08_03_turb) = c("valuedatetime","datavalue")

MOOS_storm6d_08_05_Q = subset(MOOS_storm6d_08_05, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm6d_08_05_Q) = c("valuedatetime","datavalue")
MOOS_storm6d_08_05_NO3 = subset(MOOS_storm6d_08_05, select = c("DateTime","nitrateuM"))
names(MOOS_storm6d_08_05_NO3) = c("valuedatetime","datavalue")
MOOS_storm6d_08_05_fDOM = subset(MOOS_storm6d_08_05, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm6d_08_05_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6d_08_05_SPC = subset(MOOS_storm6d_08_05, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm6d_08_05_SPC) = c("valuedatetime","datavalue")
MOOS_storm6d_08_05_turb = subset(MOOS_storm6d_08_05, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm6d_08_05_turb) = c("valuedatetime","datavalue")

MOOS_storm7a_08_13_Q = subset(MOOS_storm7a_08_13, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm7a_08_13_Q) = c("valuedatetime","datavalue")
MOOS_storm7a_08_13_NO3 = subset(MOOS_storm7a_08_13, select = c("DateTime","nitrateuM"))
names(MOOS_storm7a_08_13_NO3) = c("valuedatetime","datavalue")
MOOS_storm7a_08_13_fDOM = subset(MOOS_storm7a_08_13, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm7a_08_13_fDOM) = c("valuedatetime","datavalue")
MOOS_storm7a_08_13_SPC = subset(MOOS_storm7a_08_13, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm7a_08_13_SPC) = c("valuedatetime","datavalue")
MOOS_storm7a_08_13_turb = subset(MOOS_storm7a_08_13, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm7a_08_13_turb) = c("valuedatetime","datavalue")

MOOS_storm7b_08_14_Q = subset(MOOS_storm7b_08_14, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm7b_08_14_Q) = c("valuedatetime","datavalue")
MOOS_storm7b_08_14_NO3 = subset(MOOS_storm7b_08_14, select = c("DateTime","nitrateuM"))
names(MOOS_storm7b_08_14_NO3) = c("valuedatetime","datavalue")
MOOS_storm7b_08_14_fDOM = subset(MOOS_storm7b_08_14, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm7b_08_14_fDOM) = c("valuedatetime","datavalue")
MOOS_storm7b_08_14_SPC = subset(MOOS_storm7b_08_14, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm7b_08_14_SPC) = c("valuedatetime","datavalue")
MOOS_storm7b_08_14_turb = subset(MOOS_storm7b_08_14, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm7b_08_14_turb) = c("valuedatetime","datavalue")

MOOS_storm7c_08_15_Q = subset(MOOS_storm7c_08_15, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm7c_08_15_Q) = c("valuedatetime","datavalue")
MOOS_storm7c_08_15_NO3 = subset(MOOS_storm7c_08_15, select = c("DateTime","nitrateuM"))
names(MOOS_storm7c_08_15_NO3) = c("valuedatetime","datavalue")
MOOS_storm7c_08_15_fDOM = subset(MOOS_storm7c_08_15, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm7c_08_15_fDOM) = c("valuedatetime","datavalue")
MOOS_storm7c_08_15_SPC = subset(MOOS_storm7c_08_15, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm7c_08_15_SPC) = c("valuedatetime","datavalue")
MOOS_storm7c_08_15_turb = subset(MOOS_storm7c_08_15, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm7c_08_15_turb) = c("valuedatetime","datavalue")

MOOS_storm8_09_21_Q = subset(MOOS_storm8_09_21, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm8_09_21_Q) = c("valuedatetime","datavalue")
MOOS_storm8_09_21_NO3 = subset(MOOS_storm8_09_21, select = c("DateTime","nitrateuM"))
names(MOOS_storm8_09_21_NO3) = c("valuedatetime","datavalue")
MOOS_storm8_09_21_fDOM = subset(MOOS_storm8_09_21, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm8_09_21_fDOM) = c("valuedatetime","datavalue")
MOOS_storm8_09_21_SPC = subset(MOOS_storm8_09_21, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm8_09_21_SPC) = c("valuedatetime","datavalue")
MOOS_storm8_09_21_turb = subset(MOOS_storm8_09_21, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm8_09_21_turb) = c("valuedatetime","datavalue")

MOOS_storm9_10_02_Q = subset(MOOS_storm9_10_02, select = c("DateTime", "MeanDischarge"))
names(MOOS_storm9_10_02_Q) = c("valuedatetime","datavalue")
MOOS_storm9_10_02_NO3 = subset(MOOS_storm9_10_02, select = c("DateTime","nitrateuM"))
names(MOOS_storm9_10_02_NO3) = c("valuedatetime","datavalue")
MOOS_storm9_10_02_fDOM = subset(MOOS_storm9_10_02, select = c("DateTime","fDOM.QSU.mn"))
names(MOOS_storm9_10_02_fDOM) = c("valuedatetime","datavalue")
MOOS_storm9_10_02_SPC = subset(MOOS_storm9_10_02, select = c("DateTime","SpCond.uScm.mn"))
names(MOOS_storm9_10_02_SPC) = c("valuedatetime","datavalue")
MOOS_storm9_10_02_turb = subset(MOOS_storm9_10_02, select = c("DateTime","Turbidity.FNU.mn"))
names(MOOS_storm9_10_02_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(MOOS_storm1_06_01, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm1_06_01.csv")
write.csv(MOOS_storm1_06_01_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm1_06_01_Q.csv")
write.csv(MOOS_storm1_06_01_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm1_06_01_NO3.csv")
write.csv(MOOS_storm1_06_01_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm1_06_01_fDOM.csv")
write.csv(MOOS_storm1_06_01_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm1_06_01_SPC.csv")
write.csv(MOOS_storm1_06_01_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm1_06_01_Turb.csv")

write.csv(MOOS_storm3_07_12, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm3_07_12.csv")
write.csv(MOOS_storm3_07_12_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm3_07_12_Q.csv")
write.csv(MOOS_storm3_07_12_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm3_07_12_NO3.csv")
write.csv(MOOS_storm3_07_12_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm3_07_12_fDOM.csv")
write.csv(MOOS_storm3_07_12_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm3_07_12_SPC.csv")
write.csv(MOOS_storm3_07_12_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm3_07_12_Turb.csv")

write.csv(MOOS_storm4_07_25, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm4_07_25.csv")
write.csv(MOOS_storm4_07_25_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm4_07_25_Q.csv")
write.csv(MOOS_storm4_07_25_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm4_07_25_NO3.csv")
write.csv(MOOS_storm4_07_25_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm4_07_25_fDOM.csv")
write.csv(MOOS_storm4_07_25_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm4_07_25_SPC.csv")
write.csv(MOOS_storm4_07_25_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm4_07_25_Turb.csv")

write.csv(MOOS_storm5_07_29, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm5_07_29.csv")
write.csv(MOOS_storm5_07_29_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm5_07_29_Q.csv")
write.csv(MOOS_storm5_07_29_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm5_07_29_NO3.csv")
write.csv(MOOS_storm5_07_29_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm5_07_29_fDOM.csv")
write.csv(MOOS_storm5_07_29_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm5_07_29_SPC.csv")
write.csv(MOOS_storm5_07_29_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm5_07_29_Turb.csv")

write.csv(MOOS_storm6a_08_01, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6a_08_01.csv")
write.csv(MOOS_storm6a_08_01_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6a_08_01_Q.csv")
write.csv(MOOS_storm6a_08_01_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6a_08_01_NO3.csv")
write.csv(MOOS_storm6a_08_01_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6a_08_01_fDOM.csv")
write.csv(MOOS_storm6a_08_01_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6a_08_01_SPC.csv")
write.csv(MOOS_storm6a_08_01_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6a_08_01_Turb.csv")

write.csv(MOOS_storm6b_08_02, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6b_08_02.csv")
write.csv(MOOS_storm6b_08_02_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6b_08_02_Q.csv")
write.csv(MOOS_storm6b_08_02_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6b_08_02_NO3.csv")
write.csv(MOOS_storm6b_08_02_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6b_08_02_fDOM.csv")
write.csv(MOOS_storm6b_08_02_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6b_08_02_SPC.csv")
write.csv(MOOS_storm6b_08_02_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6b_08_02_Turb.csv")

write.csv(MOOS_storm6c_08_03, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6c_08_03.csv")
write.csv(MOOS_storm6c_08_03_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6c_08_03_Q.csv")
write.csv(MOOS_storm6c_08_03_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6c_08_03_NO3.csv")
write.csv(MOOS_storm6c_08_03_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6c_08_03_fDOM.csv")
write.csv(MOOS_storm6c_08_03_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6c_08_03_SPC.csv")
write.csv(MOOS_storm6c_08_03_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6c_08_03_Turb.csv")

write.csv(MOOS_storm6d_08_05, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6d_08_05.csv")
write.csv(MOOS_storm6d_08_05_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6d_08_05_Q.csv")
write.csv(MOOS_storm6d_08_05_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6d_08_05_NO3.csv")
write.csv(MOOS_storm6d_08_05_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6d_08_05_fDOM.csv")
write.csv(MOOS_storm6d_08_05_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6d_08_05_SPC.csv")
write.csv(MOOS_storm6d_08_05_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6d_08_05_Turb.csv")

write.csv(MOOS_storm7a_08_13, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7a_08_13.csv")
write.csv(MOOS_storm7a_08_13_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7a_08_13_Q.csv")
write.csv(MOOS_storm7a_08_13_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7a_08_13_NO3.csv")
write.csv(MOOS_storm7a_08_13_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7a_08_13_fDOM.csv")
write.csv(MOOS_storm7a_08_13_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7a_08_13_SPC.csv")
write.csv(MOOS_storm7a_08_13_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7a_08_13_Turb.csv")

write.csv(MOOS_storm7b_08_14, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7b_08_14.csv")
write.csv(MOOS_storm7b_08_14_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7b_08_14_Q.csv")
write.csv(MOOS_storm7b_08_14_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7b_08_14_NO3.csv")
write.csv(MOOS_storm7b_08_14_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7b_08_14_fDOM.csv")
write.csv(MOOS_storm7b_08_14_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7b_08_14_SPC.csv")
write.csv(MOOS_storm7b_08_14_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7b_08_14_Turb.csv")

write.csv(MOOS_storm7c_08_15, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7c_08_15.csv")
write.csv(MOOS_storm7c_08_15_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7c_08_15_Q.csv")
write.csv(MOOS_storm7c_08_15_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7c_08_15_NO3.csv")
write.csv(MOOS_storm7c_08_15_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7c_08_15_fDOM.csv")
write.csv(MOOS_storm7c_08_15_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7c_08_15_SPC.csv")
write.csv(MOOS_storm7c_08_15_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7c_08_15_Turb.csv")

write.csv(MOOS_storm8_09_21, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm8_09_21.csv")
write.csv(MOOS_storm8_09_21_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm8_09_21_Q.csv")
write.csv(MOOS_storm8_09_21_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm8_09_21_NO3.csv")
write.csv(MOOS_storm8_09_21_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm8_09_21_fDOM.csv")
write.csv(MOOS_storm8_09_21_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm8_09_21_SPC.csv")
write.csv(MOOS_storm8_09_21_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm8_09_21_Turb.csv")

write.csv(MOOS_storm9_10_02, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm9_10_02.csv")
write.csv(MOOS_storm9_10_02_Q, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm9_10_02_Q.csv")
write.csv(MOOS_storm9_10_02_NO3, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm9_10_02_NO3.csv")
write.csv(MOOS_storm9_10_02_fDOM, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm9_10_02_fDOM.csv")
write.csv(MOOS_storm9_10_02_SPC, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm9_10_02_SPC.csv")
write.csv(MOOS_storm9_10_02_turb, "~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm9_10_02_Turb.csv")

#CARI#
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)')
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col="yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col = "green", lwd = 0.1)

par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
lines(CARI_2019$NO3 * 20 ~ CARI_2019$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2019$fDOM * 10 ~ CARI_2019$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2019$SpCond * 5 ~ CARI_2019$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
lines(CARI_2019$Turb * 1000 ~ CARI_2019$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

### Storms ### 
# CARI # 
# Storm 1 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-05-08 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-05-12 07:15:00", tz="America/Anchorage"), col="purple")

CARI_storm1_05_08 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-05-08 10:15:00", tz="America/Anchorage") &
                                CARI_2019$DateTime < as.POSIXct("2019-05-12 07:15:00", tz="America/Anchorage"),]
plot(CARI_storm1_05_08$Discharge ~ as.POSIXct(CARI_storm1_05_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,800), col="blue", main="CARI 190508 storm 1",
     xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-04-29 00:00:00","2019-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No storm here #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-01 00:00:00","2019-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)

# No storm here #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-16 00:00:00","2019-06-30:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-16 00:00:00","2019-06-30:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)

# Storm 2 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-06-30 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-01 20:15:00", tz="America/Anchorage"), col="purple")

CARI_storm2_06_30 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-06-30 08:15:00", tz="America/Anchorage") &
                                CARI_2019$DateTime < as.POSIXct("2019-07-01 20:15:00", tz="America/Anchorage"),]
plot(CARI_storm2_06_30$Discharge ~ as.POSIXct(CARI_storm2_06_30$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 190630 storm 2",
     xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-12 11:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-13 08:15:00", tz="America/Anchorage"), col="purple")

CARI_storm3_07_12 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-07-12 11:15:00", tz="America/Anchorage") &
                                CARI_2019$DateTime < as.POSIXct("2019-07-13 08:15:00", tz="America/Anchorage"),]
plot(CARI_storm3_07_12$Discharge ~ as.POSIXct(CARI_storm3_07_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 190712 storm 3",
     xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-06-28 00:00:00","2019-07-15:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-26 07:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-07-27 20:15:00", tz="America/Anchorage"), col="purple")

CARI_storm4_07_26 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-07-26 07:15:00", tz="America/Anchorage") &
                                CARI_2019$DateTime < as.POSIXct("2019-07-27 20:15:00", tz="America/Anchorage"),]
plot(CARI_storm4_07_26$Discharge ~ as.POSIXct(CARI_storm4_07_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 190726 storm 4",
     xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-15 00:00:00","2019-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-07-31 23:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-02 09:15:00", tz="America/Anchorage"), col="purple")

CARI_storm5_07_31 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-07-31 23:15:00", tz="America/Anchorage") &
                                CARI_2019$DateTime < as.POSIXct("2019-08-02 09:15:00", tz="America/Anchorage"),]
plot(CARI_storm5_07_31$Discharge ~ as.POSIXct(CARI_storm5_07_31$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 190731 storm 5",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6a #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-02 12:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-03 09:15:00", tz="America/Anchorage"), col="purple")

CARI_storm6a_08_02 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-02 12:15:00", tz="America/Anchorage") &
                                CARI_2019$DateTime < as.POSIXct("2019-08-03 09:15:00", tz="America/Anchorage"),]
plot(CARI_storm6a_08_02$Discharge ~ as.POSIXct(CARI_storm6a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="CARI 190802 storm 6a",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6b #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-03 09:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-05 20:15:00", tz="America/Anchorage"), col="purple")

CARI_storm6b_08_03 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-03 09:15:00", tz="America/Anchorage") &
                                 CARI_2019$DateTime < as.POSIXct("2019-08-05 20:15:00", tz="America/Anchorage"),]
plot(CARI_storm6b_08_03$Discharge ~ as.POSIXct(CARI_storm6b_08_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,4500), col="blue", main="CARI 190803 storm 6b",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6c #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-05 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-10 10:15:00", tz="America/Anchorage"), col="purple")

CARI_storm6c_08_05 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-05 20:15:00", tz="America/Anchorage") &
                                 CARI_2019$DateTime < as.POSIXct("2019-08-10 10:15:00", tz="America/Anchorage"),]
plot(CARI_storm6c_08_05$Discharge ~ as.POSIXct(CARI_storm6c_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,2000), col="blue", main="CARI 190805 storm 6c",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6d #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-10 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-11 20:15:00", tz="America/Anchorage"), col="purple")

CARI_storm6d_08_10 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-10 10:15:00", tz="America/Anchorage") &
                                 CARI_2019$DateTime < as.POSIXct("2019-08-11 20:15:00", tz="America/Anchorage"),]
plot(CARI_storm6d_08_10$Discharge ~ as.POSIXct(CARI_storm6d_08_10$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1000), col="blue", main="CARI 190810 storm 6d",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7a #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-13 03:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-13 16:15:00", tz="America/Anchorage"), col="purple")

CARI_storm7a_08_13 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-13 03:15:00", tz="America/Anchorage") &
                                 CARI_2019$DateTime < as.POSIXct("2019-08-13 16:15:00", tz="America/Anchorage"),]
plot(CARI_storm7a_08_13$Discharge ~ as.POSIXct(CARI_storm7a_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,1500), col="blue", main="CARI 190813 storm 7a",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7b #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-13 16:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-15 23:15:00", tz="America/Anchorage"), col="purple")

CARI_storm7b_08_13 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-13 16:15:00", tz="America/Anchorage") &
                                 CARI_2019$DateTime < as.POSIXct("2019-08-15 23:15:00", tz="America/Anchorage"),]
plot(CARI_storm7b_08_13$Discharge ~ as.POSIXct(CARI_storm7b_08_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,2000), col="blue", main="CARI 190813 storm 7b",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-07-30 00:00:00","2019-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8 #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-08-13 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-13 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2019-08-16 04:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2019-08-18 23:15:00", tz="America/Anchorage"), col="purple")

CARI_storm8_08_16 = CARI_2019[CARI_2019$DateTime > as.POSIXct("2019-08-16 04:15:00", tz="America/Anchorage") &
                                 CARI_2019$DateTime < as.POSIXct("2019-08-18 23:15:00", tz="America/Anchorage"),]
plot(CARI_storm8_08_16$Discharge ~ as.POSIXct(CARI_storm8_08_16$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(250,2000), col="blue", main="CARI 190816 storm 8",
     xlim = as.POSIXct(c("2019-08-13 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-08-13 00:00:00","2019-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No more storm signals #
plot(CARI_2019$Discharge ~ CARI_2019$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2019-09-01 00:00:00","2019-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2019-09-01 00:00:00","2019-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)

# nitrateuM, fDOM.QSU, SPC, Turb CARI #
# Storm 1 #
CARI_storm1_05_08_Q = subset(CARI_storm1_05_08, select = c("DateTime", "Discharge"))
names(CARI_storm1_05_08_Q) = c("valuedatetime","datavalue")
CARI_storm1_05_08_NO3 = subset(CARI_storm1_05_08, select = c("DateTime","NO3"))
names(CARI_storm1_05_08_NO3) = c("valuedatetime","datavalue")
CARI_storm1_05_08_fDOM = subset(CARI_storm1_05_08, select = c("DateTime","fDOM"))
names(CARI_storm1_05_08_fDOM) = c("valuedatetime","datavalue")
CARI_storm1_05_08_SPC = subset(CARI_storm1_05_08, select = c("DateTime","SpCond"))
names(CARI_storm1_05_08_SPC) = c("valuedatetime","datavalue")
CARI_storm1_05_08_turb = subset(CARI_storm1_05_08, select = c("DateTime","Turb"))
names(CARI_storm1_05_08_turb) = c("valuedatetime","datavalue")

CARI_storm2_06_30_Q = subset(CARI_storm2_06_30, select = c("DateTime", "Discharge"))
names(CARI_storm2_06_30_Q) = c("valuedatetime","datavalue")
CARI_storm2_06_30_NO3 = subset(CARI_storm2_06_30, select = c("DateTime","NO3"))
names(CARI_storm2_06_30_NO3) = c("valuedatetime","datavalue")
CARI_storm2_06_30_fDOM = subset(CARI_storm2_06_30, select = c("DateTime","fDOM"))
names(CARI_storm2_06_30_fDOM) = c("valuedatetime","datavalue")
CARI_storm2_06_30_SPC = subset(CARI_storm2_06_30, select = c("DateTime","SpCond"))
names(CARI_storm2_06_30_SPC) = c("valuedatetime","datavalue")
CARI_storm2_06_30_turb = subset(CARI_storm2_06_30, select = c("DateTime","Turb"))
names(CARI_storm2_06_30_turb) = c("valuedatetime","datavalue")

CARI_storm3_07_12_Q = subset(CARI_storm3_07_12, select = c("DateTime", "Discharge"))
names(CARI_storm3_07_12_Q) = c("valuedatetime","datavalue")
CARI_storm3_07_12_NO3 = subset(CARI_storm3_07_12, select = c("DateTime","NO3"))
names(CARI_storm3_07_12_NO3) = c("valuedatetime","datavalue")
CARI_storm3_07_12_fDOM = subset(CARI_storm3_07_12, select = c("DateTime","fDOM"))
names(CARI_storm3_07_12_fDOM) = c("valuedatetime","datavalue")
CARI_storm3_07_12_SPC = subset(CARI_storm3_07_12, select = c("DateTime","SpCond"))
names(CARI_storm3_07_12_SPC) = c("valuedatetime","datavalue")
CARI_storm3_07_12_turb = subset(CARI_storm3_07_12, select = c("DateTime","Turb"))
names(CARI_storm3_07_12_turb) = c("valuedatetime","datavalue")

CARI_storm4_07_26_Q = subset(CARI_storm4_07_26, select = c("DateTime", "Discharge"))
names(CARI_storm4_07_26_Q) = c("valuedatetime","datavalue")
CARI_storm4_07_26_NO3 = subset(CARI_storm4_07_26, select = c("DateTime","NO3"))
names(CARI_storm4_07_26_NO3) = c("valuedatetime","datavalue")
CARI_storm4_07_26_fDOM = subset(CARI_storm4_07_26, select = c("DateTime","fDOM"))
names(CARI_storm4_07_26_fDOM) = c("valuedatetime","datavalue")
CARI_storm4_07_26_SPC = subset(CARI_storm4_07_26, select = c("DateTime","SpCond"))
names(CARI_storm4_07_26_SPC) = c("valuedatetime","datavalue")
CARI_storm4_07_26_turb = subset(CARI_storm4_07_26, select = c("DateTime","Turb"))
names(CARI_storm4_07_26_turb) = c("valuedatetime","datavalue")

CARI_storm5_07_31_Q = subset(CARI_storm5_07_31, select = c("DateTime", "Discharge"))
names(CARI_storm5_07_31_Q) = c("valuedatetime","datavalue")
CARI_storm5_07_31_NO3 = subset(CARI_storm5_07_31, select = c("DateTime","NO3"))
names(CARI_storm5_07_31_NO3) = c("valuedatetime","datavalue")
CARI_storm5_07_31_fDOM = subset(CARI_storm5_07_31, select = c("DateTime","fDOM"))
names(CARI_storm5_07_31_fDOM) = c("valuedatetime","datavalue")
CARI_storm5_07_31_SPC = subset(CARI_storm5_07_31, select = c("DateTime","SpCond"))
names(CARI_storm5_07_31_SPC) = c("valuedatetime","datavalue")
CARI_storm5_07_31_turb = subset(CARI_storm5_07_31, select = c("DateTime","Turb"))
names(CARI_storm5_07_31_turb) = c("valuedatetime","datavalue")

CARI_storm6a_08_02_Q = subset(CARI_storm6a_08_02, select = c("DateTime", "Discharge"))
names(CARI_storm6a_08_02_Q) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_NO3 = subset(CARI_storm6a_08_02, select = c("DateTime","NO3"))
names(CARI_storm6a_08_02_NO3) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_fDOM = subset(CARI_storm6a_08_02, select = c("DateTime","fDOM"))
names(CARI_storm6a_08_02_fDOM) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_SPC = subset(CARI_storm6a_08_02, select = c("DateTime","SpCond"))
names(CARI_storm6a_08_02_SPC) = c("valuedatetime","datavalue")
CARI_storm6a_08_02_turb = subset(CARI_storm6a_08_02, select = c("DateTime","Turb"))
names(CARI_storm6a_08_02_turb) = c("valuedatetime","datavalue")

CARI_storm6b_08_03_Q = subset(CARI_storm6b_08_03, select = c("DateTime", "Discharge"))
names(CARI_storm6b_08_03_Q) = c("valuedatetime","datavalue")
CARI_storm6b_08_03_NO3 = subset(CARI_storm6b_08_03, select = c("DateTime","NO3"))
names(CARI_storm6b_08_03_NO3) = c("valuedatetime","datavalue")
CARI_storm6b_08_03_fDOM = subset(CARI_storm6b_08_03, select = c("DateTime","fDOM"))
names(CARI_storm6b_08_03_fDOM) = c("valuedatetime","datavalue")
CARI_storm6b_08_03_SPC = subset(CARI_storm6b_08_03, select = c("DateTime","SpCond"))
names(CARI_storm6b_08_03_SPC) = c("valuedatetime","datavalue")
CARI_storm6b_08_03_turb = subset(CARI_storm6b_08_03, select = c("DateTime","Turb"))
names(CARI_storm6b_08_03_turb) = c("valuedatetime","datavalue")

CARI_storm6c_08_05_Q = subset(CARI_storm6c_08_05, select = c("DateTime", "Discharge"))
names(CARI_storm6c_08_05_Q) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_NO3 = subset(CARI_storm6c_08_05, select = c("DateTime","NO3"))
names(CARI_storm6c_08_05_NO3) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_fDOM = subset(CARI_storm6c_08_05, select = c("DateTime","fDOM"))
names(CARI_storm6c_08_05_fDOM) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_SPC = subset(CARI_storm6c_08_05, select = c("DateTime","SpCond"))
names(CARI_storm6c_08_05_SPC) = c("valuedatetime","datavalue")
CARI_storm6c_08_05_turb = subset(CARI_storm6c_08_05, select = c("DateTime","Turb"))
names(CARI_storm6c_08_05_turb) = c("valuedatetime","datavalue")

CARI_storm6d_08_10_Q = subset(CARI_storm6d_08_10, select = c("DateTime", "Discharge"))
names(CARI_storm6d_08_10_Q) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_NO3 = subset(CARI_storm6d_08_10, select = c("DateTime","NO3"))
names(CARI_storm6d_08_10_NO3) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_fDOM = subset(CARI_storm6d_08_10, select = c("DateTime","fDOM"))
names(CARI_storm6d_08_10_fDOM) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_SPC = subset(CARI_storm6d_08_10, select = c("DateTime","SpCond"))
names(CARI_storm6d_08_10_SPC) = c("valuedatetime","datavalue")
CARI_storm6d_08_10_turb = subset(CARI_storm6d_08_10, select = c("DateTime","Turb"))
names(CARI_storm6d_08_10_turb) = c("valuedatetime","datavalue")

CARI_storm7a_08_13_Q = subset(CARI_storm7a_08_13, select = c("DateTime", "Discharge"))
names(CARI_storm7a_08_13_Q) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_NO3 = subset(CARI_storm7a_08_13, select = c("DateTime","NO3"))
names(CARI_storm7a_08_13_NO3) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_fDOM = subset(CARI_storm7a_08_13, select = c("DateTime","fDOM"))
names(CARI_storm7a_08_13_fDOM) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_SPC = subset(CARI_storm7a_08_13, select = c("DateTime","SpCond"))
names(CARI_storm7a_08_13_SPC) = c("valuedatetime","datavalue")
CARI_storm7a_08_13_turb = subset(CARI_storm7a_08_13, select = c("DateTime","Turb"))
names(CARI_storm7a_08_13_turb) = c("valuedatetime","datavalue")

CARI_storm7b_08_13_Q = subset(CARI_storm7b_08_13, select = c("DateTime", "Discharge"))
names(CARI_storm7b_08_13_Q) = c("valuedatetime","datavalue")
CARI_storm7b_08_13_NO3 = subset(CARI_storm7b_08_13, select = c("DateTime","NO3"))
names(CARI_storm7b_08_13_NO3) = c("valuedatetime","datavalue")
CARI_storm7b_08_13_fDOM = subset(CARI_storm7b_08_13, select = c("DateTime","fDOM"))
names(CARI_storm7b_08_13_fDOM) = c("valuedatetime","datavalue")
CARI_storm7b_08_13_SPC = subset(CARI_storm7b_08_13, select = c("DateTime","SpCond"))
names(CARI_storm7b_08_13_SPC) = c("valuedatetime","datavalue")
CARI_storm7b_08_13_turb = subset(CARI_storm7b_08_13, select = c("DateTime","Turb"))
names(CARI_storm7b_08_13_turb) = c("valuedatetime","datavalue")

CARI_storm8_08_16_Q = subset(CARI_storm8_08_16, select = c("DateTime", "Discharge"))
names(CARI_storm8_08_16_Q) = c("valuedatetime","datavalue")
CARI_storm8_08_16_NO3 = subset(CARI_storm8_08_16, select = c("DateTime","NO3"))
names(CARI_storm8_08_16_NO3) = c("valuedatetime","datavalue")
CARI_storm8_08_16_fDOM = subset(CARI_storm8_08_16, select = c("DateTime","fDOM"))
names(CARI_storm8_08_16_fDOM) = c("valuedatetime","datavalue")
CARI_storm8_08_16_SPC = subset(CARI_storm8_08_16, select = c("DateTime","SpCond"))
names(CARI_storm8_08_16_SPC) = c("valuedatetime","datavalue")
CARI_storm8_08_16_turb = subset(CARI_storm8_08_16, select = c("DateTime","Turb"))
names(CARI_storm8_08_16_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(CARI_storm1_05_08, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm1_06_01.csv")
write.csv(CARI_storm1_05_08_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm1_05_08_Q.csv")
write.csv(CARI_storm1_05_08_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm1_05_08_NO3.csv")
write.csv(CARI_storm1_05_08_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm1_05_08_fDOM.csv")
write.csv(CARI_storm1_05_08_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm1_05_08_SPC.csv")
write.csv(CARI_storm1_05_08_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm1_05_08_Turb.csv")

write.csv(CARI_storm2_06_30, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm2_06_30.csv")
write.csv(CARI_storm2_06_30_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm2_06_30_Q.csv")
write.csv(CARI_storm2_06_30_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm2_06_30_NO3.csv")
write.csv(CARI_storm2_06_30_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm2_06_30_fDOM.csv")
write.csv(CARI_storm2_06_30_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm2_06_30_SPC.csv")
write.csv(CARI_storm2_06_30_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm2_06_30_Turb.csv")

write.csv(CARI_storm3_07_12, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm3_07_12.csv")
write.csv(CARI_storm3_07_12_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm3_07_12_Q.csv")
write.csv(CARI_storm3_07_12_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm3_07_12_NO3.csv")
write.csv(CARI_storm3_07_12_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm3_07_12_fDOM.csv")
write.csv(CARI_storm3_07_12_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm3_07_12_SPC.csv")
write.csv(CARI_storm3_07_12_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm3_07_12_Turb.csv")

write.csv(CARI_storm4_07_26, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm4_07_26.csv")
write.csv(CARI_storm4_07_26_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm4_07_26_Q.csv")
write.csv(CARI_storm4_07_26_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm4_07_26_NO3.csv")
write.csv(CARI_storm4_07_26_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm4_07_26_fDOM.csv")
write.csv(CARI_storm4_07_26_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm4_07_26_SPC.csv")
write.csv(CARI_storm4_07_26_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm4_07_26_Turb.csv")

write.csv(CARI_storm5_07_31, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm5_07_31.csv")
write.csv(CARI_storm5_07_31_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm5_07_31_Q.csv")
write.csv(CARI_storm5_07_31_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm5_07_31_NO3.csv")
write.csv(CARI_storm5_07_31_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm5_07_31_fDOM.csv")
write.csv(CARI_storm5_07_31_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm5_07_31_SPC.csv")
write.csv(CARI_storm5_07_31_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm5_07_31_Turb.csv")

write.csv(CARI_storm6a_08_02, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6a_08_02.csv")
write.csv(CARI_storm6a_08_02_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6a_08_02_Q.csv")
write.csv(CARI_storm6a_08_02_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6a_08_02_NO3.csv")
write.csv(CARI_storm6a_08_02_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6a_08_02_fDOM.csv")
write.csv(CARI_storm6a_08_02_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6a_08_02_SPC.csv")
write.csv(CARI_storm6a_08_02_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6a_08_02_Turb.csv")

write.csv(CARI_storm6b_08_03, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6b_08_03.csv")
write.csv(CARI_storm6b_08_03_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6b_08_03_Q.csv")
write.csv(CARI_storm6b_08_03_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6b_08_03_NO3.csv")
write.csv(CARI_storm6b_08_03_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6b_08_03_fDOM.csv")
write.csv(CARI_storm6b_08_03_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6b_08_03_SPC.csv")
write.csv(CARI_storm6b_08_03_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6b_08_03_Turb.csv")

write.csv(CARI_storm6c_08_05, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6c_08_05.csv")
write.csv(CARI_storm6c_08_05_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6c_08_05_Q.csv")
write.csv(CARI_storm6c_08_05_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6c_08_05_NO3.csv")
write.csv(CARI_storm6c_08_05_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6c_08_05_fDOM.csv")
write.csv(CARI_storm6c_08_05_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6c_08_05_SPC.csv")
write.csv(CARI_storm6c_08_05_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6c_08_05_Turb.csv")

write.csv(CARI_storm6d_08_10, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6d_08_10.csv")
write.csv(CARI_storm6d_08_10_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6d_08_10_Q.csv")
write.csv(CARI_storm6d_08_10_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6d_08_10_NO3.csv")
write.csv(CARI_storm6d_08_10_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6d_08_10_fDOM.csv")
write.csv(CARI_storm6d_08_10_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6d_08_10_SPC.csv")
write.csv(CARI_storm6d_08_10_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm6d_08_10_Turb.csv")

write.csv(CARI_storm7a_08_13, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7a_08_13.csv")
write.csv(CARI_storm7a_08_13_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7a_08_13_Q.csv")
write.csv(CARI_storm7a_08_13_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7a_08_13_NO3.csv")
write.csv(CARI_storm7a_08_13_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7a_08_13_fDOM.csv")
write.csv(CARI_storm7a_08_13_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7a_08_13_SPC.csv")
write.csv(CARI_storm7a_08_13_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7a_08_13_Turb.csv")

write.csv(CARI_storm7b_08_13, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7b_08_13.csv")
write.csv(CARI_storm7b_08_13_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7b_08_13_Q.csv")
write.csv(CARI_storm7b_08_13_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7b_08_13_NO3.csv")
write.csv(CARI_storm7b_08_13_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7b_08_13_fDOM.csv")
write.csv(CARI_storm7b_08_13_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7b_08_13_SPC.csv")
write.csv(CARI_storm7b_08_13_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm7b_08_13_Turb.csv")

write.csv(CARI_storm8_08_16, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm8_08_16.csv")
write.csv(CARI_storm8_08_16_Q, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm8_08_16_Q.csv")
write.csv(CARI_storm8_08_16_NO3, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm8_08_16_NO3.csv")
write.csv(CARI_storm8_08_16_fDOM, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm8_08_16_fDOM.csv")
write.csv(CARI_storm8_08_16_SPC, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm8_08_16_SPC.csv")
write.csv(CARI_storm8_08_16_turb, "~/Documents/Storms/Storm_Events/2019/CARI/CARI_storm8_08_16_Turb.csv")

#### load storm data #

# load storm data #

storm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI/", 
                              recursive=F, 
                              pattern=".csv", 
                              full.names=TRUE)

storm_list<-do.call("list", lapply(storm_file_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   header=T, row.names=1))

storm_file_list = sub("~/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list, replacement = "")
storm_file_list = sub(".csv", storm_file_list, replacement = "")
names(storm_list) = storm_file_list

for(i in 1:length(storm_list)){
  storm_list[[i]][["valuedatetime"]] = as.POSIXct(storm_list[[i]][["valuedatetime"]],
                                                  "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} # changing character format into datetime 

#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list = storm_list[c(1:60)] #60
FRCH_storm_list = storm_list[c(61:165)] #105
MOOS_storm_list = storm_list[c(166:230)] #60
POKE_storm_list = storm_list[c(231:295)]# 65
STRT_storm_list = storm_list[c(296:350)] #55
VAUL_storm_list = storm_list[c(351:410)] #65

CARI_NO3_storm_list = CARI_storm_list[c(grep("NO3", names(CARI_storm_list)))]
CARI_fDOM_storm_list = CARI_storm_list[c(grep("fDOM", names(CARI_storm_list)))]
CARI_SpCond_storm_list = CARI_storm_list[c(grep("SPC", names(CARI_storm_list)))]
CARI_turb_storm_list = CARI_storm_list[c(grep("Turb", names(CARI_storm_list)))]

FRCH_NO3_storm_list = FRCH_storm_list[c(grep("NO3", names(FRCH_storm_list)))]
FRCH_fDOM_storm_list = FRCH_storm_list[c(grep("fDOM", names(FRCH_storm_list)))]
FRCH_SpCond_storm_list = FRCH_storm_list[c(grep("SPC", names(FRCH_storm_list)))]
FRCH_turb_storm_list = FRCH_storm_list[c(grep("Turb", names(FRCH_storm_list)))]

MOOS_NO3_storm_list = MOOS_storm_list[c(grep("NO3", names(MOOS_storm_list)))]
MOOS_fDOM_storm_list = MOOS_storm_list[c(grep("fDOM", names(MOOS_storm_list)))]
MOOS_SpCond_storm_list = MOOS_storm_list[c(grep("SPC", names(MOOS_storm_list)))]
MOOS_turb_storm_list = MOOS_storm_list[c(grep("Turb", names(MOOS_storm_list)))]

POKE_NO3_storm_list = POKE_storm_list[c(grep("NO3", names(POKE_storm_list)))]
POKE_fDOM_storm_list = POKE_storm_list[c(grep("fDOM", names(POKE_storm_list)))]
POKE_SpCond_storm_list = POKE_storm_list[c(grep("SPC", names(POKE_storm_list)))]
POKE_turb_storm_list = POKE_storm_list[c(grep("Turb", names(POKE_storm_list)))]

STRT_NO3_storm_list = STRT_storm_list[c(grep("NO3", names(STRT_storm_list)))]
STRT_fDOM_storm_list = STRT_storm_list[c(grep("fDOM", names(STRT_storm_list)))]
STRT_SpCond_storm_list = STRT_storm_list[c(grep("SPC", names(STRT_storm_list)))]
STRT_turb_storm_list = STRT_storm_list[c(grep("Turb", names(STRT_storm_list)))]

VAUL_NO3_storm_list = VAUL_storm_list[c(grep("NO3", names(VAUL_storm_list)))]
VAUL_fDOM_storm_list = VAUL_storm_list[c(grep("fDOM", names(VAUL_storm_list)))]
VAUL_SpCond_storm_list = VAUL_storm_list[c(grep("SPC", names(VAUL_storm_list)))]
VAUL_turb_storm_list = VAUL_storm_list[c(grep("turb", names(VAUL_storm_list)))]

#### load burst SUNA data #

FRCHfile_list <- list.files(path="~/Documents/DoD_2019/SUNA_raw/FRCH/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

MOOSfile_list <- list.files(path="~/Documents/DoD_2019/SUNA_raw/MOOS/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

POKEfile_list <- list.files(path="~/Documents/DoD_2019/SUNA_raw/POKE/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

STRTfile_list <- list.files(path="~/Documents/DoD_2019/SUNA_raw/STRT/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

VAULfile_list <- list.files(path="~/Documents/DoD_2019/SUNA_raw/VAUL/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

### Merge all data files for sensor ###
#correct header=14

SUNA.FRCH<-do.call("rbind", lapply(FRCHfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.MOOS<-do.call("rbind", lapply(MOOSfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.POKE<-do.call("rbind", lapply(POKEfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.STRT<-do.call("rbind", lapply(STRTfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.VAUL<-do.call("rbind", lapply(VAULfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

### Variable names for SUNA output file ###
pre<-"ch"
suff<-seq(12:267)
ch<-paste(pre, suff)
SUNAnames<-c("ID", "date_yearday", "time_fhoursUTC", "nitrateuM", "nitratemgL", "abs254", 
             "abs350", "brtrace", "specave", "darkvaluefit", "inttimefac", ch, "int_TC", 
             "spec_TC", "lamp_TC", "lamptimecum", "relhum", "mainV", "lampV", "intV", 
             "mainmA", "fit1", "fit2", "fitbase1", "fitbase2", "fitRMSE", "CTDtime", 
             "CTDsal", "CTDT", "CTDdBar", "checksum")
names(SUNA.FRCH)<-SUNAnames
names(SUNA.MOOS)<-SUNAnames
names(SUNA.POKE)<-SUNAnames
names(SUNA.STRT)<-SUNAnames
names(SUNA.VAUL)<-SUNAnames
### Remove unneeded columns ###

#remove raw channel data
SUNA.FRCHr<-SUNA.FRCH[,c(1:11,268:286)]
SUNA.MOOSr<-SUNA.MOOS[,c(1:11,268:286)]
SUNA.POKEr<-SUNA.POKE[,c(1:11,268:286)]
SUNA.STRTr<-SUNA.STRT[,c(1:11,268:286)]
SUNA.VAULr<-SUNA.VAUL[,c(1:11,268:286)]

#remove dark frames. 
### <<Note: Change date below>> ###
sum(SUNA.FRCHr$ID == 'DF')
SUNA.FRCHr %>% group_by(ID) %>% tally()
SUNA.FRCHrlf<-SUNA.FRCHr[!grepl("DF", SUNA.FRCHr$ID),]

SUNA.MOOSr %>% group_by(ID) %>% tally()
SUNA.MOOSrlf<-SUNA.MOOSr[!grepl("DF", SUNA.MOOSr$ID),]

SUNA.POKEr %>% group_by(ID) %>% tally()
SUNA.POKErlf<-SUNA.POKEr[!grepl("DF", SUNA.POKEr$ID),]

SUNA.STRTr %>% group_by(ID) %>% tally()
SUNA.STRTrlf<-SUNA.STRTr[!grepl("DF", SUNA.STRTr$ID),]

SUNA.VAULr %>% group_by(ID) %>% tally()
SUNA.VAULrlf<-SUNA.VAULr[!grepl("DF", SUNA.VAULr$ID),]

### Date and time reformatting ###
## FRCH ##
# create separate year and day columns
year_day <- t(sapply(SUNA.FRCHrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.FRCHrlf<-cbind(SUNA.FRCHrlf, year_day)
# combine hours and julian day into fractional days
SUNA.FRCHrlf$day_timeUTC<-SUNA.FRCHrlf$day+(SUNA.FRCHrlf$time_fhoursUTC/24)
# assign year to 2019 data
origin17 <- as.POSIXct("2018-12-31 00:00:00", tz="GMT")
SUNA.FRCHrlf$date_timeUTC<-origin17 + SUNA.FRCHrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.FRCHrlf$date_timeAK<-as.POSIXct(format(SUNA.FRCHrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.FRCHrlf$date_timeAK)
class(SUNA.FRCHrlf$date_timeAK)
tz(SUNA.FRCHrlf$date_timeAK) = "America/Anchorage"

## MOOS ##
# create separate year and day columns
year_day <- t(sapply(SUNA.MOOSrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.MOOSrlf<-cbind(SUNA.MOOSrlf, year_day)
# combine hours and julian day into fractional days
SUNA.MOOSrlf$day_timeUTC<-SUNA.MOOSrlf$day+(SUNA.MOOSrlf$time_fhoursUTC/24)
# assign year to 2019 data
origin17 <- as.POSIXct("2018-12-31 00:00:00", tz="GMT")
SUNA.MOOSrlf$date_timeUTC<-origin17 + SUNA.MOOSrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.MOOSrlf$date_timeAK<-as.POSIXct(format(SUNA.MOOSrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.MOOSrlf$date_timeAK)
class(SUNA.MOOSrlf$date_timeAK)
tz(SUNA.MOOSrlf$date_timeAK) = "America/Anchorage"
head(SUNA.MOOSrlf$date_timeAK)

## POKE ##
# create separate year and day columns
year_day <- t(sapply(SUNA.POKErlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.POKErlf<-cbind(SUNA.POKErlf, year_day)
# combine hours and julian day into fractional days
SUNA.POKErlf$day_timeUTC<-SUNA.POKErlf$day+(SUNA.POKErlf$time_fhoursUTC/24)
# assign year to 2019 data
origin17 <- as.POSIXct("2018-12-31 00:00:00", tz="GMT")
SUNA.POKErlf$date_timeUTC<-origin17 + SUNA.POKErlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.POKErlf$date_timeAK<-as.POSIXct(format(SUNA.POKErlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.POKErlf$date_timeAK)
class(SUNA.POKErlf$date_timeAK)
tz(SUNA.POKErlf$date_timeAK) = "America/Anchorage"
head(SUNA.POKErlf$date_timeAK)

## STRT ##
# create separate year and day columns
year_day <- t(sapply(SUNA.STRTrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.STRTrlf<-cbind(SUNA.STRTrlf, year_day)
# combine hours and julian day into fractional days
SUNA.STRTrlf$day_timeUTC<-SUNA.STRTrlf$day+(SUNA.STRTrlf$time_fhoursUTC/24)
# assign year to 2019 data
origin17 <- as.POSIXct("2018-12-31 00:00:00", tz="GMT")
SUNA.STRTrlf$date_timeUTC<-origin17 + SUNA.STRTrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.STRTrlf$date_timeAK<-as.POSIXct(format(SUNA.STRTrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.STRTrlf$date_timeAK)
class(SUNA.STRTrlf$date_timeAK)
tz(SUNA.STRTrlf$date_timeAK) = "America/Anchorage"
head(SUNA.STRTrlf$date_timeAK)

## VAUL ##
# create separate year and day columns
year_day <- t(sapply(SUNA.VAULrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.VAULrlf<-cbind(SUNA.VAULrlf, year_day)
# combine hours and julian day into fractional days
SUNA.VAULrlf$day_timeUTC<-SUNA.VAULrlf$day+(SUNA.VAULrlf$time_fhoursUTC/24)
# assign year to 2019 data
origin17 <- as.POSIXct("2018-12-31 00:00:00", tz="GMT")
SUNA.VAULrlf$date_timeUTC<-origin17 + SUNA.VAULrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.VAULrlf$date_timeAK<-as.POSIXct(format(SUNA.VAULrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.VAULrlf$date_timeAK)
class(SUNA.VAULrlf$date_timeAK)
tz(SUNA.VAULrlf$date_timeAK) = "America/Anchorage"
head(SUNA.VAULrlf$date_timeAK)

### reduce columns ###

SUNA.FRCH.burst = subset(SUNA.FRCHrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.MOOS.burst = subset(SUNA.MOOSrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.POKE.burst = subset(SUNA.POKErlf, select = c("date_timeAK", "nitrateuM"))
SUNA.STRT.burst = subset(SUNA.STRTrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.VAUL.burst = subset(SUNA.VAULrlf, select = c("date_timeAK", "nitrateuM"))

### rename columns ###
names(SUNA.FRCH.burst) <- c("DateTime", "nitrateuM")
names(SUNA.MOOS.burst) <- c("DateTime", "nitrateuM")
names(SUNA.POKE.burst) <- c("DateTime", "nitrateuM")
names(SUNA.STRT.burst) <- c("DateTime", "nitrateuM")
names(SUNA.VAUL.burst) <- c("DateTime", "nitrateuM")

### round to nearest 15 min ###

SUNA.FRCH.burst$DateTime = lubridate::round_date(SUNA.FRCH.burst$DateTime, "15 minutes") 
SUNA.MOOS.burst$DateTime = lubridate::round_date(SUNA.MOOS.burst$DateTime, "15 minutes") 
SUNA.POKE.burst$DateTime = lubridate::round_date(SUNA.POKE.burst$DateTime, "15 minutes") 
SUNA.STRT.burst$DateTime = lubridate::round_date(SUNA.STRT.burst$DateTime, "15 minutes") 
SUNA.VAUL.burst$DateTime = lubridate::round_date(SUNA.VAUL.burst$DateTime, "15 minutes") 

#### load burst EXO data #

### load and stitch EXO data ###

# FRCH #
FRCHfile_list <- list.files(path="~/Documents/DoD_2019/EXO_raw/FRCH/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.FRCH<-do.call("rbind", lapply(FRCHfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE, 
                                  skip = 9,
                                  header=F))
colNames <- c("Date..MM.DD.YYYY.", "Time..HH.mm.ss.", "Time..Fract..Sec.", "Site.Name" , "Cond.µS.cm" ,
              "fDOM.QSU","nLF.Cond.µS.cm", "ODO...sat", "ODO...local",
              "ODO.mg.L", "Sal.psu","SpCond.µS.cm",  "TDS.mg.L", "Turbidity.FNU" ,
              "TSS.mg.L", "Wiper.Position.volt", "Temp..C", "Battery.V", "Cable.Pwr.V")

names(EXO.FRCH)<-colNames

# MOOS #
MOOSfile_list <- list.files(path="~/Documents/DoD_2019/EXO_raw/MOOS/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.MOOS<-do.call("rbind", lapply(MOOSfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE, 
                                  skip = 9,
                                  header=F))
names(EXO.MOOS)<-colNames
# POKE #
POKEfile_list <- list.files(path="~/Documents/DoD_2019/EXO_raw/POKE/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.POKE<-do.call("rbind", lapply(POKEfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.POKE)<-colNames
# STRT #
STRTfile_list <- list.files(path="~/Documents/DoD_2019/EXO_raw/STRT/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.STRT<-do.call("rbind", lapply(STRTfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.STRT)<-colNames
# VAUL #
VAULfile_list <- list.files(path="~/Documents/DoD_2019/EXO_raw/VAUL/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.VAUL<-do.call("rbind", lapply(VAULfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.VAUL)<-colNames

## FRCH ##
# put date and time in same column
EXO.FRCH$date_time = paste(EXO.FRCH$Date..MM.DD.YYYY., EXO.FRCH$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.FRCH$date_timeET<-as.POSIXct(EXO.FRCH$date_time, "%m/%d/%y %H:%M:%S", tz="America/New_York")
# convert to Alaska Time
EXO.FRCH$date_timeAK<-with_tz(EXO.FRCH$date_timeET, tz="America/Anchorage")
head(EXO.FRCH)
class(EXO.FRCH$date_timeAK)
tz(EXO.FRCH$date_timeAK)

## MOOS ##
# put date and time in same column
EXO.MOOS$date_time = paste(EXO.MOOS$Date..MM.DD.YYYY., EXO.MOOS$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.MOOS$date_timeET<-as.POSIXct(EXO.MOOS$date_time, "%m/%d/%y %H:%M:%S", tz="America/New_York")
# convert to Alaska Time
EXO.MOOS$date_timeAK<-with_tz(EXO.MOOS$date_timeET, tz="America/Anchorage")
head(EXO.MOOS)
class(EXO.MOOS$date_timeAK)
tz(EXO.MOOS$date_timeAK)

## POKE ##
# put date and time in same column
EXO.POKE$date_time = paste(EXO.POKE$Date..MM.DD.YYYY., EXO.POKE$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.POKE$date_timeET<-as.POSIXct(EXO.POKE$date_time, "%m/%d/%y %H:%M:%S", tz="America/New_York")
# convert to Alaska Time
EXO.POKE$date_timeAK<-with_tz(EXO.POKE$date_timeET, tz="America/Anchorage")
head(EXO.POKE)
class(EXO.POKE$date_timeAK)
tz(EXO.POKE$date_timeAK)

## STRT ##
# put date and time in same column
EXO.STRT$date_time = paste(EXO.STRT$Date..MM.DD.YYYY., EXO.STRT$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.STRT$date_timeET<-as.POSIXct(EXO.STRT$date_time, "%m/%d/%y %H:%M:%S", tz="America/New_York")
# convert to Alaska Time
EXO.STRT$date_timeAK<-with_tz(EXO.STRT$date_timeET, tz="America/Anchorage")
head(EXO.STRT)
class(EXO.STRT$date_timeAK)
tz(EXO.STRT$date_timeAK)

## VAUL ##
# put date and time in same column
EXO.VAUL$date_time = paste(EXO.VAUL$Date..MM.DD.YYYY., EXO.VAUL$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.VAUL$date_timeET<-as.POSIXct(EXO.VAUL$date_time, "%m/%d/%y %H:%M:%S", tz="America/New_York")
# convert to Alaska Time
EXO.VAUL$date_timeAK<-with_tz(EXO.VAUL$date_timeET, tz="America/Anchorage")
head(EXO.VAUL)
class(EXO.VAUL$date_timeAK)
tz(EXO.VAUL$date_timeAK)

### reduce columns ###

EXO.FRCH.burst = subset(EXO.FRCH, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.MOOS.burst = subset(EXO.MOOS, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.POKE.burst = subset(EXO.POKE, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.STRT.burst = subset(EXO.STRT, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.VAUL.burst = subset(EXO.VAUL, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))

###  rename columns ###
names(EXO.FRCH.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.MOOS.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.POKE.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.STRT.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.VAUL.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")

### round to nearest 15 min ###

EXO.FRCH.burst$DateTime = lubridate::round_date(EXO.FRCH.burst$DateTime, "15 minutes") 
EXO.MOOS.burst$DateTime = lubridate::round_date(EXO.MOOS.burst$DateTime, "15 minutes") 
EXO.POKE.burst$DateTime = lubridate::round_date(EXO.POKE.burst$DateTime, "15 minutes") 
EXO.STRT.burst$DateTime = lubridate::round_date(EXO.STRT.burst$DateTime, "15 minutes") 
EXO.VAUL.burst$DateTime = lubridate::round_date(EXO.VAUL.burst$DateTime, "15 minutes") 

#### match NAs in DOD 2019 to bursts ####

## NO3 ##
#temp= inner_join(SUNA.FRCH.burst, subset(FRCH, select=c("DateTime", "nitrateuM")), by= "DateTime")
#temp$nitrateuM = ifelse(is.na(temp$nitrateuM), NA, temp$nitrateuM)
#SUNA.FRCH.burst$nitrateuM = temp$nitrateuM # not the same amount of rows 

#temp= inner_join(SUNA.C3.burst, subset(C3, select=c("date_timeAK", "nitrate_uM")), by= "date_timeAK")
#temp$nitrateuM = ifelse(is.na(temp$nitrate_uM), NA, temp$nitrateuM)
#SUNA.C3.burst$nitrateuM = temp$nitrateuM


#### save clean-ish burst data ####

write_csv(SUNA.FRCH.burst, "~/Documents/DoD_2019/Stiched_data/SUNA.FRCH.burst.csv")
write_csv(SUNA.MOOS.burst, "~/Documents/DoD_2019/Stiched_data/SUNA.MOOS.burst.csv")
write_csv(SUNA.POKE.burst, "~/Documents/DoD_2019/Stiched_data/SUNA.POKE.burst.csv")
write_csv(SUNA.STRT.burst, "~/Documents/DoD_2019/Stiched_data/SUNA.STRT.burst.csv")
write_csv(SUNA.VAUL.burst, "~/Documents/DoD_2019/Stiched_data/SUNA.VAUL.burst.csv")

write_csv(EXO.FRCH.burst, "~/Documents/DoD_2019/Stiched_data/EXO.FRCH.burst.csv")
write_csv(EXO.MOOS.burst, "~/Documents/DoD_2019/Stiched_data/EXO.MOOS.burst.csv")
write_csv(EXO.POKE.burst, "~/Documents/DoD_2019/Stiched_data/EXO.POKE.burst.csv")
write_csv(EXO.STRT.burst, "~/Documents/DoD_2019/Stiched_data/EXO.STRT.burst.csv")
write_csv(EXO.VAUL.burst, "~/Documents/DoD_2019/Stiched_data/EXO.VAUL.burst.csv")


#### join burst and storm data ####

### NO3 ### working on this as of 211007

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]] = inner_join(FRCH_NO3_storm_list[[i]], SUNA.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]] = inner_join(MOOS_NO3_storm_list[[i]], SUNA.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_08_15_NO3`$valuedatetime <- as.POSIXct(POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_08_15_NO3`$valuedatetime, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_09_29_NO3`$valuedatetime <- as.POSIXct(POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_09_29_NO3`$valuedatetime, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_10_04_NO3`$valuedatetime <- as.POSIXct(POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_10_04_NO3`$valuedatetime, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]] = inner_join(POKE_NO3_storm_list[[i]], SUNA.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]][["valuedatetime"]] = as.POSIXct(STRT_NO3_storm_list[[i]][["valuedatetime"]],
                                                  "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]] = inner_join(STRT_NO3_storm_list[[i]], SUNA.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]][["valuedatetime"]] = as.POSIXct(VAUL_NO3_storm_list[[i]][["valuedatetime"]],
                                                           "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]] = inner_join(VAUL_NO3_storm_list[[i]], SUNA.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]] = inner_join(FRCH_fDOM_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]] = inner_join(MOOS_fDOM_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]][["valuedatetime"]] = as.POSIXct(POKE_fDOM_storm_list[[i]][["valuedatetime"]],
                                                           "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]] = inner_join(POKE_fDOM_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["valuedatetime"]] = as.POSIXct(STRT_fDOM_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]] = inner_join(STRT_fDOM_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["valuedatetime"]] = as.POSIXct(VAUL_fDOM_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]] = inner_join(VAUL_fDOM_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]] = inner_join(FRCH_SpCond_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]] = inner_join(MOOS_SpCond_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]][["valuedatetime"]] = as.POSIXct(POKE_SpCond_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]] = inner_join(POKE_SpCond_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]][["valuedatetime"]] = as.POSIXct(STRT_SpCond_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]] = inner_join(STRT_SpCond_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]][["valuedatetime"]] = as.POSIXct(VAUL_SpCond_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]] = inner_join(VAUL_SpCond_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#Turb
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]] = inner_join(FRCH_turb_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]] = inner_join(MOOS_turb_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]][["valuedatetime"]] = as.POSIXct(POKE_turb_storm_list[[i]][["valuedatetime"]],
                                                              "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]] = inner_join(POKE_turb_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["valuedatetime"]] = as.POSIXct(STRT_turb_storm_list[[i]][["valuedatetime"]],
                                                              "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]] = inner_join(STRT_turb_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["valuedatetime"]] = as.POSIXct(VAUL_turb_storm_list[[i]][["valuedatetime"]],
                                                              "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}

for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]] = inner_join(VAUL_turb_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

# save storm with burst data #

saveRDS(FRCH_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/FRCH_NO3_storm_list.RData")
saveRDS(MOOS_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/MOOS_NO3_storm_list.RData")
saveRDS(POKE_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/POKE_NO3_storm_list.RData")
saveRDS(STRT_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/STRT_NO3_storm_list.RData")
saveRDS(VAUL_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/VAUL_NO3_storm_list.RData")

saveRDS(FRCH_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/FRCH_fDOM_storm_list.RData")
saveRDS(MOOS_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/MOOS_fDOM_storm_list.RData")
saveRDS(POKE_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/POKE_fDOM_storm_list.RData")
saveRDS(STRT_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/STRT_fDOM_storm_list.RData")
saveRDS(VAUL_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/VAUL_fDOM_storm_list.RData")

saveRDS(FRCH_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/FRCH_SPC_storm_list.RData")
saveRDS(MOOS_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/MOOS_SPC_storm_list.RData")
saveRDS(POKE_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/POKE_SPC_storm_list.RData")
saveRDS(STRT_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/STRT_SPC_storm_list.RData")
saveRDS(VAUL_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/VAUL_SPC_storm_list.RData")

saveRDS(FRCH_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/FRCH_turb_storm_list.RData")
saveRDS(MOOS_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/MOOS_turb_storm_list.RData")
saveRDS(POKE_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/POKE_turb_storm_list.RData")
saveRDS(STRT_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/STRT_turb_storm_list.RData")
saveRDS(VAUL_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2019/VAUL_turb_storm_list.RData")


###################################################################################################
######################## FOR TKH with adjusted chemistry data ###############################################
#################################################################################################
EXO_fDOMcorr_cl <- read_csv("~/DoD_2019/EXO_processed/EXO.fDOMcorr.cl.csv") # import adjusted chemistry data 
moos.final.discharge <- read_csv("Q/Final_Q/MOOS/MOOS.csv")
frch.final.discharge <- read_csv("Q/Final_Q/FRCH/FRCH.csv")
poke.final.discharge <- read_csv("Q/Final_Q/POKE/POKE.csv")
strt.final.discharge <- read_csv("Q/Final_Q/STRT/STRT.csv")
vaul.final.discharge <- read_csv("Q/Final_Q/VAUL/VAUL.csv")

FRCH_adj <-  subset(EXO_fDOMcorr_cl, Site == "FRCH")
attr(FRCH_adj$datetimeAK, "tzone") <- "America/Anchorage"
head(FRCH_adj$datetimeAK)
FRCH_adj$DateTime <- FRCH_adj$datetimeAK
FRCH_adj = left_join(frch.final.discharge, FRCH_adj, by="DateTime")
head(FRCH_adj)
names(FRCH_adj)

MOOS_adj <-  subset(EXO_fDOMcorr_cl, Site == "MOOS")
attr(MOOS_adj$datetimeAK, "tzone") <- "America/Anchorage"
head(MOOS_adj$datetimeAK)
MOOS_adj$DateTime <- MOOS_adj$datetimeAK
MOOS_adj = left_join(moos.final.discharge, MOOS_adj, by="DateTime")
head(MOOS_adj)
names(MOOS_adj)

POKE_adj <-  subset(EXO_fDOMcorr_cl, Site == "POKE")
attr(POKE_adj$datetimeAK, "tzone") <- "America/Anchorage"
head(POKE_adj$datetimeAK)
POKE_adj$DateTime <- POKE_adj$datetimeAK
POKE_adj = left_join(poke.final.discharge, POKE_adj, by="DateTime")
head(POKE_adj)
names(POKE_adj)

VAUL_adj <-  subset(EXO_fDOMcorr_cl, Site == "VAUL")
attr(VAUL_adj$datetimeAK, "tzone") <- "America/Anchorage"
head(VAUL_adj$datetimeAK)
VAUL_adj$DateTime <- VAUL_adj$datetimeAK
VAUL_adj = left_join(vaul.final.discharge, VAUL_adj, by="DateTime")
head(VAUL_adj)
names(VAUL_adj)

STRT_adj <-  subset(EXO_fDOMcorr_cl, Site == "STRT")
attr(STRT_adj$datetimeAK, "tzone") <- "America/Anchorage"
head(STRT_adj$datetimeAK)
STRT_adj$DateTime <- STRT_adj$datetimeAK
STRT_adj = left_join(strt.final.discharge, STRT_adj, by="DateTime")
head(STRT_adj)
names(STRT_adj)
?mtext
# FRCH # 
# NO3
par(oma = c(1,3,1,3))
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(FRCH_adj$MeanDischarge ~ FRCH_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000), 
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"),
                       tz="America/Anchorage"), main = "French NO3")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(FRCH$nitrateuM * 25 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
#fDOM
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(FRCH_adj$MeanDischarge ~ FRCH_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), 
                       tz="America/Anchorage"), main = "French fDOM")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(FRCH_adj$fDOM.QSU.adj * 15 ~ FRCH_adj$DateTime, type="l", xlab="", ylab="", col="brown4",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

# MOOS # 
# NO3
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(MOOS_adj$MeanDischarge ~ MOOS_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"), main = "Moose NO3")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(MOOS$nitrateuM * 55 ~ MOOS$DateTime.x, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
#fDOM
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(MOOS_adj$MeanDischarge ~ MOOS_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"), main = "Moose fDOM")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(MOOS_adj$fDOM.QSU.adj * 15 ~ MOOS_adj$DateTime, type="l", xlab="", ylab="", col="brown4",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

# POKE # 
# NO3
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(POKE_adj$MeanDischarge ~ POKE_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"), main = "Poker NO3")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(POKE$nitrateuM * 20 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))
#fDOM
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(POKE_adj$MeanDischarge ~ POKE_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0, 8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"), main = "Poker fDOM")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(POKE_adj$fDOM.QSU.adj * 10 ~ POKE_adj$DateTime, type="l", xlab="", ylab="", col="brown4",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))


# VAUL # 
# NO3
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(VAUL_adj$MeanDischarge ~ VAUL_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"), main = "Vault NO3")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(VAUL$nitrateuM * 5  ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

#fDOM
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(10,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(VAUL_adj$MeanDischarge ~ VAUL_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"), main = "Vault fDOM")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(VAUL_adj$fDOM.QSU.adj ~ VAUL_adj$DateTime, type="l", xlab="", ylab="", col="brown4",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

# STRT # 
# NO3
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(STRT_adj$MeanDischarge ~ STRT_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"), main = "Stuart NO3")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(STRT$nitrateuM * 105  ~ STRT$DateTime.x, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))

#fDOM
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2019-05-01 0:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(14,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'Precip. (mm)', cex = 1.5)
par(new = T)
plot(STRT_adj$MeanDischarge ~ STRT_adj$DateTime, type="l", xlab="Date", ylab="",
     ylim = c(0,8000),
     xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 00:00:00"), tz="America/Anchorage"), main = "Stuart fDOM")
mtext(side = 2, line = 3, 'Discharge (L/s)', cex = 1.5)
lines(STRT_adj$fDOM.QSU.adj * 52 ~ STRT_adj$DateTime, type="l", xlab="", ylab="", col="brown4",
      xlim = as.POSIXct(c("2019-05-01 00:00:00","2019-10-15 01:00:00"), tz="America/Anchorage"))



############################################# 2020 ################################################

### Load from local machine ###
EXO.2020 <- read_csv("~/Documents/DoD_2020/EXO_data/from_internal_harddrive/processed/EXO.ALL.csv")
Q.2020 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2020/Q_2020.csv")
names(EXO.2020)[names(EXO.2020) == 'site.ID'] <- 'Site' # renaming columns to match
EXO.2020$DateTime <- as.POSIXct(EXO.2020$DateTime, tz = 'America/Anchorage',"%Y-%m-%d %H:%M:%S") # making double to datetime 
attributes(Q.2020$DateTime)$tzone <- 'America/Anchorage' # changing timezone 
EXO.2020 <- EXO.2020[,-c(1,2,3,4,6,9:13,15,17,18,19,20,21,22)] # removing unnecesary columns
EXO.2020 <- EXO.2020[, c(6,1,2,3,4,5)] # reorder column headers

EXO.Q.2020 <- full_join(EXO.2020, Q.2020)
EXO.Q.2020$day <- yday(EXO.Q.2020$day) # making julian days

SUNA.2020 <- read_csv("~/Documents/DoD_2020/SUNA_data/from_internal_harddrive/processed/SUNA.processed.csv")
SUNA.2020 <- SUNA.2020[, -(14:269)] # Remove channels
names(SUNA.2020)[names(SUNA.2020) == 'datetimeAK'] <- 'DateTime' # renaming columns to match
names(SUNA.2020)[names(SUNA.2020) == 'site.ID'] <- 'Site' # renaming columns to match
attributes(SUNA.2020$DateTime)$tzone <- 'America/Anchorage'

SUNA.2020 <- SUNA.2020[,-c(1,3,4,5,7:32,35,36,38,39)] # removing unnecssary columns
SUNA.2020 <- SUNA.2020[, c(5,1,2,3,4)] # reorder column headers
SUNA.2020$DateTime = lubridate::round_date(SUNA.2020$DateTime, "15 minutes") # round to the nearest 15 minute 

DOD.2020 <- full_join(EXO.Q.2020, SUNA.2020)
write_csv(DOD.2020, "~/Documents/DoD_Discharge/Discharge_Chem/2020/DOD.2020.csv")

CARI_2020 <- read_csv("~/Documents/NEON/CARI/WaterQuality2020.csv", 
                      col_types = cols(Discharge = col_double(), 
                                       fDOM = col_double(), NO3 = col_double(), 
                                       SpCond = col_double(), Turb = col_double()))
attributes(CARI_2020$DateTime)$tzone <- "America/Anchorage"

CARI_2020$day = format(as.POSIXct(CARI_2020$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
attributes(CARI_2020$DateTime)$tzone <- 'America/Anchorage'
CARI_2020$day = as.POSIXct(CARI_2020$day, "%Y-%m-%d", tz="America/Anchorage")
cari.final.discharge.2020 <- CARI_2020[,-c(4:8)]

CARI.daily.2020 = with(CARI_2020, tapply(Discharge, list(day, Site), mean))
CARI.daily.2020 = as.data.frame(CARI.daily.2020)

CARI.Q.2020 = as.data.frame(CARI.daily.2020$CARI)
CARI.Q.2020$day = as.Date(rownames(CARI.daily.2020))
names(CARI.Q.2020) = c("Discharge_Lsec", "day")

# subset data by site #
FRCH.2020 <-  subset(DOD.2020, Site == "FRCH")
head(FRCH.2020$DateTime)

STRT.2020 = subset(DOD.2020, Site == "STRT")
head(STRT.2020$DateTime)

POKE.2020 = subset(DOD.2020, Site == "POKE")
head(POKE.2020$DateTime)

VAUL.2020 = subset(DOD.2020, Site == "VAUL")
head(VAUL.2020$DateTime)

MOOS.2020 = subset(DOD.2020, Site == "MOOS")
head(MOOS.2020$DateTime)

frch.final.discharge.2020 <- subset(Q.2020, Site == "FRCH")
head(frch.final.discharge.2020$DateTime)

strt.final.discharge.2020 <- subset(Q.2020, Site == "STRT")
head(strt.final.discharge.2020$DateTime)

poke.final.discharge.2020 <- subset(Q.2020, Site == "POKE")
head(poke.final.discharge.2020$DateTime)

vaul.final.discharge.2020 <- subset(Q.2020, Site == "VAUL")
head(vaul.final.discharge.2020$DateTime)

moos.final.discharge.2020 <- subset(Q.2020, Site == "MOOS")
head(moos.final.discharge.2020$DateTime)

Q.2020$day = format(as.POSIXct(Q.2020$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
attributes(Q.2020$DateTime)$tzone <- 'America/Anchorage'
Q.2020$day = as.POSIXct(Q.2020$day, "%Y-%m-%d", tz="America/Anchorage")

Q.daily.2020 = with(Q.2020, tapply(Q, list(day, Site), mean))
Q.daily.2020 = as.data.frame(Q.daily.2020)

FRCH.Q.2020 = as.data.frame(Q.daily.2020$FRCH)
FRCH.Q.2020$day = as.Date(rownames(Q.daily.2020))
names(FRCH.Q.2020) = c("Discharge_Lsec", "day")

STRT.Q.2020 = as.data.frame(Q.daily.2020$STRT)
STRT.Q.2020$day = as.Date(rownames(Q.daily.2020))
names(STRT.Q.2020) = c("Discharge_Lsec", "day")

POKE.Q.2020 = as.data.frame(Q.daily.2020$POKE)
POKE.Q.2020$day = as.Date(rownames(Q.daily.2020))
names(POKE.Q.2020) = c("Discharge_Lsec", "day")

VAUL.Q.2020 = as.data.frame(Q.daily.2020$VAUL)
VAUL.Q.2020$day = as.Date(rownames(Q.daily.2020))
names(VAUL.Q.2020) = c("Discharge_Lsec", "day")

MOOS.Q.2020 = as.data.frame(Q.daily.2020$MOOS)
MOOS.Q.2020$day = as.Date(rownames(Q.daily.2020))
names(MOOS.Q.2020) = c("Discharge_Lsec", "day")

write_csv(FRCH.Q.2020, "~/Documents/DoD_Discharge/Discharge_Chem/2020/Daily_Q_day/FRCH/FRCH_Q_2020.csv")
write_csv(STRT.Q.2020, "~/Documents/DoD_Discharge/Discharge_Chem/2020/Daily_Q_day/STRT/STRT_Q_2020.csv")
write_csv(POKE.Q.2020, "~/Documents/DoD_Discharge/Discharge_Chem/2020/Daily_Q_day/POKE/POKE_Q_2020.csv")
write_csv(VAUL.Q.2020, "~/Documents/DoD_Discharge/Discharge_Chem/2020/Daily_Q_day/VAUL/VAUL_Q_2020.csv")
write_csv(MOOS.Q.2020, "~/Documents/DoD_Discharge/Discharge_Chem/2020/Daily_Q_day/MOOS/MOOS_Q_2020.csv")

#data wrangling - fill gaps #
# fxn #
fillgaps15 = function(df, dat, datquotes, largegap.num){
  ## Document gaps >= largegap.num (1 largegap.num = 15 min) ##
  # (note - the criteria of what constitutes a "large" gap should be reevaluated depending on the trend being characterized)
  is.na.rle <- rle(is.na(dat))
  is.na.rle$values <- is.na.rle$values & is.na.rle$lengths >= (largegap.num)
  biggaps = df[inverse.rle(is.na.rle), ]
  tz(biggaps$DateTime) = "America/Anchorage"
  biggaps = subset(biggaps, select = "DateTime")
  # Make univariate time series, covert to zoo, then to ts #
  ts.xts = subset(df, select = c("DateTime",datquotes))
  ts.xts<-read.zoo(ts.xts, index.column=1, format="%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
  ts.xts<-as.xts(ts.xts)
  # remove leading and trailing NAs #
  ts.xts = na.trim(ts.xts, is.na="any")
  # Apply auto.arima and kalman filter to impute missing values #
  fit2 = auto.arima(ts.xts) 
  kal = KalmanSmooth(ts.xts, fit2$model)
  id.na<-which(is.na(ts.xts))
  for(i in id.na) 
    ts.xts[i]<-fit2$model$Z %*% kal$smooth[i,]
  # revert to dataframe #
  ts.df = as.data.frame((ts.xts))
  ts.df$date_timeAK = as.POSIXct(row.names(ts.df), tz="America/Anchorage")
  names(ts.df) = c("dat_filled", "DateTime")
  # remove large gaps # 
  ts.df$dat_filled[ts.df$date_timeAK %in% as.POSIXct(biggaps$DateTime)] = NA
  # Replace large gaps with linear interpolation #
  ts.df$dat_filled = na.interpolation(ts.df$dat_filled)
  ts.df = subset(ts.df, select = c("dat_filled", "DateTime"))
  return(ts.df)
}


# FRCH # 
EXO_FRCH <- read_csv("~/Documents/DoD_2020/EXO_data/from_internal_harddrive/processed/EXO.FRCH.csv")
EXO_FRCH$Date <- mdy(EXO_FRCH$Date..MM.DD.YYYY.) # making a date column
EXO_FRCH$DateTime <- as.POSIXct(paste(EXO_FRCH$Date, EXO_FRCH$Time..HH.mm.ss.), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage") # merging to make a datetime column 
EXO_FRCH <- EXO_FRCH[,-c(1,2,3,4,6,9:13,15,17:21)]
names(EXO_FRCH)[names(EXO_FRCH) == 'Site.Name'] <- 'Site' # renaming columns to match



FRCH.fDOM = subset(EXO_FRCH, select = c("DateTime","fDOM.QSU"))
frch.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = FRCH.fDOM) # Averaging 15 minute intervals
frch.fdom.1 <- cut(FRCH.fDOM$DateTime, breaks = "15 min")
frch.fdom.final <- as.data.frame(aggregate(fDOM.QSU ~ frch.fdom.1, data = FRCH.fDOM, FUN = mean)) # Averaging 15 minute intervals
frch.fdom.final$DateTime <-as.POSIXct(frch.fdom.final$frch.fdom.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

FRCH_SUNA_processed <- read_csv("~/Documents/DoD_2020/SUNA_data/from_internal_harddrive/processed/FRCH_SUNA_processed.csv") # import FRCH SUNA data because the one from before has no nitrate data 
FRCH_SUNA_processed <- FRCH_SUNA_processed[, -(14:287)]  #Removing channels

FRCH.no3 <- subset(FRCH_SUNA_processed, select = c("nitrateuM", "datetimeAK"))
FRCH.no3$DateTime <-mdy_hm(FRCH_SUNA_processed$datetimeAK, tz = "GMT") 
attributes(FRCH.no3$DateTime)$tzone <- 'America/Anchorage'

frch.no3.final <- as.data.frame(aggregate(nitrateuM ~ DateTime, data = FRCH.no3, FUN = mean)) # Averaging 15 minute intervals

FRCH.SpCond = subset(EXO_FRCH, select = c("DateTime","SpCond.µS.cm"))
frch.spcond.final = aggregate(SpCond.µS.cm ~ DateTime, FUN=mean, data = FRCH.SpCond) # Averaging 15 minute intervals
frch.spcond.1 <- cut(FRCH.SpCond$DateTime, breaks = "15 min")
frch.spcond.final <- as.data.frame(aggregate(SpCond.µS.cm ~ frch.spcond.1, data = FRCH.SpCond, FUN = mean)) # Averaging 15 minute intervals
frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

FRCH.turb = subset(EXO_FRCH, select = c("DateTime","Turbidity.FNU"))
frch.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = FRCH.turb) # Averaging 15 minute intervals
frch.turb.1 <- cut(FRCH.turb$DateTime, breaks = "15 min")
frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ frch.turb.1, data = FRCH.turb, FUN = mean)) # Averaging 15 minute intervals
frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

FRCH.2020.chem = left_join(frch.final.discharge.2020, frch.fdom.final, by="DateTime")
FRCH.2020.chem = left_join(FRCH.2020.chem, frch.no3.final, by="DateTime")
FRCH.2020.chem = left_join(FRCH.2020.chem, frch.spcond.final, by="DateTime")
FRCH.2020.chem = left_join(FRCH.2020.chem, frch.turb.final, by="DateTime")
FRCH.2020.chem <- FRCH.2020.chem[, -c(5,8,10)]

plot(FRCH.2020.chem$Q ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

### STRT ###
STRT.no3 <- subset(STRT.2020, select = c("DateTime", "nitrateuM"))
#plot(STRT.no3$dat_filled, type="l")
names(STRT.no3) = c("DateTime", "nitrateuM")

STRT.fDOM = subset(STRT.2020, select = c("DateTime","fDOM.QSU"))
#STRT.fDOM.1 = fillgaps15(strt.fdom.final, strt.fdom.final$fDOM.QSU, "fDOM.QSU", 16)
#plot(STRT$dat_filled, type="l")
names(STRT.fDOM) = c("DateTime", "fDOM.QSU")
#str(STRT.fDOM)
#strt.fdom.1 <- STRT.fDOM[, list]
#data[,list(avg=mean(temperature)),by=hour]

strt.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = STRT.fDOM) # Averaging 15 minute intervals



strt.no3.1 <- cut(STRT.no3$DateTime, breaks="15 min")
strt.no3.final <- as.data.frame(aggregate(nitrateuM ~ strt.no3.1, data = STRT.no3, FUN = mean)) # Averaging 15 minute intervals
strt.no3.final$DateTime <-as.POSIXct(strt.no3.final$strt.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

strt.spcond = subset(STRT.2020, select = c("DateTime","SpCond.uScm"))
strt.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = strt.spcond) # Averaging 15 minute intervals
strt.spcond.1 <- cut(strt.spcond$DateTime, breaks = "15 min")
strt.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ strt.spcond.1, data = strt.spcond, FUN = mean)) # Averaging 15 minute intervals
strt.spcond.final$DateTime <-as.POSIXct(strt.spcond.final$strt.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

strt.turb = subset(STRT.2020, select = c("DateTime","Turbidity.FNU"))
strt.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = strt.turb) # Averaging 15 minute intervals
strt.turb.1 <- cut(strt.turb$DateTime, breaks = "15 min")
strt.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ strt.turb.1, data = strt.turb, FUN = mean)) # Averaging 15 minute intervals
strt.turb.final$DateTime <-as.POSIXct(strt.turb.final$strt.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

STRT.2020.chem = left_join(strt.final.discharge.2020, strt.fdom.final, by="DateTime")
STRT.2020.chem = left_join(STRT.2020.chem, strt.no3.final, by="DateTime")
STRT.2020.chem = left_join(STRT.2020.chem, strt.spcond.final, by="DateTime")
STRT.2020.chem = left_join(STRT.2020.chem, strt.turb.final, by="DateTime")
STRT.2020.chem <- STRT.2020.chem[, -c(6,8,10)]


plot(STRT.2020.chem$Q ~ STRT.2020.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(STRT.2020.chem$nitrateuM * 50 ~ STRT.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(STRT.2020.chem$fDOM.QSU * 20 ~ STRT.2020.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))


### POKE ### 
POKE.no3 <- subset(POKE.2020, select = c("DateTime", "nitrateuM"))
POKE.no3 <- POKE.no3[!is.na(POKE.no3$DateTime), ]

POKE.fDOM = subset(POKE.2020, select = c("DateTime","fDOM.RFU"))
#POKE.fDOM = fillgaps15(POKE.fDOM, POKE.fDOM$fDOM.RFU, "fDOM.RFU", 16)
#plot(POKE$dat_filled, type="l")
names(POKE.fDOM) = c("DateTime", "fDOM.RFU")

poke.fdom.1 <- cut(POKE.fDOM$DateTime, breaks = "15 min")
poke.fdom.final <- as.data.frame(aggregate(fDOM.RFU ~ poke.fdom.1, data = POKE.fDOM, FUN = mean)) # Averaging 15 minute intervals
poke.fdom.final$DateTime <-as.POSIXct(poke.fdom.final$poke.fdom.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")


poke.no3.1 <- cut(POKE.no3$DateTime, breaks="15 min")
poke.no3.final <- as.data.frame(aggregate(nitrateuM ~ poke.no3.1, data = POKE.no3, FUN = mean)) # Averaging 15 minute intervals
poke.no3.final$DateTime <-as.POSIXct(poke.no3.final$poke.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

poke.spcond = subset(POKE.2020, select = c("DateTime","SpCond.uScm"))
poke.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = poke.spcond) # Averaging 15 minute intervals
poke.spcond.1 <- cut(poke.spcond$DateTime, breaks = "15 min")
poke.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ poke.spcond.1, data = poke.spcond, FUN = mean)) # Averaging 15 minute intervals
poke.spcond.final$DateTime <-as.POSIXct(poke.spcond.final$poke.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

poke.turb = subset(POKE.2020, select = c("DateTime","Turbidity.FNU"))
poke.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = poke.turb) # Averaging 15 minute intervals
poke.turb.1 <- cut(poke.turb$DateTime, breaks = "15 min")
poke.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ poke.turb.1, data = poke.turb, FUN = mean)) # Averaging 15 minute intervals
poke.turb.final$DateTime <-as.POSIXct(poke.turb.final$poke.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")


POKE.2020.chem = left_join(poke.final.discharge.2020, poke.fdom.final, by="DateTime")
POKE.2020.chem = left_join(POKE.2020.chem, poke.no3.final, by="DateTime")
POKE.2020.chem = left_join(POKE.2020.chem, poke.spcond.final, by="DateTime")
POKE.2020.chem = left_join(POKE.2020.chem, poke.turb.final, by="DateTime")
POKE.2020.chem <- POKE.2020.chem[, -c(5,7,9,11)]

plot(POKE.2020.chem$Q ~ POKE.2020.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(POKE.2020.chem$nitrateuM * 30 ~ POKE.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(POKE.2020.chem$fDOM.RFU * 30 ~ POKE.2020.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

### VAUL ### 
VAUL.no3 <- subset(VAUL.2020, select = c("DateTime", "nitrateuM"))
#plot(VAUL.no3$dat_filled, type="l")
#names(VAUL.no3) = c("nitrate_uM_filled", "DateTime")

VAUL.fDOM = subset(VAUL.2020, select = c("DateTime","fDOM.QSU"))
#VAUL.fDOM = fillgaps15(VAUL.fDOM, VAUL.fDOM$fDOM.RFU, "fDOM.RFU", 16)
#plot(VAUL$dat_filled, type="l")
#names(VAUL.fDOM) = c("DateTime", "fDOM.QSU")

vaul.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = VAUL.fDOM) # Averaging 15 minute intervals

vaul.no3.1 <- cut(VAUL.no3$DateTime, breaks="15 min")
vaul.no3.final <- as.data.frame(aggregate(nitrateuM ~ vaul.no3.1, data = VAUL.no3, FUN = mean)) # Averaging 15 minute intervals
vaul.no3.final$DateTime <-as.POSIXct(vaul.no3.final$vaul.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

vaul.spcond = subset(VAUL.2020, select = c("DateTime","SpCond.uScm"))
vaul.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = vaul.spcond) # Averaging 15 minute intervals
vaul.spcond.1 <- cut(vaul.spcond$DateTime, breaks = "15 min")
vaul.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ vaul.spcond.1, data = vaul.spcond, FUN = mean)) # Averaging 15 minute intervals
vaul.spcond.final$DateTime <-as.POSIXct(vaul.spcond.final$vaul.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

vaul.turb = subset(VAUL.2020, select = c("DateTime","Turbidity.FNU"))
vaul.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = vaul.turb) # Averaging 15 minute intervals
vaul.turb.1 <- cut(vaul.turb$DateTime, breaks = "15 min")
vaul.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ vaul.turb.1, data = vaul.turb, FUN = mean)) # Averaging 15 minute intervals
vaul.turb.final$DateTime <-as.POSIXct(vaul.turb.final$vaul.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

#VAUL.no3.2 <-  fillgaps15(vaul.no3.final, vaul.no3.final$nitrateuM, "nitrateuM", 16)

VAUL.2020.chem = left_join(vaul.final.discharge.2020, vaul.fdom.final, by="DateTime")
VAUL.2020.chem = left_join(VAUL.2020.chem, vaul.no3.final, by="DateTime")
VAUL.2020.chem = left_join(VAUL.2020.chem, vaul.spcond.final, by="DateTime")
VAUL.2020.chem = left_join(VAUL.2020.chem, vaul.turb.final, by="DateTime")
VAUL.2020.chem <- VAUL.2020.chem[, -c(6,8,10)]

plot(VAUL.2020.chem$Q ~ VAUL.2020.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(VAUL.2020.chem$nitrateuM * 20 ~ VAUL.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(VAUL.2020.chem$fDOM.QSU * 1 ~ VAUL.2020.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

### MOOS ###
MOOS.no3 <- subset(MOOS.2020, select = c("DateTime", "nitrateuM"))
#MOOS.no3 <-  fillgaps15(MOOS.no3, MOOS.no3$nitrateuM, "nitrateuM", 16)
#plot(MOOS.no3$dat_filled, type="l")
MOOS.fDOM = subset(MOOS.2020, select = c("DateTime","fDOM.QSU"))
names(MOOS.fDOM) = c("DateTime", "fDOM.QSU")
#MOOS.fDOM = fillgaps15(MOOS.fDOM, MOOS.fDOM$fDOM.QSU, "fDOM.QSU", 16)
#plot(MOOS$dat_filled, type="l")

moos.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN = mean, data = MOOS.fDOM) # averaging every burst at 15 min intervals

moos.no3.1 <- cut(MOOS.no3$DateTime, breaks="15 min")
moos.no3.final <- as.data.frame(aggregate(nitrateuM ~ moos.no3.1, data = MOOS.no3, FUN = mean)) # Averaging 15 minute intervals
moos.no3.final$DateTime <-as.POSIXct(moos.no3.final$moos.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

moos.spcond = subset(MOOS.2020, select = c("DateTime","SpCond.uScm"))
moos.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = moos.spcond) # Averaging 15 minute intervals
moos.spcond.1 <- cut(moos.spcond$DateTime, breaks = "15 min")
moos.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ moos.spcond.1, data = moos.spcond, FUN = mean)) # Averaging 15 minute intervals
moos.spcond.final$DateTime <-as.POSIXct(moos.spcond.final$moos.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

moos.turb = subset(MOOS.2020, select = c("DateTime","Turbidity.FNU"))
moos.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = moos.turb) # Averaging 15 minute intervals
moos.turb.1 <- cut(moos.turb$DateTime, breaks = "15 min")
moos.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ moos.turb.1, data = moos.turb, FUN = mean)) # Averaging 15 minute intervals
moos.turb.final$DateTime <-as.POSIXct(moos.turb.final$moos.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")


MOOS.2020.chem = left_join(moos.final.discharge.2020, moos.fdom.final, by="DateTime")
MOOS.2020.chem = left_join(MOOS.2020.chem, moos.no3.final, by="DateTime")
MOOS.2020.chem = left_join(MOOS.2020.chem, moos.spcond.final, by="DateTime")
MOOS.2020.chem = left_join(MOOS.2020.chem, moos.turb.final, by="DateTime")
MOOS.2020.chem <- MOOS.2020.chem[, -c(6,8,10)]

plot(MOOS.2020.chem$Q ~ MOOS.2020.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2020.chem$nitrateuM * 60 ~ MOOS.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2020.chem$fDOM.QSU * 10 ~ MOOS.2020.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

# Write CSV #
write_csv(FRCH.2020.chem, "~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2020.csv")
write_csv(STRT.2020.chem, "~/Documents/Storms/Q_Chem/STRT/STRT_chem_2020.csv")
write_csv(POKE.2020.chem, "~/Documents/Storms/Q_Chem/POKE/POKE_chem_2020.csv")
write_csv(VAUL.2020.chem, "~/Documents/Storms/Q_Chem/VAUL/VAUL_chem_2020.csv")
write_csv(MOOS.2020.chem, "~/Documents/Storms/Q_Chem/VAUL/MOOS_chem_2020.csv")

# Baseflow Separation #

any(is.na(FRCH.Q.2020$day))
any(is.na(FRCH.Q.2020$Discharge_Lsec))
FRCH.Q.2020 <- na.omit(FRCH.Q.2020) # Remove 7 NaNs  # 132 rows to 125 rows

any(is.na(STRT.Q.2020$day))
any(is.na(STRT.Q.2020$Discharge_Lsec))
STRT.Q.2020 <- na.omit(STRT.Q.2020) # Remove 19 NaNs # 132 to 113

any(is.na(POKE.Q.2020$day))
any(is.na(POKE.Q.2020$Discharge_Lsec))
POKE.Q.2020 <- na.omit(POKE.Q.2020) # Remove 4 NaNs # 132 to 128

any(is.na(VAUL.Q.2020$day))
any(is.na(VAUL.Q.2020$Discharge_Lsec))
VAUL.Q.2020 <- na.omit(VAUL.Q.2020) # Remove 21 NaNs #132 to 111 

any(is.na(MOOS.Q.2020$day))
any(is.na(MOOS.Q.2020$Discharge_Lsec))
MOOS.Q.2020 <- na.omit(MOOS.Q.2020) # Remove 11 NaNs 132 to 121 

any(is.na(CARI.Q.2020$day))
any(is.na(CARI.Q.2020$Discharge_Lsec)) 
CARI.Q.2020 <- na.omit(CARI.Q.2020) # Removed 14 rows - (86 to 72)


frch.final.discharge.2020$MeanDischarge <- frch.final.discharge.2020$Q
poke.final.discharge.2020$MeanDischarge <- poke.final.discharge.2020$Q
vaul.final.discharge.2020$MeanDischarge <- vaul.final.discharge.2020$Q
strt.final.discharge.2020$MeanDischarge <- strt.final.discharge.2020$Q
moos.final.discharge.2020$MeanDischarge <- moos.final.discharge.2020$Q

### examine the recursive digital filter at .9, .925, .95 levels ###
plot(frch.final.discharge.2020$MeanDischarge ~ frch.final.discharge.2020$DateTime, type = "l", xlab = "", ylab = "Q (L/sec)",
     xlim =  as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0, 3000), col="blue")
#
plot(poke.final.discharge.2020$MeanDischarge ~ poke.final.discharge.2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

plot(vaul.final.discharge.2020$MeanDischarge ~ vaul.final.discharge.2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

plot(strt.final.discharge.2020$MeanDischarge ~ strt.final.discharge.2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

plot(moos.final.discharge.2020$MeanDischarge ~ moos.final.discharge.2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

ggplot(aes(x = DateTime, y = Discharge), data = CARI_2020) +
  geom_line(color="#A6CEE3", size=1.25) +
  theme_classic() +
  ggtitle("CARI measured Q") +
  xlab("Date") +
  ylab("Discharge (L/s)") +
  xlab("")

### Hydrograph Separation ###
#
any(is.na(frch.final.discharge.2020$MeanDischarge))
frch.final.discharge.2020 <- na.omit(frch.final.discharge.2020) # removed 11987-11984

FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2020$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 

#
any(is.na(strt.final.discharge.2020$MeanDischarge))
strt.final.discharge.2020 <- na.omit(strt.final.discharge.2020) # removed 10817-10814

STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2020$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(STRT.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2020$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(POKE.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
any(is.na(vaul.final.discharge.2020$MeanDischarge))
vaul.final.discharge.2020 <- na.omit(vaul.final.discharge.2020) # removed 11687-11686

VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2020$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(VAUL.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

#
any(is.na(moos.final.discharge.2020$MeanDischarge))
moos.final.discharge.2020 <- na.omit(moos.final.discharge.2020) # removed 11582-11581

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2020$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(MOOS.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

# CARI
any(is.na(cari.final.discharge.2020$Discharge))
cari.final.discharge.2020 <- na.omit(cari.final.discharge.2020) # removed 244805-241487
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2020$Discharge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(CARI.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 

###.925 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2020$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(FRCH.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2020$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(STRT.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2020$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(POKE.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2020$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(VAUL.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2020$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(MOOS.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

# 
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2020$Discharge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(CARI.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 


### .95 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2020$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(FRCH.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2020$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(STRT.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2020$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(POKE.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2020$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(VAUL.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2020$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(MOOS.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

# 
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2020$Discharge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(CARI.Q.2020, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 


##Deliniate storms in FRCH ##

# ID storms: Any events where Q reached 2X mean base flow 
# Pick starting points: manually select inflection pt when Q began to rise
# Pick ending points: manually select pt when Q reached pre-storm baseflow OR when another event occurred


FRCH_bfQ_mn = mean(FRCH_Q_bf$bt)
FRCH_bfQ_mn
FRCH_bfQ_mn*2

STRT_bfQ_mn = mean(STRT_Q_bf$bt)
STRT_bfQ_mn
STRT_bfQ_mn*2

VAUL_bfQ_mn = mean(VAUL_Q_bf$bt)
VAUL_bfQ_mn
VAUL_bfQ_mn*2

POKE_bfQ_mn = mean(POKE_Q_bf$bt)
POKE_bfQ_mn
POKE_bfQ_mn*2

MOOS_bfQ_mn = mean(MOOS_Q_bf$bt)
MOOS_bfQ_mn
MOOS_bfQ_mn*2

CARI_bfQ_mn = mean(CARI_Q_bf$bt)
CARI_bfQ_mn
CARI_bfQ_mn*2

### Merge Discharge and Precip ###
FRCH.st <- read_csv("~/Documents/DoD_2020/RainGauge/FRCH.RainGauge.2020.csv")
attributes(FRCH.st$DateTime)$tzone <- 'America/Anchorage'
STRT.st <- read_csv("~/Documents/DoD_2020/RainGauge/STRT.RainGauge.2020.csv")
attributes(STRT.st$DateTime)$tzone <- 'America/Anchorage'
VAUL.st <- read_csv("~/Documents/DoD_2020/RainGauge/VAUL.RainGauge.2020.csv")
attributes(VAUL.st$DateTime)$tzone <- 'America/Anchorage'
POKE.st <- read_csv("~/Documents/DoD_2020/RainGauge/POKE.RainGauge.2020.csv")
attributes(POKE.st$DateTime)$tzone <- 'America/Anchorage'

frch.precip.discharge <- full_join(frch.final.discharge.2020, FRCH.st) # merging precip data and discharge
strt.precip.discharge <- full_join(strt.final.discharge.2020, STRT.st) # merging precip data and discharge
vaul.precip.discharge <- full_join(vaul.final.discharge.2020, VAUL.st) # merging precip data and discharge
poke.precip.discharge <- full_join(poke.final.discharge.2020, POKE.st) # merging precip data and discharge


### Sum daily discharge ###
frch.precip.discharge <- frch.precip.discharge[-c(1:3),] # Remove out of water discharge
frch.precip.discharge$twentyfour <- rollapplyr(frch.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
frch.precip.discharge$fourtyeight <- rollapplyr(frch.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

strt.precip.discharge$twentyfour <- rollapplyr(strt.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
strt.precip.discharge$fourtyeight <- rollapplyr(strt.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

vaul.precip.discharge$twentyfour <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$fourtyeight <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

poke.precip.discharge$twentyfour <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$fourtyeight <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

# Greater than 5 #
frch.five.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
frch.five.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

strt.five.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
strt.five.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

vaul.five.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

poke.five.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10


# Greater than 10 #
frch.ten.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
frch.ten.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

vaul.ten.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

poke.ten.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

write_csv(frch.precip.discharge, "frch.precip.discharge.csv")
write_csv(strt.precip.discharge, "strt.precip.discharge.csv")
write_csv(vaul.precip.discharge, "vaul.precip.discharge.csv")
write_csv(poke.precip.discharge, "poke.precip.discharge.csv")

#
#frch.gauge$date <- as.Date(frch.gauge$DateTime)# breaking into days
#daily.sum <- aggregate(frch.gauge["inst_rainfall_mm"], by = frch.gauge["date"], sum) # summing days
#frch.ten <- daily.sum[which(daily.sum$inst_rainfall_mm >= 10),] # anything greater than 10 is filtered 

#strt.gauge$date <- as.Date(strt.gauge$DateTime)
#strt.daily.sum <- aggregate(strt.gauge["inst_rainfall_mm"], by = strt.gauge["date"], sum)
#strt.ten <- strt.daily.sum[which(strt.daily.sum$inst_rainfall_mm >= 10),]

#vaul.gauge$date <- as.Date(vaul.gauge$DateTime)
#vaul.daily.sum <- aggregate(vaul.gauge["inst_rainfall_mm"], by = vaul.gauge["date"], sum)
#vaul.ten <- vaul.daily.sum[which(vaul.daily.sum$inst_rainfall_mm >= 10),]
#par(mfrow=c(1,1))

#precip.cariboupeak$date <- as.Date(precip.cariboupeak$DateTime)
#poke.daily.sum <- aggregate(precip.cariboupeak["Precip"], by = precip.cariboupeak["date"], sum)
#poke.ten <- poke.daily.sum[which(poke.daily.sum$Precip >= 10),]


#plot(FRCH_Q$Discharge_Lsec ~ FRCH_Q$day, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="FRCH")
#lines(FRCH_Q_bf$bt ~ FRCH_Q$day, col="red")
#lines(FRCH_Q_bf$bt*1.3 ~ FRCH_Q$day, col="red", lty = 2)
#lines((FRCH_Q_bf$bt*5) ~ FRCH_Q$day, col="red", lty=2)
#abline(h = FRCH_bfQ_mn*2, col="red", lty=2)

### Discharge/Chem/Precip ###
# FRCH #
FRCH.2020.chem$MeanDischarge <- FRCH.2020.chem$Q
### Import precipitation data into the *ALL document ### 
# FRCH rain gauge installed on the 11th of June. 
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(25,0), 
     axes=F, xlab="", ylab="")
par(new = T)

plot(FRCH.2020.chem$MeanDischarge ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))


### Storms ###
# FRCH #
FRCH <- FRCH.2020.chem

#Storm 1 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-13 03:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-18 05:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm1_06_13 = FRCH[FRCH$DateTime > as.POSIXct("2020-06-13 03:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2020-06-18 05:30:00", tz="America/Anchorage"),]
plot(FRCH_storm1_06_13$MeanDischarge ~ as.POSIXct(FRCH_storm1_06_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="FRCH 200613 storm 1",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 2 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-18 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-20 06:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm2_06_18 = FRCH[FRCH$DateTime > as.POSIXct("2020-06-18 23:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2020-06-20 06:30:00", tz="America/Anchorage"),]
plot(FRCH_storm2_06_18$MeanDischarge ~ as.POSIXct(FRCH_storm2_06_18$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="FRCH 200619 storm 2",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 3a 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-20 06:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-21 23:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm3a_06_20 = FRCH[FRCH$DateTime > as.POSIXct("2020-06-20 06:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-06-21 23:30:00", tz="America/Anchorage"),]
plot(FRCH_storm3a_06_20$MeanDischarge ~ as.POSIXct(FRCH_storm3a_06_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="FRCH 200620 storm 3a",
     xlim = as.POSIXct(c("2020-06-10 0:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 3b
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 0:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-21 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-26 12:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm3b_06_21 = FRCH[FRCH$DateTime > as.POSIXct("2020-06-21 23:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-06-26 12:30:00", tz="America/Anchorage"),]
plot(FRCH_storm3b_06_21$MeanDischarge ~ as.POSIXct(FRCH_storm3b_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1250,2250), col="blue", main="FRCH 200621 storm 3b",
     xlim = as.POSIXct(c("2020-06-10 0:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 30 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 25 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 0:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 3c
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-10 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 0:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-26 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-28 04:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm3c_06_26 = FRCH[FRCH$DateTime > as.POSIXct("2020-06-26 12:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-06-28 04:30:00", tz="America/Anchorage"),]
plot(FRCH_storm3c_06_26$MeanDischarge ~ as.POSIXct(FRCH_storm3c_06_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,2000), col="blue", main="FRCH 200626 storm 3c",
     xlim = as.POSIXct(c("2020-06-10 0:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 30 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-10 0:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 4a
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-07 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-09 11:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm4a_07_07 = FRCH[FRCH$DateTime > as.POSIXct("2020-07-07 12:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-07-09 11:30:00", tz="America/Anchorage"),]
plot(FRCH_storm4a_07_07$MeanDischarge ~ as.POSIXct(FRCH_storm4a_07_07$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,2000), col="blue", main="FRCH 200707 storm 4a",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 30 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 4b
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-09 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-11 15:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm4b_07_09 = FRCH[FRCH$DateTime > as.POSIXct("2020-07-09 12:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-07-11 15:30:00", tz="America/Anchorage"),]
plot(FRCH_storm4b_07_09$MeanDischarge ~ as.POSIXct(FRCH_storm4b_07_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1500), col="blue", main="FRCH 200709 storm 4b",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 5
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-15 22:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-16 13:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm5_07_15 = FRCH[FRCH$DateTime > as.POSIXct("2020-07-15 22:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2020-07-16 13:30:00", tz="America/Anchorage"),]
plot(FRCH_storm5_07_15$MeanDischarge ~ as.POSIXct(FRCH_storm5_07_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="FRCH 200715 storm 5",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 6
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-18 11:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-19 13:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm6_07_18 = FRCH[FRCH$DateTime > as.POSIXct("2020-07-18 11:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2020-07-19 13:30:00", tz="America/Anchorage"),]
plot(FRCH_storm6_07_18$MeanDischarge ~ as.POSIXct(FRCH_storm6_07_18$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="FRCH 200717 storm 6",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

#Storm 7
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-20 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-23 23:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm7_07_20 = FRCH[FRCH$DateTime > as.POSIXct("2020-07-20 10:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2020-07-23 23:30:00", tz="America/Anchorage"),]
plot(FRCH_storm7_07_20$MeanDischarge ~ as.POSIXct(FRCH_storm7_07_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="FRCH 200720 storm 7",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 20 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-26 08:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-30 08:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm8_07_26 = FRCH[FRCH$DateTime > as.POSIXct("2020-07-26 08:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2020-07-30 08:30:00", tz="America/Anchorage"),]
plot(FRCH_storm8_07_26$MeanDischarge ~ as.POSIXct(FRCH_storm8_07_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="FRCH 200726 storm 8",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9a
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-01 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-02 23:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm9a_08_01 = FRCH[FRCH$DateTime > as.POSIXct("2020-08-01 12:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-08-02 23:30:00", tz="America/Anchorage"),]
plot(FRCH_storm9a_08_01$MeanDischarge ~ as.POSIXct(FRCH_storm9a_08_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1500), col="blue", main="FRCH 200801 storm 9a",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9b
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-02 23:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-05 23:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm9b_08_02 = FRCH[FRCH$DateTime > as.POSIXct("2020-08-02 23:45:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-08-05 23:30:00", tz="America/Anchorage"),]
plot(FRCH_storm9b_08_02$MeanDischarge ~ as.POSIXct(FRCH_storm9b_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1500), col="blue", main="FRCH 200802 storm 9b",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10a
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-09 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-12 02:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm10a_08_09 = FRCH[FRCH$DateTime > as.POSIXct("2020-08-09 10:30:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2020-08-12 02:30:00", tz="America/Anchorage"),]
plot(FRCH_storm10a_08_09$MeanDischarge ~ as.POSIXct(FRCH_storm10a_08_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1500), col="blue", main="FRCH 200809 storm 10a",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10b
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-17 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-17 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-12 09:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-16 23:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm10b_08_12 = FRCH[FRCH$DateTime > as.POSIXct("2020-08-12 09:30:00", tz="America/Anchorage") &
                             FRCH$DateTime < as.POSIXct("2020-08-16 23:30:00", tz="America/Anchorage"),]
plot(FRCH_storm10b_08_12$MeanDischarge ~ as.POSIXct(FRCH_storm10b_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1500), col="blue", main="FRCH 200812 storm 10b",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-17 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 00:00:00","2020-08-17 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 11
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-20 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-21 09:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm11_08_20 = FRCH[FRCH$DateTime > as.POSIXct("2020-08-20 10:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-08-21 09:30:00", tz="America/Anchorage"),]
plot(FRCH_storm11_08_20$MeanDischarge ~ as.POSIXct(FRCH_storm11_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1000), col="blue", main="FRCH 200820 storm 11",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-06 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-07 11:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm12_09_06 = FRCH[FRCH$DateTime > as.POSIXct("2020-09-06 18:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-09-07 11:30:00", tz="America/Anchorage"),]
plot(FRCH_storm12_09_06$MeanDischarge ~ as.POSIXct(FRCH_storm12_09_06$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1000), col="blue", main="FRCH 200906 storm 12",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 13
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-09 06:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-11 11:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm13_09_09 = FRCH[FRCH$DateTime > as.POSIXct("2020-09-09 06:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2020-09-11 11:30:00", tz="America/Anchorage"),]
plot(FRCH_storm13_09_09$MeanDischarge ~ as.POSIXct(FRCH_storm13_09_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1000), col="blue", main="FRCH 200909 storm 13",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$nitrateuM * 20 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$fDOM.QSU * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$SpCond.µS.cm * 10 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2020.chem$Turbidity.FNU * 60 ~ FRCH.2020.chem$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

## modify format and save FRCH storms ##

# nitrateuM, fDOM.QSU 
FRCH_storm1_06_13$

FRCH_storm1_06_13_Q = subset(FRCH_storm1_06_13, select = c("DateTime","MeanDischarge"))
names(FRCH_storm1_06_13_Q) = c("valuedatetime","datavalue")
FRCH_storm1_06_13_NO3 = subset(FRCH_storm1_06_13, select = c("DateTime","nitrateuM"))
names(FRCH_storm1_06_13_NO3) = c("valuedatetime","datavalue")
FRCH_storm1_06_13_fDOM = subset(FRCH_storm1_06_13, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm1_06_13_fDOM) = c("valuedatetime","datavalue")
FRCH_storm1_06_13_SPC = subset(FRCH_storm1_06_13, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm1_06_13_SPC) = c("valuedatetime","datavalue")
FRCH_storm1_06_13_turb = subset(FRCH_storm1_06_13, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm1_06_13_turb) = c("valuedatetime","datavalue")

FRCH_storm2_06_18_Q = subset(FRCH_storm2_06_18, select = c("DateTime","MeanDischarge"))
names(FRCH_storm2_06_18_Q) = c("valuedatetime","datavalue")
FRCH_storm2_06_18_NO3 = subset(FRCH_storm2_06_18, select = c("DateTime","nitrateuM"))
names(FRCH_storm2_06_18_NO3) = c("valuedatetime","datavalue")
FRCH_storm2_06_18_fDOM = subset(FRCH_storm2_06_18, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm2_06_18_fDOM) = c("valuedatetime","datavalue")
FRCH_storm2_06_18_SPC = subset(FRCH_storm2_06_18, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm2_06_18_SPC) = c("valuedatetime","datavalue")
FRCH_storm2_06_18_turb = subset(FRCH_storm2_06_18, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm2_06_18_turb) = c("valuedatetime","datavalue")

FRCH_storm3a_06_20_Q = subset(FRCH_storm3a_06_20, select = c("DateTime","MeanDischarge"))
names(FRCH_storm3a_06_20_Q) = c("valuedatetime","datavalue")
FRCH_storm3a_06_20_NO3 = subset(FRCH_storm3a_06_20, select = c("DateTime","nitrateuM"))
names(FRCH_storm3a_06_20_NO3) = c("valuedatetime","datavalue")
FRCH_storm3a_06_20_fDOM = subset(FRCH_storm3a_06_20, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm3a_06_20_fDOM) = c("valuedatetime","datavalue")
FRCH_storm3a_06_20_SPC = subset(FRCH_storm3a_06_20, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm3a_06_20_SPC) = c("valuedatetime","datavalue")
FRCH_storm3a_06_20_turb = subset(FRCH_storm3a_06_20, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm3a_06_20_turb) = c("valuedatetime","datavalue")

FRCH_storm3b_06_21_Q = subset(FRCH_storm3b_06_21, select = c("DateTime","MeanDischarge"))
names(FRCH_storm3b_06_21_Q) = c("valuedatetime","datavalue")
FRCH_storm3b_06_21_NO3 = subset(FRCH_storm3b_06_21, select = c("DateTime","nitrateuM"))
names(FRCH_storm3b_06_21_NO3) = c("valuedatetime","datavalue")
FRCH_storm3b_06_21_fDOM = subset(FRCH_storm3b_06_21, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm3b_06_21_fDOM) = c("valuedatetime","datavalue")
FRCH_storm3b_06_21_SPC = subset(FRCH_storm3b_06_21, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm3b_06_21_SPC) = c("valuedatetime","datavalue")
FRCH_storm3b_06_21_turb = subset(FRCH_storm3b_06_21, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm3b_06_21_turb) = c("valuedatetime","datavalue")

FRCH_storm3c_06_26_Q = subset(FRCH_storm3c_06_26, select = c("DateTime","MeanDischarge"))
names(FRCH_storm3c_06_26_Q) = c("valuedatetime","datavalue")
FRCH_storm3c_06_26_NO3 = subset(FRCH_storm3c_06_26, select = c("DateTime","nitrateuM"))
names(FRCH_storm3c_06_26_NO3) = c("valuedatetime","datavalue")
FRCH_storm3c_06_26_fDOM = subset(FRCH_storm3c_06_26, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm3c_06_26_fDOM) = c("valuedatetime","datavalue")
FRCH_storm3c_06_26_SPC = subset(FRCH_storm3c_06_26, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm3c_06_26_SPC) = c("valuedatetime","datavalue")
FRCH_storm3c_06_26_turb = subset(FRCH_storm3c_06_26, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm3c_06_26_turb) = c("valuedatetime","datavalue")

FRCH_storm4a_07_07_Q = subset(FRCH_storm4a_07_07, select = c("DateTime","MeanDischarge"))
names(FRCH_storm4a_07_07_Q) = c("valuedatetime","datavalue")
FRCH_storm4a_07_07_NO3 = subset(FRCH_storm4a_07_07, select = c("DateTime","nitrateuM"))
names(FRCH_storm4a_07_07_NO3) = c("valuedatetime","datavalue")
FRCH_storm4a_07_07_fDOM = subset(FRCH_storm4a_07_07, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm4a_07_07_fDOM) = c("valuedatetime","datavalue")
FRCH_storm4a_07_07_SPC = subset(FRCH_storm4a_07_07, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm4a_07_07_SPC) = c("valuedatetime","datavalue")
FRCH_storm4a_07_07_turb = subset(FRCH_storm4a_07_07, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm4a_07_07_turb) = c("valuedatetime","datavalue")

FRCH_storm4b_07_09_Q = subset(FRCH_storm4b_07_09, select = c("DateTime","MeanDischarge"))
names(FRCH_storm4b_07_09_Q) = c("valuedatetime","datavalue")
FRCH_storm4b_07_09_NO3 = subset(FRCH_storm4b_07_09, select = c("DateTime","nitrateuM"))
names(FRCH_storm4b_07_09_NO3) = c("valuedatetime","datavalue")
FRCH_storm4b_07_09_fDOM = subset(FRCH_storm4b_07_09, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm4b_07_09_fDOM) = c("valuedatetime","datavalue")
FRCH_storm4b_07_09_SPC = subset(FRCH_storm4b_07_09, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm4b_07_09_SPC) = c("valuedatetime","datavalue")
FRCH_storm4b_07_09_turb = subset(FRCH_storm4b_07_09, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm4b_07_09_turb) = c("valuedatetime","datavalue")

FRCH_storm5_07_15_Q = subset(FRCH_storm5_07_15, select = c("DateTime","MeanDischarge"))
names(FRCH_storm5_07_15_Q) = c("valuedatetime","datavalue")
FRCH_storm5_07_15_NO3 = subset(FRCH_storm5_07_15, select = c("DateTime","nitrateuM"))
names(FRCH_storm5_07_15_NO3) = c("valuedatetime","datavalue")
FRCH_storm5_07_15_fDOM = subset(FRCH_storm5_07_15, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm5_07_15_fDOM) = c("valuedatetime","datavalue")
FRCH_storm5_07_15_SPC = subset(FRCH_storm5_07_15, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm5_07_15_SPC) = c("valuedatetime","datavalue")
FRCH_storm5_07_15_turb = subset(FRCH_storm5_07_15, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm5_07_15_turb) = c("valuedatetime","datavalue")

FRCH_storm6_07_18_Q = subset(FRCH_storm6_07_18, select = c("DateTime","MeanDischarge"))
names(FRCH_storm6_07_18_Q) = c("valuedatetime","datavalue")
FRCH_storm6_07_18_NO3 = subset(FRCH_storm6_07_18, select = c("DateTime","nitrateuM"))
names(FRCH_storm6_07_18_NO3) = c("valuedatetime","datavalue")
FRCH_storm6_07_18_fDOM = subset(FRCH_storm6_07_18, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm6_07_18_fDOM) = c("valuedatetime","datavalue")
FRCH_storm6_07_18_SPC = subset(FRCH_storm6_07_18, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm6_07_18_SPC) = c("valuedatetime","datavalue")
FRCH_storm6_07_18_turb = subset(FRCH_storm6_07_18, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm6_07_18_turb) = c("valuedatetime","datavalue")

FRCH_storm7_07_20_Q = subset(FRCH_storm7_07_20, select = c("DateTime","MeanDischarge"))
names(FRCH_storm7_07_20_Q) = c("valuedatetime","datavalue")
FRCH_storm7_07_20_NO3 = subset(FRCH_storm7_07_20, select = c("DateTime","nitrateuM"))
names(FRCH_storm7_07_20_NO3) = c("valuedatetime","datavalue")
FRCH_storm7_07_20_fDOM = subset(FRCH_storm7_07_20, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm7_07_20_fDOM) = c("valuedatetime","datavalue")
FRCH_storm7_07_20_SPC = subset(FRCH_storm7_07_20, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm7_07_20_SPC) = c("valuedatetime","datavalue")
FRCH_storm7_07_20_turb = subset(FRCH_storm7_07_20, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm7_07_20_turb) = c("valuedatetime","datavalue")

FRCH_storm8_07_26_Q = subset(FRCH_storm8_07_26, select = c("DateTime","MeanDischarge"))
names(FRCH_storm8_07_26_Q) = c("valuedatetime","datavalue")
FRCH_storm8_07_26_NO3 = subset(FRCH_storm8_07_26, select = c("DateTime","nitrateuM"))
names(FRCH_storm8_07_26_NO3) = c("valuedatetime","datavalue")
FRCH_storm8_07_26_fDOM = subset(FRCH_storm8_07_26, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm8_07_26_fDOM) = c("valuedatetime","datavalue")
FRCH_storm8_07_26_SPC = subset(FRCH_storm8_07_26, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm8_07_26_SPC) = c("valuedatetime","datavalue")
FRCH_storm8_07_26_turb = subset(FRCH_storm8_07_26, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm8_07_26_turb) = c("valuedatetime","datavalue")

FRCH_storm9a_08_01_Q = subset(FRCH_storm9a_08_01, select = c("DateTime","MeanDischarge"))
names(FRCH_storm9a_08_01_Q) = c("valuedatetime","datavalue")
FRCH_storm9a_08_01_NO3 = subset(FRCH_storm9a_08_01, select = c("DateTime","nitrateuM"))
names(FRCH_storm9a_08_01_NO3) = c("valuedatetime","datavalue")
FRCH_storm9a_08_01_fDOM = subset(FRCH_storm9a_08_01, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm9a_08_01_fDOM) = c("valuedatetime","datavalue")
FRCH_storm9a_08_01_SPC = subset(FRCH_storm9a_08_01, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm9a_08_01_SPC) = c("valuedatetime","datavalue")
FRCH_storm9a_08_01_turb = subset(FRCH_storm9a_08_01, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm9a_08_01_turb) = c("valuedatetime","datavalue")

FRCH_storm9b_08_02_Q = subset(FRCH_storm9b_08_02, select = c("DateTime","MeanDischarge"))
names(FRCH_storm9b_08_02_Q) = c("valuedatetime","datavalue")
FRCH_storm9b_08_02_NO3 = subset(FRCH_storm9b_08_02, select = c("DateTime","nitrateuM"))
names(FRCH_storm9b_08_02_NO3) = c("valuedatetime","datavalue")
FRCH_storm9b_08_02_fDOM = subset(FRCH_storm9b_08_02, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm9b_08_02_fDOM) = c("valuedatetime","datavalue")
FRCH_storm9b_08_02_SPC = subset(FRCH_storm9b_08_02, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm9b_08_02_SPC) = c("valuedatetime","datavalue")
FRCH_storm9b_08_02_turb = subset(FRCH_storm9b_08_02, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm9b_08_02_turb) = c("valuedatetime","datavalue")

FRCH_storm10a_08_09_Q = subset(FRCH_storm10a_08_09, select = c("DateTime","MeanDischarge"))
names(FRCH_storm10a_08_09_Q) = c("valuedatetime","datavalue")
FRCH_storm10a_08_09_NO3 = subset(FRCH_storm10a_08_09, select = c("DateTime","nitrateuM"))
names(FRCH_storm10a_08_09_NO3) = c("valuedatetime","datavalue")
FRCH_storm10a_08_09_fDOM = subset(FRCH_storm10a_08_09, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm10a_08_09_fDOM) = c("valuedatetime","datavalue")
FRCH_storm10a_08_09_SPC = subset(FRCH_storm10a_08_09, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm10a_08_09_SPC) = c("valuedatetime","datavalue")
FRCH_storm10a_08_09_turb = subset(FRCH_storm10a_08_09, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm10a_08_09_turb) = c("valuedatetime","datavalue")

FRCH_storm10b_08_12_Q = subset(FRCH_storm10b_08_12, select = c("DateTime","MeanDischarge"))
names(FRCH_storm10b_08_12_Q) = c("valuedatetime","datavalue")
FRCH_storm10b_08_12_NO3 = subset(FRCH_storm10b_08_12, select = c("DateTime","nitrateuM"))
names(FRCH_storm10b_08_12_NO3) = c("valuedatetime","datavalue")
FRCH_storm10b_08_12_fDOM = subset(FRCH_storm10b_08_12, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm10b_08_12_fDOM) = c("valuedatetime","datavalue")
FRCH_storm10b_08_12_SPC = subset(FRCH_storm10b_08_12, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm10b_08_12_SPC) = c("valuedatetime","datavalue")
FRCH_storm10b_08_12_turb = subset(FRCH_storm10b_08_12, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm10b_08_12_turb) = c("valuedatetime","datavalue")

FRCH_storm11_08_20_Q = subset(FRCH_storm11_08_20, select = c("DateTime","MeanDischarge"))
names(FRCH_storm11_08_20_Q) = c("valuedatetime","datavalue")
FRCH_storm11_08_20_NO3 = subset(FRCH_storm11_08_20, select = c("DateTime","nitrateuM"))
names(FRCH_storm11_08_20_NO3) = c("valuedatetime","datavalue")
FRCH_storm11_08_20_fDOM = subset(FRCH_storm11_08_20, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm11_08_20_fDOM) = c("valuedatetime","datavalue")
FRCH_storm11_08_20_SPC = subset(FRCH_storm11_08_20, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm11_08_20_SPC) = c("valuedatetime","datavalue")
FRCH_storm11_08_20_turb = subset(FRCH_storm11_08_20, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm11_08_20_turb) = c("valuedatetime","datavalue")

FRCH_storm12_09_06_Q = subset(FRCH_storm12_09_06, select = c("DateTime","MeanDischarge"))
names(FRCH_storm12_09_06_Q) = c("valuedatetime","datavalue")
FRCH_storm12_09_06_NO3 = subset(FRCH_storm12_09_06, select = c("DateTime","nitrateuM"))
names(FRCH_storm12_09_06_NO3) = c("valuedatetime","datavalue")
FRCH_storm12_09_06_fDOM = subset(FRCH_storm12_09_06, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm12_09_06_fDOM) = c("valuedatetime","datavalue")
FRCH_storm12_09_06_SPC = subset(FRCH_storm12_09_06, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm12_09_06_SPC) = c("valuedatetime","datavalue")
FRCH_storm12_09_06_turb = subset(FRCH_storm12_09_06, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm12_09_06_turb) = c("valuedatetime","datavalue")

FRCH_storm13_09_09_Q = subset(FRCH_storm13_09_09, select = c("DateTime","MeanDischarge"))
names(FRCH_storm13_09_09_Q) = c("valuedatetime","datavalue")
FRCH_storm13_09_09_NO3 = subset(FRCH_storm13_09_09, select = c("DateTime","nitrateuM"))
names(FRCH_storm13_09_09_NO3) = c("valuedatetime","datavalue")
FRCH_storm13_09_09_fDOM = subset(FRCH_storm13_09_09, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm13_09_09_fDOM) = c("valuedatetime","datavalue")
FRCH_storm13_09_09_SPC = subset(FRCH_storm13_09_09, select = c("DateTime","SpCond.µS.cm"))
names(FRCH_storm13_09_09_SPC) = c("valuedatetime","datavalue")
FRCH_storm13_09_09_turb = subset(FRCH_storm13_09_09, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm13_09_09_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(FRCH_storm1_06_13, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm1_06_13.csv")
write.csv(FRCH_storm1_06_13_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm1_06_13_Q.csv")
write.csv(FRCH_storm1_06_13_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm1_06_13_NO3.csv")
write.csv(FRCH_storm1_06_13_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm1_06_13_fDOM.csv")
write.csv(FRCH_storm1_06_13_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm1_06_13_SPC.csv")
write.csv(FRCH_storm1_06_13_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm1_06_13_Turb.csv")

write.csv(FRCH_storm2_06_18, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm2_06_18.csv")
write.csv(FRCH_storm2_06_18_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm2_06_18_Q.csv")
write.csv(FRCH_storm2_06_18_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm2_06_18_NO3.csv")
write.csv(FRCH_storm2_06_18_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm2_06_18_fDOM.csv")
write.csv(FRCH_storm2_06_18_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm2_06_18_SPC.csv")
write.csv(FRCH_storm2_06_18_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm2_06_18_Turb.csv")

write.csv(FRCH_storm3a_06_20, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3a_06_20.csv")
write.csv(FRCH_storm3a_06_20_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3a_06_20_Q.csv")
write.csv(FRCH_storm3a_06_20_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3a_06_20_NO3.csv")
write.csv(FRCH_storm3a_06_20_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3a_06_20_fDOM.csv")
write.csv(FRCH_storm3a_06_20_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3a_06_20_SPC.csv")
write.csv(FRCH_storm3a_06_20_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3a_06_20_Turb.csv")

write.csv(FRCH_storm3b_06_21, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3b_06_21.csv")
write.csv(FRCH_storm3b_06_21_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3b_06_21_Q.csv")
write.csv(FRCH_storm3b_06_21_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3b_06_21_NO3.csv")
write.csv(FRCH_storm3b_06_21_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3b_06_21_fDOM.csv")
write.csv(FRCH_storm3b_06_21_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3b_06_21_SPC.csv")
write.csv(FRCH_storm3b_06_21_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3b_06_21_Turb.csv")

write.csv(FRCH_storm3c_06_26, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3c_06_26.csv")
write.csv(FRCH_storm3c_06_26_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3c_06_26_Q.csv")
write.csv(FRCH_storm3c_06_26_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3c_06_26_NO3.csv")
write.csv(FRCH_storm3c_06_26_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3c_06_26_fDOM.csv")
write.csv(FRCH_storm3c_06_26_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3c_06_26_SPC.csv")
write.csv(FRCH_storm3c_06_26_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm3c_06_26_Turb.csv")

write.csv(FRCH_storm4a_07_07, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4a_07_07.csv")
write.csv(FRCH_storm4a_07_07_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4a_07_07_Q.csv")
write.csv(FRCH_storm4a_07_07_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4a_07_07_NO3.csv")
write.csv(FRCH_storm4a_07_07_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4a_07_07_fDOM.csv")
write.csv(FRCH_storm4a_07_07_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4a_07_07_SPC.csv")
write.csv(FRCH_storm4a_07_07_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4a_07_07_Turb.csv")

write.csv(FRCH_storm4b_07_09, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4b_07_09.csv")
write.csv(FRCH_storm4b_07_09_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4b_07_09_Q.csv")
write.csv(FRCH_storm4b_07_09_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4b_07_09_NO3.csv")
write.csv(FRCH_storm4b_07_09_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4b_07_09_fDOM.csv")
write.csv(FRCH_storm4b_07_09_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4b_07_09_SPC.csv")
write.csv(FRCH_storm4b_07_09_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm4b_07_09_Turb.csv")

write.csv(FRCH_storm5_07_15, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm5_07_15.csv")
write.csv(FRCH_storm5_07_15_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm5_07_15_Q.csv")
write.csv(FRCH_storm5_07_15_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm5_07_15_NO3.csv")
write.csv(FRCH_storm5_07_15_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm5_07_15_fDOM.csv")
write.csv(FRCH_storm5_07_15_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm5_07_15_SPC.csv")
write.csv(FRCH_storm5_07_15_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm5_07_15_Turb.csv")

write.csv(FRCH_storm6_07_18, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm6_07_18.csv")
write.csv(FRCH_storm6_07_18_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm6_07_18_Q.csv")
write.csv(FRCH_storm6_07_18_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm6_07_18_NO3.csv")
write.csv(FRCH_storm6_07_18_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm6_07_18_fDOM.csv")
write.csv(FRCH_storm6_07_18_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm6_07_18_SPC.csv")
write.csv(FRCH_storm6_07_18_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm6_07_18_Turb.csv")

write.csv(FRCH_storm7_07_20, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm7_07_20.csv")
write.csv(FRCH_storm7_07_20_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm7_07_20_Q.csv")
write.csv(FRCH_storm7_07_20_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm7_07_20_NO3.csv")
write.csv(FRCH_storm7_07_20_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm7_07_20_fDOM.csv")
write.csv(FRCH_storm7_07_20_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm7_07_20_SPC.csv")
write.csv(FRCH_storm7_07_20_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm7_07_20_Turb.csv")

write.csv(FRCH_storm8_07_26, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm8_07_26.csv")
write.csv(FRCH_storm8_07_26_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm8_07_26_Q.csv")
write.csv(FRCH_storm8_07_26_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm8_07_26_NO3.csv")
write.csv(FRCH_storm8_07_26_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm8_07_26_fDOM.csv")
write.csv(FRCH_storm8_07_26_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm8_07_26_SPC.csv")
write.csv(FRCH_storm8_07_26_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm8_07_26_Turb.csv")

write.csv(FRCH_storm9a_08_01, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9a_08_01.csv")
write.csv(FRCH_storm9a_08_01_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9a_08_01_Q.csv")
write.csv(FRCH_storm9a_08_01_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9a_08_01_NO3.csv")
write.csv(FRCH_storm9a_08_01_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9a_08_01_fDOM.csv")
write.csv(FRCH_storm9a_08_01_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9a_08_01_SPC.csv")
write.csv(FRCH_storm9a_08_01_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9a_08_01_Turb.csv")

write.csv(FRCH_storm9b_08_02, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9b_08_02.csv")
write.csv(FRCH_storm9b_08_02_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9b_08_02_Q.csv")
write.csv(FRCH_storm9b_08_02_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9b_08_02_NO3.csv")
write.csv(FRCH_storm9b_08_02_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9b_08_02_fDOM.csv")
write.csv(FRCH_storm9b_08_02_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9b_08_02_SPC.csv")
write.csv(FRCH_storm9b_08_02_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm9b_08_02_Turb.csv")

write.csv(FRCH_storm10a_08_09, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10a_08_09.csv")
write.csv(FRCH_storm10a_08_09_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10a_08_09_Q.csv")
write.csv(FRCH_storm10a_08_09_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10a_08_09_NO3.csv")
write.csv(FRCH_storm10a_08_09_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10a_08_09_fDOM.csv")
write.csv(FRCH_storm10a_08_09_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10a_08_09_SPC.csv")
write.csv(FRCH_storm10a_08_09_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10a_08_09_Turb.csv")

write.csv(FRCH_storm10b_08_12, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10b_08_12.csv")
write.csv(FRCH_storm10b_08_12_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10b_08_12_Q.csv")
write.csv(FRCH_storm10b_08_12_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10b_08_12_NO3.csv")
write.csv(FRCH_storm10b_08_12_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10b_08_12_fDOM.csv")
write.csv(FRCH_storm10b_08_12_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10b_08_12_SPC.csv")
write.csv(FRCH_storm10b_08_12_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm10b_08_12_Turb.csv")

write.csv(FRCH_storm11_08_20, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm11_08_20.csv")
write.csv(FRCH_storm11_08_20_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm11_08_20_Q.csv")
write.csv(FRCH_storm11_08_20_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm11_08_20_NO3.csv")
write.csv(FRCH_storm11_08_20_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm11_08_20_fDOM.csv")
write.csv(FRCH_storm11_08_20_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm11_08_20_SPC.csv")
write.csv(FRCH_storm11_08_20_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm11_08_20_Turb.csv")

write.csv(FRCH_storm12_09_06, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm12_09_06.csv")
write.csv(FRCH_storm12_09_06_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm12_09_06_Q.csv")
write.csv(FRCH_storm12_09_06_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm12_09_06_NO3.csv")
write.csv(FRCH_storm12_09_06_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm12_09_06_fDOM.csv")
write.csv(FRCH_storm12_09_06_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm12_09_06_SPC.csv")
write.csv(FRCH_storm12_09_06_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm12_09_06_Turb.csv")

write.csv(FRCH_storm13_09_09, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm13_09_09.csv")
write.csv(FRCH_storm13_09_09_Q, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm13_09_09_Q.csv")
write.csv(FRCH_storm13_09_09_NO3, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm13_09_09_NO3.csv")
write.csv(FRCH_storm13_09_09_fDOM, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm13_09_09_fDOM.csv")
write.csv(FRCH_storm13_09_09_SPC, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm13_09_09_SPC.csv")
write.csv(FRCH_storm13_09_09_turb, "~/Documents/Storms/Storm_Events/2020/FRCH/FRCH_storm13_09_09_Turb.csv")

# STRT #
STRT <- STRT.2020.chem
# STRT rain gauge installed on the 29th of July #
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'STRT precip. (mm)') 
par(new = T)
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)


abline(v = as.POSIXct(strt.ten.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.ten.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(strt.final.discharge.2020$MeanDischarge ~ strt.final.discharge.2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage")) 
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 45 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))


### Storms ###
# STRT #
STRT$MeanDischarge <- STRT$Q
# Storm 1a #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-18 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-20 2:30:00", tz="America/Anchorage"), col="purple")

STRT_storm1a_06_18 = STRT[STRT$DateTime > as.POSIXct("2020-06-18 23:30:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-06-20 02:30:00", tz="America/Anchorage"),]
plot(STRT_storm1a_06_18$MeanDischarge ~ as.POSIXct(STRT_storm1a_06_18$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,2700), col="blue", main="STRT 200618 storm 1a",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 45 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 1b #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-20 05:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-21 22:00:00", tz="America/Anchorage"), col="purple")

STRT_storm1b_06_20 = STRT[STRT$DateTime > as.POSIXct("2020-06-20 05:30:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2020-06-21 22:00:00", tz="America/Anchorage"),]
plot(STRT_storm1b_06_20$MeanDischarge ~ as.POSIXct(STRT_storm1b_06_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,5000), col="blue", main="STRT 200620 storm 1b",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 45 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 1c #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-21 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-23 02:00:00", tz="America/Anchorage"), col="purple")

STRT_storm1c_06_21 = STRT[STRT$DateTime > as.POSIXct("2020-06-21 23:30:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2020-06-23 02:00:00", tz="America/Anchorage"),]
plot(STRT_storm1c_06_21$MeanDischarge ~ as.POSIXct(STRT_storm1c_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(4000,6000), col="blue", main="STRT 200621 storm 1c",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 200 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 40 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 1d #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-23 04:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-24 02:00:00", tz="America/Anchorage"), col="purple")

STRT_storm1d_06_23 = STRT[STRT$DateTime > as.POSIXct("2020-06-23 04:15:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2020-06-24 02:00:00", tz="America/Anchorage"),]
plot(STRT_storm1d_06_23$MeanDischarge ~ as.POSIXct(STRT_storm1d_06_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(4000,6000), col="blue", main="STRT 200623 storm 1d",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 200 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 40 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 1e #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-24 02:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-29 02:00:00", tz="America/Anchorage"), col="purple")

STRT_storm1e_06_24 = STRT[STRT$DateTime > as.POSIXct("2020-06-24 02:45:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2020-06-28 18:00:00", tz="America/Anchorage"),]
plot(STRT_storm1e_06_24$MeanDischarge ~ as.POSIXct(STRT_storm1e_06_24$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(2000,5000), col="blue", main="STRT 200624 storm 1e",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 200 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 40 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# Alarm 2? # No discharge response
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-28 00:00:00","2020-07-06 23:45:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)
lines(STRT$fDOM.QSU * 40 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-28 00:00:00","2020-07-06 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-28 00:00:00","2020-07-06 20:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-28 0:00:00","2020-07-06 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
#abline(v= as.POSIXct("2020-06-24 02:15:00", tz="America/Anchorage"), col="purple")
#abline(v= as.POSIXct("2020-06-28 18:00:00", tz="America/Anchorage"), col="purple")

# Storm 2 #
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-07 00:00:00","2020-07-14 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-07 0:00:00","2020-07-14 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-09 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-11 04:00:00", tz="America/Anchorage"), col="purple")

STRT_storm2_07_09 = STRT[STRT$DateTime > as.POSIXct("2020-07-09 10:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-07-11 04:00:00", tz="America/Anchorage"),]
plot(STRT_storm2_07_09$MeanDischarge ~ as.POSIXct(STRT_storm2_07_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,1600), col="blue", main="STRT 200709 storm 2",
     xlim = as.POSIXct(c("2020-07-07 0:00:00","2020-07-14 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 40 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 100 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-07 0:00:00","2020-07-14 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Alarm 3 # No response in discharge or chemistry
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-15 00:00:00","2020-07-20 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-15 00:00:00","2020-07-20 20:00:00"), tz="America/Anchorage"))
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)

# Storm 3 # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-20 00:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-20 00:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"))
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-20 0:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-20 23:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-25 00:00:00", tz="America/Anchorage"), col="purple")

STRT_storm3_07_20 = STRT[STRT$DateTime > as.POSIXct("2020-07-20 23:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-07-25 00:00:00", tz="America/Anchorage"),]
plot(STRT_storm3_07_20$MeanDischarge ~ as.POSIXct(STRT_storm3_07_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,1600), col="blue", main="STRT 200720 storm 3",
     xlim = as.POSIXct(c("2020-07-20 0:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 25 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-20 0:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4a # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-01 12:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-02 23:30:00", tz="America/Anchorage"), col="purple")

STRT_storm4a_08_01 = STRT[STRT$DateTime > as.POSIXct("2020-08-01 12:15:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2020-08-02 23:30:00", tz="America/Anchorage"),]
plot(STRT_storm4a_08_01$MeanDischarge ~ as.POSIXct(STRT_storm4a_08_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,1600), col="blue", main="STRT 200801 storm 4a",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 25 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4b # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-03 02:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-06 11:00:00", tz="America/Anchorage"), col="purple")

STRT_storm4b_08_03 = STRT[STRT$DateTime > as.POSIXct("2020-08-03 02:15:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2020-08-06 11:00:00", tz="America/Anchorage"),]
plot(STRT_storm4b_08_03$MeanDischarge ~ as.POSIXct(STRT_storm4b_08_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,2000), col="blue", main="STRT 200803 storm 4b",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 25 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 # Small response in discharge
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-06 00:00:00","2020-08-12 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-06 0:00:00","2020-08-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-09 13:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-12 04:00:00", tz="America/Anchorage"), col="purple")

STRT_storm5_08_09 = STRT[STRT$DateTime > as.POSIXct("2020-08-09 13:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-08-12 01:00:00", tz="America/Anchorage"),]
plot(STRT_storm5_08_09$MeanDischarge ~ as.POSIXct(STRT_storm5_08_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,1600), col="blue", main="STRT 200809 storm 5",
     xlim = as.POSIXct(c("2020-08-06 0:00:00","2020-08-12 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 10 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 80 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-06 0:00:00","2020-08-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 # Small response in discharge
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-12 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-12 0:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-12 00:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-13 07:00:00", tz="America/Anchorage"), col="purple")

STRT_storm6_08_12 = STRT[STRT$DateTime > as.POSIXct("2020-08-12 00:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-08-13 07:00:00", tz="America/Anchorage"),]
plot(STRT_storm6_08_12$MeanDischarge ~ as.POSIXct(STRT_storm6_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,1600), col="blue", main="STRT 200812 storm 6",
     xlim = as.POSIXct(c("2020-08-12 0:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-12 0:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7a # two storms
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-20 00:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-20 09:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-21 10:00:00", tz="America/Anchorage"), col="purple")

STRT_storm7a_08_20 = STRT[STRT$DateTime > as.POSIXct("2020-08-20 09:15:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2020-08-21 10:00:00", tz="America/Anchorage"),]
plot(STRT_storm7a_08_20$MeanDischarge ~ as.POSIXct(STRT_storm7a_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,1600), col="blue", main="STRT 200709 storm 7a",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7b # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-20 00:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-21 11:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-22 11:00:00", tz="America/Anchorage"), col="purple")

STRT_storm7b_08_21 = STRT[STRT$DateTime > as.POSIXct("2020-08-21 11:00:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2020-08-22 11:00:00", tz="America/Anchorage"),]
plot(STRT_storm7b_08_21$MeanDischarge ~ as.POSIXct(STRT_storm7b_08_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,1600), col="blue", main="STRT 200821 storm 7b",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8 # Looks like there is a response after the 26th of August???
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-23 00:00:00","2020-09-01 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-20 00:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 20 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-20 00:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"))
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-23 0:00:00","2020-09-01 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-28 09:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-30 06:00:00", tz="America/Anchorage"), col="purple")

STRT_storm8_08_28= STRT[STRT$DateTime > as.POSIXct("2020-08-28 09:15:00", tz="America/Anchorage") &
                          STRT$DateTime < as.POSIXct("2020-08-29 06:00:00", tz="America/Anchorage"),]
plot(STRT_storm8_08_28$MeanDischarge ~ as.POSIXct(STRT_storm8_08_28$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,1400), col="blue", main="STRT 200828 storm 8",
     xlim = as.POSIXct(c("2020-08-23 0:00:00","2020-09-01 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-23 0:00:00","2020-09-01 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9a # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 0:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-03 13:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-06 15:00:00", tz="America/Anchorage"), col="purple")

STRT_storm9a_09_03= STRT[STRT$DateTime > as.POSIXct("2020-09-03 13:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-09-06 15:00:00", tz="America/Anchorage"),]
plot(STRT_storm9a_09_03$MeanDischarge ~ as.POSIXct(STRT_storm9a_09_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,2000), col="blue", main="STRT 200903 storm 9a",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9b # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 0:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-06 18:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-08 04:00:00", tz="America/Anchorage"), col="purple")

STRT_storm9b_09_06= STRT[STRT$DateTime > as.POSIXct("2020-09-06 18:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-09-08 04:00:00", tz="America/Anchorage"),]
plot(STRT_storm9b_09_06$MeanDischarge ~ as.POSIXct(STRT_storm9b_09_06$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,1600), col="blue", main="STRT 200906 storm 9b",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9c # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-14 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 0:00:00","2020-09-14 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-09 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-14 09:00:00", tz="America/Anchorage"), col="purple")

STRT_storm9c_09_09= STRT[STRT$DateTime > as.POSIXct("2020-09-09 08:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-09-14 09:00:00", tz="America/Anchorage"),]
plot(STRT_storm9c_09_09$MeanDischarge ~ as.POSIXct(STRT_storm9c_09_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1200,2500), col="blue", main="STRT 200909 storm 9c",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-14 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)


plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-14 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10 # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-21 00:00:00","2020-09-30 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-21 0:00:00","2020-09-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-23 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-26 10:00:00", tz="America/Anchorage"), col="purple")

STRT_storm10_09_23= STRT[STRT$DateTime > as.POSIXct("2020-09-23 20:15:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2020-09-26 10:00:00", tz="America/Anchorage"),]
plot(STRT_storm10_09_23$MeanDischarge ~ as.POSIXct(STRT_storm10_09_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,1400), col="blue", main="STRT 200923 storm 10",
     xlim = as.POSIXct(c("2020-09-21 0:00:00","2020-09-30 20:00:00"), tz="America/Anchorage"))
lines(STRT$nitrateuM * 50 ~ STRT$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 15 ~ STRT$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$SpCond.uScm * 12 ~ STRT$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$Turbidity.FNU * 120 ~ STRT$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-21 0:00:00","2020-09-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# modify format and save STRT storms #


STRT_storm1a_06_18_Q = subset(STRT_storm1a_06_18, select = c("DateTime","MeanDischarge"))
names(STRT_storm1a_06_18_Q) = c("valuedatetime","datavalue")
STRT_storm1a_06_18_NO3 = subset(STRT_storm1a_06_18, select = c("DateTime","nitrateuM"))
names(STRT_storm1a_06_18_NO3) = c("valuedatetime","datavalue")
STRT_storm1a_06_18_fDOM = subset(STRT_storm1a_06_18, select = c("DateTime","fDOM.QSU"))
names(STRT_storm1a_06_18_fDOM) = c("valuedatetime","datavalue")
STRT_storm1a_06_18_SPC = subset(STRT_storm1a_06_18, select = c("DateTime","SpCond.uScm"))
names(STRT_storm1a_06_18_SPC) = c("valuedatetime","datavalue")
STRT_storm1a_06_18_turb = subset(STRT_storm1a_06_18, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm1a_06_18_turb) = c("valuedatetime","datavalue")

STRT_storm1b_06_20_Q = subset(STRT_storm1b_06_20, select = c("DateTime","MeanDischarge"))
names(STRT_storm1b_06_20_Q) = c("valuedatetime","datavalue")
STRT_storm1b_06_20_NO3 = subset(STRT_storm1b_06_20, select = c("DateTime","nitrateuM"))
names(STRT_storm1b_06_20_NO3) = c("valuedatetime","datavalue")
STRT_storm1b_06_20_fDOM = subset(STRT_storm1b_06_20, select = c("DateTime","fDOM.QSU"))
names(STRT_storm1b_06_20_Q) = c("valuedatetime","datavalue")
STRT_storm1b_06_20_SPC = subset(STRT_storm1b_06_20, select = c("DateTime","SpCond.uScm"))
names(STRT_storm1b_06_20_SPC) = c("valuedatetime","datavalue")
STRT_storm1b_06_20_turb = subset(STRT_storm1b_06_20, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm1b_06_20_turb) = c("valuedatetime","datavalue")

STRT_storm1c_06_21_Q = subset(STRT_storm1c_06_21, select = c("DateTime","MeanDischarge"))
names(STRT_storm1c_06_21_Q) = c("valuedatetime","datavalue")
STRT_storm1c_06_21_NO3 = subset(STRT_storm1c_06_21, select = c("DateTime","nitrateuM"))
names(STRT_storm1c_06_21_NO3) = c("valuedatetime","datavalue")
STRT_storm1c_06_21_fDOM = subset(STRT_storm1c_06_21, select = c("DateTime","fDOM.QSU"))
names(STRT_storm1c_06_21_fDOM) = c("valuedatetime","datavalue")
STRT_storm1c_06_21_SPC = subset(STRT_storm1c_06_21, select = c("DateTime","SpCond.uScm"))
names(STRT_storm1c_06_21_SPC) = c("valuedatetime","datavalue")
STRT_storm1c_06_21_turb = subset(STRT_storm1c_06_21, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm1c_06_21_turb) = c("valuedatetime","datavalue")

STRT_storm1d_06_23_Q = subset(STRT_storm1d_06_23, select = c("DateTime","MeanDischarge"))
names(STRT_storm1d_06_23_Q) = c("valuedatetime","datavalue")
STRT_storm1d_06_23_NO3 = subset(STRT_storm1d_06_23, select = c("DateTime","nitrateuM"))
names(STRT_storm1d_06_23_NO3) = c("valuedatetime","datavalue")
STRT_storm1d_06_23_fDOM = subset(STRT_storm1d_06_23, select = c("DateTime","fDOM.QSU"))
names(STRT_storm1d_06_23_fDOM) = c("valuedatetime","datavalue")
STRT_storm1d_06_23_SPC = subset(STRT_storm1d_06_23, select = c("DateTime","SpCond.uScm"))
names(STRT_storm1d_06_23_SPC) = c("valuedatetime","datavalue")
STRT_storm1d_06_23_turb = subset(STRT_storm1d_06_23, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm1d_06_23_turb) = c("valuedatetime","datavalue")

STRT_storm1e_06_24_Q = subset(STRT_storm1e_06_24, select = c("DateTime","MeanDischarge"))
names(STRT_storm1e_06_24_Q) = c("valuedatetime","datavalue")
STRT_storm1e_06_24_NO3 = subset(STRT_storm1e_06_24, select = c("DateTime","nitrateuM"))
names(STRT_storm1e_06_24_NO3) = c("valuedatetime","datavalue")
STRT_storm1e_06_24_fDOM = subset(STRT_storm1e_06_24, select = c("DateTime","fDOM.QSU"))
names(STRT_storm1e_06_24_fDOM) = c("valuedatetime","datavalue")
STRT_storm1e_06_24_SPC = subset(STRT_storm1e_06_24, select = c("DateTime","SpCond.uScm"))
names(STRT_storm1e_06_24_SPC) = c("valuedatetime","datavalue")
STRT_storm1e_06_24_turb = subset(STRT_storm1e_06_24, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm1e_06_24_turb) = c("valuedatetime","datavalue")

# Storm 2 # 
STRT_storm2_07_09_Q = subset(STRT_storm2_07_09, select = c("DateTime","MeanDischarge"))
names(STRT_storm2_07_09_Q) = c("valuedatetime","datavalue")
STRT_storm2_07_09_NO3 = subset(STRT_storm2_07_09, select = c("DateTime", "nitrateuM"))
names(STRT_storm2_07_09_NO3) = c("valuedatetime","datavalue")
STRT_storm2_07_09_fDOM = subset(STRT_storm2_07_09, select = c("DateTime","fDOM.QSU"))
names(STRT_storm2_07_09_fDOM) = c("valuedatetime","datavalue")
STRT_storm2_07_09_SPC = subset(STRT_storm2_07_09, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm2_07_09_SPC) = c("valuedatetime","datavalue")
STRT_storm2_07_09_turb = subset(STRT_storm2_07_09, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm2_07_09_turb) = c("valuedatetime","datavalue")

# Storm 3 #
STRT_storm3_07_20_Q = subset(STRT_storm3_07_20, select = c("DateTime","MeanDischarge"))
names(STRT_storm3_07_20_Q) = c("valuedatetime","datavalue")
STRT_storm3_07_20_NO3 = subset(STRT_storm3_07_20, select = c("DateTime", "nitrateuM"))
names(STRT_storm3_07_20_NO3) = c("valuedatetime","datavalue")
STRT_storm3_07_20_fDOM = subset(STRT_storm3_07_20, select = c("DateTime","fDOM.QSU"))
names(STRT_storm3_07_20_fDOM) = c("valuedatetime","datavalue")
STRT_storm3_07_20_SPC = subset(STRT_storm3_07_20, select = c("DateTime","SpCond.uScm"))
names(STRT_storm3_07_20_SPC) = c("valuedatetime","datavalue")
STRT_storm3_07_20_turb = subset(STRT_storm3_07_20, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm3_07_20_turb) = c("valuedatetime","datavalue")

# Storm 4 #
STRT_storm4a_08_01_Q = subset(STRT_storm4a_08_01, select = c("DateTime","MeanDischarge"))
names(STRT_storm4a_08_01_Q) = c("valuedatetime","datavalue")
STRT_storm4a_08_01_NO3 = subset(STRT_storm4a_08_01, select = c("DateTime", "nitrateuM"))
names(STRT_storm4a_08_01_NO3) = c("valuedatetime","datavalue")
STRT_storm4a_08_01_fDOM = subset(STRT_storm4a_08_01, select = c("DateTime","fDOM.QSU"))
names(STRT_storm4a_08_01_fDOM) = c("valuedatetime","datavalue")
STRT_storm4a_08_01_SPC = subset(STRT_storm4a_08_01, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm4a_08_01_SPC) = c("valuedatetime","datavalue")
STRT_storm4a_08_01_turb = subset(STRT_storm4a_08_01, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm4a_08_01_turb) = c("valuedatetime","datavalue")

STRT_storm4b_08_03_Q = subset(STRT_storm4b_08_03, select = c("DateTime","MeanDischarge"))
names(STRT_storm4b_08_03_Q) = c("valuedatetime","datavalue")
STRT_storm4b_08_03_NO3 = subset(STRT_storm4b_08_03, select = c("DateTime", "nitrateuM"))
names(STRT_storm4b_08_03_NO3) = c("valuedatetime","datavalue")
STRT_storm4b_08_03_fDOM = subset(STRT_storm4b_08_03, select = c("DateTime","fDOM.QSU"))
names(STRT_storm4b_08_03_fDOM) = c("valuedatetime","datavalue")
STRT_storm4b_08_03_SPC = subset(STRT_storm4b_08_03, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm4b_08_03_SPC) = c("valuedatetime","datavalue")
STRT_storm4b_08_03_turb = subset(STRT_storm4b_08_03, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm4b_08_03_turb) = c("valuedatetime","datavalue")

# Storm 5 #
STRT_storm5_08_09_Q = subset(STRT_storm5_08_09, select = c("DateTime","MeanDischarge"))
names(STRT_storm5_08_09_Q) = c("valuedatetime","datavalue")
STRT_storm5_08_09_NO3 = subset(STRT_storm5_08_09, select = c("DateTime", "nitrateuM"))
names(STRT_storm5_08_09_NO3) = c("valuedatetime","datavalue")
STRT_storm5_08_09_fDOM = subset(STRT_storm5_08_09, select = c("DateTime","fDOM.QSU"))
names(STRT_storm5_08_09_fDOM) = c("valuedatetime","datavalue")
STRT_storm5_08_09_SPC = subset(STRT_storm5_08_09, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm5_08_09_SPC) = c("valuedatetime","datavalue")
STRT_storm5_08_09_turb = subset(STRT_storm5_08_09, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm5_08_09_turb) = c("valuedatetime","datavalue")

# Storm 6 #
STRT_storm6_08_12_Q = subset(STRT_storm6_08_12, select = c("DateTime","MeanDischarge"))
names(STRT_storm6_08_12_Q) = c("valuedatetime","datavalue")
STRT_storm6_08_12_NO3 = subset(STRT_storm6_08_12, select = c("DateTime", "nitrateuM"))
names(STRT_storm6_08_12_NO3) = c("valuedatetime","datavalue")
STRT_storm6_08_12_fDOM = subset(STRT_storm6_08_12, select = c("DateTime","fDOM.QSU"))
names(STRT_storm6_08_12_fDOM) = c("valuedatetime","datavalue")
STRT_storm6_08_12_SPC = subset(STRT_storm6_08_12, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm6_08_12_SPC) = c("valuedatetime","datavalue")
STRT_storm6_08_12_turb = subset(STRT_storm6_08_12, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm6_08_12_turb) = c("valuedatetime","datavalue")

# Storm 7 #
STRT_storm7a_08_20_Q = subset(STRT_storm7a_08_20, select = c("DateTime","MeanDischarge"))
names(STRT_storm7a_08_20_Q) = c("valuedatetime","datavalue")
STRT_storm7a_08_20_NO3 = subset(STRT_storm7a_08_20, select = c("DateTime", "nitrateuM"))
names(STRT_storm7a_08_20_NO3) = c("valuedatetime","datavalue")
STRT_storm7a_08_20_fDOM = subset(STRT_storm7a_08_20, select = c("DateTime","fDOM.QSU"))
names(STRT_storm7a_08_20_fDOM) = c("valuedatetime","datavalue")
STRT_storm7a_08_20_SPC = subset(STRT_storm7a_08_20, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm7a_08_20_SPC) = c("valuedatetime","datavalue")
STRT_storm7a_08_20_turb = subset(STRT_storm7a_08_20, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm7a_08_20_turb) = c("valuedatetime","datavalue")

STRT_storm7b_08_21_Q = subset(STRT_storm7b_08_21, select = c("DateTime","MeanDischarge"))
names(STRT_storm7b_08_21_Q) = c("valuedatetime","datavalue")
STRT_storm7b_08_21_NO3 = subset(STRT_storm7b_08_21, select = c("DateTime", "nitrateuM"))
names(STRT_storm7b_08_21_NO3) = c("valuedatetime","datavalue")
STRT_storm7b_08_21_fDOM = subset(STRT_storm7b_08_21, select = c("DateTime","fDOM.QSU"))
names(STRT_storm7b_08_21_fDOM) = c("valuedatetime","datavalue")
STRT_storm7b_08_21_SPC = subset(STRT_storm7b_08_21, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm7b_08_21_SPC) = c("valuedatetime","datavalue")
STRT_storm7b_08_21_turb = subset(STRT_storm7b_08_21, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm7b_08_21_turb) = c("valuedatetime","datavalue")

# Storm 8 #
STRT_storm8_08_28_Q = subset(STRT_storm8_08_28, select = c("DateTime","MeanDischarge"))
names(STRT_storm8_08_28_Q) = c("valuedatetime","datavalue")
STRT_storm8_08_28_NO3 = subset(STRT_storm8_08_28, select = c("DateTime", "nitrateuM"))
names(STRT_storm8_08_28_NO3) = c("valuedatetime","datavalue")
STRT_storm8_08_28_fDOM = subset(STRT_storm8_08_28, select = c("DateTime","fDOM.QSU"))
names(STRT_storm8_08_28_fDOM) = c("valuedatetime","datavalue")
STRT_storm8_08_28_SPC = subset(STRT_storm8_08_28, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm8_08_28_SPC) = c("valuedatetime","datavalue")
STRT_storm8_08_28_turb = subset(STRT_storm8_08_28, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm8_08_28_turb) = c("valuedatetime","datavalue")

# Storm 9 #
STRT_storm9a_09_03_Q = subset(STRT_storm9a_09_03, select = c("DateTime","MeanDischarge"))
names(STRT_storm9a_09_03_Q) = c("valuedatetime","datavalue")
STRT_storm9a_09_03_NO3 = subset(STRT_storm9a_09_03, select = c("DateTime", "nitrateuM"))
names(STRT_storm9a_09_03_NO3) = c("valuedatetime","datavalue")
STRT_storm9a_09_03_fDOM = subset(STRT_storm9a_09_03, select = c("DateTime","fDOM.QSU"))
names(STRT_storm9a_09_03_fDOM) = c("valuedatetime","datavalue")
STRT_storm9a_09_03_SPC = subset(STRT_storm9a_09_03, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm9a_09_03_SPC) = c("valuedatetime","datavalue")
STRT_storm9a_09_03_turb = subset(STRT_storm9a_09_03, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm9a_09_03_turb) = c("valuedatetime","datavalue")

STRT_storm9b_09_06_Q = subset(STRT_storm9b_09_06, select = c("DateTime","MeanDischarge"))
names(STRT_storm9b_09_06_Q) = c("valuedatetime","datavalue")
STRT_storm9b_09_06_NO3 = subset(STRT_storm9b_09_06, select = c("DateTime", "nitrateuM"))
names(STRT_storm9b_09_06_NO3) = c("valuedatetime","datavalue")
STRT_storm9b_09_06_fDOM = subset(STRT_storm9b_09_06, select = c("DateTime","fDOM.QSU"))
names(STRT_storm9b_09_06_fDOM) = c("valuedatetime","datavalue")
STRT_storm9b_09_06_SPC = subset(STRT_storm9b_09_06, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm9b_09_06_SPC) = c("valuedatetime","datavalue")
STRT_storm9b_09_06_turb = subset(STRT_storm9b_09_06, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm9b_09_06_turb) = c("valuedatetime","datavalue")

STRT_storm9c_09_09_Q = subset(STRT_storm9c_09_09, select = c("DateTime","MeanDischarge"))
names(STRT_storm9c_09_09_Q) = c("valuedatetime","datavalue")
STRT_storm9c_09_09_NO3 = subset(STRT_storm9c_09_09, select = c("DateTime", "nitrateuM"))
names(STRT_storm9c_09_09_NO3) = c("valuedatetime","datavalue")
STRT_storm9c_09_09_fDOM = subset(STRT_storm9c_09_09, select = c("DateTime","fDOM.QSU"))
names(STRT_storm9c_09_09_fDOM) = c("valuedatetime","datavalue")
STRT_storm9c_09_09_SPC = subset(STRT_storm9c_09_09, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm9c_09_09_SPC) = c("valuedatetime","datavalue")
STRT_storm9c_09_09_turb = subset(STRT_storm9c_09_09, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm9c_09_09_turb) = c("valuedatetime","datavalue")

# Storm 10 #
STRT_storm10_09_23_Q = subset(STRT_storm10_09_23, select = c("DateTime","MeanDischarge"))
names(STRT_storm10_09_23_Q) = c("valuedatetime","datavalue")
STRT_storm10_09_23_NO3 = subset(STRT_storm10_09_23, select = c("DateTime", "nitrateuM"))
names(STRT_storm10_09_23_NO3) = c("valuedatetime","datavalue")
STRT_storm10_09_23_fDOM = subset(STRT_storm10_09_23, select = c("DateTime","fDOM.QSU"))
names(STRT_storm10_09_23_fDOM) = c("valuedatetime","datavalue")
STRT_storm10_09_23_SPC = subset(STRT_storm10_09_23, select = c("DateTime", "SpCond.uScm"))
names(STRT_storm10_09_23_SPC) = c("valuedatetime","datavalue")
STRT_storm10_09_23_turb = subset(STRT_storm10_09_23, select = c("DateTime", "Turbidity.FNU"))
names(STRT_storm10_09_23_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(STRT_storm1a_06_18, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1a_06_18.csv")
write.csv(STRT_storm1a_06_18_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1a_06_18_Q.csv")
write.csv(STRT_storm1a_06_18_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1a_06_18_NO3.csv")
write.csv(STRT_storm1a_06_18_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1a_06_18_fDOM.csv")
write.csv(STRT_storm1a_06_18_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1a_06_18_SPC.csv")
write.csv(STRT_storm1a_06_18_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1a_06_18_Turb.csv")

write.csv(STRT_storm1b_06_20, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1b_06_20.csv")
write.csv(STRT_storm1b_06_20_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1b_06_20_Q.csv")
write.csv(STRT_storm1b_06_20_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1b_06_20_NO3.csv")
write.csv(STRT_storm1b_06_20_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1b_06_20_fDOM.csv")
write.csv(STRT_storm1b_06_20_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1b_06_20_SPC.csv")
write.csv(STRT_storm1b_06_20_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1b_06_20_Turb.csv")

write.csv(STRT_storm1c_06_21, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1c_06_21.csv")
write.csv(STRT_storm1c_06_21_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1c_06_21_Q.csv")
write.csv(STRT_storm1c_06_21_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1c_06_21_NO3.csv")
write.csv(STRT_storm1c_06_21_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1c_06_21_fDOM.csv")
write.csv(STRT_storm1c_06_21_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1c_06_21_SPC.csv")
write.csv(STRT_storm1c_06_21_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1c_06_21_Turb.csv")

write.csv(STRT_storm1d_06_23, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1d_06_23.csv")
write.csv(STRT_storm1d_06_23_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1d_06_23_Q.csv")
write.csv(STRT_storm1d_06_23_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1d_06_23_NO3.csv")
write.csv(STRT_storm1d_06_23_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1d_06_23_fDOM.csv")
write.csv(STRT_storm1d_06_23_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1d_06_23_SPC.csv")
write.csv(STRT_storm1d_06_23_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1d_06_23_Turb.csv")

write.csv(STRT_storm1e_06_24, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1e_06_24.csv")
write.csv(STRT_storm1e_06_24_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1e_06_24_Q.csv")
write.csv(STRT_storm1e_06_24_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1e_06_24_NO3.csv")
write.csv(STRT_storm1e_06_24_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1e_06_24_fDOM.csv")
write.csv(STRT_storm1e_06_24_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1e_06_24_SPC.csv")
write.csv(STRT_storm1e_06_24_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm1e_06_24_Turb.csv")

write.csv(STRT_storm2_07_09, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm2_07_09.csv")
write.csv(STRT_storm2_07_09_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm2_07_09_Q.csv")
write.csv(STRT_storm2_07_09_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm2_07_09_NO3.csv")
write.csv(STRT_storm2_07_09_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm2_07_09_fDOM.csv")
write.csv(STRT_storm2_07_09_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm2_07_09_SPC.csv")
write.csv(STRT_storm2_07_09_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm2_07_09_Turb.csv")

write.csv(STRT_storm3_07_20, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm3_07_20.csv")
write.csv(STRT_storm3_07_20_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm3_07_20_Q.csv")
write.csv(STRT_storm3_07_20_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm3_07_20_NO3.csv")
write.csv(STRT_storm3_07_20_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm3_07_20_fDOM.csv")
write.csv(STRT_storm3_07_20_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm3_07_20_SPC.csv")
write.csv(STRT_storm3_07_20_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm3_07_20_Turb.csv")

write.csv(STRT_storm4a_08_01, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4a_08_01.csv")
write.csv(STRT_storm4a_08_01_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4a_08_01_Q.csv")
write.csv(STRT_storm4a_08_01_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4a_08_01_NO3.csv")
write.csv(STRT_storm4a_08_01_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4a_08_01_fDOM.csv")
write.csv(STRT_storm4a_08_01_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4a_08_01_SPC.csv")
write.csv(STRT_storm4a_08_01_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4a_08_01_Turb.csv")

write.csv(STRT_storm4b_08_03, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4b_08_03.csv")
write.csv(STRT_storm4b_08_03_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4b_08_03_Q.csv")
write.csv(STRT_storm4b_08_03_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4b_08_03_NO3.csv")
write.csv(STRT_storm4b_08_03_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4b_08_03_fDOM.csv")
write.csv(STRT_storm4b_08_03_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4b_08_03_SPC.csv")
write.csv(STRT_storm4b_08_03_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm4b_08_03_Turb.csv")

write.csv(STRT_storm5_08_09, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm5_08_09.csv")
write.csv(STRT_storm5_08_09_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm5_08_09_Q.csv")
write.csv(STRT_storm5_08_09_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm5_08_09_NO3.csv")
write.csv(STRT_storm5_08_09_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm5_08_09_fDOM.csv")
write.csv(STRT_storm5_08_09_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm5_08_09_SPC.csv")
write.csv(STRT_storm5_08_09_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm5_08_09_Turb.csv")

write.csv(STRT_storm6_08_12, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm6_08_12.csv")
write.csv(STRT_storm6_08_12_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm6_08_12_Q.csv")
write.csv(STRT_storm6_08_12_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm6_08_12_NO3.csv")
write.csv(STRT_storm6_08_12_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm6_08_12_fDOM.csv")
write.csv(STRT_storm6_08_12_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm6_08_12_SPC.csv")
write.csv(STRT_storm6_08_12_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm6_08_12_Turb.csv")

write.csv(STRT_storm7a_08_20, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7a_08_20.csv")
write.csv(STRT_storm7a_08_20_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7a_08_20_Q.csv")
write.csv(STRT_storm7a_08_20_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7a_08_20_NO3.csv")
write.csv(STRT_storm7a_08_20_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7a_08_20_fDOM.csv")
write.csv(STRT_storm7a_08_20_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7a_08_20_SPC.csv")
write.csv(STRT_storm7a_08_20_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7a_08_20_Turb.csv")

write.csv(STRT_storm7b_08_21, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7b_08_21.csv")
write.csv(STRT_storm7b_08_21_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7b_08_21_Q.csv")
write.csv(STRT_storm7b_08_21_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7b_08_21_NO3.csv")
write.csv(STRT_storm7b_08_21_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7b_08_21_fDOM.csv")
write.csv(STRT_storm7b_08_21_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7b_08_21_SPC.csv")
write.csv(STRT_storm7b_08_21_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm7b_08_21_Turb.csv")

write.csv(STRT_storm8_08_28, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm8_08_28.csv")
write.csv(STRT_storm8_08_28_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm8_08_28_Q.csv")
write.csv(STRT_storm8_08_28_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm8_08_28_NO3.csv")
write.csv(STRT_storm8_08_28_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm8_08_28_fDOM.csv")
write.csv(STRT_storm8_08_28_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm8_08_28_SPC.csv")
write.csv(STRT_storm8_08_28_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm8_08_28_Turb.csv")

write.csv(STRT_storm9a_09_03, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9a_09_03.csv")
write.csv(STRT_storm9a_09_03_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9a_09_03_Q.csv")
write.csv(STRT_storm9a_09_03_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9a_09_03_NO3.csv")
write.csv(STRT_storm9a_09_03_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9a_09_03_fDOM.csv")
write.csv(STRT_storm9a_09_03_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9a_09_03_SPC.csv")
write.csv(STRT_storm9a_09_03_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9a_09_03_Turb.csv")

write.csv(STRT_storm9b_09_06, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9b_09_06.csv")
write.csv(STRT_storm9b_09_06_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9b_09_06_Q.csv")
write.csv(STRT_storm9b_09_06_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9b_09_06_NO3.csv")
write.csv(STRT_storm9b_09_06_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9b_09_06_fDOM.csv")
write.csv(STRT_storm9b_09_06_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9b_09_06_SPC.csv")
write.csv(STRT_storm9b_09_06_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9b_09_06_Turb.csv")

write.csv(STRT_storm9c_09_09, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9c_09_09.csv")
write.csv(STRT_storm9c_09_09_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9c_09_09_Q.csv")
write.csv(STRT_storm9c_09_09_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9c_09_09_NO3.csv")
write.csv(STRT_storm9c_09_09_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9c_09_09_fDOM.csv")
write.csv(STRT_storm9c_09_09_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9c_09_09_SPC.csv")
write.csv(STRT_storm9c_09_09_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm9c_09_09_Turb.csv")

write.csv(STRT_storm10_09_23, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm10_09_23.csv")
write.csv(STRT_storm10_09_23_Q, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm10_09_23_Q.csv")
write.csv(STRT_storm10_09_23_NO3, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm10_09_23_NO3.csv")
write.csv(STRT_storm10_09_23_fDOM, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm10_09_23_fDOM.csv")
write.csv(STRT_storm10_09_23_SPC, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm10_09_23_SPC.csv")
write.csv(STRT_storm10_09_23_turb, "~/Documents/Storms/Storm_Events/2020/STRT/STRT_storm10_09_23_Turb.csv")

# VAUL #
VAUL <- VAUL.2020.chem
VAUL$MeanDischarge <- VAUL$Q
# VAUL rain gauge installed on the 22nd of June but added FRCH rain gauge on for before that#
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'VAUL precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage")) 
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

### Storms ###
# VAUL #
# Storm 1a
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-19 07:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-20 11:00:00", tz="America/Anchorage"), col="purple")

VAUL_storm1a_06_19= VAUL[VAUL$DateTime > as.POSIXct("2020-06-19 07:00:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-06-20 11:00:00", tz="America/Anchorage"),]
plot(VAUL_storm1a_06_19$MeanDischarge ~ as.POSIXct(VAUL_storm1a_06_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL 20619 storm 1a",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 1b
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-20 12:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-22 23:00:00", tz="America/Anchorage"), col="purple")

VAUL_storm1b_06_20= VAUL[VAUL$DateTime > as.POSIXct("2020-06-20 12:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-06-22 23:00:00", tz="America/Anchorage"),]
plot(VAUL_storm1b_06_20$MeanDischarge ~ as.POSIXct(VAUL_storm1b_06_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="VAUL 20620 storm 1b",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 1c
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-22 23:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-28 05:00:00", tz="America/Anchorage"), col="purple")

VAUL_storm1c_06_22= VAUL[VAUL$DateTime > as.POSIXct("2020-06-22 23:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-06-27 05:00:00", tz="America/Anchorage"),]
plot(VAUL_storm1c_06_22$MeanDischarge ~ as.POSIXct(VAUL_storm1c_06_22$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL 20622 storm 1c",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 2 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-28 04:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-30 10:00:00", tz="America/Anchorage"), col="purple")

VAUL_storm2_06_28= VAUL[VAUL$DateTime > as.POSIXct("2020-06-28 04:15:00", tz="America/Anchorage") &
                          VAUL$DateTime < as.POSIXct("2020-06-30 02:00:00", tz="America/Anchorage"),]
plot(VAUL_storm2_06_28$MeanDischarge ~ as.POSIXct(VAUL_storm2_06_28$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL 20628 storm 2",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-09 04:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-12 18:00:00", tz="America/Anchorage"), col="purple")

VAUL_storm3_07_09= VAUL[VAUL$DateTime > as.POSIXct("2020-07-09 04:15:00", tz="America/Anchorage") &
                          VAUL$DateTime < as.POSIXct("2020-07-12 10:00:00", tz="America/Anchorage"),]
plot(VAUL_storm3_07_09$MeanDischarge ~ as.POSIXct(VAUL_storm3_07_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="VAUL 200708 storm 3",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-12 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-16 04:00:00", tz="America/Anchorage"), col="purple")

VAUL_storm4_07_12= VAUL[VAUL$DateTime > as.POSIXct("2020-07-12 20:15:00", tz="America/Anchorage") &
                          VAUL$DateTime < as.POSIXct("2020-07-16 04:00:00", tz="America/Anchorage"),]
plot(VAUL_storm4_07_12$MeanDischarge ~ as.POSIXct(VAUL_storm4_07_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="VAUL 20712 storm 4",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 1 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-26 23:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-29 09:00:00", tz="America/Anchorage"), col="purple")

VAUL_storm5_07_26= VAUL[VAUL$DateTime > as.POSIXct("2020-07-26 23:15:00", tz="America/Anchorage") &
                          VAUL$DateTime < as.POSIXct("2020-07-29 01:00:00", tz="America/Anchorage"),]
plot(VAUL_storm5_07_26$MeanDischarge ~ as.POSIXct(VAUL_storm5_07_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="VAUL 20726 storm 5",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 1 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6a #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-01 20:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-02 23:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm6a_08_01= VAUL[VAUL$DateTime > as.POSIXct("2020-08-01 20:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-08-02 23:15:00", tz="America/Anchorage"),]
plot(VAUL_storm6a_08_01$MeanDischarge ~ as.POSIXct(VAUL_storm6a_08_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL 20801 storm 6a",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 1 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6b #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-02 23:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-08 07:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm6b_08_02= VAUL[VAUL$DateTime > as.POSIXct("2020-08-02 23:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-08-08 07:15:00", tz="America/Anchorage"),]
plot(VAUL_storm6b_08_02$MeanDischarge ~ as.POSIXct(VAUL_storm6b_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL 20802 storm 6b",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-08 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-11 07:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm7_08_08= VAUL[VAUL$DateTime > as.POSIXct("2020-08-08 08:15:00", tz="America/Anchorage") &
                          VAUL$DateTime < as.POSIXct("2020-08-11 07:15:00", tz="America/Anchorage"),]
plot(VAUL_storm7_08_08$MeanDischarge ~ as.POSIXct(VAUL_storm7_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 20808 storm 7",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-11 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-12 07:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm8_08_11= VAUL[VAUL$DateTime > as.POSIXct("2020-08-11 08:15:00", tz="America/Anchorage") &
                          VAUL$DateTime < as.POSIXct("2020-08-12 07:15:00", tz="America/Anchorage"),]
plot(VAUL_storm8_08_11$MeanDischarge ~ as.POSIXct(VAUL_storm8_08_11$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 200811 storm 8",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-12 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-13 07:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm9_08_12= VAUL[VAUL$DateTime > as.POSIXct("2020-08-12 08:15:00", tz="America/Anchorage") &
                          VAUL$DateTime < as.POSIXct("2020-08-13 07:15:00", tz="America/Anchorage"),]
plot(VAUL_storm9_08_12$MeanDischarge ~ as.POSIXct(VAUL_storm9_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 200812 storm 9",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-25 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-27 09:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm10_08_25= VAUL[VAUL$DateTime > as.POSIXct("2020-08-25 08:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-08-27 09:15:00", tz="America/Anchorage"),]
plot(VAUL_storm10_08_25$MeanDischarge ~ as.POSIXct(VAUL_storm10_08_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 200825 storm 10",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 1 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 11 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-27 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-31 12:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm11_08_27= VAUL[VAUL$DateTime > as.POSIXct("2020-08-27 08:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-08-31 12:15:00", tz="America/Anchorage"),]
plot(VAUL_storm11_08_27$MeanDischarge ~ as.POSIXct(VAUL_storm11_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 200827 storm 11",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-01 12:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-03 07:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm12_09_01= VAUL[VAUL$DateTime > as.POSIXct("2020-09-01 12:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-09-03 07:15:00", tz="America/Anchorage"),]
plot(VAUL_storm12_09_01$MeanDischarge ~ as.POSIXct(VAUL_storm12_09_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 200901 storm 12",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 13 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-03 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-06 16:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm13_09_03= VAUL[VAUL$DateTime > as.POSIXct("2020-09-03 08:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-09-06 16:15:00", tz="America/Anchorage"),]
plot(VAUL_storm13_09_03$MeanDischarge ~ as.POSIXct(VAUL_storm13_09_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="VAUL 200903 storm 13",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 14 #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-06 18:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-08 23:15:00", tz="America/Anchorage"), col="purple")

VAUL_storm14_09_06= VAUL[VAUL$DateTime > as.POSIXct("2020-09-06 18:15:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2020-09-08 23:15:00", tz="America/Anchorage"),]
plot(VAUL_storm14_09_06$MeanDischarge ~ as.POSIXct(VAUL_storm14_09_06$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 200906 storm 14",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(VAUL$nitrateuM * 5 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$SpCond.uScm* 2 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$Turbidity.FNU* 100 ~ VAUL$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# no alarms # no response in discharge or chemistry
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-09-16 00:00:00","2020-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-09-16 00:00:00","2020-09-30 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-09-16 00:00:00","2020-09-30 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-16 00:00:00","2020-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)

# no alarms # no response in discharge or chemistry
plot(VAUL$MeanDischarge ~ vAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-10-01 00:00:00","2020-10-16 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-10-01 00:00:00","2020-10-16 23:45:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.QSU ~ VAUL$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-10-01 00:00:00","2020-10-16 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-10-01 00:00:00","2020-10-16 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)



# rename and subset individual water quality
VAUL_storm1a_06_19_Q = subset(VAUL_storm1a_06_19, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm1a_06_19_Q) = c("valuedatetime","datavalue")
VAUL_storm1a_06_19_NO3 = subset(VAUL_storm1a_06_19, select = c("DateTime","nitrateuM"))
names(VAUL_storm1a_06_19_NO3) = c("valuedatetime","datavalue")
VAUL_storm1a_06_19_fDOM = subset(VAUL_storm1a_06_19, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm1a_06_19_fDOM) = c("valuedatetime","datavalue")
VAUL_storm1a_06_19_SPC = subset(VAUL_storm1a_06_19, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm1a_06_19_SPC) = c("valuedatetime","datavalue")
VAUL_storm1a_06_19_turb = subset(VAUL_storm1a_06_19, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm1a_06_19_turb) = c("valuedatetime","datavalue")

VAUL_storm1b_06_20_Q = subset(VAUL_storm1b_06_20, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm1b_06_20_Q) = c("valuedatetime","datavalue")
VAUL_storm1b_06_20_NO3 = subset(VAUL_storm1b_06_20, select = c("DateTime","nitrateuM"))
names(VAUL_storm1b_06_20_NO3) = c("valuedatetime","datavalue")
VAUL_storm1b_06_20_fDOM = subset(VAUL_storm1b_06_20, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm1b_06_20_fDOM) = c("valuedatetime","datavalue")
VAUL_storm1b_06_20_SPC = subset(VAUL_storm1b_06_20, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm1b_06_20_SPC) = c("valuedatetime","datavalue")
VAUL_storm1b_06_20_turb = subset(VAUL_storm1b_06_20, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm1b_06_20_turb) = c("valuedatetime","datavalue")

VAUL_storm1c_06_22_Q = subset(VAUL_storm1c_06_22, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm1c_06_22_Q) = c("valuedatetime","datavalue")
VAUL_storm1c_06_22_NO3 = subset(VAUL_storm1c_06_22, select = c("DateTime","nitrateuM"))
names(VAUL_storm1c_06_22_NO3) = c("valuedatetime","datavalue")
VAUL_storm1c_06_22_fDOM = subset(VAUL_storm1c_06_22, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm1c_06_22_fDOM) = c("valuedatetime","datavalue")
VAUL_storm1c_06_22_SPC = subset(VAUL_storm1c_06_22, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm1c_06_22_SPC) = c("valuedatetime","datavalue")
VAUL_storm1c_06_22_turb = subset(VAUL_storm1c_06_22, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm1c_06_22_turb) = c("valuedatetime","datavalue")

# Storm 2 #
VAUL_storm2_06_28_Q = subset(VAUL_storm2_06_28, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm2_06_28_Q) = c("valuedatetime","datavalue")
VAUL_storm2_06_28_NO3 = subset(VAUL_storm2_06_28, select = c("DateTime","nitrateuM"))
names(VAUL_storm2_06_28_NO3) = c("valuedatetime","datavalue")
VAUL_storm2_06_28_fDOM = subset(VAUL_storm2_06_28, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm2_06_28_fDOM) = c("valuedatetime","datavalue")
VAUL_storm2_06_28_SPC = subset(VAUL_storm2_06_28, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm2_06_28_SPC) = c("valuedatetime","datavalue")
VAUL_storm2_06_28_turb = subset(VAUL_storm2_06_28, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm2_06_28_turb) = c("valuedatetime","datavalue")


# Storm 3 #
VAUL_storm3_07_09_Q = subset(VAUL_storm3_07_09, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm3_07_09_Q) = c("valuedatetime","datavalue")
VAUL_storm3_07_09_NO3 = subset(VAUL_storm3_07_09, select = c("DateTime","nitrateuM"))
names(VAUL_storm3_07_09_NO3) = c("valuedatetime","datavalue")
VAUL_storm3_07_09_fDOM = subset(VAUL_storm3_07_09, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm3_07_09_fDOM) = c("valuedatetime","datavalue")
VAUL_storm3_07_09_SPC = subset(VAUL_storm3_07_09, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm3_07_09_SPC) = c("valuedatetime","datavalue")
VAUL_storm3_07_09_turb = subset(VAUL_storm3_07_09, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm3_07_09_turb) = c("valuedatetime","datavalue")

# Storm 4 #
VAUL_storm4_07_12_Q = subset(VAUL_storm4_07_12, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm4_07_12_Q) = c("valuedatetime","datavalue")
VAUL_storm4_07_12_NO3 = subset(VAUL_storm4_07_12, select = c("DateTime","nitrateuM"))
names(VAUL_storm4_07_12_NO3) = c("valuedatetime","datavalue")
VAUL_storm4_07_12_fDOM = subset(VAUL_storm4_07_12, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm4_07_12_fDOM) = c("valuedatetime","datavalue")
VAUL_storm4_07_12_SPC = subset(VAUL_storm4_07_12, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm4_07_12_SPC) = c("valuedatetime","datavalue")
VAUL_storm4_07_12_turb = subset(VAUL_storm4_07_12, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm4_07_12_turb) = c("valuedatetime","datavalue")

# Storm 5 #
VAUL_storm5_07_26_Q = subset(VAUL_storm5_07_26, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm5_07_26_Q) = c("valuedatetime","datavalue")
VAUL_storm5_07_26_NO3 = subset(VAUL_storm5_07_26, select = c("DateTime","nitrateuM"))
names(VAUL_storm5_07_26_NO3) = c("valuedatetime","datavalue")
VAUL_storm5_07_26_fDOM = subset(VAUL_storm5_07_26, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm5_07_26_fDOM) = c("valuedatetime","datavalue")
VAUL_storm5_07_26_SPC = subset(VAUL_storm5_07_26, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm5_07_26_SPC) = c("valuedatetime","datavalue")
VAUL_storm5_07_26_turb = subset(VAUL_storm5_07_26, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm5_07_26_turb) = c("valuedatetime","datavalue")

# Storm 6a #
VAUL_storm6a_08_01_Q = subset(VAUL_storm6a_08_01, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm6a_08_01_Q) = c("valuedatetime","datavalue")
VAUL_storm6a_08_01_NO3 = subset(VAUL_storm6a_08_01, select = c("DateTime","nitrateuM"))
names(VAUL_storm6a_08_01_NO3) = c("valuedatetime","datavalue")
VAUL_storm6a_08_01_fDOM = subset(VAUL_storm6a_08_01, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm6a_08_01_fDOM) = c("valuedatetime","datavalue")
VAUL_storm6a_08_01_SPC = subset(VAUL_storm6a_08_01, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm6a_08_01_SPC) = c("valuedatetime","datavalue")
VAUL_storm6a_08_01_turb = subset(VAUL_storm6a_08_01, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm6a_08_01_turb) = c("valuedatetime","datavalue")

# Storm 6b #
VAUL_storm6b_08_02_Q = subset(VAUL_storm6b_08_02, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm6b_08_02_Q) = c("valuedatetime","datavalue")
VAUL_storm6b_08_02_NO3 = subset(VAUL_storm6b_08_02, select = c("DateTime","nitrateuM"))
names(VAUL_storm6b_08_02_NO3) = c("valuedatetime","datavalue")
VAUL_storm6b_08_02_fDOM = subset(VAUL_storm6b_08_02, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm6b_08_02_fDOM) = c("valuedatetime","datavalue")
VAUL_storm6b_08_02_SPC = subset(VAUL_storm6b_08_02, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm6b_08_02_SPC) = c("valuedatetime","datavalue")
VAUL_storm6b_08_02_turb = subset(VAUL_storm6b_08_02, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm6b_08_02_turb) = c("valuedatetime","datavalue")

# Storm 7 #
VAUL_storm7_08_08_Q = subset(VAUL_storm7_08_08, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm7_08_08_Q) = c("valuedatetime","datavalue")
VAUL_storm7_08_08_NO3 = subset(VAUL_storm7_08_08, select = c("DateTime","nitrateuM"))
names(VAUL_storm7_08_08_NO3) = c("valuedatetime","datavalue")
VAUL_storm7_08_08_fDOM = subset(VAUL_storm7_08_08, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm7_08_08_fDOM) = c("valuedatetime","datavalue")
VAUL_storm7_08_08_SPC = subset(VAUL_storm7_08_08, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm7_08_08_SPC) = c("valuedatetime","datavalue")
VAUL_storm7_08_08_turb = subset(VAUL_storm7_08_08, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm7_08_08_turb) = c("valuedatetime","datavalue")

# Storm 8 #
VAUL_storm8_08_11_Q = subset(VAUL_storm8_08_11, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm8_08_11_Q) = c("valuedatetime","datavalue")
VAUL_storm8_08_11_NO3 = subset(VAUL_storm8_08_11, select = c("DateTime","nitrateuM"))
names(VAUL_storm8_08_11_NO3) = c("valuedatetime","datavalue")
VAUL_storm8_08_11_fDOM = subset(VAUL_storm8_08_11, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm8_08_11_fDOM) = c("valuedatetime","datavalue")
VAUL_storm8_08_11_SPC = subset(VAUL_storm8_08_11, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm8_08_11_SPC) = c("valuedatetime","datavalue")
VAUL_storm8_08_11_turb = subset(VAUL_storm8_08_11, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm8_08_11_turb) = c("valuedatetime","datavalue")

# Storm 9 #
VAUL_storm9_08_12_Q = subset(VAUL_storm9_08_12, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm9_08_12_Q) = c("valuedatetime","datavalue")
VAUL_storm9_08_12_NO3 = subset(VAUL_storm9_08_12, select = c("DateTime","nitrateuM"))
names(VAUL_storm9_08_12_NO3) = c("valuedatetime","datavalue")
VAUL_storm9_08_12_fDOM = subset(VAUL_storm9_08_12, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm9_08_12_fDOM) = c("valuedatetime","datavalue")
VAUL_storm9_08_12_SPC = subset(VAUL_storm9_08_12, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm9_08_12_SPC) = c("valuedatetime","datavalue")
VAUL_storm9_08_12_turb = subset(VAUL_storm9_08_12, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm9_08_12_turb) = c("valuedatetime","datavalue")

# Storm 10 #
VAUL_storm10_08_25_Q = subset(VAUL_storm10_08_25, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm10_08_25_Q) = c("valuedatetime","datavalue")
VAUL_storm10_08_25_NO3 = subset(VAUL_storm10_08_25, select = c("DateTime","nitrateuM"))
names(VAUL_storm10_08_25_NO3) = c("valuedatetime","datavalue")
VAUL_storm10_08_25_fDOM = subset(VAUL_storm10_08_25, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm10_08_25_fDOM) = c("valuedatetime","datavalue")
VAUL_storm10_08_25_SPC = subset(VAUL_storm10_08_25, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm10_08_25_SPC) = c("valuedatetime","datavalue")
VAUL_storm10_08_25_turb = subset(VAUL_storm10_08_25, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm10_08_25_turb) = c("valuedatetime","datavalue")

# Storm 11 #
VAUL_storm11_08_27_Q = subset(VAUL_storm11_08_27, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm11_08_27_Q) = c("valuedatetime","datavalue")
VAUL_storm11_08_27_NO3 = subset(VAUL_storm11_08_27, select = c("DateTime","nitrateuM"))
names(VAUL_storm11_08_27_NO3) = c("valuedatetime","datavalue")
VAUL_storm11_08_27_fDOM = subset(VAUL_storm11_08_27, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm11_08_27_fDOM) = c("valuedatetime","datavalue")
VAUL_storm11_08_27_SPC = subset(VAUL_storm11_08_27, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm11_08_27_SPC) = c("valuedatetime","datavalue")
VAUL_storm11_08_27_turb = subset(VAUL_storm11_08_27, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm11_08_27_turb) = c("valuedatetime","datavalue")

# Storm 12 #
VAUL_storm12_09_01_Q = subset(VAUL_storm12_09_01, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm12_09_01_Q) = c("valuedatetime","datavalue")
VAUL_storm12_09_01_NO3 = subset(VAUL_storm12_09_01, select = c("DateTime","nitrateuM"))
names(VAUL_storm12_09_01_NO3) = c("valuedatetime","datavalue")
VAUL_storm12_09_01_fDOM = subset(VAUL_storm12_09_01, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm12_09_01_fDOM) = c("valuedatetime","datavalue")
VAUL_storm12_09_01_SPC = subset(VAUL_storm12_09_01, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm12_09_01_SPC) = c("valuedatetime","datavalue")
VAUL_storm12_09_01_turb = subset(VAUL_storm12_09_01, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm12_09_01_turb) = c("valuedatetime","datavalue")

# Storm 13 #
VAUL_storm13_09_03_Q = subset(VAUL_storm13_09_03, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm13_09_03_Q) = c("valuedatetime","datavalue")
VAUL_storm13_09_03_NO3 = subset(VAUL_storm13_09_03, select = c("DateTime","nitrateuM"))
names(VAUL_storm13_09_03_NO3) = c("valuedatetime","datavalue")
VAUL_storm13_09_03_fDOM = subset(VAUL_storm13_09_03, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm13_09_03_fDOM) = c("valuedatetime","datavalue")
VAUL_storm13_09_03_SPC = subset(VAUL_storm13_09_03, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm13_09_03_SPC) = c("valuedatetime","datavalue")
VAUL_storm13_09_03_turb = subset(VAUL_storm13_09_03, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm13_09_03_turb) = c("valuedatetime","datavalue")

# Storm 14 #
VAUL_storm14_09_06_Q = subset(VAUL_storm14_09_06, select = c("DateTime", "MeanDischarge"))
names(VAUL_storm14_09_06_Q) = c("valuedatetime","datavalue")
VAUL_storm14_09_06_NO3 = subset(VAUL_storm14_09_06, select = c("DateTime","nitrateuM"))
names(VAUL_storm14_09_06_NO3) = c("valuedatetime","datavalue")
VAUL_storm14_09_06_fDOM = subset(VAUL_storm14_09_06, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm14_09_06_fDOM) = c("valuedatetime","datavalue")
VAUL_storm14_09_06_SPC = subset(VAUL_storm14_09_06, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm14_09_06_SPC) = c("valuedatetime","datavalue")
VAUL_storm14_09_06_turb = subset(VAUL_storm14_09_06, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm14_09_06_turb) = c("valuedatetime","datavalue")

# write csv # 
write.csv(VAUL_storm1a_06_19, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1a_06_19.csv")
write.csv(VAUL_storm1a_06_19_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1a_06_19_Q.csv")
write.csv(VAUL_storm1a_06_19_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1a_06_19_NO3.csv")
write.csv(VAUL_storm1a_06_19_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1a_06_19_fDOM.csv")
write.csv(VAUL_storm1a_06_19_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1a_06_19_SPC.csv")
write.csv(VAUL_storm1a_06_19_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1a_06_19_Turb.csv")

write.csv(VAUL_storm1b_06_20, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1b_06_20.csv")
write.csv(VAUL_storm1b_06_20_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1b_06_20_Q.csv")
write.csv(VAUL_storm1b_06_20_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1b_06_20_NO3.csv")
write.csv(VAUL_storm1b_06_20_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1b_06_20_fDOM.csv")
write.csv(VAUL_storm1b_06_20_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1b_06_20_SPC.csv")
write.csv(VAUL_storm1b_06_20_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1b_06_20_Turb.csv")

write.csv(VAUL_storm1c_06_22, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1c_06_22.csv")
write.csv(VAUL_storm1c_06_22_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1c_06_22_Q.csv")
write.csv(VAUL_storm1c_06_22_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1c_06_22_NO3.csv")
write.csv(VAUL_storm1c_06_22_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1c_06_22_fDOM.csv")
write.csv(VAUL_storm1c_06_22_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1c_06_22_SPC.csv")
write.csv(VAUL_storm1c_06_22_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm1c_06_22_Turb.csv")

write.csv(VAUL_storm2_06_28, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm2_06_28.csv")
write.csv(VAUL_storm2_06_28_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm2_06_28_Q.csv")
write.csv(VAUL_storm2_06_28_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm2_06_28_NO3.csv")
write.csv(VAUL_storm2_06_28_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm2_06_28_fDOM.csv")
write.csv(VAUL_storm2_06_28_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm2_06_28_SPC.csv")
write.csv(VAUL_storm2_06_28_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm2_06_28_Turb.csv")

write.csv(VAUL_storm3_07_09, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm3_07_09.csv")
write.csv(VAUL_storm3_07_09_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm3_07_09_Q.csv")
write.csv(VAUL_storm3_07_09_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm3_07_09_NO3.csv")
write.csv(VAUL_storm3_07_09_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm3_07_09_fDOM.csv")
write.csv(VAUL_storm3_07_09_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm3_07_09_SPC.csv")
write.csv(VAUL_storm3_07_09_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm3_07_09_Turb.csv")

write.csv(VAUL_storm4_07_12, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm4_07_12.csv")
write.csv(VAUL_storm4_07_12_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm4_07_12_Q.csv")
write.csv(VAUL_storm4_07_12_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm4_07_12_NO3.csv")
write.csv(VAUL_storm4_07_12_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm4_07_12_fDOM.csv")
write.csv(VAUL_storm4_07_12_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm4_07_12_SPC.csv")
write.csv(VAUL_storm4_07_12_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm4_07_12_Turb.csv")

write.csv(VAUL_storm5_07_26, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm5_07_26.csv")
write.csv(VAUL_storm5_07_26_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm5_07_26_Q.csv")
write.csv(VAUL_storm5_07_26_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm5_07_26_NO3.csv")
write.csv(VAUL_storm5_07_26_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm5_07_26_fDOM.csv")
write.csv(VAUL_storm5_07_26_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm5_07_26_SPC.csv")
write.csv(VAUL_storm5_07_26_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm5_07_26_Turb.csv")

write.csv(VAUL_storm6a_08_01, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6a_08_01.csv")
write.csv(VAUL_storm6a_08_01_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6a_08_01_Q.csv")
write.csv(VAUL_storm6a_08_01_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6a_08_01_NO3.csv")
write.csv(VAUL_storm6a_08_01_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6a_08_01_fDOM.csv")
write.csv(VAUL_storm6a_08_01_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6a_08_01_SPC.csv")
write.csv(VAUL_storm6a_08_01_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6a_08_01_Turb.csv")

write.csv(VAUL_storm6b_08_02, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6b_08_02.csv")
write.csv(VAUL_storm6b_08_02_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6b_08_02_Q.csv")
write.csv(VAUL_storm6b_08_02_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6b_08_02_NO3.csv")
write.csv(VAUL_storm6b_08_02_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6b_08_02_fDOM.csv")
write.csv(VAUL_storm6b_08_02_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6b_08_02_SPC.csv")
write.csv(VAUL_storm6b_08_02_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm6b_08_02_Turb.csv")

write.csv(VAUL_storm7_08_08, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm7_08_08.csv")
write.csv(VAUL_storm7_08_08_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm7_08_08_Q.csv")
write.csv(VAUL_storm7_08_08_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm7_08_08_NO3.csv")
write.csv(VAUL_storm7_08_08_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm7_08_08_fDOM.csv")
write.csv(VAUL_storm7_08_08_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm7_08_08_SPC.csv")
write.csv(VAUL_storm7_08_08_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm7_08_08_Turb.csv")

write.csv(VAUL_storm8_08_11, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm8_08_11.csv")
write.csv(VAUL_storm8_08_11_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm8_08_11_Q.csv")
write.csv(VAUL_storm8_08_11_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm8_08_11_NO3.csv")
write.csv(VAUL_storm8_08_11_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm8_08_11_fDOM.csv")
write.csv(VAUL_storm8_08_11_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm8_08_11_SPC.csv")
write.csv(VAUL_storm8_08_11_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm8_08_11_Turb.csv")

write.csv(VAUL_storm9_08_12, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm9_08_12.csv")
write.csv(VAUL_storm9_08_12_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm9_08_12_Q.csv")
write.csv(VAUL_storm9_08_12_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm9_08_12_NO3.csv")
write.csv(VAUL_storm9_08_12_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm9_08_12_fDOM.csv")
write.csv(VAUL_storm9_08_12_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm9_08_12_SPC.csv")
write.csv(VAUL_storm9_08_12_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm9_08_12_Turb.csv")

write.csv(VAUL_storm10_08_25, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm10_08_25.csv")
write.csv(VAUL_storm10_08_25_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm10_08_25_Q.csv")
write.csv(VAUL_storm10_08_25_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm10_08_25_NO3.csv")
write.csv(VAUL_storm10_08_25_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm10_08_25_fDOM.csv")
write.csv(VAUL_storm10_08_25_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm10_08_25_SPC.csv")
write.csv(VAUL_storm10_08_25_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm10_08_25_Turb.csv")

write.csv(VAUL_storm11_08_27, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm11_08_27.csv")
write.csv(VAUL_storm11_08_27_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm11_08_27_Q.csv")
write.csv(VAUL_storm11_08_27_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm11_08_27_NO3.csv")
write.csv(VAUL_storm11_08_27_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm11_08_27_fDOM.csv")
write.csv(VAUL_storm11_08_27_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm11_08_27_SPC.csv")
write.csv(VAUL_storm11_08_27_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm11_08_27_Turb.csv")

write.csv(VAUL_storm12_09_01, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm12_09_01.csv")
write.csv(VAUL_storm12_09_01_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm12_09_01_Q.csv")
write.csv(VAUL_storm12_09_01_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm12_09_01_NO3.csv")
write.csv(VAUL_storm12_09_01_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm12_09_01_fDOM.csv")
write.csv(VAUL_storm12_09_01_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm12_09_01_SPC.csv")
write.csv(VAUL_storm12_09_01_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm12_09_01_Turb.csv")

write.csv(VAUL_storm13_09_03, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm13_09_03.csv")
write.csv(VAUL_storm13_09_03_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm13_09_03_Q.csv")
write.csv(VAUL_storm13_09_03_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm13_09_03_NO3.csv")
write.csv(VAUL_storm13_09_03_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm13_09_03_fDOM.csv")
write.csv(VAUL_storm13_09_03_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm13_09_03_SPC.csv")
write.csv(VAUL_storm13_09_03_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm13_09_03_Turb.csv")

write.csv(VAUL_storm14_09_06, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm14_09_06.csv")
write.csv(VAUL_storm14_09_06_Q, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm14_09_06_Q.csv")
write.csv(VAUL_storm14_09_06_NO3, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm14_09_06_NO3.csv")
write.csv(VAUL_storm14_09_06_fDOM, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm14_09_06_fDOM.csv")
write.csv(VAUL_storm14_09_06_SPC, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm14_09_06_SPC.csv")
write.csv(VAUL_storm14_09_06_turb, "~/Documents/Storms/Storm_Events/2020/VAUL/VAUL_storm14_09_06_Turb.csv")


## POKE ##
poke.gauge <- POKE.st
poke.gauge$Precip <- poke.gauge$inst_rainfall_mm
poke.final.discharge <- poke.final.discharge.2020
POKE <- POKE.2020.chem
POKE$MeanDischarge <- POKE$Q
### Import precipitation data from LTER ### 
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)

plot(poke.final.discharge$MeanDischarge ~ poke.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

### STORMS ###

# Storm 1 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-06-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-09 11:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-10 11:00:00", tz="America/Anchorage"), col="purple")

POKE_storm1_06_09 = POKE[POKE$DateTime > as.POSIXct("2020-06-09 11:00:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2020-06-10 11:00:00", tz="America/Anchorage"),]
plot(POKE_storm1_06_09$MeanDischarge ~ as.POSIXct(POKE_storm1_06_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="POKE 200609 storm 1",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-06-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-06-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-12 13:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-13 11:00:00", tz="America/Anchorage"), col="purple")

POKE_storm2_06_12 = POKE[POKE$DateTime > as.POSIXct("2020-06-12 13:00:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2020-06-13 11:00:00", tz="America/Anchorage"),]
plot(POKE_storm2_06_12$MeanDischarge ~ as.POSIXct(POKE_storm2_06_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="POKE 200612 storm 2",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-06-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-15 09:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-16 15:00:00", tz="America/Anchorage"), col="purple")

POKE_storm3_06_15 = POKE[POKE$DateTime > as.POSIXct("2020-06-15 09:00:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2020-06-16 15:00:00", tz="America/Anchorage"),]
plot(POKE_storm3_06_15$MeanDischarge ~ as.POSIXct(POKE_storm3_06_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="POKE 200615 storm 3",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4a #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-19 06:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-20 07:00:00", tz="America/Anchorage"), col="purple")

POKE_storm4a_06_19 = POKE[POKE$DateTime > as.POSIXct("2020-06-19 06:15:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-06-20 07:00:00", tz="America/Anchorage"),]
plot(POKE_storm4a_06_19$MeanDischarge ~ as.POSIXct(POKE_storm4a_06_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2000), col="blue", main="POKE 200619 storm 4a",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4b #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-20 07:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-21 07:00:00", tz="America/Anchorage"), col="purple")

POKE_storm4b_06_20 = POKE[POKE$DateTime > as.POSIXct("2020-06-20 07:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-06-21 07:00:00", tz="America/Anchorage"),]
plot(POKE_storm4b_06_20$MeanDischarge ~ as.POSIXct(POKE_storm4b_06_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2200), col="blue", main="POKE 200620 storm 4b",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4c #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-21 07:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-22 23:00:00", tz="America/Anchorage"), col="purple")

POKE_storm4c_06_21 = POKE[POKE$DateTime > as.POSIXct("2020-06-21 07:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-06-22 23:00:00", tz="America/Anchorage"),]
plot(POKE_storm4c_06_21$MeanDischarge ~ as.POSIXct(POKE_storm4c_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1400), col="blue", main="POKE 200621 storm 4c",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 30 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 12 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-22 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-25 06:00:00", tz="America/Anchorage"), col="purple")

POKE_storm5_06_22 = POKE[POKE$DateTime > as.POSIXct("2020-06-22 23:00:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2020-06-25 06:00:00", tz="America/Anchorage"),]
plot(POKE_storm5_06_22$MeanDischarge ~ as.POSIXct(POKE_storm5_06_22$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1400), col="blue", main="POKE 200622 storm 5",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 30 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 12 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-29 10:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-30 10:00:00", tz="America/Anchorage"), col="purple")

POKE_storm6_06_29 = POKE[POKE$DateTime > as.POSIXct("2020-06-29 10:00:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2020-06-30 10:00:00", tz="America/Anchorage"),]
plot(POKE_storm6_06_29$MeanDischarge ~ as.POSIXct(POKE_storm6_06_29$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200629 storm 6",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 00:00:00","2020-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-04 06:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-05 14:00:00", tz="America/Anchorage"), col="purple")

POKE_storm7_07_04 = POKE[POKE$DateTime > as.POSIXct("2020-07-04 06:00:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2020-07-05 14:00:00", tz="America/Anchorage"),]
plot(POKE_storm7_07_04$MeanDischarge ~ as.POSIXct(POKE_storm7_07_04$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200704 storm 7",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-09 04:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-10 14:00:00", tz="America/Anchorage"), col="purple")

POKE_storm8_07_09 = POKE[POKE$DateTime > as.POSIXct("2020-07-09 04:00:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2020-07-10 14:00:00", tz="America/Anchorage"),]
plot(POKE_storm8_07_09$MeanDischarge ~ as.POSIXct(POKE_storm8_07_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200709 storm 8",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-12 20:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-15 14:00:00", tz="America/Anchorage"), col="purple")

POKE_storm9_07_12 = POKE[POKE$DateTime > as.POSIXct("2020-07-12 20:00:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2020-07-15 14:00:00", tz="America/Anchorage"),]
plot(POKE_storm9_07_12$MeanDischarge ~ as.POSIXct(POKE_storm9_07_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200712 storm 9",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-01 00:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-16 22:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-17 23:00:00", tz="America/Anchorage"), col="purple")

POKE_storm10_07_16 = POKE[POKE$DateTime > as.POSIXct("2020-07-16 22:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-07-17 23:00:00", tz="America/Anchorage"),]
plot(POKE_storm10_07_16$MeanDischarge ~ as.POSIXct(POKE_storm10_07_16$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200716 storm 10",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 11 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-18 08:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-20 10:00:00", tz="America/Anchorage"), col="purple")

POKE_storm11_07_18 = POKE[POKE$DateTime > as.POSIXct("2020-07-18 08:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-07-20 10:00:00", tz="America/Anchorage"),]
plot(POKE_storm11_07_18$MeanDischarge ~ as.POSIXct(POKE_storm11_07_18$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200718 storm 11",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 12 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-20 18:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-23 23:00:00", tz="America/Anchorage"), col="purple")

POKE_storm12_07_20 = POKE[POKE$DateTime > as.POSIXct("2020-07-20 18:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-07-23 23:00:00", tz="America/Anchorage"),]
plot(POKE_storm12_07_20$MeanDischarge ~ as.POSIXct(POKE_storm12_07_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200720 storm 12",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 13 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-24 08:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-26 06:00:00", tz="America/Anchorage"), col="purple")

POKE_storm13_07_24 = POKE[POKE$DateTime > as.POSIXct("2020-07-24 08:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-07-25 06:00:00", tz="America/Anchorage"),]
plot(POKE_storm13_07_24$MeanDischarge ~ as.POSIXct(POKE_storm13_07_24$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200724 storm 13",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 14 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-26 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-30 23:00:00", tz="America/Anchorage"), col="purple")

POKE_storm14_07_26 = POKE[POKE$DateTime > as.POSIXct("2020-07-26 23:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-07-30 23:00:00", tz="America/Anchorage"),]
plot(POKE_storm14_07_26$MeanDischarge ~ as.POSIXct(POKE_storm14_07_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200726 storm 14",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 15 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-02 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-06 11:00:00", tz="America/Anchorage"), col="purple")

POKE_storm15_08_02 = POKE[POKE$DateTime > as.POSIXct("2020-08-02 23:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-08-06 11:00:00", tz="America/Anchorage"),]
plot(POKE_storm15_08_02$MeanDischarge ~ as.POSIXct(POKE_storm15_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,5000), col="blue", main="POKE 200802 storm 15",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 16 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
lines(POKE$nitrateuM * 45 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 50 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-12 13:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-13 13:00:00", tz="America/Anchorage"), col="purple")

POKE_storm16_08_12 = POKE[POKE$DateTime > as.POSIXct("2020-08-12 13:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-08-13 13:00:00", tz="America/Anchorage"),]
plot(POKE_storm16_08_12$MeanDischarge ~ as.POSIXct(POKE_storm16_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="POKE 200812 storm 16",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 17 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")

par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-23 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-25 05:00:00", tz="America/Anchorage"), col="purple")

POKE_storm17_08_23 = POKE[POKE$DateTime > as.POSIXct("2020-08-23 23:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-08-25 05:00:00", tz="America/Anchorage"),]
plot(POKE_storm17_08_23$MeanDischarge ~ as.POSIXct(POKE_storm17_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="POKE 200823 storm 17",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 18 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")

par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-25 05:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-26 05:00:00", tz="America/Anchorage"), col="purple")

POKE_storm18_08_25 = POKE[POKE$DateTime > as.POSIXct("2020-08-25 05:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-08-26 05:00:00", tz="America/Anchorage"),]
plot(POKE_storm18_08_25$MeanDischarge ~ as.POSIXct(POKE_storm18_08_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="POKE 200825 storm 18",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 19 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")

par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-27 10:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-28 20:00:00", tz="America/Anchorage"), col="purple")

POKE_storm19_08_27 = POKE[POKE$DateTime > as.POSIXct("2020-08-27 10:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-08-28 20:00:00", tz="America/Anchorage"),]
plot(POKE_storm19_08_27$MeanDischarge ~ as.POSIXct(POKE_storm19_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="POKE 200827 storm 19",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-16 00:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 20 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")

par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-01 18:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-03 05:00:00", tz="America/Anchorage"), col="purple")

POKE_storm20_09_01 = POKE[POKE$DateTime > as.POSIXct("2020-09-01 18:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-09-03 05:00:00", tz="America/Anchorage"),]
plot(POKE_storm20_09_01$MeanDischarge ~ as.POSIXct(POKE_storm20_09_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="POKE 200901 storm 20",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 21 #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
lines(POKE$nitrateuM * 45 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 50 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-03 23:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-06 14:00:00", tz="America/Anchorage"), col="purple")

POKE_storm21_09_03 = POKE[POKE$DateTime > as.POSIXct("2020-09-03 23:00:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2020-09-06 06:00:00", tz="America/Anchorage"),]
plot(POKE_storm21_09_03$MeanDischarge ~ as.POSIXct(POKE_storm21_09_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="POKE 200903 storm 21",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 22a #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")

par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-07 20:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-08 23:00:00", tz="America/Anchorage"), col="purple")

POKE_storm22a_09_07 = POKE[POKE$DateTime > as.POSIXct("2020-09-07 20:00:00", tz="America/Anchorage") &
                             POKE$DateTime < as.POSIXct("2020-09-08 23:00:00", tz="America/Anchorage"),]
plot(POKE_storm22a_09_07$MeanDischarge ~ as.POSIXct(POKE_storm22a_09_07$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1000), col="blue", main="POKE 200907 storm 22a",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 22b #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")

par(new = T)

plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-09 05:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-11 10:00:00", tz="America/Anchorage"), col="purple")

POKE_storm22b_09_09 = POKE[POKE$DateTime > as.POSIXct("2020-09-09 05:45:00", tz="America/Anchorage") &
                             POKE$DateTime < as.POSIXct("2020-09-11 10:00:00", tz="America/Anchorage"),]
plot(POKE_storm22b_09_09$MeanDischarge ~ as.POSIXct(POKE_storm22b_09_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="POKE 200909 storm 22b",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(POKE$nitrateuM * 25 ~ POKE$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$SpCond.uScm * 7 ~ POKE$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$Turbidity.FNU * 70 ~ POKE$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# nitrateuM, fDOM.RFU POKE #
# Storm 1 #
POKE_storm1_06_09_Q = subset(POKE_storm1_06_09, select = c("DateTime", "MeanDischarge"))
names(POKE_storm1_06_09_Q) = c("valuedatetime","datavalue")
POKE_storm1_06_09_NO3 = subset(POKE_storm1_06_09, select = c("DateTime","nitrateuM"))
names(POKE_storm1_06_09_NO3) = c("valuedatetime","datavalue")
POKE_storm1_06_09_fDOM = subset(POKE_storm1_06_09, select = c("DateTime","fDOM.RFU"))
names(POKE_storm1_06_09_fDOM) = c("valuedatetime","datavalue")
POKE_storm1_06_09_SPC = subset(POKE_storm1_06_09, select = c("DateTime","SpCond.uScm"))
names(POKE_storm1_06_09_SPC) = c("valuedatetime","datavalue")
POKE_storm1_06_09_turb = subset(POKE_storm1_06_09, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm1_06_09_turb) = c("valuedatetime","datavalue")

POKE_storm2_06_12_Q = subset(POKE_storm2_06_12, select = c("DateTime", "MeanDischarge"))
names(POKE_storm2_06_12_Q) = c("valuedatetime","datavalue")
POKE_storm2_06_12_NO3 = subset(POKE_storm2_06_12, select = c("DateTime","nitrateuM"))
names(POKE_storm2_06_12_NO3) = c("valuedatetime","datavalue")
POKE_storm2_06_12_fDOM = subset(POKE_storm2_06_12, select = c("DateTime","fDOM.RFU"))
names(POKE_storm2_06_12_fDOM) = c("valuedatetime","datavalue")
POKE_storm2_06_12_SPC = subset(POKE_storm2_06_12, select = c("DateTime","SpCond.uScm"))
names(POKE_storm2_06_12_SPC) = c("valuedatetime","datavalue")
POKE_storm2_06_12_turb = subset(POKE_storm2_06_12, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm2_06_12_turb) = c("valuedatetime","datavalue")

POKE_storm3_06_15_Q = subset(POKE_storm3_06_15, select = c("DateTime", "MeanDischarge"))
names(POKE_storm3_06_15_Q) = c("valuedatetime","datavalue")
POKE_storm3_06_15_NO3 = subset(POKE_storm3_06_15, select = c("DateTime","nitrateuM"))
names(POKE_storm3_06_15_NO3) = c("valuedatetime","datavalue")
POKE_storm3_06_15_fDOM = subset(POKE_storm3_06_15, select = c("DateTime","fDOM.RFU"))
names(POKE_storm3_06_15_fDOM) = c("valuedatetime","datavalue")
POKE_storm3_06_15_SPC = subset(POKE_storm3_06_15, select = c("DateTime","SpCond.uScm"))
names(POKE_storm3_06_15_SPC) = c("valuedatetime","datavalue")
POKE_storm3_06_15_turb = subset(POKE_storm3_06_15, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm3_06_15_turb) = c("valuedatetime","datavalue")

POKE_storm4a_06_19_Q = subset(POKE_storm4a_06_19, select = c("DateTime", "MeanDischarge"))
names(POKE_storm4a_06_19_Q) = c("valuedatetime","datavalue")
POKE_storm4a_06_19_NO3 = subset(POKE_storm4a_06_19, select = c("DateTime","nitrateuM"))
names(POKE_storm4a_06_19_NO3) = c("valuedatetime","datavalue")
POKE_storm4a_06_19_fDOM = subset(POKE_storm4a_06_19, select = c("DateTime","fDOM.RFU"))
names(POKE_storm4a_06_19_fDOM) = c("valuedatetime","datavalue")
POKE_storm4a_06_19_SPC = subset(POKE_storm4a_06_19, select = c("DateTime","SpCond.uScm"))
names(POKE_storm4a_06_19_SPC) = c("valuedatetime","datavalue")
POKE_storm4a_06_19_turb = subset(POKE_storm4a_06_19, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm4a_06_19_turb) = c("valuedatetime","datavalue")

POKE_storm4b_06_20_Q = subset(POKE_storm4b_06_20, select = c("DateTime", "MeanDischarge"))
names(POKE_storm4b_06_20_Q) = c("valuedatetime","datavalue")
POKE_storm4b_06_20_NO3 = subset(POKE_storm4b_06_20, select = c("DateTime","nitrateuM"))
names(POKE_storm4b_06_20_NO3) = c("valuedatetime","datavalue")
POKE_storm4b_06_20_fDOM = subset(POKE_storm4b_06_20, select = c("DateTime","fDOM.RFU"))
names(POKE_storm4b_06_20_fDOM) = c("valuedatetime","datavalue")
POKE_storm4b_06_20_SPC = subset(POKE_storm4b_06_20, select = c("DateTime","SpCond.uScm"))
names(POKE_storm4b_06_20_SPC) = c("valuedatetime","datavalue")
POKE_storm4b_06_20_turb = subset(POKE_storm4b_06_20, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm4b_06_20_turb) = c("valuedatetime","datavalue")

POKE_storm4c_06_21_Q = subset(POKE_storm4c_06_21, select = c("DateTime", "MeanDischarge"))
names(POKE_storm4c_06_21_Q) = c("valuedatetime","datavalue")
POKE_storm4c_06_21_NO3 = subset(POKE_storm4c_06_21, select = c("DateTime","nitrateuM"))
names(POKE_storm4c_06_21_NO3) = c("valuedatetime","datavalue")
POKE_storm4c_06_21_fDOM = subset(POKE_storm4c_06_21, select = c("DateTime","fDOM.RFU"))
names(POKE_storm4c_06_21_fDOM) = c("valuedatetime","datavalue")
POKE_storm4c_06_21_SPC = subset(POKE_storm4c_06_21, select = c("DateTime","SpCond.uScm"))
names(POKE_storm4c_06_21_SPC) = c("valuedatetime","datavalue")
POKE_storm4c_06_21_turb = subset(POKE_storm4c_06_21, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm4c_06_21_turb) = c("valuedatetime","datavalue")

POKE_storm5_06_22_Q = subset(POKE_storm5_06_22, select = c("DateTime", "MeanDischarge"))
names(POKE_storm5_06_22_Q) = c("valuedatetime","datavalue")
POKE_storm5_06_22_NO3 = subset(POKE_storm5_06_22, select = c("DateTime","nitrateuM"))
names(POKE_storm5_06_22_NO3) = c("valuedatetime","datavalue")
POKE_storm5_06_22_fDOM = subset(POKE_storm5_06_22, select = c("DateTime","fDOM.RFU"))
names(POKE_storm5_06_22_fDOM) = c("valuedatetime","datavalue")
POKE_storm5_06_22_SPC = subset(POKE_storm5_06_22, select = c("DateTime","SpCond.uScm"))
names(POKE_storm5_06_22_SPC) = c("valuedatetime","datavalue")
POKE_storm5_06_22_turb = subset(POKE_storm5_06_22, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm5_06_22_turb) = c("valuedatetime","datavalue")

POKE_storm6_06_29_Q = subset(POKE_storm6_06_29, select = c("DateTime", "MeanDischarge"))
names(POKE_storm6_06_29_Q) = c("valuedatetime","datavalue")
POKE_storm6_06_29_NO3 = subset(POKE_storm6_06_29, select = c("DateTime","nitrateuM"))
names(POKE_storm6_06_29_NO3) = c("valuedatetime","datavalue")
POKE_storm6_06_29_fDOM = subset(POKE_storm6_06_29, select = c("DateTime","fDOM.RFU"))
names(POKE_storm6_06_29_fDOM) = c("valuedatetime","datavalue")
POKE_storm6_06_29_SPC = subset(POKE_storm6_06_29, select = c("DateTime","SpCond.uScm"))
names(POKE_storm6_06_29_SPC) = c("valuedatetime","datavalue")
POKE_storm6_06_29_turb = subset(POKE_storm6_06_29, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm6_06_29_turb) = c("valuedatetime","datavalue")

POKE_storm7_07_04_Q = subset(POKE_storm7_07_04, select = c("DateTime", "MeanDischarge"))
names(POKE_storm7_07_04_Q) = c("valuedatetime","datavalue")
POKE_storm7_07_04_NO3 = subset(POKE_storm7_07_04, select = c("DateTime","nitrateuM"))
names(POKE_storm7_07_04_NO3) = c("valuedatetime","datavalue")
POKE_storm7_07_04_fDOM = subset(POKE_storm7_07_04, select = c("DateTime","fDOM.RFU"))
names(POKE_storm7_07_04_fDOM) = c("valuedatetime","datavalue")
POKE_storm7_07_04_SPC = subset(POKE_storm7_07_04, select = c("DateTime","SpCond.uScm"))
names(POKE_storm7_07_04_SPC) = c("valuedatetime","datavalue")
POKE_storm7_07_04_turb = subset(POKE_storm7_07_04, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm7_07_04_turb) = c("valuedatetime","datavalue")

POKE_storm8_07_09_Q = subset(POKE_storm8_07_09, select = c("DateTime", "MeanDischarge"))
names(POKE_storm8_07_09_Q) = c("valuedatetime","datavalue")
POKE_storm8_07_09_NO3 = subset(POKE_storm8_07_09, select = c("DateTime","nitrateuM"))
names(POKE_storm8_07_09_NO3) = c("valuedatetime","datavalue")
POKE_storm8_07_09_fDOM = subset(POKE_storm8_07_09, select = c("DateTime","fDOM.RFU"))
names(POKE_storm8_07_09_fDOM) = c("valuedatetime","datavalue")
POKE_storm8_07_09_SPC = subset(POKE_storm8_07_09, select = c("DateTime","SpCond.uScm"))
names(POKE_storm8_07_09_SPC) = c("valuedatetime","datavalue")
POKE_storm8_07_09_turb = subset(POKE_storm8_07_09, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm8_07_09_turb) = c("valuedatetime","datavalue")

POKE_storm9_07_12_Q = subset(POKE_storm9_07_12, select = c("DateTime", "MeanDischarge"))
names(POKE_storm9_07_12_Q) = c("valuedatetime","datavalue")
POKE_storm9_07_12_NO3 = subset(POKE_storm9_07_12, select = c("DateTime","nitrateuM"))
names(POKE_storm9_07_12_NO3) = c("valuedatetime","datavalue")
POKE_storm9_07_12_fDOM = subset(POKE_storm9_07_12, select = c("DateTime","fDOM.RFU"))
names(POKE_storm9_07_12_fDOM) = c("valuedatetime","datavalue")
POKE_storm9_07_12_SPC = subset(POKE_storm9_07_12, select = c("DateTime","SpCond.uScm"))
names(POKE_storm9_07_12_SPC) = c("valuedatetime","datavalue")
POKE_storm9_07_12_turb = subset(POKE_storm9_07_12, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm9_07_12_turb) = c("valuedatetime","datavalue")

POKE_storm10_07_16_Q = subset(POKE_storm10_07_16, select = c("DateTime", "MeanDischarge"))
names(POKE_storm10_07_16_Q) = c("valuedatetime","datavalue")
POKE_storm10_07_16_NO3 = subset(POKE_storm10_07_16, select = c("DateTime","nitrateuM"))
names(POKE_storm10_07_16_NO3) = c("valuedatetime","datavalue")
POKE_storm10_07_16_fDOM = subset(POKE_storm10_07_16, select = c("DateTime","fDOM.RFU"))
names(POKE_storm10_07_16_fDOM) = c("valuedatetime","datavalue")
POKE_storm10_07_16_SPC = subset(POKE_storm10_07_16, select = c("DateTime","SpCond.uScm"))
names(POKE_storm10_07_16_SPC) = c("valuedatetime","datavalue")
POKE_storm10_07_16_turb = subset(POKE_storm10_07_16, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm10_07_16_turb) = c("valuedatetime","datavalue")

POKE_storm11_07_18_Q = subset(POKE_storm11_07_18, select = c("DateTime", "MeanDischarge"))
names(POKE_storm11_07_18_Q) = c("valuedatetime","datavalue")
POKE_storm11_07_18_NO3 = subset(POKE_storm11_07_18, select = c("DateTime","nitrateuM"))
names(POKE_storm11_07_18_NO3) = c("valuedatetime","datavalue")
POKE_storm11_07_18_fDOM = subset(POKE_storm11_07_18, select = c("DateTime","fDOM.RFU"))
names(POKE_storm11_07_18_fDOM) = c("valuedatetime","datavalue")
POKE_storm11_07_18_SPC = subset(POKE_storm11_07_18, select = c("DateTime","SpCond.uScm"))
names(POKE_storm11_07_18_SPC) = c("valuedatetime","datavalue")
POKE_storm11_07_18_turb = subset(POKE_storm11_07_18, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm11_07_18_turb) = c("valuedatetime","datavalue")

POKE_storm12_07_20_Q = subset(POKE_storm12_07_20, select = c("DateTime", "MeanDischarge"))
names(POKE_storm12_07_20_Q) = c("valuedatetime","datavalue")
POKE_storm12_07_20_NO3 = subset(POKE_storm12_07_20, select = c("DateTime","nitrateuM"))
names(POKE_storm12_07_20_NO3) = c("valuedatetime","datavalue")
POKE_storm12_07_20_fDOM = subset(POKE_storm12_07_20, select = c("DateTime","fDOM.RFU"))
names(POKE_storm12_07_20_fDOM) = c("valuedatetime","datavalue")
POKE_storm12_07_20_SPC = subset(POKE_storm12_07_20, select = c("DateTime","SpCond.uScm"))
names(POKE_storm12_07_20_SPC) = c("valuedatetime","datavalue")
POKE_storm12_07_20_turb = subset(POKE_storm12_07_20, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm12_07_20_turb) = c("valuedatetime","datavalue")

POKE_storm13_07_24_Q = subset(POKE_storm13_07_24, select = c("DateTime", "MeanDischarge"))
names(POKE_storm13_07_24_Q) = c("valuedatetime","datavalue")
POKE_storm13_07_24_NO3 = subset(POKE_storm13_07_24, select = c("DateTime","nitrateuM"))
names(POKE_storm13_07_24_NO3) = c("valuedatetime","datavalue")
POKE_storm13_07_24_fDOM = subset(POKE_storm13_07_24, select = c("DateTime","fDOM.RFU"))
names(POKE_storm13_07_24_fDOM) = c("valuedatetime","datavalue")
POKE_storm13_07_24_SPC = subset(POKE_storm13_07_24, select = c("DateTime","SpCond.uScm"))
names(POKE_storm13_07_24_SPC) = c("valuedatetime","datavalue")
POKE_storm13_07_24_turb = subset(POKE_storm13_07_24, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm13_07_24_turb) = c("valuedatetime","datavalue")

POKE_storm14_07_26_Q = subset(POKE_storm14_07_26, select = c("DateTime", "MeanDischarge"))
names(POKE_storm14_07_26_Q) = c("valuedatetime","datavalue")
POKE_storm14_07_26_NO3 = subset(POKE_storm14_07_26, select = c("DateTime","nitrateuM"))
names(POKE_storm14_07_26_NO3) = c("valuedatetime","datavalue")
POKE_storm14_07_26_fDOM = subset(POKE_storm14_07_26, select = c("DateTime","fDOM.RFU"))
names(POKE_storm14_07_26_fDOM) = c("valuedatetime","datavalue")
POKE_storm14_07_26_SPC = subset(POKE_storm14_07_26, select = c("DateTime","SpCond.uScm"))
names(POKE_storm14_07_26_SPC) = c("valuedatetime","datavalue")
POKE_storm14_07_26_turb = subset(POKE_storm14_07_26, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm14_07_26_turb) = c("valuedatetime","datavalue")

POKE_storm15_08_02_Q = subset(POKE_storm15_08_02, select = c("DateTime", "MeanDischarge"))
names(POKE_storm15_08_02_Q) = c("valuedatetime","datavalue")
POKE_storm15_08_02_NO3 = subset(POKE_storm15_08_02, select = c("DateTime","nitrateuM"))
names(POKE_storm15_08_02_NO3) = c("valuedatetime","datavalue")
POKE_storm15_08_02_fDOM = subset(POKE_storm15_08_02, select = c("DateTime","fDOM.RFU"))
names(POKE_storm15_08_02_fDOM) = c("valuedatetime","datavalue")
POKE_storm15_08_02_SPC = subset(POKE_storm15_08_02, select = c("DateTime","SpCond.uScm"))
names(POKE_storm15_08_02_SPC) = c("valuedatetime","datavalue")
POKE_storm15_08_02_turb = subset(POKE_storm15_08_02, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm15_08_02_turb) = c("valuedatetime","datavalue")

POKE_storm16_08_12_Q = subset(POKE_storm16_08_12, select = c("DateTime", "MeanDischarge"))
names(POKE_storm16_08_12_Q) = c("valuedatetime","datavalue")
POKE_storm16_08_12_NO3 = subset(POKE_storm16_08_12, select = c("DateTime","nitrateuM"))
names(POKE_storm16_08_12_NO3) = c("valuedatetime","datavalue")
POKE_storm16_08_12_fDOM = subset(POKE_storm16_08_12, select = c("DateTime","fDOM.RFU"))
names(POKE_storm16_08_12_fDOM) = c("valuedatetime","datavalue")
POKE_storm16_08_12_SPC = subset(POKE_storm16_08_12, select = c("DateTime","SpCond.uScm"))
names(POKE_storm16_08_12_SPC) = c("valuedatetime","datavalue")
POKE_storm16_08_12_turb = subset(POKE_storm16_08_12, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm16_08_12_turb) = c("valuedatetime","datavalue")

POKE_storm17_08_23_Q = subset(POKE_storm17_08_23, select = c("DateTime", "MeanDischarge"))
names(POKE_storm17_08_23_Q) = c("valuedatetime","datavalue")
POKE_storm17_08_23_NO3 = subset(POKE_storm17_08_23, select = c("DateTime","nitrateuM"))
names(POKE_storm17_08_23_NO3) = c("valuedatetime","datavalue")
POKE_storm17_08_23_fDOM = subset(POKE_storm17_08_23, select = c("DateTime","fDOM.RFU"))
names(POKE_storm17_08_23_fDOM) = c("valuedatetime","datavalue")
POKE_storm17_08_23_SPC = subset(POKE_storm17_08_23, select = c("DateTime","SpCond.uScm"))
names(POKE_storm17_08_23_SPC) = c("valuedatetime","datavalue")
POKE_storm17_08_23_turb = subset(POKE_storm17_08_23, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm17_08_23_turb) = c("valuedatetime","datavalue")

POKE_storm18_08_25_Q = subset(POKE_storm18_08_25, select = c("DateTime", "MeanDischarge"))
names(POKE_storm18_08_25_Q) = c("valuedatetime","datavalue")
POKE_storm18_08_25_NO3 = subset(POKE_storm18_08_25, select = c("DateTime","nitrateuM"))
names(POKE_storm18_08_25_NO3) = c("valuedatetime","datavalue")
POKE_storm18_08_25_fDOM = subset(POKE_storm18_08_25, select = c("DateTime","fDOM.RFU"))
names(POKE_storm18_08_25_fDOM) = c("valuedatetime","datavalue")
POKE_storm18_08_25_SPC = subset(POKE_storm18_08_25, select = c("DateTime","SpCond.uScm"))
names(POKE_storm18_08_25_SPC) = c("valuedatetime","datavalue")
POKE_storm18_08_25_turb = subset(POKE_storm18_08_25, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm18_08_25_turb) = c("valuedatetime","datavalue")

POKE_storm19_08_27_Q = subset(POKE_storm19_08_27, select = c("DateTime", "MeanDischarge"))
names(POKE_storm19_08_27_Q) = c("valuedatetime","datavalue")
POKE_storm19_08_27_NO3 = subset(POKE_storm19_08_27, select = c("DateTime","nitrateuM"))
names(POKE_storm19_08_27_NO3) = c("valuedatetime","datavalue")
POKE_storm19_08_27_fDOM = subset(POKE_storm19_08_27, select = c("DateTime","fDOM.RFU"))
names(POKE_storm19_08_27_fDOM) = c("valuedatetime","datavalue")
POKE_storm19_08_27_SPC = subset(POKE_storm19_08_27, select = c("DateTime","SpCond.uScm"))
names(POKE_storm19_08_27_SPC) = c("valuedatetime","datavalue")
POKE_storm19_08_27_turb = subset(POKE_storm19_08_27, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm19_08_27_turb) = c("valuedatetime","datavalue")

POKE_storm20_09_01_Q = subset(POKE_storm20_09_01, select = c("DateTime", "MeanDischarge"))
names(POKE_storm20_09_01_Q) = c("valuedatetime","datavalue")
POKE_storm20_09_01_NO3 = subset(POKE_storm20_09_01, select = c("DateTime","nitrateuM"))
names(POKE_storm20_09_01_NO3) = c("valuedatetime","datavalue")
POKE_storm20_09_01_fDOM = subset(POKE_storm20_09_01, select = c("DateTime","fDOM.RFU"))
names(POKE_storm20_09_01_fDOM) = c("valuedatetime","datavalue")
POKE_storm20_09_01_SPC = subset(POKE_storm20_09_01, select = c("DateTime","SpCond.uScm"))
names(POKE_storm20_09_01_SPC) = c("valuedatetime","datavalue")
POKE_storm20_09_01_turb = subset(POKE_storm20_09_01, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm20_09_01_turb) = c("valuedatetime","datavalue")

POKE_storm21_09_03_Q = subset(POKE_storm21_09_03, select = c("DateTime", "MeanDischarge"))
names(POKE_storm21_09_03_Q) = c("valuedatetime","datavalue")
POKE_storm21_09_03_NO3 = subset(POKE_storm21_09_03, select = c("DateTime","nitrateuM"))
names(POKE_storm21_09_03_NO3) = c("valuedatetime","datavalue")
POKE_storm21_09_03_fDOM = subset(POKE_storm21_09_03, select = c("DateTime","fDOM.RFU"))
names(POKE_storm21_09_03_fDOM) = c("valuedatetime","datavalue")
POKE_storm21_09_03_SPC = subset(POKE_storm21_09_03, select = c("DateTime","SpCond.uScm"))
names(POKE_storm21_09_03_SPC) = c("valuedatetime","datavalue")
POKE_storm21_09_03_turb = subset(POKE_storm21_09_03, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm21_09_03_turb) = c("valuedatetime","datavalue")

POKE_storm22a_09_07_Q = subset(POKE_storm22a_09_07, select = c("DateTime", "MeanDischarge"))
names(POKE_storm22a_09_07_Q) = c("valuedatetime","datavalue")
POKE_storm22a_09_07_NO3 = subset(POKE_storm22a_09_07, select = c("DateTime","nitrateuM"))
names(POKE_storm22a_09_07_NO3) = c("valuedatetime","datavalue")
POKE_storm22a_09_07_fDOM = subset(POKE_storm22a_09_07, select = c("DateTime","fDOM.RFU"))
names(POKE_storm22a_09_07_fDOM) = c("valuedatetime","datavalue")
POKE_storm22a_09_07_SPC = subset(POKE_storm22a_09_07, select = c("DateTime","SpCond.uScm"))
names(POKE_storm22a_09_07_SPC) = c("valuedatetime","datavalue")
POKE_storm22a_09_07_turb = subset(POKE_storm22a_09_07, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm22a_09_07_turb) = c("valuedatetime","datavalue")

POKE_storm22b_09_09_Q = subset(POKE_storm22b_09_09, select = c("DateTime", "MeanDischarge"))
names(POKE_storm22b_09_09_Q) = c("valuedatetime","datavalue")
POKE_storm22b_09_09_NO3 = subset(POKE_storm22b_09_09, select = c("DateTime","nitrateuM"))
names(POKE_storm22b_09_09_NO3) = c("valuedatetime","datavalue")
POKE_storm22b_09_09_fDOM = subset(POKE_storm22b_09_09, select = c("DateTime","fDOM.RFU"))
names(POKE_storm22b_09_09_fDOM) = c("valuedatetime","datavalue")
POKE_storm22b_09_09_SPC = subset(POKE_storm22b_09_09, select = c("DateTime","SpCond.uScm"))
names(POKE_storm22b_09_09_SPC) = c("valuedatetime","datavalue")
POKE_storm22b_09_09_turb = subset(POKE_storm22b_09_09, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm22b_09_09_turb) = c("valuedatetime","datavalue")


### Write csv ###
write.csv(POKE_storm1_06_09, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm1_06_09.csv")
write.csv(POKE_storm1_06_09_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm1_06_09_Q.csv")
write.csv(POKE_storm1_06_09_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm1_06_09_NO3.csv")
write.csv(POKE_storm1_06_09_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm1_06_09_fDOM.csv")
write.csv(POKE_storm1_06_09_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm1_06_09_SPC.csv")
write.csv(POKE_storm1_06_09_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm1_06_09_turb.csv")

write.csv(POKE_storm2_06_12, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm2_06_12.csv")
write.csv(POKE_storm2_06_12_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm2_06_12_Q.csv")
write.csv(POKE_storm2_06_12_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm2_06_12_NO3.csv")
write.csv(POKE_storm2_06_12_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm2_06_12_fDOM.csv")
write.csv(POKE_storm2_06_12_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm2_06_12_SPC.csv")
write.csv(POKE_storm2_06_12_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm2_06_12_turb.csv")

write.csv(POKE_storm3_06_15, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm3_06_15.csv")
write.csv(POKE_storm3_06_15_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm3_06_15_Q.csv")
write.csv(POKE_storm3_06_15_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm3_06_15_NO3.csv")
write.csv(POKE_storm3_06_15_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm3_06_15_fDOM.csv")
write.csv(POKE_storm3_06_15_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm3_06_15_SPC.csv")
write.csv(POKE_storm3_06_15_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm3_06_15_turb.csv")

write.csv(POKE_storm4a_06_19, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4a_06_19.csv")
write.csv(POKE_storm4a_06_19_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4a_06_19_Q.csv")
write.csv(POKE_storm4a_06_19_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4a_06_19_NO3.csv")
write.csv(POKE_storm4a_06_19_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4a_06_19_fDOM.csv")
write.csv(POKE_storm4a_06_19_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4a_06_19_SPC.csv")
write.csv(POKE_storm4a_06_19_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4a_06_19_turb.csv")

write.csv(POKE_storm4b_06_20, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4b_06_20.csv")
write.csv(POKE_storm4b_06_20_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4b_06_20_Q.csv")
write.csv(POKE_storm4b_06_20_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4b_06_20_NO3.csv")
write.csv(POKE_storm4b_06_20_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4b_06_20_fDOM.csv")
write.csv(POKE_storm4b_06_20_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4b_06_20_SPC.csv")
write.csv(POKE_storm4b_06_20_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4b_06_20_turb.csv")

write.csv(POKE_storm4c_06_21, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4c_06_21.csv")
write.csv(POKE_storm4c_06_21_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4c_06_21_Q.csv")
write.csv(POKE_storm4c_06_21_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4c_06_21_NO3.csv")
write.csv(POKE_storm4c_06_21_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4c_06_21_fDOM.csv")
write.csv(POKE_storm4c_06_21_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4c_06_21_SPC.csv")
write.csv(POKE_storm4c_06_21_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm4c_06_21_turb.csv")

write.csv(POKE_storm5_06_22, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm5_06_22.csv")
write.csv(POKE_storm5_06_22_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm5_06_22_Q.csv")
write.csv(POKE_storm5_06_22_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm5_06_22_NO3.csv")
write.csv(POKE_storm5_06_22_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm5_06_22_fDOM.csv")
write.csv(POKE_storm5_06_22_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm5_06_22_SPC.csv")
write.csv(POKE_storm5_06_22_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm5_06_22_turb.csv")

write.csv(POKE_storm6_06_29, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm6_06_29.csv")
write.csv(POKE_storm6_06_29_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm6_06_29_Q.csv")
write.csv(POKE_storm6_06_29_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm6_06_29_NO3.csv")
write.csv(POKE_storm6_06_29_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm6_06_29_fDOM.csv")
write.csv(POKE_storm6_06_29_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm6_06_29_SPC.csv")
write.csv(POKE_storm6_06_29_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm6_06_29_turb.csv")

write.csv(POKE_storm7_07_04, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm7_07_04.csv")
write.csv(POKE_storm7_07_04_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm7_07_04_Q.csv")
write.csv(POKE_storm7_07_04_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm7_07_04_NO3.csv")
write.csv(POKE_storm7_07_04_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm7_07_04_fDOM.csv")
write.csv(POKE_storm7_07_04_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm7_07_04_SPC.csv")
write.csv(POKE_storm7_07_04_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm7_07_04_turb.csv")

write.csv(POKE_storm8_07_09, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm8_07_09.csv")
write.csv(POKE_storm8_07_09_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm8_07_09_Q.csv")
write.csv(POKE_storm8_07_09_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm8_07_09_NO3.csv")
write.csv(POKE_storm8_07_09_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm8_07_09_fDOM.csv")
write.csv(POKE_storm8_07_09_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm8_07_09_SPC.csv")
write.csv(POKE_storm8_07_09_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm8_07_09_turb.csv")

write.csv(POKE_storm9_07_12, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm9_07_12.csv")
write.csv(POKE_storm9_07_12_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm9_07_12_Q.csv")
write.csv(POKE_storm9_07_12_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm9_07_12_NO3.csv")
write.csv(POKE_storm9_07_12_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm9_07_12_fDOM.csv")
write.csv(POKE_storm9_07_12_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm9_07_12_SPC.csv")
write.csv(POKE_storm9_07_12_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm9_07_12_turb.csv")

write.csv(POKE_storm10_07_16, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm10_07_16.csv")
write.csv(POKE_storm10_07_16_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm10_07_16_Q.csv")
write.csv(POKE_storm10_07_16_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm10_07_16_NO3.csv")
write.csv(POKE_storm10_07_16_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm10_07_16_fDOM.csv")
write.csv(POKE_storm10_07_16_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm10_07_16_SPC.csv")
write.csv(POKE_storm10_07_16_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm10_07_16_turb.csv")

write.csv(POKE_storm11_07_18, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm11_07_18.csv")
write.csv(POKE_storm11_07_18_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm11_07_18_Q.csv")
write.csv(POKE_storm11_07_18_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm11_07_18_NO3.csv")
write.csv(POKE_storm11_07_18_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm11_07_18_fDOM.csv")
write.csv(POKE_storm11_07_18_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm11_07_18_SPC.csv")
write.csv(POKE_storm11_07_18_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm11_07_18_turb.csv")

write.csv(POKE_storm12_07_20, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm12_07_20.csv")
write.csv(POKE_storm12_07_20_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm12_07_20_Q.csv")
write.csv(POKE_storm12_07_20_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm12_07_20_NO3.csv")
write.csv(POKE_storm12_07_20_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm12_07_20_fDOM.csv")
write.csv(POKE_storm12_07_20_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm12_07_20_SPC.csv")
write.csv(POKE_storm12_07_20_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm12_07_20_turb.csv")

write.csv(POKE_storm13_07_24, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm13_07_24.csv")
write.csv(POKE_storm13_07_24_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm13_07_24_Q.csv")
write.csv(POKE_storm13_07_24_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm13_07_24_NO3.csv")
write.csv(POKE_storm13_07_24_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm13_07_24_fDOM.csv")
write.csv(POKE_storm13_07_24_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm13_07_24_SPC.csv")
write.csv(POKE_storm13_07_24_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm13_07_24_turb.csv")

write.csv(POKE_storm14_07_26, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm14_07_26.csv")
write.csv(POKE_storm14_07_26_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm14_07_26_Q.csv")
write.csv(POKE_storm14_07_26_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm14_07_26_NO3.csv")
write.csv(POKE_storm14_07_26_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm14_07_26_fDOM.csv")
write.csv(POKE_storm14_07_26_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm14_07_26_SPC.csv")
write.csv(POKE_storm14_07_26_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm14_07_26_turb.csv")

write.csv(POKE_storm15_08_02, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm15_08_02.csv")
write.csv(POKE_storm15_08_02_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm15_08_02_Q.csv")
write.csv(POKE_storm15_08_02_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm15_08_02_NO3.csv")
write.csv(POKE_storm15_08_02_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm15_08_02_fDOM.csv")
write.csv(POKE_storm15_08_02_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm15_08_02_SPC.csv")
write.csv(POKE_storm15_08_02_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm15_08_02_turb.csv")

write.csv(POKE_storm16_08_12, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm16_08_12.csv")
write.csv(POKE_storm16_08_12_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm16_08_12_Q.csv")
write.csv(POKE_storm16_08_12_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm16_08_12_NO3.csv")
write.csv(POKE_storm16_08_12_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm16_08_12_fDOM.csv")
write.csv(POKE_storm16_08_12_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm16_08_12_SPC.csv")
write.csv(POKE_storm16_08_12_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm16_08_12_turb.csv")

write.csv(POKE_storm17_08_23, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm17_08_23.csv")
write.csv(POKE_storm17_08_23_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm17_08_23_Q.csv")
write.csv(POKE_storm17_08_23_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm17_08_23_NO3.csv")
write.csv(POKE_storm17_08_23_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm17_08_23_fDOM.csv")
write.csv(POKE_storm17_08_23_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm17_08_23_SPC.csv")
write.csv(POKE_storm17_08_23_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm17_08_23_turb.csv")

write.csv(POKE_storm18_08_25, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm18_08_25.csv")
write.csv(POKE_storm18_08_25_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm18_08_25_Q.csv")
write.csv(POKE_storm18_08_25_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm18_08_25_NO3.csv")
write.csv(POKE_storm18_08_25_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm18_08_25_fDOM.csv")
write.csv(POKE_storm18_08_25_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm18_08_25_SPC.csv")
write.csv(POKE_storm18_08_25_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm18_08_25_turb.csv")

write.csv(POKE_storm19_08_27, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm19_08_27.csv")
write.csv(POKE_storm19_08_27_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm19_08_27_Q.csv")
write.csv(POKE_storm19_08_27_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm19_08_27_NO3.csv")
write.csv(POKE_storm19_08_27_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm19_08_27_fDOM.csv")
write.csv(POKE_storm19_08_27_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm19_08_27_SPC.csv")
write.csv(POKE_storm19_08_27_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm19_08_27_turb.csv")

write.csv(POKE_storm20_09_01, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm20_09_01.csv")
write.csv(POKE_storm20_09_01_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm20_09_01_Q.csv")
write.csv(POKE_storm20_09_01_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm20_09_01_NO3.csv")
write.csv(POKE_storm20_09_01_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm20_09_01_fDOM.csv")
write.csv(POKE_storm20_09_01_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm20_09_01_SPC.csv")
write.csv(POKE_storm20_09_01_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm20_09_01_turb.csv")

write.csv(POKE_storm21_09_03, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm21_09_03.csv")
write.csv(POKE_storm21_09_03_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm21_09_03_Q.csv")
write.csv(POKE_storm21_09_03_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm21_09_03_NO3.csv")
write.csv(POKE_storm21_09_03_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm21_09_03_fDOM.csv")
write.csv(POKE_storm21_09_03_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm21_09_03_SPC.csv")
write.csv(POKE_storm21_09_03_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm21_09_03_turb.csv")

write.csv(POKE_storm22a_09_07, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22a_09_07.csv")
write.csv(POKE_storm22a_09_07_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22a_09_07_Q.csv")
write.csv(POKE_storm22a_09_07_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22a_09_07_NO3.csv")
write.csv(POKE_storm22a_09_07_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22a_09_07_fDOM.csv")
write.csv(POKE_storm22a_09_07_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22a_09_07_SPC.csv")
write.csv(POKE_storm22a_09_07_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22a_09_07_turb.csv")

write.csv(POKE_storm22b_09_09, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22b_09_09.csv")
write.csv(POKE_storm22b_09_09_Q, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22b_09_09_Q.csv")
write.csv(POKE_storm22b_09_09_NO3, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22b_09_09_NO3.csv")
write.csv(POKE_storm22b_09_09_fDOM, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22b_09_09_fDOM.csv")
write.csv(POKE_storm22b_09_09_SPC, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22b_09_09_SPC.csv")
write.csv(POKE_storm22b_09_09_turb, "~/Documents/Storms/Storm_Events/2020/POKE/POKE_storm22b_09_09_turb.csv")


### MOOS ###
MOOS <- MOOS.2020.chem
MOOS$MeanDischarge <- MOOS$Q
### Import precipitation data into the *ALL document ### 
# FRCH rain gauge installed on the 11th of June. 
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 20 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

### STORMS ###
# Storm 1 #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-21 00:00:00","2020-07-10 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-21 0:00:00","2020-07-10 00:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-20 19:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-28 08:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm1_06_20 = MOOS[MOOS$DateTime > as.POSIXct("2020-06-20 19:00:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2020-06-28 00:00:00", tz="America/Anchorage"),]
plot(MOOS_storm1_06_20$MeanDischarge ~ as.POSIXct(MOOS_storm1_06_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,4200), col="blue", main="MOOS 200620 storm 1",
     xlim = as.POSIXct(c("2020-06-20 0:00:00","2020-07-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 50 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-20 00:00:00","2020-07-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2 #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-21 00:00:00","2020-07-10 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-21 0:00:00","2020-07-10 00:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-28 10:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-01 20:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm2_06_28 = MOOS[MOOS$DateTime > as.POSIXct("2020-06-28 10:00:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2020-07-01 20:00:00", tz="America/Anchorage"),]
plot(MOOS_storm2_06_28$MeanDischarge ~ as.POSIXct(MOOS_storm2_06_28$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1800,3000), col="blue", main="MOOS 200628 storm 2",
     xlim = as.POSIXct(c("2020-06-21 0:00:00","2020-07-10 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 20 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-21 00:00:00","2020-07-10 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Alarm # Doesnt show an increase in discharge or chem = NO STORM
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-14 00:00:00","2020-07-15 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)
lines(moos.no3.final$nitrateuM * 40 ~ moos.no3.final$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-14 00:00:00","2020-07-15 01:00:00"), tz="America/Anchorage"))
lines(moos.fdom.final$fDOM.QSU * 20 ~ moos.fdom.final$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-07-14 00:00:00","2020-07-15 01:00:00"), tz="America/Anchorage"))
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-14 0:00:00","2020-07-16 00:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)

# Storm 3 #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 0:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-18 11:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-19 20:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm3_07_18 = MOOS[MOOS$DateTime > as.POSIXct("2020-07-18 11:30:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2020-07-19 20:00:00", tz="America/Anchorage"),]
plot(MOOS_storm3_07_18$MeanDischarge ~ as.POSIXct(MOOS_storm3_07_18$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1200), col="blue", main="MOOS 200718 storm 3",
     xlim = as.POSIXct(c("2020-07-16 0:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 20 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 0:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4 #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-16 00:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 0:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-20 11:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-23 20:00:00", tz="America/Anchorage"), col="purple")

MOOS_storm4_07_20 = MOOS[MOOS$DateTime > as.POSIXct("2020-07-20 11:30:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2020-07-23 20:00:00", tz="America/Anchorage"),]
plot(MOOS_storm4_07_20$MeanDischarge ~ as.POSIXct(MOOS_storm4_07_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1500), col="blue", main="MOOS 200720 storm 4",
     xlim = as.POSIXct(c("2020-07-16 0:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-16 0:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-24 00:00:00","2020-07-31 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-24 00:00:00","2020-07-31 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-26 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-29 14:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm5_07_26 = MOOS[MOOS$DateTime > as.POSIXct("2020-07-26 23:30:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2020-07-29 14:45:00", tz="America/Anchorage"),]
plot(MOOS_storm5_07_26$MeanDischarge ~ as.POSIXct(MOOS_storm5_07_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,1500), col="blue", main="MOOS 200726 storm 5",
     xlim = as.POSIXct(c("2020-07-24 00:00:00","2020-07-31 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-24 00:00:00","2020-07-31 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6a # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-08 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-08 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-01 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-02 23:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm6a_08_01 = MOOS[MOOS$DateTime > as.POSIXct("2020-08-01 20:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2020-08-02 23:45:00", tz="America/Anchorage"),]
plot(MOOS_storm6a_08_01$MeanDischarge ~ as.POSIXct(MOOS_storm6a_08_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1200), col="blue", main="MOOS 200801 storm 6a",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-08 20:00:00"), tz="America/Anchorage"))

lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 9 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 9 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-08 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6b # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-08 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-08 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-02 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-05 23:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm6b_08_02 = MOOS[MOOS$DateTime > as.POSIXct("2020-08-02 23:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2020-08-05 23:45:00", tz="America/Anchorage"),]
plot(MOOS_storm6b_08_02$MeanDischarge ~ as.POSIXct(MOOS_storm6b_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1700), col="blue", main="MOOS 200802 storm 6b",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-08 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-08 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7a # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-09 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-12 07:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm7a_08_09 = MOOS[MOOS$DateTime > as.POSIXct("2020-08-09 10:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2020-08-12 07:45:00", tz="America/Anchorage"),]
plot(MOOS_storm7a_08_09$MeanDischarge ~ as.POSIXct(MOOS_storm7a_08_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1500), col="blue", main="MOOS 200809 storm 7a",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7b # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-12 09:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-14 07:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm7b_08_12 = MOOS[MOOS$DateTime > as.POSIXct("2020-08-12 09:00:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2020-08-14 07:45:00", tz="America/Anchorage"),]
plot(MOOS_storm7b_08_12$MeanDischarge ~ as.POSIXct(MOOS_storm7b_08_12$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,1500), col="blue", main="MOOS 200812 storm 7b",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# alarm # Not showing an increase in discharge or chemistry...no storm 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-09-02 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(moos.no3.final$nitrateuM * 40 ~ moos.no3.final$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-09-02 20:00:00"), tz="America/Anchorage"))
lines(moos.fdom.final$fDOM.QSU * 20 ~ moos.fdom.final$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-09-02 20:00:00"), tz="America/Anchorage"))

par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-09-02 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-12 08:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-16 19:45:00", tz="America/Anchorage"), col="purple")

# Storm 8 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-03 0:00:00","2020-09-08 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-09-03 0:00:00","2020-09-08 23:45:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-09-03 0:00:00","2020-09-08 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-03 0:00:00","2020-09-08 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-09-06 17:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-08 18:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm8_09_06 = MOOS[MOOS$DateTime > as.POSIXct("2020-09-06 17:45:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2020-09-08 18:45:00", tz="America/Anchorage"),]
plot(MOOS_storm8_09_06$MeanDischarge ~ as.POSIXct(MOOS_storm8_09_06$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,1500), col="blue", main="MOOS 200906 storm 8",
     xlim = as.POSIXct(c("2020-09-03 0:00:00","2020-09-08 23:45:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-03 0:00:00","2020-09-08 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# Storm 9 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-08 00:00:00","2020-09-13 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-08 00:00:00","2020-09-13 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-09-09 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-13 13:45:00", tz="America/Anchorage"), col="purple")

MOOS_storm9_09_09 = MOOS[MOOS$DateTime > as.POSIXct("2020-09-09 08:15:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2020-09-13 13:45:00", tz="America/Anchorage"),]
plot(MOOS_storm9_09_09$MeanDischarge ~ as.POSIXct(MOOS_storm9_09_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,2300), col="blue", main="MOOS 200909 storm 9",
     xlim = as.POSIXct(c("2020-09-08 00:00:00","2020-09-13 20:00:00"), tz="America/Anchorage"))
lines(MOOS$nitrateuM * 40 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$SpCond.uScm * 15 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$Turbidity.FNU * 30 ~ MOOS$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-09 0:00:00","2020-09-13 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Checking to see if the rest of the data set has a storm in it and it doesnt appear so 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-13 0:00:00","2020-10-13 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-13 0:00:00","2020-10-13 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-09-09 08:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-13 18:45:00", tz="America/Anchorage"), col="purple")

# modify format and save MOOS storms #

MOOS_storm1_06_20_Q = subset(MOOS_storm1_06_20, select = c("DateTime","MeanDischarge"))
names(MOOS_storm1_06_20_Q) = c("valuedatetime","datavalue")
MOOS_storm1_06_20_NO3 = subset(MOOS_storm1_06_20, select = c("DateTime", "nitrateuM"))
names(MOOS_storm1_06_20_NO3) = c("valuedatetime","datavalue")
MOOS_storm1_06_20_fDOM = subset(MOOS_storm1_06_20, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm1_06_20_fDOM) = c("valuedatetime","datavalue")
MOOS_storm1_06_20_SPC = subset(MOOS_storm1_06_20, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm1_06_20_SPC) = c("valuedatetime","datavalue")
MOOS_storm1_06_20_turb = subset(MOOS_storm1_06_20, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm1_06_20_turb) = c("valuedatetime","datavalue")

# Storm 2 #
MOOS_storm2_06_28_Q = subset(MOOS_storm2_06_28, select = c("DateTime","MeanDischarge"))
names(MOOS_storm2_06_28_Q) = c("valuedatetime","datavalue")
MOOS_storm2_06_28_NO3 = subset(MOOS_storm2_06_28, select = c("DateTime", "nitrateuM"))
names(MOOS_storm2_06_28_NO3) = c("valuedatetime","datavalue")
MOOS_storm2_06_28_fDOM = subset(MOOS_storm2_06_28, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm2_06_28_fDOM) = c("valuedatetime","datavalue")
MOOS_storm2_06_28_SPC = subset(MOOS_storm2_06_28, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm2_06_28_SPC) = c("valuedatetime","datavalue")
MOOS_storm2_06_28_turb = subset(MOOS_storm2_06_28, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm2_06_28_turb) = c("valuedatetime","datavalue")

# Storm 3 #
MOOS_storm3_07_18_Q = subset(MOOS_storm3_07_18, select = c("DateTime","MeanDischarge"))
names(MOOS_storm3_07_18_Q) = c("valuedatetime","datavalue")
MOOS_storm3_07_18_NO3 = subset(MOOS_storm3_07_18, select = c("DateTime", "nitrateuM"))
names(MOOS_storm3_07_18_NO3) = c("valuedatetime","datavalue")
MOOS_storm3_07_18_fDOM = subset(MOOS_storm3_07_18, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm3_07_18_fDOM) = c("valuedatetime","datavalue")
MOOS_storm3_07_18_SPC = subset(MOOS_storm3_07_18, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm3_07_18_SPC) = c("valuedatetime","datavalue")
MOOS_storm3_07_18_turb = subset(MOOS_storm3_07_18, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm3_07_18_turb) = c("valuedatetime","datavalue")

# Storm 4 #
MOOS_storm4_07_20_Q = subset(MOOS_storm4_07_20, select = c("DateTime","MeanDischarge"))
names(MOOS_storm4_07_20_Q) = c("valuedatetime","datavalue")
MOOS_storm4_07_20_NO3 = subset(MOOS_storm4_07_20, select = c("DateTime", "nitrateuM"))
names(MOOS_storm4_07_20_NO3) = c("valuedatetime","datavalue")
MOOS_storm4_07_20_fDOM = subset(MOOS_storm4_07_20, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm4_07_20_fDOM) = c("valuedatetime","datavalue")
MOOS_storm4_07_20_SPC = subset(MOOS_storm4_07_20, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm4_07_20_SPC) = c("valuedatetime","datavalue")
MOOS_storm4_07_20_turb = subset(MOOS_storm4_07_20, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm4_07_20_turb) = c("valuedatetime","datavalue")

# Storm 5 #
MOOS_storm5_07_26_Q = subset(MOOS_storm5_07_26, select = c("DateTime","MeanDischarge"))
names(MOOS_storm5_07_26_Q) = c("valuedatetime","datavalue")
MOOS_storm5_07_26_NO3 = subset(MOOS_storm5_07_26, select = c("DateTime", "nitrateuM"))
names(MOOS_storm5_07_26_NO3) = c("valuedatetime","datavalue")
MOOS_storm5_07_26_fDOM = subset(MOOS_storm5_07_26, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm5_07_26_fDOM) = c("valuedatetime","datavalue")
MOOS_storm5_07_26_SPC = subset(MOOS_storm5_07_26, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm5_07_26_SPC) = c("valuedatetime","datavalue")
MOOS_storm5_07_26_turb = subset(MOOS_storm5_07_26, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm5_07_26_turb) = c("valuedatetime","datavalue")

# Storm 6a #
MOOS_storm6a_08_01_Q = subset(MOOS_storm6a_08_01, select = c("DateTime","MeanDischarge"))
names(MOOS_storm6a_08_01_Q) = c("valuedatetime","datavalue")
MOOS_storm6a_08_01_NO3 = subset(MOOS_storm6a_08_01, select = c("DateTime", "nitrateuM"))
names(MOOS_storm6a_08_01_NO3) = c("valuedatetime","datavalue")
MOOS_storm6a_08_01_fDOM = subset(MOOS_storm6a_08_01, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm6a_08_01_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6a_08_01_SPC = subset(MOOS_storm6a_08_01, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm6a_08_01_SPC) = c("valuedatetime","datavalue")
MOOS_storm6a_08_01_turb = subset(MOOS_storm6a_08_01, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm6a_08_01_turb) = c("valuedatetime","datavalue")

# Storm 6b #
MOOS_storm6b_08_02_Q = subset(MOOS_storm6b_08_02, select = c("DateTime","MeanDischarge"))
names(MOOS_storm6b_08_02_Q) = c("valuedatetime","datavalue")
MOOS_storm6b_08_02_NO3 = subset(MOOS_storm6b_08_02, select = c("DateTime", "nitrateuM"))
names(MOOS_storm6b_08_02_NO3) = c("valuedatetime","datavalue")
MOOS_storm6b_08_02_fDOM = subset(MOOS_storm6b_08_02, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm6b_08_02_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6b_08_02_SPC = subset(MOOS_storm6b_08_02, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm6b_08_02_SPC) = c("valuedatetime","datavalue")
MOOS_storm6b_08_02_turb = subset(MOOS_storm6b_08_02, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm6b_08_02_turb) = c("valuedatetime","datavalue")


# Storm 7a #
MOOS_storm7a_08_09_Q = subset(MOOS_storm7a_08_09, select = c("DateTime","MeanDischarge"))
names(MOOS_storm7a_08_09_Q) = c("valuedatetime","datavalue")
MOOS_storm7a_08_09_NO3 = subset(MOOS_storm7a_08_09, select = c("DateTime", "nitrateuM"))
names(MOOS_storm7a_08_09_NO3) = c("valuedatetime","datavalue")
MOOS_storm7a_08_09_fDOM = subset(MOOS_storm7a_08_09, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm7a_08_09_fDOM) = c("valuedatetime","datavalue")
MOOS_storm7a_08_09_SPC = subset(MOOS_storm7a_08_09, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm7a_08_09_SPC) = c("valuedatetime","datavalue")
MOOS_storm7a_08_09_turb = subset(MOOS_storm7a_08_09, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm7a_08_09_turb) = c("valuedatetime","datavalue")

# Storm 7b #
MOOS_storm7b_08_12_Q = subset(MOOS_storm7b_08_12, select = c("DateTime","MeanDischarge"))
names(MOOS_storm7b_08_12_Q) = c("valuedatetime","datavalue")
MOOS_storm7b_08_12_NO3 = subset(MOOS_storm7b_08_12, select = c("DateTime", "nitrateuM"))
names(MOOS_storm7b_08_12_NO3) = c("valuedatetime","datavalue")
MOOS_storm7b_08_12_fDOM = subset(MOOS_storm7b_08_12, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm7b_08_12_fDOM) = c("valuedatetime","datavalue")
MOOS_storm7b_08_12_SPC = subset(MOOS_storm7b_08_12, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm7b_08_12_SPC) = c("valuedatetime","datavalue")
MOOS_storm7b_08_12_turb = subset(MOOS_storm7b_08_12, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm7b_08_12_turb) = c("valuedatetime","datavalue")

# Storm 8 #
MOOS_storm8_09_06_Q = subset(MOOS_storm8_09_06, select = c("DateTime","MeanDischarge"))
names(MOOS_storm8_09_06_Q) = c("valuedatetime","datavalue")
MOOS_storm8_09_06_NO3 = subset(MOOS_storm8_09_06, select = c("DateTime", "nitrateuM"))
names(MOOS_storm8_09_06_NO3) = c("valuedatetime","datavalue")
MOOS_storm8_09_06_fDOM = subset(MOOS_storm8_09_06, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm8_09_06_fDOM) = c("valuedatetime","datavalue")
MOOS_storm8_09_06_SPC = subset(MOOS_storm8_09_06, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm8_09_06_SPC) = c("valuedatetime","datavalue")
MOOS_storm8_09_06_turb = subset(MOOS_storm8_09_06, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm8_09_06_turb) = c("valuedatetime","datavalue")

# Storm 9 #
MOOS_storm9_09_09_Q = subset(MOOS_storm9_09_09, select = c("DateTime","MeanDischarge"))
names(MOOS_storm9_09_09_Q) = c("valuedatetime","datavalue")
MOOS_storm9_09_09_NO3 = subset(MOOS_storm9_09_09, select = c("DateTime", "nitrateuM"))
names(MOOS_storm9_09_09_NO3) = c("valuedatetime","datavalue")
MOOS_storm9_09_09_fDOM = subset(MOOS_storm9_09_09, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm9_09_09_fDOM) = c("valuedatetime","datavalue")
MOOS_storm9_09_09_SPC = subset(MOOS_storm9_09_09, select = c("DateTime", "SpCond.uScm"))
names(MOOS_storm9_09_09_SPC) = c("valuedatetime","datavalue")
MOOS_storm9_09_09_turb = subset(MOOS_storm9_09_09, select = c("DateTime", "Turbidity.FNU"))
names(MOOS_storm9_09_09_turb) = c("valuedatetime","datavalue")

### Write csv ###
write.csv(MOOS_storm1_06_20, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm1_06_20.csv")
write.csv(MOOS_storm1_06_20_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm1_06_20_Q.csv")
write.csv(MOOS_storm1_06_20_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm1_06_20_NO3.csv")
write.csv(MOOS_storm1_06_20_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm1_06_20_fDOM.csv")
write.csv(MOOS_storm1_06_20_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm1_06_20_SPC.csv")
write.csv(MOOS_storm1_06_20_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm1_06_20_Turb.csv")

write.csv(MOOS_storm2_06_28, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm2_06_28.csv")
write.csv(MOOS_storm2_06_28_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm2_06_28_Q.csv")
write.csv(MOOS_storm2_06_28_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm2_06_28_NO3.csv")
write.csv(MOOS_storm2_06_28_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm2_06_28_fDOM.csv")
write.csv(MOOS_storm2_06_28_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm2_06_28_SPC.csv")
write.csv(MOOS_storm2_06_28_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm2_06_28_Turb.csv")

write.csv(MOOS_storm3_07_18, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm3_07_18.csv")
write.csv(MOOS_storm3_07_18_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm3_07_18_Q.csv")
write.csv(MOOS_storm3_07_18_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm3_07_18_NO3.csv")
write.csv(MOOS_storm3_07_18_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm3_07_18_fDOM.csv")
write.csv(MOOS_storm3_07_18_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm3_07_18_SPC.csv")
write.csv(MOOS_storm3_07_18_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm3_07_18_Turb.csv")

write.csv(MOOS_storm4_07_20, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm4_07_20.csv")
write.csv(MOOS_storm4_07_20_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm4_07_20_Q.csv")
write.csv(MOOS_storm4_07_20_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm4_07_20_NO3.csv")
write.csv(MOOS_storm4_07_20_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm4_07_20_fDOM.csv")
write.csv(MOOS_storm4_07_20_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm4_07_20_SPC.csv")
write.csv(MOOS_storm4_07_20_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm4_07_20_Turb.csv")

write.csv(MOOS_storm5_07_26, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm5_07_26.csv")
write.csv(MOOS_storm5_07_26_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm5_07_26_Q.csv")
write.csv(MOOS_storm5_07_26_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm5_07_26_NO3.csv")
write.csv(MOOS_storm5_07_26_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm5_07_26_fDOM.csv")
write.csv(MOOS_storm5_07_26_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm5_07_26_SPC.csv")
write.csv(MOOS_storm5_07_26_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm5_07_26_Turb.csv")

write.csv(MOOS_storm6a_08_01, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6a_08_01.csv")
write.csv(MOOS_storm6a_08_01_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6a_08_01_Q.csv")
write.csv(MOOS_storm6a_08_01_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6a_08_01_NO3.csv")
write.csv(MOOS_storm6a_08_01_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6a_08_01_fDOM.csv")
write.csv(MOOS_storm6a_08_01_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6a_08_01_SPC.csv")
write.csv(MOOS_storm6a_08_01_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6a_08_01_Turb.csv")

write.csv(MOOS_storm6b_08_02, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6b_08_02.csv")
write.csv(MOOS_storm6b_08_02_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6b_08_02_Q.csv")
write.csv(MOOS_storm6b_08_02_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6b_08_02_NO3.csv")
write.csv(MOOS_storm6b_08_02_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6b_08_02_fDOM.csv")
write.csv(MOOS_storm6b_08_02_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6b_08_02_SPC.csv")
write.csv(MOOS_storm6b_08_02_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm6b_08_02_Turb.csv")

write.csv(MOOS_storm7a_08_09, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7a_08_09.csv")
write.csv(MOOS_storm7a_08_09_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7a_08_09_Q.csv")
write.csv(MOOS_storm7a_08_09_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7a_08_09_NO3.csv")
write.csv(MOOS_storm7a_08_09_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7a_08_09_fDOM.csv")
write.csv(MOOS_storm7a_08_09_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7a_08_09_SPC.csv")
write.csv(MOOS_storm7a_08_09_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7a_08_09_Turb.csv")

write.csv(MOOS_storm7b_08_12, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7b_08_12.csv")
write.csv(MOOS_storm7b_08_12_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7b_08_12_Q.csv")
write.csv(MOOS_storm7b_08_12_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7b_08_12_NO3.csv")
write.csv(MOOS_storm7b_08_12_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7b_08_12_fDOM.csv")
write.csv(MOOS_storm7b_08_12_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7b_08_12_SPC.csv")
write.csv(MOOS_storm7b_08_12_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm7b_08_12_Turb.csv")

write.csv(MOOS_storm8_09_06, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm8_09_06.csv")
write.csv(MOOS_storm8_09_06_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm8_09_06_Q.csv")
write.csv(MOOS_storm8_09_06_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm8_09_06_NO3.csv")
write.csv(MOOS_storm8_09_06_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm8_09_06_fDOM.csv")
write.csv(MOOS_storm8_09_06_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm8_09_06_SPC.csv")
write.csv(MOOS_storm8_09_06_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm8_09_06_Turb.csv")

write.csv(MOOS_storm9_09_09, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm9_09_09.csv")
write.csv(MOOS_storm9_09_09_Q, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm9_09_09_Q.csv")
write.csv(MOOS_storm9_09_09_NO3, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm9_09_09_NO3.csv")
write.csv(MOOS_storm9_09_09_fDOM, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm9_09_09_fDOM.csv")
write.csv(MOOS_storm9_09_09_SPC, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm9_09_09_SPC.csv")
write.csv(MOOS_storm9_09_09_turb, "~/Documents/Storms/Storm_Events/2020/MOOS/MOOS_storm9_09_09_Turb.csv")



# CARI #
# entire record  # 
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
lines(CARI_2020$NO3 * 50 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 20 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 300 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="blue",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))

par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.3)


# Storm 1 #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-15 16:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-17 09:45:00", tz="America/Anchorage"), col="purple")

CARI_storm1_06_15 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-06-15 06:45:00", tz="America/Anchorage") &
                                CARI_2020$DateTime < as.POSIXct("2020-06-17 09:45:00", tz="America/Anchorage"),]
plot(CARI_storm1_06_15$Discharge ~ as.POSIXct(CARI_storm1_06_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 200615 storm 1",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 50 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2a #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-19 12:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-20 14:45:00", tz="America/Anchorage"), col="purple")

CARI_storm2a_06_19 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-06-19 12:45:00", tz="America/Anchorage") &
                                CARI_2020$DateTime < as.POSIXct("2020-06-20 14:45:00", tz="America/Anchorage"),]
plot(CARI_storm2a_06_19$Discharge ~ as.POSIXct(CARI_storm2a_06_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="CARI 200619 storm 2a",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 50 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2b #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-20 14:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-21 14:45:00", tz="America/Anchorage"), col="purple")

CARI_storm2b_06_20 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-06-20 14:45:00", tz="America/Anchorage") &
                                 CARI_2020$DateTime < as.POSIXct("2020-06-21 14:45:00", tz="America/Anchorage"),]
plot(CARI_storm2b_06_20$Discharge ~ as.POSIXct(CARI_storm2b_06_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="CARI 200620 storm 2b",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 50 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2c #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-21 14:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-23 05:45:00", tz="America/Anchorage"), col="purple")

CARI_storm2c_06_21 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-06-21 14:45:00", tz="America/Anchorage") &
                                 CARI_2020$DateTime < as.POSIXct("2020-06-23 05:45:00", tz="America/Anchorage"),]
plot(CARI_storm2c_06_21$Discharge ~ as.POSIXct(CARI_storm2c_06_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="CARI 200621 storm 2c",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 50 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-23 07:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-26 01:45:00", tz="America/Anchorage"), col="purple")

CARI_storm3_06_23 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-06-23 07:45:00", tz="America/Anchorage") &
                                 CARI_2020$DateTime < as.POSIXct("2020-06-26 05:45:00", tz="America/Anchorage"),]
plot(CARI_storm3_06_23$Discharge ~ as.POSIXct(CARI_storm3_06_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="CARI 200623 storm 3",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 50 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4 #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-09 10:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-11 01:45:00", tz="America/Anchorage"), col="purple")

CARI_storm4_07_09 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-07-09 10:45:00", tz="America/Anchorage") &
                                CARI_2020$DateTime < as.POSIXct("2020-07-11 01:45:00", tz="America/Anchorage"),]
plot(CARI_storm4_07_09$Discharge ~ as.POSIXct(CARI_storm4_07_09$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 200709 storm 4",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 50 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-13 05:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-15 12:45:00", tz="America/Anchorage"), col="purple")

CARI_storm5_07_13 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-07-13 05:45:00", tz="America/Anchorage") &
                                CARI_2020$DateTime < as.POSIXct("2020-07-15 12:45:00", tz="America/Anchorage"),]
plot(CARI_storm5_07_13$Discharge ~ as.POSIXct(CARI_storm5_07_13$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 200713 storm 5",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 50 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-15 0:00:00","2020-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-24 14:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-26 12:45:00", tz="America/Anchorage"), col="purple")

CARI_storm6_07_24 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-07-24 14:45:00", tz="America/Anchorage") &
                                CARI_2020$DateTime < as.POSIXct("2020-07-26 12:45:00", tz="America/Anchorage"),]
plot(CARI_storm6_07_24$Discharge ~ as.POSIXct(CARI_storm6_07_24$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 200724 storm 6",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 10 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7 #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-27 07:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-30 12:45:00", tz="America/Anchorage"), col="purple")

CARI_storm7_07_27 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-07-27 07:45:00", tz="America/Anchorage") &
                                CARI_2020$DateTime < as.POSIXct("2020-07-30 12:45:00", tz="America/Anchorage"),]
plot(CARI_storm7_07_27$Discharge ~ as.POSIXct(CARI_storm7_07_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="CARI 200727 storm 7",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 10 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8a #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-31 0:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 0:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-02 01:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-03 05:45:00", tz="America/Anchorage"), col="purple")

CARI_storm8a_08_02 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-08-02 01:45:00", tz="America/Anchorage") &
                                CARI_2020$DateTime < as.POSIXct("2020-08-03 05:45:00", tz="America/Anchorage"),]
plot(CARI_storm8a_08_02$Discharge ~ as.POSIXct(CARI_storm8a_08_02$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="CARI 200802 storm 8a",
     xlim = as.POSIXct(c("2020-07-31 0:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 10 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 0:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8b #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-31 0:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 0:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-03 05:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-08 05:45:00", tz="America/Anchorage"), col="purple")

CARI_storm8b_08_03 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-08-03 05:45:00", tz="America/Anchorage") &
                                 CARI_2020$DateTime < as.POSIXct("2020-08-08 05:45:00", tz="America/Anchorage"),]
plot(CARI_storm8b_08_03$Discharge ~ as.POSIXct(CARI_storm8b_08_03$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,4500), col="blue", main="CARI 200803 storm 8b",
     xlim = as.POSIXct(c("2020-07-31 0:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 10 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-31 0:00:00","2020-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9 #
plot(CARI_2020$Discharge ~ CARI_2020$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-31 0:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-31 0:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-07 01:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-08 02:45:00", tz="America/Anchorage"), col="purple")

CARI_storm9_09_07 = CARI_2020[CARI_2020$DateTime > as.POSIXct("2020-09-07 01:45:00", tz="America/Anchorage") &
                                 CARI_2020$DateTime < as.POSIXct("2020-09-08 02:45:00", tz="America/Anchorage"),]
plot(CARI_storm9_09_07$Discharge ~ as.POSIXct(CARI_storm9_09_07$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,750), col="blue", main="CARI 200907 storm 9",
     xlim = as.POSIXct(c("2020-08-31 0:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$NO3 * 10 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$fDOM * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$SpCond * 2 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2020$Turb * 100 ~ CARI_2020$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2020-05-01 0:00:00","2020-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-31 0:00:00","2020-09-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# NO3 fDOM SPC Turb #

CARI_storm1_06_15_Q = subset(CARI_storm1_06_15, select = c("DateTime","Discharge"))
names(CARI_storm1_06_15_Q) = c("valuedatetime","datavalue")
CARI_storm1_06_15_NO3 = subset(CARI_storm1_06_15, select = c("DateTime", "NO3"))
names(CARI_storm1_06_15_NO3) = c("valuedatetime","datavalue")
CARI_storm1_06_15_fDOM = subset(CARI_storm1_06_15, select = c("DateTime","fDOM"))
names(CARI_storm1_06_15_fDOM) = c("valuedatetime","datavalue")
CARI_storm1_06_15_SPC = subset(CARI_storm1_06_15, select = c("DateTime", "SpCond"))
names(CARI_storm1_06_15_SPC) = c("valuedatetime","datavalue")
CARI_storm1_06_15_turb = subset(CARI_storm1_06_15, select = c("DateTime", "Turb"))
names(CARI_storm1_06_15_turb) = c("valuedatetime","datavalue")

CARI_storm2a_06_19_Q = subset(CARI_storm2a_06_19, select = c("DateTime","Discharge"))
names(CARI_storm2a_06_19_Q) = c("valuedatetime","datavalue")
CARI_storm2a_06_19_NO3 = subset(CARI_storm2a_06_19, select = c("DateTime", "NO3"))
names(CARI_storm2a_06_19_NO3) = c("valuedatetime","datavalue")
CARI_storm2a_06_19_fDOM = subset(CARI_storm2a_06_19, select = c("DateTime","fDOM"))
names(CARI_storm2a_06_19_fDOM) = c("valuedatetime","datavalue")
CARI_storm2a_06_19_SPC = subset(CARI_storm2a_06_19, select = c("DateTime", "SpCond"))
names(CARI_storm2a_06_19_SPC) = c("valuedatetime","datavalue")
CARI_storm2a_06_19_turb = subset(CARI_storm2a_06_19, select = c("DateTime", "Turb"))
names(CARI_storm2a_06_19_turb) = c("valuedatetime","datavalue")

CARI_storm2b_06_20_Q = subset(CARI_storm2b_06_20, select = c("DateTime","Discharge"))
names(CARI_storm2b_06_20_Q) = c("valuedatetime","datavalue")
CARI_storm2b_06_20_NO3 = subset(CARI_storm2b_06_20, select = c("DateTime", "NO3"))
names(CARI_storm2b_06_20_NO3) = c("valuedatetime","datavalue")
CARI_storm2b_06_20_fDOM = subset(CARI_storm2b_06_20, select = c("DateTime","fDOM"))
names(CARI_storm2b_06_20_fDOM) = c("valuedatetime","datavalue")
CARI_storm2b_06_20_SPC = subset(CARI_storm2b_06_20, select = c("DateTime", "SpCond"))
names(CARI_storm2b_06_20_SPC) = c("valuedatetime","datavalue")
CARI_storm2b_06_20_turb = subset(CARI_storm2b_06_20, select = c("DateTime", "Turb"))
names(CARI_storm2b_06_20_turb) = c("valuedatetime","datavalue")

CARI_storm2c_06_21_Q = subset(CARI_storm2c_06_21, select = c("DateTime","Discharge"))
names(CARI_storm2c_06_21_Q) = c("valuedatetime","datavalue")
CARI_storm2c_06_21_NO3 = subset(CARI_storm2c_06_21, select = c("DateTime", "NO3"))
names(CARI_storm2c_06_21_NO3) = c("valuedatetime","datavalue")
CARI_storm2c_06_21_fDOM = subset(CARI_storm2c_06_21, select = c("DateTime","fDOM"))
names(CARI_storm2c_06_21_fDOM) = c("valuedatetime","datavalue")
CARI_storm2c_06_21_SPC = subset(CARI_storm2c_06_21, select = c("DateTime", "SpCond"))
names(CARI_storm2c_06_21_SPC) = c("valuedatetime","datavalue")
CARI_storm2c_06_21_turb = subset(CARI_storm2c_06_21, select = c("DateTime", "Turb"))
names(CARI_storm2c_06_21_turb) = c("valuedatetime","datavalue")

CARI_storm3_06_23_Q = subset(CARI_storm3_06_23, select = c("DateTime","Discharge"))
names(CARI_storm3_06_23_Q) = c("valuedatetime","datavalue")
CARI_storm3_06_23_NO3 = subset(CARI_storm3_06_23, select = c("DateTime", "NO3"))
names(CARI_storm3_06_23_NO3) = c("valuedatetime","datavalue")
CARI_storm3_06_23_fDOM = subset(CARI_storm3_06_23, select = c("DateTime","fDOM"))
names(CARI_storm3_06_23_fDOM) = c("valuedatetime","datavalue")
CARI_storm3_06_23_SPC = subset(CARI_storm3_06_23, select = c("DateTime", "SpCond"))
names(CARI_storm3_06_23_SPC) = c("valuedatetime","datavalue")
CARI_storm3_06_23_turb = subset(CARI_storm3_06_23, select = c("DateTime", "Turb"))
names(CARI_storm3_06_23_turb) = c("valuedatetime","datavalue")

CARI_storm4_07_09_Q = subset(CARI_storm4_07_09, select = c("DateTime","Discharge"))
names(CARI_storm4_07_09_Q) = c("valuedatetime","datavalue")
CARI_storm4_07_09_NO3 = subset(CARI_storm4_07_09, select = c("DateTime", "NO3"))
names(CARI_storm4_07_09_NO3) = c("valuedatetime","datavalue")
CARI_storm4_07_09_fDOM = subset(CARI_storm4_07_09, select = c("DateTime","fDOM"))
names(CARI_storm4_07_09_fDOM) = c("valuedatetime","datavalue")
CARI_storm4_07_09_SPC = subset(CARI_storm4_07_09, select = c("DateTime", "SpCond"))
names(CARI_storm4_07_09_SPC) = c("valuedatetime","datavalue")
CARI_storm4_07_09_turb = subset(CARI_storm4_07_09, select = c("DateTime", "Turb"))
names(CARI_storm4_07_09_turb) = c("valuedatetime","datavalue")

CARI_storm5_07_13_Q = subset(CARI_storm5_07_13, select = c("DateTime","Discharge"))
names(CARI_storm5_07_13_Q) = c("valuedatetime","datavalue")
CARI_storm5_07_13_NO3 = subset(CARI_storm5_07_13, select = c("DateTime", "NO3"))
names(CARI_storm5_07_13_NO3) = c("valuedatetime","datavalue")
CARI_storm5_07_13_fDOM = subset(CARI_storm5_07_13, select = c("DateTime","fDOM"))
names(CARI_storm5_07_13_fDOM) = c("valuedatetime","datavalue")
CARI_storm5_07_13_SPC = subset(CARI_storm5_07_13, select = c("DateTime", "SpCond"))
names(CARI_storm5_07_13_SPC) = c("valuedatetime","datavalue")
CARI_storm5_07_13_turb = subset(CARI_storm5_07_13, select = c("DateTime", "Turb"))
names(CARI_storm5_07_13_turb) = c("valuedatetime","datavalue")

CARI_storm6_07_24_Q = subset(CARI_storm6_07_24, select = c("DateTime","Discharge"))
names(CARI_storm6_07_24_Q) = c("valuedatetime","datavalue")
CARI_storm6_07_24_NO3 = subset(CARI_storm6_07_24, select = c("DateTime", "NO3"))
names(CARI_storm6_07_24_NO3) = c("valuedatetime","datavalue")
CARI_storm6_07_24_fDOM = subset(CARI_storm6_07_24, select = c("DateTime","fDOM"))
names(CARI_storm6_07_24_fDOM) = c("valuedatetime","datavalue")
CARI_storm6_07_24_SPC = subset(CARI_storm6_07_24, select = c("DateTime", "SpCond"))
names(CARI_storm6_07_24_SPC) = c("valuedatetime","datavalue")
CARI_storm6_07_24_turb = subset(CARI_storm6_07_24, select = c("DateTime", "Turb"))
names(CARI_storm6_07_24_turb) = c("valuedatetime","datavalue")

CARI_storm7_07_27_Q = subset(CARI_storm7_07_27, select = c("DateTime","Discharge"))
names(CARI_storm7_07_27_Q) = c("valuedatetime","datavalue")
CARI_storm7_07_27_NO3 = subset(CARI_storm7_07_27, select = c("DateTime", "NO3"))
names(CARI_storm7_07_27_NO3) = c("valuedatetime","datavalue")
CARI_storm7_07_27_fDOM = subset(CARI_storm7_07_27, select = c("DateTime","fDOM"))
names(CARI_storm7_07_27_fDOM) = c("valuedatetime","datavalue")
CARI_storm7_07_27_SPC = subset(CARI_storm7_07_27, select = c("DateTime", "SpCond"))
names(CARI_storm7_07_27_SPC) = c("valuedatetime","datavalue")
CARI_storm7_07_27_turb = subset(CARI_storm7_07_27, select = c("DateTime", "Turb"))
names(CARI_storm7_07_27_turb) = c("valuedatetime","datavalue")

CARI_storm8a_08_02_Q = subset(CARI_storm8a_08_02, select = c("DateTime","Discharge"))
names(CARI_storm8a_08_02_Q) = c("valuedatetime","datavalue")
CARI_storm8a_08_02_NO3 = subset(CARI_storm8a_08_02, select = c("DateTime", "NO3"))
names(CARI_storm8a_08_02_NO3) = c("valuedatetime","datavalue")
CARI_storm8a_08_02_fDOM = subset(CARI_storm8a_08_02, select = c("DateTime","fDOM"))
names(CARI_storm8a_08_02_fDOM) = c("valuedatetime","datavalue")
CARI_storm8a_08_02_SPC = subset(CARI_storm8a_08_02, select = c("DateTime", "SpCond"))
names(CARI_storm8a_08_02_SPC) = c("valuedatetime","datavalue")
CARI_storm8a_08_02_turb = subset(CARI_storm8a_08_02, select = c("DateTime", "Turb"))
names(CARI_storm8a_08_02_turb) = c("valuedatetime","datavalue")

CARI_storm8b_08_03_Q = subset(CARI_storm8b_08_03, select = c("DateTime","Discharge"))
names(CARI_storm8b_08_03_Q) = c("valuedatetime","datavalue")
CARI_storm8b_08_03_NO3 = subset(CARI_storm8b_08_03, select = c("DateTime", "NO3"))
names(CARI_storm8b_08_03_NO3) = c("valuedatetime","datavalue")
CARI_storm8b_08_03_fDOM = subset(CARI_storm8b_08_03, select = c("DateTime","fDOM"))
names(CARI_storm8b_08_03_fDOM) = c("valuedatetime","datavalue")
CARI_storm8b_08_03_SPC = subset(CARI_storm8b_08_03, select = c("DateTime", "SpCond"))
names(CARI_storm8b_08_03_SPC) = c("valuedatetime","datavalue")
CARI_storm8b_08_03_turb = subset(CARI_storm8b_08_03, select = c("DateTime", "Turb"))
names(CARI_storm8b_08_03_turb) = c("valuedatetime","datavalue")

CARI_storm9_09_07_Q = subset(CARI_storm9_09_07, select = c("DateTime","Discharge"))
names(CARI_storm9_09_07_Q) = c("valuedatetime","datavalue")
CARI_storm9_09_07_NO3 = subset(CARI_storm9_09_07, select = c("DateTime", "NO3"))
names(CARI_storm9_09_07_NO3) = c("valuedatetime","datavalue")
CARI_storm9_09_07_fDOM = subset(CARI_storm9_09_07, select = c("DateTime","fDOM"))
names(CARI_storm9_09_07_fDOM) = c("valuedatetime","datavalue")
CARI_storm9_09_07_SPC = subset(CARI_storm9_09_07, select = c("DateTime", "SpCond"))
names(CARI_storm9_09_07_SPC) = c("valuedatetime","datavalue")
CARI_storm9_09_07_turb = subset(CARI_storm9_09_07, select = c("DateTime", "Turb"))
names(CARI_storm9_09_07_turb) = c("valuedatetime","datavalue")

# Write csv #
write.csv(CARI_storm1_06_15, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm1_06_15.csv")
write.csv(CARI_storm1_06_15_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm1_06_15_Q.csv")
write.csv(CARI_storm1_06_15_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm1_06_15_NO3.csv")
write.csv(CARI_storm1_06_15_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm1_06_15_fDOM.csv")
write.csv(CARI_storm1_06_15_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm1_06_15_SPC.csv")
write.csv(CARI_storm1_06_15_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm1_06_15_Turb.csv")

write.csv(CARI_storm2a_06_19, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2a_06_19.csv")
write.csv(CARI_storm2a_06_19_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2a_06_19_Q.csv")
write.csv(CARI_storm2a_06_19_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2a_06_19_NO3.csv")
write.csv(CARI_storm2a_06_19_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2a_06_19_fDOM.csv")
write.csv(CARI_storm2a_06_19_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2a_06_19_SPC.csv")
write.csv(CARI_storm2a_06_19_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2a_06_19_Turb.csv")

write.csv(CARI_storm2b_06_20, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2b_06_20.csv")
write.csv(CARI_storm2b_06_20_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2b_06_20_Q.csv")
write.csv(CARI_storm2b_06_20_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2b_06_20_NO3.csv")
write.csv(CARI_storm2b_06_20_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2b_06_20_fDOM.csv")
write.csv(CARI_storm2b_06_20_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2b_06_20_SPC.csv")
write.csv(CARI_storm2b_06_20_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2b_06_20_Turb.csv")

write.csv(CARI_storm2c_06_21, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2c_06_21.csv")
write.csv(CARI_storm2c_06_21_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2c_06_21_Q.csv")
write.csv(CARI_storm2c_06_21_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2c_06_21_NO3.csv")
write.csv(CARI_storm2c_06_21_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2c_06_21_fDOM.csv")
write.csv(CARI_storm2c_06_21_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2c_06_21_SPC.csv")
write.csv(CARI_storm2c_06_21_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm2c_06_21_Turb.csv")

write.csv(CARI_storm3_06_23, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm3_06_23.csv")
write.csv(CARI_storm3_06_23_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm3_06_23_Q.csv")
write.csv(CARI_storm3_06_23_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm3_06_23_NO3.csv")
write.csv(CARI_storm3_06_23_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm3_06_23_fDOM.csv")
write.csv(CARI_storm3_06_23_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm3_06_23_SPC.csv")
write.csv(CARI_storm3_06_23_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm3_06_23_Turb.csv")

write.csv(CARI_storm4_07_09, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm4_07_09.csv")
write.csv(CARI_storm4_07_09_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm4_07_09_Q.csv")
write.csv(CARI_storm4_07_09_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm4_07_09_NO3.csv")
write.csv(CARI_storm4_07_09_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm4_07_09_fDOM.csv")
write.csv(CARI_storm4_07_09_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm4_07_09_SPC.csv")
write.csv(CARI_storm4_07_09_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm4_07_09_Turb.csv")

write.csv(CARI_storm5_07_13, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm5_07_13.csv")
write.csv(CARI_storm5_07_13_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm5_07_13_Q.csv")
write.csv(CARI_storm5_07_13_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm5_07_13_NO3.csv")
write.csv(CARI_storm5_07_13_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm5_07_13_fDOM.csv")
write.csv(CARI_storm5_07_13_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm5_07_13_SPC.csv")
write.csv(CARI_storm5_07_13_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm5_07_13_Turb.csv")

write.csv(CARI_storm6_07_24, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm6_07_24.csv")
write.csv(CARI_storm6_07_24_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm6_07_24_Q.csv")
write.csv(CARI_storm6_07_24_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm6_07_24_NO3.csv")
write.csv(CARI_storm6_07_24_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm6_07_24_fDOM.csv")
write.csv(CARI_storm6_07_24_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm6_07_24_SPC.csv")
write.csv(CARI_storm6_07_24_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm6_07_24_Turb.csv")

write.csv(CARI_storm7_07_27, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm7_07_27.csv")
write.csv(CARI_storm7_07_27_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm7_07_27_Q.csv")
write.csv(CARI_storm7_07_27_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm7_07_27_NO3.csv")
write.csv(CARI_storm7_07_27_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm7_07_27_fDOM.csv")
write.csv(CARI_storm7_07_27_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm7_07_27_SPC.csv")
write.csv(CARI_storm7_07_27_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm7_07_27_Turb.csv")

write.csv(CARI_storm8a_08_02, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8a_08_02.csv")
write.csv(CARI_storm8a_08_02_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8a_08_02_Q.csv")
write.csv(CARI_storm8a_08_02_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8a_08_02_NO3.csv")
write.csv(CARI_storm8a_08_02_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8a_08_02_fDOM.csv")
write.csv(CARI_storm8a_08_02_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8a_08_02_SPC.csv")
write.csv(CARI_storm8a_08_02_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8a_08_02_Turb.csv")

write.csv(CARI_storm8b_08_03, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8b_08_03.csv")
write.csv(CARI_storm8b_08_03_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8b_08_03_Q.csv")
write.csv(CARI_storm8b_08_03_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8b_08_03_NO3.csv")
write.csv(CARI_storm8b_08_03_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8b_08_03_fDOM.csv")
write.csv(CARI_storm8b_08_03_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8b_08_03_SPC.csv")
write.csv(CARI_storm8b_08_03_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm8b_08_03_Turb.csv")

write.csv(CARI_storm9_09_07, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm9_09_07.csv")
write.csv(CARI_storm9_09_07_Q, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm9_09_07_Q.csv")
write.csv(CARI_storm9_09_07_NO3, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm9_09_07_NO3.csv")
write.csv(CARI_storm9_09_07_fDOM, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm9_09_07_fDOM.csv")
write.csv(CARI_storm9_09_07_SPC, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm9_09_07_SPC.csv")
write.csv(CARI_storm9_09_07_turb, "~/Documents/Storms/Storm_Events/2020/CARI/CARI_storm9_09_07_Turb.csv")


# load storm data #

storm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI/", 
                              recursive=F, 
                              pattern=".csv", 
                              full.names=TRUE)

storm_list<-do.call("list", lapply(storm_file_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   header=T, row.names=1))

storm_file_list = sub("~/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list, replacement = "")
storm_file_list = sub(".csv", storm_file_list, replacement = "")
names(storm_list) = storm_file_list

for(i in 1:length(storm_list)){
  storm_list[[i]][["valuedatetime"]] = as.POSIXct(storm_list[[i]][["valuedatetime"]],
                                                  "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} # changing character format into datetime 

#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list = storm_list[c(1:60)] #60
FRCH_storm_list = storm_list[c(61:150)] #90
MOOS_storm_list = storm_list[c(151:205)] #55
POKE_storm_list = storm_list[c(206:325)]# 120
STRT_storm_list = storm_list[c(326:415)] #90
VAUL_storm_list = storm_list[c(416:500)] #85

CARI_NO3_storm_list = CARI_storm_list[c(grep("NO3", names(CARI_storm_list)))]
CARI_fDOM_storm_list = CARI_storm_list[c(grep("fDOM", names(CARI_storm_list)))]
CARI_SpCond_storm_list = CARI_storm_list[c(grep("SPC", names(CARI_storm_list)))]
CARI_turb_storm_list = CARI_storm_list[c(grep("Turb", names(CARI_storm_list)))]

FRCH_NO3_storm_list = FRCH_storm_list[c(grep("NO3", names(FRCH_storm_list)))]
FRCH_fDOM_storm_list = FRCH_storm_list[c(grep("fDOM", names(FRCH_storm_list)))]
FRCH_SpCond_storm_list = FRCH_storm_list[c(grep("SPC", names(FRCH_storm_list)))]
FRCH_turb_storm_list = FRCH_storm_list[c(grep("Turb", names(FRCH_storm_list)))]

MOOS_NO3_storm_list = MOOS_storm_list[c(grep("NO3", names(MOOS_storm_list)))]
MOOS_fDOM_storm_list = MOOS_storm_list[c(grep("fDOM", names(MOOS_storm_list)))]
MOOS_SpCond_storm_list = MOOS_storm_list[c(grep("SPC", names(MOOS_storm_list)))]
MOOS_turb_storm_list = MOOS_storm_list[c(grep("Turb", names(MOOS_storm_list)))]

POKE_NO3_storm_list = POKE_storm_list[c(grep("NO3", names(POKE_storm_list)))]
POKE_fDOM_storm_list = POKE_storm_list[c(grep("fDOM", names(POKE_storm_list)))]
POKE_SpCond_storm_list = POKE_storm_list[c(grep("SPC", names(POKE_storm_list)))]
POKE_turb_storm_list = POKE_storm_list[c(grep("turb", names(POKE_storm_list)))]

STRT_NO3_storm_list = STRT_storm_list[c(grep("NO3", names(STRT_storm_list)))]
STRT_fDOM_storm_list = STRT_storm_list[c(grep("fDOM", names(STRT_storm_list)))]
STRT_SpCond_storm_list = STRT_storm_list[c(grep("SPC", names(STRT_storm_list)))]
STRT_turb_storm_list = STRT_storm_list[c(grep("Turb", names(STRT_storm_list)))]

VAUL_NO3_storm_list = VAUL_storm_list[c(grep("NO3", names(VAUL_storm_list)))]
VAUL_fDOM_storm_list = VAUL_storm_list[c(grep("fDOM", names(VAUL_storm_list)))]
VAUL_SpCond_storm_list = VAUL_storm_list[c(grep("SPC", names(VAUL_storm_list)))]
VAUL_turb_storm_list = VAUL_storm_list[c(grep("Turb", names(VAUL_storm_list)))]

#### load burst SUNA data #

FRCHfile_list <- list.files(path="~/Documents/DoD_2020/SUNA_data/from_internal_harddrive/raw/FRCH/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

MOOSfile_list <- list.files(path="~/Documents/DoD_2020/SUNA_data/from_internal_harddrive/raw/MOOS/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

POKEfile_list <- list.files(path="~/Documents/DoD_2020/SUNA_data/from_internal_harddrive/raw/POKE/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

STRTfile_list <- list.files(path="~/Documents/DoD_2020/SUNA_data/from_internal_harddrive/raw/STRT/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

VAULfile_list <- list.files(path="~/Documents/DoD_2020/SUNA_data/from_internal_harddrive/raw/VAUL/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

### Merge all data files for sensor ###
#correct header=14

SUNA.FRCH<-do.call("rbind", lapply(FRCHfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.MOOS<-do.call("rbind", lapply(MOOSfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.POKE<-do.call("rbind", lapply(POKEfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.STRT<-do.call("rbind", lapply(STRTfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.VAUL<-do.call("rbind", lapply(VAULfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

### Variable names for SUNA output file ###
pre<-"ch"
suff<-seq(12:267)
ch<-paste(pre, suff)
SUNAnames<-c("ID", "date_yearday", "time_fhoursUTC", "nitrateuM", "nitratemgL", "abs254", 
             "abs350", "brtrace", "specave", "darkvaluefit", "inttimefac", ch, "int_TC", 
             "spec_TC", "lamp_TC", "lamptimecum", "relhum", "mainV", "lampV", "intV", 
             "mainmA", "fit1", "fit2", "fitbase1", "fitbase2", "fitRMSE", "CTDtime", 
             "CTDsal", "CTDT", "CTDdBar", "checksum")
names(SUNA.FRCH)<-SUNAnames
names(SUNA.MOOS)<-SUNAnames
names(SUNA.POKE)<-SUNAnames
names(SUNA.STRT)<-SUNAnames
names(SUNA.VAUL)<-SUNAnames
### Remove unneeded columns ###

#remove raw channel data
SUNA.FRCHr<-SUNA.FRCH[,c(1:11,268:286)]
SUNA.MOOSr<-SUNA.MOOS[,c(1:11,268:286)]
SUNA.POKEr<-SUNA.POKE[,c(1:11,268:286)]
SUNA.STRTr<-SUNA.STRT[,c(1:11,268:286)]
SUNA.VAULr<-SUNA.VAUL[,c(1:11,268:286)]

#remove dark frames. 
### <<Note: Change date below>> ###
sum(SUNA.FRCHr$ID == 'DF')
SUNA.FRCHr %>% group_by(ID) %>% tally()
SUNA.FRCHrlf<-SUNA.FRCHr[!grepl("DF", SUNA.FRCHr$ID),]

SUNA.MOOSr %>% group_by(ID) %>% tally()
SUNA.MOOSrlf<-SUNA.MOOSr[!grepl("DF", SUNA.MOOSr$ID),]

SUNA.POKEr %>% group_by(ID) %>% tally()
SUNA.POKErlf<-SUNA.POKEr[!grepl("DF", SUNA.POKEr$ID),]

SUNA.STRTr %>% group_by(ID) %>% tally()
SUNA.STRTrlf<-SUNA.STRTr[!grepl("DF", SUNA.STRTr$ID),]

SUNA.VAULr %>% group_by(ID) %>% tally()
SUNA.VAULrlf<-SUNA.VAULr[!grepl("DF", SUNA.VAULr$ID),]

### Date and time reformatting ###
## FRCH ##
# create separate year and day columns
year_day <- t(sapply(SUNA.FRCHrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.FRCHrlf<-cbind(SUNA.FRCHrlf, year_day)
# combine hours and julian day into fractional days
SUNA.FRCHrlf$day_timeUTC<-SUNA.FRCHrlf$day+(SUNA.FRCHrlf$time_fhoursUTC/24)
# assign year to 2020 data
origin17 <- as.POSIXct("2019-12-31 00:00:00", tz="GMT")
SUNA.FRCHrlf$date_timeUTC<-origin17 + SUNA.FRCHrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.FRCHrlf$date_timeAK<-as.POSIXct(format(SUNA.FRCHrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.FRCHrlf$date_timeAK)
class(SUNA.FRCHrlf$date_timeAK)
tz(SUNA.FRCHrlf$date_timeAK) = "America/Anchorage"

## MOOS ##
# create separate year and day columns
year_day <- t(sapply(SUNA.MOOSrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.MOOSrlf<-cbind(SUNA.MOOSrlf, year_day)
# combine hours and julian day into fractional days
SUNA.MOOSrlf$day_timeUTC<-SUNA.MOOSrlf$day+(SUNA.MOOSrlf$time_fhoursUTC/24)
# assign year to 2020 data
origin17 <- as.POSIXct("2019-12-31 00:00:00", tz="GMT")
SUNA.MOOSrlf$date_timeUTC<-origin17 + SUNA.MOOSrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.MOOSrlf$date_timeAK<-as.POSIXct(format(SUNA.MOOSrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.MOOSrlf$date_timeAK)
class(SUNA.MOOSrlf$date_timeAK)
tz(SUNA.MOOSrlf$date_timeAK) = "America/Anchorage"
head(SUNA.MOOSrlf$date_timeAK)

## POKE ##
# create separate year and day columns
year_day <- t(sapply(SUNA.POKErlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.POKErlf<-cbind(SUNA.POKErlf, year_day)
# combine hours and julian day into fractional days
SUNA.POKErlf$day_timeUTC<-SUNA.POKErlf$day+(SUNA.POKErlf$time_fhoursUTC/24)
# assign year to 2020 data
origin17 <- as.POSIXct("2019-12-31 00:00:00", tz="GMT")
SUNA.POKErlf$date_timeUTC<-origin17 + SUNA.POKErlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.POKErlf$date_timeAK<-as.POSIXct(format(SUNA.POKErlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.POKErlf$date_timeAK)
class(SUNA.POKErlf$date_timeAK)
tz(SUNA.POKErlf$date_timeAK) = "America/Anchorage"
head(SUNA.POKErlf$date_timeAK)

## STRT ##
# create separate year and day columns
year_day <- t(sapply(SUNA.STRTrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.STRTrlf<-cbind(SUNA.STRTrlf, year_day)
# combine hours and julian day into fractional days
SUNA.STRTrlf$day_timeUTC<-SUNA.STRTrlf$day+(SUNA.STRTrlf$time_fhoursUTC/24)
# assign year to 2020 data
origin17 <- as.POSIXct("2019-12-31 00:00:00", tz="GMT")
SUNA.STRTrlf$date_timeUTC<-origin17 + SUNA.STRTrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.STRTrlf$date_timeAK<-as.POSIXct(format(SUNA.STRTrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.STRTrlf$date_timeAK)
class(SUNA.STRTrlf$date_timeAK)
tz(SUNA.STRTrlf$date_timeAK) = "America/Anchorage"
head(SUNA.STRTrlf$date_timeAK)

## VAUL ##
# create separate year and day columns
year_day <- t(sapply(SUNA.VAULrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.VAULrlf<-cbind(SUNA.VAULrlf, year_day)
# combine hours and julian day into fractional days
SUNA.VAULrlf$day_timeUTC<-SUNA.VAULrlf$day+(SUNA.VAULrlf$time_fhoursUTC/24)
# assign year to 2020 data
origin17 <- as.POSIXct("2019-12-31 00:00:00", tz="GMT")
SUNA.VAULrlf$date_timeUTC<-origin17 + SUNA.VAULrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.VAULrlf$date_timeAK<-as.POSIXct(format(SUNA.VAULrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.VAULrlf$date_timeAK)
class(SUNA.VAULrlf$date_timeAK)
tz(SUNA.VAULrlf$date_timeAK) = "America/Anchorage"
head(SUNA.VAULrlf$date_timeAK)

### reduce columns ###

SUNA.FRCH.burst = subset(SUNA.FRCHrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.MOOS.burst = subset(SUNA.MOOSrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.POKE.burst = subset(SUNA.POKErlf, select = c("date_timeAK", "nitrateuM"))
SUNA.STRT.burst = subset(SUNA.STRTrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.VAUL.burst = subset(SUNA.VAULrlf, select = c("date_timeAK", "nitrateuM"))

### rename columns ###
names(SUNA.FRCH.burst) <- c("DateTime", "nitrateuM")
names(SUNA.MOOS.burst) <- c("DateTime", "nitrateuM")
names(SUNA.POKE.burst) <- c("DateTime", "nitrateuM")
names(SUNA.STRT.burst) <- c("DateTime", "nitrateuM")
names(SUNA.VAUL.burst) <- c("DateTime", "nitrateuM")

### round to nearest 15 min ###

SUNA.FRCH.burst$DateTime = lubridate::round_date(SUNA.FRCH.burst$DateTime, "15 minutes") 
SUNA.MOOS.burst$DateTime = lubridate::round_date(SUNA.MOOS.burst$DateTime, "15 minutes") 
SUNA.POKE.burst$DateTime = lubridate::round_date(SUNA.POKE.burst$DateTime, "15 minutes") 
SUNA.STRT.burst$DateTime = lubridate::round_date(SUNA.STRT.burst$DateTime, "15 minutes") 
SUNA.VAUL.burst$DateTime = lubridate::round_date(SUNA.VAUL.burst$DateTime, "15 minutes") 

#### load burst EXO data #

### load and stitch EXO data ###

# FRCH #
FRCHfile_list <- list.files(path="~/Documents/DoD_2020/EXO_data/from_internal_harddrive/raw/FRCH/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.FRCH<-do.call("rbind", lapply(FRCHfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE, 
                                  skip = 9,
                                  header=F))
colNames <- c("Date..MM.DD.YYYY.", "Time..HH.mm.ss.", "Time..Fract..Sec.", "Site.Name" , "Cond.µS.cm" ,
              "fDOM.QSU", "fDOM.RFU", "nLF.Cond.µS.cm", "ODO...sat", "ODO...local",
              "ODO.mg.L", "Sal.psu","SpCond.µS.cm",  "TDS.mg.L", "Turbidity.FNU" ,
              "TSS.mg.L", "Wiper.Position.volt", "Temp..C", "Battery.V", "Cable.Pwr.V")

names(EXO.FRCH)<-colNames

# MOOS #
MOOSfile_list <- list.files(path="~/Documents/DoD_2020/EXO_data/from_internal_harddrive/raw/MOOS/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.MOOS<-do.call("rbind", lapply(MOOSfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE, 
                                  skip = 9,
                                  header=F))
names(EXO.MOOS)<-colNames
# POKE #
POKEfile_list <- list.files(path="~/Documents/DoD_2020/EXO_data/from_internal_harddrive/raw/POKE/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.POKE<-do.call("rbind", lapply(POKEfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.POKE)<-colNames
# STRT #
STRTfile_list <- list.files(path="~/Documents/DoD_2020/EXO_data/from_internal_harddrive/raw/STRT/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.STRT<-do.call("rbind", lapply(STRTfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.STRT)<-colNames
# VAUL #
VAULfile_list <- list.files(path="~/Documents/DoD_2020/EXO_data/from_internal_harddrive/raw/VAUL/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.VAUL<-do.call("rbind", lapply(VAULfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.VAUL)<-colNames

## FRCH ##
# put date and time in same column
EXO.FRCH$date_time = paste(EXO.FRCH$Date..MM.DD.YYYY., EXO.FRCH$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.FRCH$date_timeET<-mdy_hms(EXO.FRCH$date_time)
# convert to Alaska Time
EXO.FRCH$date_timeAK<-with_tz(EXO.FRCH$date_timeET, tz="America/Anchorage")
head(EXO.FRCH)
class(EXO.FRCH$date_timeAK)
tz(EXO.FRCH$date_timeAK)

## MOOS ##
# put date and time in same column
EXO.MOOS$date_time = paste(EXO.MOOS$Date..MM.DD.YYYY., EXO.MOOS$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.MOOS$date_timeET<-mdy_hms(EXO.MOOS$date_time)
# convert to Alaska Time
EXO.MOOS$date_timeAK<-with_tz(EXO.MOOS$date_timeET, tz="America/Anchorage")
head(EXO.MOOS)
class(EXO.MOOS$date_timeAK)
tz(EXO.MOOS$date_timeAK)

## POKE ##
# put date and time in same column
EXO.POKE$date_time = paste(EXO.POKE$Date..MM.DD.YYYY., EXO.POKE$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.POKE$date_timeET<-mdy_hms(EXO.POKE$date_time)
# convert to Alaska Time
EXO.POKE$date_timeAK<-with_tz(EXO.POKE$date_timeET, tz="America/Anchorage")
head(EXO.POKE)
class(EXO.POKE$date_timeAK)
tz(EXO.POKE$date_timeAK)

## STRT ##
# put date and time in same column
EXO.STRT$date_time = paste(EXO.STRT$Date..MM.DD.YYYY., EXO.STRT$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.STRT$date_timeET<-mdy_hms(EXO.STRT$date_time)
# convert to Alaska Time
EXO.STRT$date_timeAK<-with_tz(EXO.STRT$date_timeET, tz="America/Anchorage")
head(EXO.STRT)
class(EXO.STRT$date_timeAK)
tz(EXO.STRT$date_timeAK)

## VAUL ##
# put date and time in same column
EXO.VAUL$date_time = paste(EXO.VAUL$Date..MM.DD.YYYY., EXO.VAUL$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.VAUL$date_timeET<-mdy_hms(EXO.VAUL$date_time)
# convert to Alaska Time
EXO.VAUL$date_timeAK<-with_tz(EXO.VAUL$date_timeET, tz="America/Anchorage")
head(EXO.VAUL)
class(EXO.VAUL$date_timeAK)
tz(EXO.VAUL$date_timeAK)

### reduce columns ###

EXO.FRCH.burst = subset(EXO.FRCH, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.MOOS.burst = subset(EXO.MOOS, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.POKE.burst = subset(EXO.POKE, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.STRT.burst = subset(EXO.STRT, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.VAUL.burst = subset(EXO.VAUL, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))

###  rename columns ###
names(EXO.FRCH.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.MOOS.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.POKE.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.STRT.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.VAUL.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")

### round to nearest 15 min ###

EXO.FRCH.burst$DateTime = lubridate::round_date(EXO.FRCH.burst$DateTime, "15 minutes") 
EXO.MOOS.burst$DateTime = lubridate::round_date(EXO.MOOS.burst$DateTime, "15 minutes") 
EXO.POKE.burst$DateTime = lubridate::round_date(EXO.POKE.burst$DateTime, "15 minutes") 
EXO.STRT.burst$DateTime = lubridate::round_date(EXO.STRT.burst$DateTime, "15 minutes") 
EXO.VAUL.burst$DateTime = lubridate::round_date(EXO.VAUL.burst$DateTime, "15 minutes") 

#### match NAs in DOD 2020 to bursts ####

## NO3 ##
#temp= inner_join(SUNA.FRCH.burst, subset(FRCH, select=c("DateTime", "nitrateuM")), by= "DateTime")
#temp$nitrateuM = ifelse(is.na(temp$nitrateuM), NA, temp$nitrateuM)
#SUNA.FRCH.burst$nitrateuM = temp$nitrateuM # not the same amount of rows 

#temp= inner_join(SUNA.C3.burst, subset(C3, select=c("date_timeAK", "nitrate_uM")), by= "date_timeAK")
#temp$nitrateuM = ifelse(is.na(temp$nitrate_uM), NA, temp$nitrateuM)
#SUNA.C3.burst$nitrateuM = temp$nitrateuM


#### save clean-ish burst data ####

write_csv(SUNA.FRCH.burst, "~/Documents/DoD_2020/Stitched_data/SUNA.FRCH.burst.csv")
write_csv(SUNA.MOOS.burst, "~/Documents/DoD_2020/Stitched_data/SUNA.MOOS.burst.csv")
write_csv(SUNA.POKE.burst, "~/Documents/DoD_2020/Stitched_data/SUNA.POKE.burst.csv")
write_csv(SUNA.STRT.burst, "~/Documents/DoD_2020/Stitched_data/SUNA.STRT.burst.csv")
write_csv(SUNA.VAUL.burst, "~/Documents/DoD_2020/Stitched_data/SUNA.VAUL.burst.csv")

write_csv(EXO.FRCH.burst, "~/Documents/DoD_2020/Stitched_data/EXO.FRCH.burst.csv")
write_csv(EXO.MOOS.burst, "~/Documents/DoD_2020/Stitched_data/EXO.MOOS.burst.csv")
write_csv(EXO.POKE.burst, "~/Documents/DoD_2020/Stitched_data/EXO.POKE.burst.csv")
write_csv(EXO.STRT.burst, "~/Documents/DoD_2020/Stitched_data/EXO.STRT.burst.csv")
write_csv(EXO.VAUL.burst, "~/Documents/DoD_2020/Stitched_data/EXO.VAUL.burst.csv")


#### join burst and storm data ####

### NO3 ###

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]] = inner_join(FRCH_NO3_storm_list[[i]], SUNA.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]] = inner_join(MOOS_NO3_storm_list[[i]], SUNA.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]] = inner_join(POKE_NO3_storm_list[[i]], SUNA.POKE.burst, by=c("valuedatetime" = "DateTime"))
}


for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]] = inner_join(STRT_NO3_storm_list[[i]], SUNA.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]] = inner_join(VAUL_NO3_storm_list[[i]], SUNA.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]] = inner_join(FRCH_fDOM_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]] = inner_join(MOOS_fDOM_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]] = inner_join(POKE_fDOM_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]] = inner_join(STRT_fDOM_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]] = inner_join(VAUL_fDOM_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]] = inner_join(FRCH_SpCond_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]] = inner_join(MOOS_SpCond_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]] = inner_join(POKE_SpCond_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]] = inner_join(STRT_SpCond_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]] = inner_join(VAUL_SpCond_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#Turb
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]] = inner_join(FRCH_turb_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]] = inner_join(MOOS_turb_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]] = inner_join(POKE_turb_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]] = inner_join(STRT_turb_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}


for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]] = inner_join(VAUL_turb_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

# save storm with burst data #

saveRDS(FRCH_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/FRCH_NO3_storm_list.RData")
saveRDS(MOOS_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/MOOS_NO3_storm_list.RData")
saveRDS(POKE_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/POKE_NO3_storm_list.RData")
saveRDS(STRT_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/STRT_NO3_storm_list.RData")
saveRDS(VAUL_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/VAUL_NO3_storm_list.RData")

saveRDS(FRCH_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/FRCH_fDOM_storm_list.RData")
saveRDS(MOOS_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/MOOS_fDOM_storm_list.RData")
saveRDS(POKE_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/POKE_fDOM_storm_list.RData")
saveRDS(STRT_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/STRT_fDOM_storm_list.RData")
saveRDS(VAUL_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/VAUL_fDOM_storm_list.RData")

saveRDS(FRCH_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/FRCH_SPC_storm_list.RData")
saveRDS(MOOS_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/MOOS_SPC_storm_list.RData")
saveRDS(POKE_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/POKE_SPC_storm_list.RData")
saveRDS(STRT_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/STRT_SPC_storm_list.RData")
saveRDS(VAUL_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/VAUL_SPC_storm_list.RData")

saveRDS(FRCH_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/FRCH_turb_storm_list.RData")
saveRDS(MOOS_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/MOOS_turb_storm_list.RData")
saveRDS(POKE_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/POKE_turb_storm_list.RData")
saveRDS(STRT_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/STRT_turb_storm_list.RData")
saveRDS(VAUL_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2020/VAUL_turb_storm_list.RData")





######################################################### 2021 ##########################################
### Load from local machine ###
EXO.2021 <- read_csv("~/Documents/DoD_2021/EXO_data/from_internal_harddrive/processed/EXO.processed.csv")

names(EXO.2021)[names(EXO.2021) == 'site.ID'] <- 'Site' # renaming columns to match
EXO.2021$DateTime <- as.POSIXct(paste(EXO.2021$Date, EXO.2021$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")

Q.2021 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2021/Q_2021.csv")
attributes(Q.2021$DateTime)$tzone <- 'America/Anchorage'
attributes(Q.2021$day)$tzone <- 'America/Anchorage'

EXO.2021 <- EXO.2021[,-c(1:4,6,9:13,15,17:23)] # eliminate columns that are not needed 
EXO.2021 <- EXO.2021[, c(6,1,2,3,4,5)] # reorder column headers

EXO.Q.2021 <- full_join(EXO.2021, Q.2021)

SUNA.2021 <- read_csv("~/Documents/DoD_2021/SUNA_data/from_internal_harddrive/processed/SUNA.processed.csv")
SUNA.2021 <- SUNA.2021[, -(14:269)] # Remove channels
names(SUNA.2021)[names(SUNA.2021) == 'site.ID'] <- 'Site' # renaming columns to match
names(SUNA.2021)[names(SUNA.2021) == 'datetimeAK'] <- 'DateTime' # renaming columns to match
attributes(SUNA.2021$DateTime)$tzone <- 'America/Anchorage'
#SUNA.2021$day <- as.Date(SUNA.2021$day)
SUNA.2021 <- SUNA.2021[,-c(1,3:5,8:36,38,39)]

SUNA.2021$DateTime <- lubridate::floor_date(SUNA.2021$DateTime, "15 minutes")


DOD.2021 <- full_join(EXO.Q.2021, SUNA.2021) # contains burst 

write_csv(DOD.2021, "~/Documents/DoD_Discharge/Discharge_Chem/2021/DOD.2021.csv")

#SUNA.2021$julian <- yday(SUNA.2021$DateTime)
#write.csv(SUNA.2021, "~/Documents/DoD_Discharge/Discharge_Chem/2021/no3.2021.daily.csv")

CARI_2021 <- read_csv("~/Documents/NEON/CARI/WaterQuality2021.csv", 
                      col_types = cols(Discharge = col_double(), 
                                       fDOM = col_double(), NO3 = col_double(), 
                                       SpCond = col_double(), Turb = col_double()))
attributes(CARI_2021$DateTime)$tzone <- "America/Anchorage"

CARI_2021$day = format(as.POSIXct(CARI_2021$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
attributes(CARI_2021$DateTime)$tzone <- 'America/Anchorage'
CARI_2021$day = as.POSIXct(CARI_2021$day, "%Y-%m-%d", tz="America/Anchorage")
cari.final.discharge.2021 <- CARI_2021[,-c(4:8)]

CARI.daily.2021 = with(CARI_2021, tapply(Discharge, list(day, Site), mean))
CARI.daily.2021 = as.data.frame(CARI.daily.2021)

CARI.Q.2021 = as.data.frame(CARI.daily.2021$CARI)
CARI.Q.2021$day = as.Date(rownames(CARI.daily.2021))
names(CARI.Q.2021) = c("Discharge_Lsec", "day")


# subset data by site #
FRCH.2021 <-  subset(DOD.2021, Site == "FRCH")
head(FRCH.2021$DateTime)
STRT.2021 = subset(DOD.2021, Site == "STRT")
attributes(STRT.2021$DateTime)$tzone <- 'America/Anchorage'
head(STRT.2021$DateTime)
POKE.2021 = subset(DOD.2021, Site == "POKE")
attributes(POKE.2021$DateTime)$tzone <- 'America/Anchorage'
head(POKE.2021$DateTime)
VAUL.2021 = subset(DOD.2021, Site == "VAUL")
attributes(VAUL.2021$DateTime)$tzone <- 'America/Anchorage'
head(VAUL.2021$DateTime)
MOOS.2021 = subset(DOD.2021, Site == "MOOS")
attributes(MOOS.2021$DateTime)$tzone <- 'America/Anchorage'
head(MOOS.2021$DateTime)

frch.final.discharge.2021 <- subset(Q.2021, Site == "FRCH")
attributes(frch.final.discharge.2021$DateTime)$tzone <- 'America/Anchorage'
head(frch.final.discharge.2021$DateTime)
strt.final.discharge.2021 <- subset(Q.2021, Site == "STRT")
attributes(strt.final.discharge.2021$DateTime)$tzone <- 'America/Anchorage'
poke.final.discharge.2021 <- subset(Q.2021, Site == "POKE")
attributes(poke.final.discharge.2021$DateTime)$tzone <- 'America/Anchorage'
vaul.final.discharge.2021 <- subset(Q.2021, Site == "VAUL")
attributes(vaul.final.discharge.2021$DateTime)$tzone <- 'America/Anchorage'
moos.final.discharge.2021 <- subset(Q.2021, Site == "MOOS")
attributes(moos.final.discharge.2021$DateTime)$tzone <- 'America/Anchorage'


Q.2021$day = format(as.POSIXct(Q.2021$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
attributes(Q.2021$DateTime)$tzone <- 'America/Anchorage'
Q.2021$day = as.POSIXct(Q.2021$day, "%Y-%m-%d", tz="America/Anchorage")

Q.daily.2021 = with(Q.2021, tapply(Q, list(day, Site), mean))
Q.daily.2021 = as.data.frame(Q.daily.2021)

FRCH.Q.2021 = as.data.frame(Q.daily.2021$FRCH)
FRCH.Q.2021$day = as.Date(rownames(Q.daily.2021))
names(FRCH.Q.2021) = c("Discharge_Lsec", "day")

STRT.Q.2021 = as.data.frame(Q.daily.2021$STRT)
STRT.Q.2021$day = as.Date(rownames(Q.daily.2021))
names(STRT.Q.2021) = c("Discharge_Lsec", "day")

POKE.Q.2021 = as.data.frame(Q.daily.2021$POKE)
POKE.Q.2021$day = as.Date(rownames(Q.daily.2021))
names(POKE.Q.2021) = c("Discharge_Lsec", "day")

VAUL.Q.2021 = as.data.frame(Q.daily.2021$VAUL)
VAUL.Q.2021$day = as.Date(rownames(Q.daily.2021))
names(VAUL.Q.2021) = c("Discharge_Lsec", "day")

MOOS.Q.2021 = as.data.frame(Q.daily.2021$MOOS)
MOOS.Q.2021$day = as.Date(rownames(Q.daily.2021))
names(MOOS.Q.2021) = c("Discharge_Lsec", "day")

#write_csv(FRCH.Q.2021, "~/Documents/DoD_Discharge/Discharge_Chem/2021/Daily_Q_day/FRCH/FRCH_Q_2021.csv")
#write_csv(STRT.Q.2021, "~/Documents/DoD_Discharge/Discharge_Chem/2021/Daily_Q_day/STRT/STRT_Q_2021.csv")
#write_csv(POKE.Q.2021, "~/Documents/DoD_Discharge/Discharge_Chem/2021/Daily_Q_day/POKE/POKE_Q_2021.csv")
#write_csv(VAUL.Q.2021, "~/Documents/DoD_Discharge/Discharge_Chem/2021/Daily_Q_day/VAUL/VAUL_Q_2021.csv")
#write_csv(MOOS.Q.2021, "~/Documents/DoD_Discharge/Discharge_Chem/2021/Daily_Q_day/MOOS/MOOS_Q_2021.csv")

#data wrangling - fill gaps #
# fxn #
fillgaps15 = function(df, dat, datquotes, largegap.num){
  ## Document gaps >= largegap.num (1 largegap.num = 15 min) ##
  # (note - the criteria of what constitutes a "large" gap should be reevaluated depending on the trend being characterized)
  is.na.rle <- rle(is.na(dat))
  is.na.rle$values <- is.na.rle$values & is.na.rle$lengths >= (largegap.num)
  biggaps = df[inverse.rle(is.na.rle), ]
  tz(biggaps$DateTime) = "America/Anchorage"
  biggaps = subset(biggaps, select = "DateTime")
  # Make univariate time series, covert to zoo, then to ts #
  ts.xts = subset(df, select = c("DateTime",datquotes))
  ts.xts<-read.zoo(ts.xts, index.column=1, format="%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
  ts.xts<-as.xts(ts.xts)
  # remove leading and trailing NAs #
  ts.xts = na.trim(ts.xts, is.na="any")
  # Apply auto.arima and kalman filter to impute missing values #
  fit2 = auto.arima(ts.xts) 
  kal = KalmanSmooth(ts.xts, fit2$model)
  id.na<-which(is.na(ts.xts))
  for(i in id.na) 
    ts.xts[i]<-fit2$model$Z %*% kal$smooth[i,]
  # revert to dataframe #
  ts.df = as.data.frame((ts.xts))
  ts.df$date_timeAK = as.POSIXct(row.names(ts.df), tz="America/Anchorage")
  names(ts.df) = c("dat_filled", "DateTime")
  # remove large gaps # 
  ts.df$dat_filled[ts.df$date_timeAK %in% as.POSIXct(biggaps$DateTime)] = NA
  # Replace large gaps with linear interpolation #
  ts.df$dat_filled = na.interpolation(ts.df$dat_filled)
  ts.df = subset(ts.df, select = c("dat_filled", "DateTime"))
  return(ts.df)
}


### FRCH ###
FRCH.no3 <- subset(FRCH.2021, select = c("DateTime", "nitrateuM"))
names(FRCH.no3) = c("DateTime", "nitrateuM")

FRCH.fDOM = subset(FRCH.2021, select = c("DateTime","fDOM.QSU"))
names(FRCH.fDOM) = c("DateTime", "fDOM.QSU")

frch.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = FRCH.fDOM) # Averaging 15 minute intervals

frch.no3.1 <- cut(FRCH.no3$DateTime, breaks="15 min")
frch.no3.final <- as.data.frame(aggregate(nitrateuM ~ frch.no3.1, data = FRCH.no3, FUN = mean)) # Averaging 15 minute intervals
frch.no3.final$DateTime <-as.POSIXct(frch.no3.final$frch.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

frch.no3.final$DateTime <- lubridate::round_date(frch.no3.final$DateTime, "15 minutes") 

frch.spcond = subset(FRCH.2021, select = c("DateTime","SpCond.uScm"))
frch.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = frch.spcond) # Averaging 15 minute intervals
frch.spcond.1 <- cut(frch.spcond$DateTime, breaks = "15 min")
frch.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ frch.spcond.1, data = frch.spcond, FUN = mean)) # Averaging 15 minute intervals
frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
frch.spcond.final$DateTime <- lubridate::round_date(frch.spcond.final$DateTime, "15 minutes") 

frch.turb = subset(FRCH.2021, select = c("DateTime","Turbidity.FNU"))
frch.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = frch.turb) # Averaging 15 minute intervals
frch.turb.1 <- cut(frch.turb$DateTime, breaks = "15 min")
frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ frch.turb.1, data = frch.turb, FUN = mean)) # Averaging 15 minute intervals
frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
frch.turb.final$DateTime <- lubridate::round_date(frch.spcond.final$DateTime, "15 minutes") 

FRCH.2021.chem = left_join(frch.fdom.final, frch.final.discharge.2021, by="DateTime")
FRCH.2021.chem = left_join(FRCH.2021.chem, frch.no3.final, by="DateTime")
FRCH.2021.chem = left_join(FRCH.2021.chem, frch.spcond.final, by="DateTime")
FRCH.2021.chem = left_join(FRCH.2021.chem, frch.turb.final, by="DateTime")
FRCH.2021.chem <- FRCH.2021.chem[, -c(6,8,10)]


plot(FRCH.2021.chem$Q ~ FRCH.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2021.chem$nitrateuM * 20 ~ FRCH.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2021.chem$fDOM.QSU * 10 ~ FRCH.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))

### STRT ###
STRT.no3 <- subset(STRT.2021, select = c("DateTime", "nitrateuM"))
names(STRT.no3) = c("DateTime", "nitrateuM")

STRT.fDOM = subset(STRT.2021, select = c("DateTime","fDOM.QSU"))
names(STRT.fDOM) = c("DateTime", "fDOM.QSU")

strt.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = STRT.fDOM) # Averaging 15 minute intervals

strt.no3.1 <- cut(STRT.no3$DateTime, breaks="15 min")
strt.no3.final <- as.data.frame(aggregate(nitrateuM ~ strt.no3.1, data = STRT.no3, FUN = mean)) # Averaging 15 minute intervals
strt.no3.final$DateTime <-as.POSIXct(strt.no3.final$strt.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

strt.spcond = subset(STRT.2021, select = c("DateTime","SpCond.uScm"))
strt.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = strt.spcond) # Averaging 15 minute intervals
strt.spcond.1 <- cut(strt.spcond$DateTime, breaks = "15 min")
strt.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ strt.spcond.1, data = strt.spcond, FUN = mean)) # Averaging 15 minute intervals
strt.spcond.final$DateTime <-as.POSIXct(strt.spcond.final$strt.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

strt.turb = subset(STRT.2021, select = c("DateTime","Turbidity.FNU"))
strt.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = strt.turb) # Averaging 15 minute intervals
strt.turb.1 <- cut(strt.turb$DateTime, breaks = "15 min")
strt.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ strt.turb.1, data = strt.turb, FUN = mean)) # Averaging 15 minute intervals
strt.turb.final$DateTime <-as.POSIXct(strt.turb.final$strt.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

STRT.2021.chem = left_join(strt.fdom.final, strt.final.discharge.2021, by="DateTime")
STRT.2021.chem = left_join(STRT.2021.chem, strt.no3.final, by="DateTime")
STRT.2021.chem = left_join(STRT.2021.chem, strt.spcond.final, by="DateTime")
STRT.2021.chem = left_join(STRT.2021.chem, strt.turb.final, by="DateTime")
STRT.2021.chem <- STRT.2021.chem[, -c(6,8,10)]

plot(STRT.2021.chem$Q ~ STRT.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(STRT.2021.chem$nitrateuM * 30 ~ STRT.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(STRT.2021.chem$fDOM.QSU * 20 ~ STRT.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))


### POKE ### 
POKE.no3 <- subset(POKE.2021, select = c("DateTime", "nitrateuM"))
names(POKE.no3) = c("DateTime", "nitrateuM")

POKE.fDOM = subset(POKE.2021, select = c("DateTime","fDOM.QSU"))
names(POKE.fDOM) = c("DateTime", "fDOM.QSU")

poke.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = POKE.fDOM) # Averaging 15 minute intervals

poke.no3.1 <- cut(POKE.no3$DateTime, breaks="15 min")
poke.no3.final <- as.data.frame(aggregate(nitrateuM ~ poke.no3.1, data = POKE.no3, FUN = mean)) # Averaging 15 minute intervals
poke.no3.final$DateTime <-as.POSIXct(poke.no3.final$poke.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
poke.no3.final$DateTime <- lubridate::round_date(poke.no3.final$DateTime, "15 min")

poke.spcond = subset(POKE.2021, select = c("DateTime","SpCond.uScm"))
poke.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = poke.spcond) # Averaging 15 minute intervals
poke.spcond.1 <- cut(poke.spcond$DateTime, breaks = "15 min")
poke.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ poke.spcond.1, data = poke.spcond, FUN = mean)) # Averaging 15 minute intervals
poke.spcond.final$DateTime <-as.POSIXct(poke.spcond.final$poke.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
poke.spcond.final$DateTime <- lubridate::round_date(poke.spcond.final$DateTime, "15 min")

poke.turb = subset(POKE.2021, select = c("DateTime","Turbidity.FNU"))
poke.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = poke.turb) # Averaging 15 minute intervals
poke.turb.1 <- cut(poke.turb$DateTime, breaks = "15 min")
poke.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ poke.turb.1, data = poke.turb, FUN = mean)) # Averaging 15 minute intervals
poke.turb.final$DateTime <-as.POSIXct(poke.turb.final$poke.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
poke.turb.final$DateTime <- lubridate::round_date(poke.turb.final$DateTime, "15 min")

POKE.2021.chem = left_join(poke.fdom.final, poke.final.discharge.2021, by="DateTime")
POKE.2021.chem = left_join(POKE.2021.chem, poke.no3.final, by="DateTime")
POKE.2021.chem = left_join(POKE.2021.chem, poke.spcond.final, by="DateTime")
POKE.2021.chem = left_join(POKE.2021.chem, poke.turb.final, by="DateTime")
POKE.2021.chem <- POKE.2021.chem[, -c(6,8,10)]

plot(POKE.2021.chem$Q ~ POKE.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(POKE.2021.chem$nitrateuM * 30 ~ POKE.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(POKE.2021.chem$fDOM.QSU * 30 ~ POKE.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))

### VAUL ### 
VAUL.no3 <- subset(VAUL.2021, select = c("DateTime", "nitrateuM"))
names(VAUL.no3) = c("DateTime", "nitrateuM")

VAUL.fDOM = subset(VAUL.2021, select = c("DateTime","fDOM.QSU"))
names(VAUL.fDOM) = c("DateTime", "fDOM.QSU")

vaul.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = VAUL.fDOM) # Averaging 15 minute intervals

vaul.no3.1 <- cut(VAUL.no3$DateTime, breaks="15 min")
vaul.no3.final <- as.data.frame(aggregate(nitrateuM ~ vaul.no3.1, data = VAUL.no3, FUN = mean)) # Averaging 15 minute intervals
vaul.no3.final$DateTime <-as.POSIXct(vaul.no3.final$vaul.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
vaul.no3.final$DateTime <- lubridate::round_date(vaul.no3.final$DateTime, "15 min")

vaul.spcond = subset(VAUL.2021, select = c("DateTime","SpCond.uScm"))
vaul.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = vaul.spcond) # Averaging 15 minute intervals
vaul.spcond.1 <- cut(vaul.spcond$DateTime, breaks = "15 min")
vaul.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ vaul.spcond.1, data = vaul.spcond, FUN = mean)) # Averaging 15 minute intervals
vaul.spcond.final$DateTime <-as.POSIXct(vaul.spcond.final$vaul.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
vaul.spcond.final$DateTime <- lubridate::round_date(vaul.spcond.final$DateTime, "15 min")

vaul.turb = subset(VAUL.2021, select = c("DateTime","Turbidity.FNU"))
vaul.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = vaul.turb) # Averaging 15 minute intervals
vaul.turb.1 <- cut(vaul.turb$DateTime, breaks = "15 min")
vaul.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ vaul.turb.1, data = vaul.turb, FUN = mean)) # Averaging 15 minute intervals
vaul.turb.final$DateTime <-as.POSIXct(vaul.turb.final$vaul.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
vaul.turb.final$DateTime <- lubridate::round_date(vaul.turb.final$DateTime, "15 min")

VAUL.2021.chem = left_join(vaul.fdom.final, vaul.final.discharge.2021, by="DateTime")
VAUL.2021.chem = left_join(VAUL.2021.chem, vaul.no3.final, by="DateTime")
VAUL.2021.chem = left_join(VAUL.2021.chem, vaul.spcond.final, by="DateTime")
VAUL.2021.chem = left_join(VAUL.2021.chem, vaul.turb.final, by="DateTime")
VAUL.2021.chem <- VAUL.2021.chem[, -c(6,8,10)]

plot(VAUL.2021.chem$MeanDischarge ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(VAUL.2021.chem$nitrateuM * 20 ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(VAUL.2021.chem$fDOM.QSU * 1 ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))

### MOOS ###
MOOS.no3 <- subset(MOOS.2021, select = c("DateTime", "nitrateuM"))
names(MOOS.no3) = c("DateTime", "nitrateuM")

MOOS.fDOM = subset(MOOS.2021, select = c("DateTime","fDOM.QSU"))
names(MOOS.fDOM) = c("DateTime", "fDOM.QSU")

moos.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = MOOS.fDOM) # Averaging 15 minute intervals

moos.no3.1 <- cut(MOOS.no3$DateTime, breaks="15 min")
moos.no3.final <- as.data.frame(aggregate(nitrateuM ~ moos.no3.1, data = MOOS.no3, FUN = mean)) # Averaging 15 minute intervals
moos.no3.final$DateTime <-as.POSIXct(moos.no3.final$moos.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
moos.no3.final$DateTime <- lubridate::round_date(moos.no3.final$DateTime, "15 min")

moos.spcond = subset(MOOS.2021, select = c("DateTime","SpCond.uScm"))
moos.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = moos.spcond) # Averaging 15 minute intervals
moos.spcond.1 <- cut(moos.spcond$DateTime, breaks = "15 min")
moos.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ moos.spcond.1, data = moos.spcond, FUN = mean)) # Averaging 15 minute intervals
moos.spcond.final$DateTime <-as.POSIXct(moos.spcond.final$moos.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
moos.spcond.final$DateTime <- lubridate::round_date(moos.spcond.final$DateTime, "15 min")

moos.turb = subset(MOOS.2021, select = c("DateTime","Turbidity.FNU"))
moos.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = moos.turb) # Averaging 15 minute intervals
moos.turb.1 <- cut(moos.turb$DateTime, breaks = "15 min")
moos.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ moos.turb.1, data = moos.turb, FUN = mean)) # Averaging 15 minute intervals
moos.turb.final$DateTime <-as.POSIXct(moos.turb.final$moos.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
moos.turb.final$DateTime <- lubridate::round_date(moos.turb.final$DateTime, "15 min")

MOOS.2021.chem = left_join(moos.fdom.final, moos.final.discharge.2021, by="DateTime")
MOOS.2021.chem = left_join(MOOS.2021.chem, moos.no3.final, by="DateTime")
MOOS.2021.chem = left_join(MOOS.2021.chem, moos.spcond.final, by="DateTime")
MOOS.2021.chem = left_join(MOOS.2021.chem, moos.turb.final, by="DateTime")
MOOS.2021.chem <- MOOS.2021.chem[, -c(6,8,10)]

plot(MOOS.2021.chem$Q ~ MOOS.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2021.chem$nitrateuM * 60 ~ MOOS.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2021.chem$fDOM.QSU * 15 ~ MOOS.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))

DOD.2021.1 <- rbind(FRCH.2021.chem, MOOS.2021.chem, POKE.2021.chem, VAUL.2021.chem, STRT.2021.chem)

# Write CSV #
#write.csv(FRCH.2021.chem, "~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2021.csv")
#write.csv(STRT.2021.chem, "~/Documents/Storms/Q_Chem/STRT/STRT_chem_2021.csv")
#write.csv(POKE.2021.chem, "~/Documents/Storms/Q_Chem/POKE/POKE_chem_2021.csv")
#write.csv(VAUL.2021.chem, "~/Documents/Storms/Q_Chem/VAUL/VAUL_chem_2021.csv")
#write.csv(MOOS.2021.chem, "~/Documents/Storms/Q_Chem/MOOS/MOOS_chem_2021.csv")
#write.csv(DOD.2021.1, "~/Documents/DoD_Discharge/Discharge_Chem/2021/DOD.2021.1.csv")

# Baseflow Separation #

any(is.na(FRCH.Q.2021$day))
any(is.na(FRCH.Q.2021$Discharge_Lsec))
FRCH.Q.2021 <- na.omit(FRCH.Q.2021) # Remove 62 NaNs  # 150 rows to 88 rows # first half of the season lost data

any(is.na(STRT.Q.2021$day))
any(is.na(STRT.Q.2021$Discharge_Lsec))
STRT.Q.2021 <- na.omit(STRT.Q.2021) # Remove 8 NaNs # 150 to 142

any(is.na(POKE.Q.2021$day))
any(is.na(POKE.Q.2021$Discharge_Lsec))
POKE.Q.2021 <- na.omit(POKE.Q.2021) # Remove 19 NaNs # 150 to 131

any(is.na(VAUL.Q.2021$day))
any(is.na(VAUL.Q.2021$Discharge_Lsec))
VAUL.Q.2021 <- na.omit(VAUL.Q.2021) # Remove 61 NaNs #150 to 89

any(is.na(MOOS.Q.2021$day))
any(is.na(MOOS.Q.2021$Discharge_Lsec))
MOOS.Q.2021 <- na.omit(MOOS.Q.2021) # Remove 62 NaNs 150 to 88 

any(is.na(CARI.Q.2021$day))
any(is.na(CARI.Q.2021$Discharge_Lsec)) 
CARI.Q.2021 <- na.omit(CARI.Q.2021) # Removed 14 rows - (160 to 132)


frch.final.discharge.2021$MeanDischarge <- frch.final.discharge.2021$Q
moos.final.discharge.2021$MeanDischarge <- moos.final.discharge.2021$Q
poke.final.discharge.2021$MeanDischarge <- poke.final.discharge.2021$Q
vaul.final.discharge.2021$MeanDischarge <- vaul.final.discharge.2021$Q
strt.final.discharge.2021$MeanDischarge <- strt.final.discharge.2021$Q

#write.csv(poke.final.discharge.2021, "~/Documents/Storms/Q_Chem/POKE/POKE_Q_2021.csv")

### examine the recursive digital filter at .9, .925, .95 levels ###
plot(frch.final.discharge.2021$MeanDischarge ~ frch.final.discharge.2021$DateTime, type = "l", xlab = "", ylab = "Q (L/sec)",
     xlim =  as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(0, 3000), col="blue")
#
plot(poke.final.discharge.2021$MeanDischarge ~ poke.final.discharge.2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,2000), col="blue")

plot(vaul.final.discharge.2021$MeanDischarge ~ vaul.final.discharge.2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,2000), col="blue")

plot(strt.final.discharge.2021$MeanDischarge ~ strt.final.discharge.2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

plot(moos.final.discharge.2021$MeanDischarge ~ moos.final.discharge.2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,4000), col="blue")

ggplot(aes(x = DateTime, y = Discharge), data = CARI_2021) +
  geom_line(color="#A6CEE3", size=1.25) +
  theme_classic() +
  ggtitle("CARI measured Q") +
  xlab("Date") +
  ylab("Discharge (L/s)") +
  xlab("")

### Hydrograph Separation ###
#
frch.final.discharge.2021.1 <- na.omit(frch.final.discharge.2021) 
strt.final.discharge.2021.1 <- na.omit(strt.final.discharge.2021)
poke.final.discharge.2021.1 <- na.omit(poke.final.discharge.2021)
vaul.final.discharge.2021.1 <- na.omit(vaul.final.discharge.2021)
moos.final.discharge.2021.1 <- na.omit(moos.final.discharge.2021)

FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 

STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(STRT.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(POKE.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(VAUL.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(MOOS.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

# CARI
any(is.na(cari.final.discharge.2021$Discharge))
cari.final.discharge.2021 <- na.omit(cari.final.discharge.2021) # removed 225351-209057
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2021$Discharge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(CARI.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 

###.925 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(FRCH.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(STRT.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(POKE.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(VAUL.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(MOOS.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

#
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2021$Discharge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(CARI.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 


### .95 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(FRCH.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(STRT.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(POKE.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(VAUL.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(MOOS.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

#
CARI_Q_bf = BaseflowSeparation(cari.final.discharge.2021$Discharge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(CARI.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=CARI_Q_bf$bt) 


FRCH_bfQ_mn = mean(FRCH_Q_bf$bt)
FRCH_bfQ_mn
FRCH_bfQ_mn*2

STRT_bfQ_mn = mean(STRT_Q_bf$bt)
STRT_bfQ_mn
STRT_bfQ_mn*2

VAUL_bfQ_mn = mean(VAUL_Q_bf$bt)
VAUL_bfQ_mn
VAUL_bfQ_mn*2

POKE_bfQ_mn = mean(POKE_Q_bf$bt)
POKE_bfQ_mn
POKE_bfQ_mn*2

MOOS_bfQ_mn = mean(MOOS_Q_bf$bt)
MOOS_bfQ_mn
MOOS_bfQ_mn*2

CARI_bfQ_mn = mean(CARI_Q_bf$bt)
CARI_bfQ_mn
CARI_bfQ_mn*2

### Merge Discharge and Precip ###
STRT.st <- read_csv("~/Documents/DoD_2021/RainGauge/STRT.RainGauge.2021.csv")
attributes(STRT.st$DateTime)$tzone <- 'America/Anchorage'
VAUL.st <- read_csv("~/Documents/DoD_2021/RainGauge/VAUL.RainGauge.2021.csv")
attributes(VAUL.st$DateTime)$tzone <- 'America/Anchorage'
POKE.st <- read_csv("~/Documents/DoD_2021/RainGauge/POKE.RainGauge.2021.csv")
attributes(POKE.st$DateTime)$tzone <- 'America/Anchorage'

strt.precip.discharge <- full_join(strt.final.discharge.2021, STRT.st) # merging precip data and discharge
vaul.precip.discharge <- full_join(vaul.final.discharge.2021, VAUL.st) # merging precip data and discharge
poke.precip.discharge <- full_join(poke.final.discharge.2021, POKE.st) # merging precip data and discharge


### Sum daily discharge ###
strt.precip.discharge$twentyfour <- rollapplyr(strt.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
strt.precip.discharge$fourtyeight <- rollapplyr(strt.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

vaul.precip.discharge$twentyfour <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$fourtyeight <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

poke.precip.discharge$twentyfour <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$fourtyeight <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

# Greater than 5 #
strt.five.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
strt.five.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

vaul.five.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

poke.five.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

# Greater than 10 #
strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

vaul.ten.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

poke.ten.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

#write.csv(strt.precip.discharge, "~/Documents/DoD_2021/RainGauge/strt.precip.discharge.csv", row.names = FALSE)
#write.csv(vaul.precip.discharge, "~/Documents/DoD_2021/RainGauge/vaul.precip.discharge.csv", row.names = FALSE)
#write.csv(poke.precip.discharge, "~/Documents/DoD_2021/RainGauge/poke.precip.discharge.csv", row.names = FALSE)

## Discharge/Chem/Precip ##

# VAUL #
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)

par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
par(new = T)

plot(VAUL.2021.chem$Q ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL.2021.chem$nitrateuM * 20 ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(VAUL.2021.chem$fDOM.QSU * 10 ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))

### Storms ###
VAUL <- VAUL.2021.chem
VAUL$MeanDischarge <- VAUL$Q
# No storm in this #
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)

# storm 1a # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-23 16:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-27 14:30:00", tz="America/Anchorage"), col="purple")

VAUL_storm1a_07_23 = VAUL[VAUL$DateTime > as.POSIXct("2021-07-23 16:30:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2021-07-27 14:30:00", tz="America/Anchorage"),]

plot(VAUL_storm1a_07_23$MeanDischarge ~ as.POSIXct(VAUL_storm1a_07_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1700), col="blue", main="VAUL 210723 storm 1a",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
           xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$SpCond.uScm * 2 ~ VAUL$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$Turbidity.FNU * 10 ~ VAUL$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# storm 1b # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-27 15:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-01 10:30:00", tz="America/Anchorage"), col="purple")

VAUL_storm1b_07_27 = VAUL[VAUL$DateTime > as.POSIXct("2021-07-27 15:30:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2021-08-01 10:30:00", tz="America/Anchorage"),]
plot(VAUL_storm1b_07_27$MeanDischarge ~ as.POSIXct(VAUL_storm1b_07_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,700), col="blue", main="VAUL 210727 storm 1b",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$SpCond.uScm * 2 ~ VAUL$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$Turbidity.FNU * 10 ~ VAUL$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-16 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 2 # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-05 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-06 03:30:00", tz="America/Anchorage"), col="purple")

VAUL_storm2_08_05 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-05 10:30:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2021-08-06 03:30:00", tz="America/Anchorage"),]
plot(VAUL_storm2_08_05$MeanDischarge ~ as.POSIXct(VAUL_storm2_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,400), col="blue", main="VAUL 210805 storm 2",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$SpCond.uScm * 2 ~ VAUL$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$Turbidity.FNU * 10 ~ VAUL$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 3 # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-08 13:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-15 12:30:00", tz="America/Anchorage"), col="purple")

VAUL_storm3_08_08 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-08 13:30:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2021-08-15 12:30:00", tz="America/Anchorage"),]
plot(VAUL_storm3_08_08$MeanDischarge ~ as.POSIXct(VAUL_storm3_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,2200), col="blue", main="VAUL 210808 storm 3",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$SpCond.uScm * 2 ~ VAUL$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$Turbidity.FNU * 10 ~ VAUL$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 4a # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-15 13:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-20 00:30:00", tz="America/Anchorage"), col="purple")

VAUL_storm4a_08_15 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-15 13:30:00", tz="America/Anchorage") &
                           VAUL$DateTime < as.POSIXct("2021-08-20 00:30:00", tz="America/Anchorage"),]
plot(VAUL_storm4a_08_15$MeanDischarge ~ as.POSIXct(VAUL_storm4a_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1500), col="blue", main="VAUL 210815 storm 4a",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$SpCond.uScm * 2 ~ VAUL$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$Turbidity.FNU * 10 ~ VAUL$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 4b # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-20 00:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-23 08:30:00", tz="America/Anchorage"), col="purple")

VAUL_storm4b_08_20 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-20 00:30:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2021-08-23 08:30:00", tz="America/Anchorage"),]
plot(VAUL_storm4b_08_20$MeanDischarge ~ as.POSIXct(VAUL_storm4b_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 210820 storm 4b",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$SpCond.uScm * 2 ~ VAUL$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$Turbidity.FNU * 10 ~ VAUL$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# storm 5a # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-23 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-26 23:30:00", tz="America/Anchorage"), col="purple")

VAUL_storm5a_08_23 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-23 12:30:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2021-08-26 23:30:00", tz="America/Anchorage"),]
plot(VAUL_storm5a_08_23$MeanDischarge ~ as.POSIXct(VAUL_storm5a_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 210823 storm 5a",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$SpCond.uScm * 2 ~ VAUL$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$Turbidity.FNU * 10 ~ VAUL$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# storm 5b # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-26 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-30 23:30:00", tz="America/Anchorage"), col="purple")

VAUL_storm5b_08_26 = VAUL[VAUL$DateTime > as.POSIXct("2021-08-26 23:30:00", tz="America/Anchorage") &
                            VAUL$DateTime < as.POSIXct("2021-08-30 23:30:00", tz="America/Anchorage"),]
plot(VAUL_storm5b_08_26$MeanDischarge ~ as.POSIXct(VAUL_storm5b_08_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 210826 storm 5b",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))

plot(VAUL_storm4b_08_20$MeanDischarge ~ as.POSIXct(VAUL_storm4b_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1000), col="blue", main="VAUL 210820 storm 4b",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$nitrateuM ~ VAUL$DateTime, xlab="", ylab="", col = "purple",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz = "America/Anchorage"))
par(new = T)
plot(VAUL$fDOM.QSU * 2 ~ VAUL$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$SpCond.uScm * 2 ~ VAUL$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL$Turbidity.FNU * 10 ~ VAUL$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No more alarms the rest of the season # 
plot(VAUL$MeanDischarge ~ VAUL$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-09-01 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-09-01 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.05)

VAUL_storm1a_07_23_Q = subset(VAUL_storm1a_07_23, select = c("DateTime","MeanDischarge"))
names(VAUL_storm1a_07_23_Q) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_NO3 = subset(VAUL_storm1a_07_23, select = c("DateTime","nitrateuM"))
names(VAUL_storm1a_07_23_NO3) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_fDOM = subset(VAUL_storm1a_07_23, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm1a_07_23_fDOM) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_SPC = subset(VAUL_storm1a_07_23, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm1a_07_23_SPC) = c("valuedatetime","datavalue")
VAUL_storm1a_07_23_turb = subset(VAUL_storm1a_07_23, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm1a_07_23_turb) = c("valuedatetime","datavalue")

VAUL_storm1b_07_27_Q = subset(VAUL_storm1b_07_27, select = c("DateTime","MeanDischarge"))
names(VAUL_storm1b_07_27_Q) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_NO3 = subset(VAUL_storm1b_07_27, select = c("DateTime","nitrateuM"))
names(VAUL_storm1b_07_27_NO3) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_fDOM = subset(VAUL_storm1b_07_27, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm1b_07_27_fDOM) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_SPC = subset(VAUL_storm1b_07_27, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm1b_07_27_SPC) = c("valuedatetime","datavalue")
VAUL_storm1b_07_27_turb = subset(VAUL_storm1b_07_27, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm1b_07_27_turb) = c("valuedatetime","datavalue")

VAUL_storm2_08_05_Q = subset(VAUL_storm2_08_05, select = c("DateTime","MeanDischarge"))
names(VAUL_storm2_08_05_Q) = c("valuedatetime","datavalue")
VAUL_storm2_08_05_NO3 = subset(VAUL_storm2_08_05, select = c("DateTime","nitrateuM"))
names(VAUL_storm2_08_05_NO3) = c("valuedatetime","datavalue")
VAUL_storm2_08_05_fDOM = subset(VAUL_storm2_08_05, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm2_08_05_fDOM) = c("valuedatetime","datavalue")
VAUL_storm2_08_05_SPC = subset(VAUL_storm2_08_05, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm2_08_05_SPC) = c("valuedatetime","datavalue")
VAUL_storm2_08_05_turb = subset(VAUL_storm2_08_05, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm2_08_05_turb) = c("valuedatetime","datavalue")

VAUL_storm3_08_08_Q = subset(VAUL_storm3_08_08, select = c("DateTime","MeanDischarge"))
names(VAUL_storm3_08_08_Q) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_NO3 = subset(VAUL_storm3_08_08, select = c("DateTime","nitrateuM"))
names(VAUL_storm3_08_08_NO3) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_fDOM = subset(VAUL_storm3_08_08, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm3_08_08_fDOM) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_SPC = subset(VAUL_storm3_08_08, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm3_08_08_SPC) = c("valuedatetime","datavalue")
VAUL_storm3_08_08_turb = subset(VAUL_storm3_08_08, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm3_08_08_turb) = c("valuedatetime","datavalue")

VAUL_storm4a_08_15_Q = subset(VAUL_storm4a_08_15, select = c("DateTime","MeanDischarge"))
names(VAUL_storm4a_08_15_Q) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_NO3 = subset(VAUL_storm4a_08_15, select = c("DateTime","nitrateuM"))
names(VAUL_storm4a_08_15_NO3) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_fDOM = subset(VAUL_storm4a_08_15, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm4a_08_15_fDOM) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_SPC = subset(VAUL_storm4a_08_15, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm4a_08_15_SPC) = c("valuedatetime","datavalue")
VAUL_storm4a_08_15_turb = subset(VAUL_storm4a_08_15, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm4a_08_15_turb) = c("valuedatetime","datavalue")

VAUL_storm4b_08_20_Q = subset(VAUL_storm4b_08_20, select = c("DateTime","MeanDischarge"))
names(VAUL_storm4b_08_20_Q) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_NO3 = subset(VAUL_storm4b_08_20, select = c("DateTime","nitrateuM"))
names(VAUL_storm4b_08_20_NO3) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_fDOM = subset(VAUL_storm4b_08_20, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm4b_08_20_fDOM) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_SPC = subset(VAUL_storm4b_08_20, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm4b_08_20_SPC) = c("valuedatetime","datavalue")
VAUL_storm4b_08_20_turb = subset(VAUL_storm4b_08_20, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm4b_08_20_turb) = c("valuedatetime","datavalue")

VAUL_storm5a_08_23_Q = subset(VAUL_storm5a_08_23, select = c("DateTime","MeanDischarge"))
names(VAUL_storm5a_08_23_Q) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_NO3 = subset(VAUL_storm5a_08_23, select = c("DateTime","nitrateuM"))
names(VAUL_storm5a_08_23_NO3) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_fDOM = subset(VAUL_storm5a_08_23, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm5a_08_23_fDOM) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_SPC = subset(VAUL_storm5a_08_23, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm5a_08_23_SPC) = c("valuedatetime","datavalue")
VAUL_storm5a_08_23_turb = subset(VAUL_storm5a_08_23, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm5a_08_23_turb) = c("valuedatetime","datavalue")

VAUL_storm5b_08_26_Q = subset(VAUL_storm5b_08_26, select = c("DateTime","MeanDischarge"))
names(VAUL_storm5b_08_26_Q) = c("valuedatetime","datavalue")
VAUL_storm5b_08_26_NO3 = subset(VAUL_storm5b_08_26, select = c("DateTime","nitrateuM"))
names(VAUL_storm5b_08_26_NO3) = c("valuedatetime","datavalue")
VAUL_storm5b_08_26_fDOM = subset(VAUL_storm5b_08_26, select = c("DateTime","fDOM.QSU"))
names(VAUL_storm5b_08_26_fDOM) = c("valuedatetime","datavalue")
VAUL_storm5b_08_26_SPC = subset(VAUL_storm5b_08_26, select = c("DateTime","SpCond.uScm"))
names(VAUL_storm5b_08_26_SPC) = c("valuedatetime","datavalue")
VAUL_storm5b_08_26_turb = subset(VAUL_storm5b_08_26, select = c("DateTime","Turbidity.FNU"))
names(VAUL_storm5b_08_26_turb) = c("valuedatetime","datavalue")


### Write csv ###
write.csv(VAUL_storm1a_07_23, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1a_07_23.csv")
write.csv(VAUL_storm1a_07_23_Q, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1a_07_23_Q.csv")
write.csv(VAUL_storm1a_07_23_NO3, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1a_07_23_NO3.csv")
write.csv(VAUL_storm1a_07_23_fDOM, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1a_07_23_fDOM.csv")
write.csv(VAUL_storm1a_07_23_SPC, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1a_07_23_SPC.csv")
write.csv(VAUL_storm1a_07_23_turb, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1a_07_23_Turb.csv")

write.csv(VAUL_storm1b_07_27, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1b_07_27.csv")
write.csv(VAUL_storm1b_07_27_Q, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1b_07_27_Q.csv")
write.csv(VAUL_storm1b_07_27_NO3, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1b_07_27_NO3.csv")
write.csv(VAUL_storm1b_07_27_fDOM, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1b_07_27_fDOM.csv")
write.csv(VAUL_storm1b_07_27_SPC, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1b_07_27_SPC.csv")
write.csv(VAUL_storm1b_07_27_turb, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm1b_07_27_Turb.csv")

write.csv(VAUL_storm2_08_05, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm2_08_05.csv")
write.csv(VAUL_storm2_08_05_Q, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm2_08_05_Q.csv")
write.csv(VAUL_storm2_08_05_NO3, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm2_08_05_NO3.csv")
write.csv(VAUL_storm2_08_05_fDOM, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm2_08_05_fDOM.csv")
write.csv(VAUL_storm2_08_05_SPC, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm2_08_05_SPC.csv")
write.csv(VAUL_storm2_08_05_turb, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm2_08_05_Turb.csv")

write.csv(VAUL_storm3_08_08, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm3_08_08.csv")
write.csv(VAUL_storm3_08_08_Q, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm3_08_08_Q.csv")
write.csv(VAUL_storm3_08_08_NO3, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm3_08_08_NO3.csv")
write.csv(VAUL_storm3_08_08_fDOM, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm3_08_08_fDOM.csv")
write.csv(VAUL_storm3_08_08_SPC, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm3_08_08_SPC.csv")
write.csv(VAUL_storm3_08_08_turb, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm3_08_08_Turb.csv")

write.csv(VAUL_storm4a_08_15, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4a_08_15.csv")
write.csv(VAUL_storm4a_08_15_Q, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4a_08_15_Q.csv")
write.csv(VAUL_storm4a_08_15_NO3, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4a_08_15_NO3.csv")
write.csv(VAUL_storm4a_08_15_fDOM, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4a_08_15_fDOM.csv")
write.csv(VAUL_storm4a_08_15_SPC, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4a_08_15_SPC.csv")
write.csv(VAUL_storm4a_08_15_turb, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4a_08_15_Turb.csv")

write.csv(VAUL_storm4b_08_20, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4b_08_20.csv")
write.csv(VAUL_storm4b_08_20_Q, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4b_08_20_Q.csv")
write.csv(VAUL_storm4b_08_20_NO3, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4b_08_20_NO3.csv")
write.csv(VAUL_storm4b_08_20_fDOM, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4b_08_20_fDOM.csv")
write.csv(VAUL_storm4b_08_20_SPC, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4b_08_20_SPC.csv")
write.csv(VAUL_storm4b_08_20_turb, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm4b_08_20_Turb.csv")

write.csv(VAUL_storm5a_08_23, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5a_08_23.csv")
write.csv(VAUL_storm5a_08_23_Q, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5a_08_23_Q.csv")
write.csv(VAUL_storm5a_08_23_NO3, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5a_08_23_NO3.csv")
write.csv(VAUL_storm5a_08_23_fDOM, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5a_08_23_fDOM.csv")
write.csv(VAUL_storm5a_08_23_SPC, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5a_08_23_SPC.csv")
write.csv(VAUL_storm5a_08_23_turb, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5a_08_23_Turb.csv")

write.csv(VAUL_storm5b_08_26, "~/Documents/Storms/Storm_Events/2021/VAUL/VVAUL_storm5b_08_26.csv")
write.csv(VAUL_storm5b_08_26_Q, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5b_08_26_Q.csv")
write.csv(VAUL_storm5b_08_26_NO3, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5b_08_26_NO3.csv")
write.csv(VAUL_storm5b_08_26_fDOM, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5b_08_26_fDOM.csv")
write.csv(VAUL_storm5b_08_26_SPC, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5b_08_26_SPC.csv")
write.csv(VAUL_storm5b_08_26_turb, "~/Documents/Storms/Storm_Events/2021/VAUL/VAUL_storm5b_08_26_Turb.csv")


# MOOS #
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(7,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)

par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
par(new = T)

plot(MOOS.2021.chem$Q ~ MOOS.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")

### Storms ###
MOOS <- MOOS.2021.chem
MOOS$MeanDischarge <- MOOS$Q

# No storm in this #
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)

# storm 1 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-23 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-25 23:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm1_07_23 = MOOS[MOOS$DateTime > as.POSIXct("2021-07-23 23:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2021-07-25 23:30:00", tz="America/Anchorage"),]
plot(MOOS_storm1_07_23$MeanDischarge ~ as.POSIXct(MOOS_storm1_07_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,1000), col="blue", main="MOOS 210723 storm 1",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ VSTRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 2 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-27 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-30 03:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm2_07_27 = MOOS[MOOS$DateTime > as.POSIXct("2021-07-27 12:30:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2021-07-30 03:30:00", tz="America/Anchorage"),]
plot(MOOS_storm2_07_27$MeanDischarge ~ as.POSIXct(MOOS_storm2_07_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,2000), col="blue", main="MOOS 210727 storm 2",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 3a # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-06 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-07 06:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm3a_08_06 = MOOS[MOOS$DateTime > as.POSIXct("2021-08-06 01:30:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2021-08-07 06:30:00", tz="America/Anchorage"),]
plot(MOOS_storm3a_08_06$MeanDischarge ~ as.POSIXct(MOOS_storm3a_08_06$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,2000), col="blue", main="MOOS 210806 storm 3a",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 3b # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-08 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-12 12:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm3b_08_08 = MOOS[MOOS$DateTime > as.POSIXct("2021-08-08 18:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2021-08-12 12:30:00", tz="America/Anchorage"),]
plot(MOOS_storm3b_08_08$MeanDischarge ~ as.POSIXct(MOOS_storm3b_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(500,2000), col="blue", main="MOOS 210808 storm 3b",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 4a # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-15 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-17 04:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm4a_08_15 = MOOS[MOOS$DateTime > as.POSIXct("2021-08-15 10:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2021-08-17 04:30:00", tz="America/Anchorage"),]
plot(MOOS_storm4a_08_15$MeanDischarge ~ as.POSIXct(MOOS_storm4a_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3200), col="blue", main="MOOS 210815 storm 4a",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 4b # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-17 04:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm4b_08_17 = MOOS[MOOS$DateTime > as.POSIXct("2021-08-17 04:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage"),]
plot(MOOS_storm4b_08_17$MeanDischarge ~ as.POSIXct(MOOS_storm4b_08_17$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,3500), col="blue", main="MOOS 210817 storm 4b",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5a # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-21 01:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm5a_08_19 = MOOS[MOOS$DateTime > as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2021-08-21 01:30:00", tz="America/Anchorage"),]
plot(MOOS_storm5a_08_19$MeanDischarge ~ as.POSIXct(MOOS_storm5a_08_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,2400), col="blue", main="MOOS 210819 storm 5a",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5b # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-21 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-23 01:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm5b_08_21 = MOOS[MOOS$DateTime > as.POSIXct("2021-08-21 01:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2021-08-23 01:30:00", tz="America/Anchorage"),]
plot(MOOS_storm5b_08_21$MeanDischarge ~ as.POSIXct(MOOS_storm5b_08_21$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1000,3000), col="blue", main="MOOS 210821 storm 5b",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 6 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-25 22:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-27 06:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm6_08_25 = MOOS[MOOS$DateTime > as.POSIXct("2021-08-25 22:30:00", tz="America/Anchorage") &
                            MOOS$DateTime < as.POSIXct("2021-08-27 06:30:00", tz="America/Anchorage"),]
plot(MOOS_storm6_08_25$MeanDischarge ~ as.POSIXct(MOOS_storm6_08_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,3000), col="blue", main="MOOS 210825 storm 6",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7 # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-27 06:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-29 23:30:00", tz="America/Anchorage"), col="purple")

MOOS_storm7_08_27 = MOOS[MOOS$DateTime > as.POSIXct("2021-08-27 06:30:00", tz="America/Anchorage") &
                           MOOS$DateTime < as.POSIXct("2021-08-29 23:30:00", tz="America/Anchorage"),]
plot(MOOS_storm7_08_27$MeanDischarge ~ as.POSIXct(MOOS_storm7_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,4200), col="blue", main="MOOS 210827 storm 7",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$SpCond.uScm * 2 ~ MOOS$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$Turbidity.FNU * 50 ~ MOOS$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

### For Presentation ###
plot(MOOS_storm7_08_27$MeanDischarge ~ as.POSIXct(MOOS_storm7_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(1500,4200), col="blue", lwd = 2,
     xlim = as.POSIXct(c("2021-08-27 00:00:00","2021-08-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(MOOS$fDOM.QSU * 10 ~ MOOS$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-27 00:00:00","2021-08-30 23:45:00"), tz="America/Anchorage"),
     type = "l", lwd = 1.5,
     axes = F)
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-27 00:00:00","2021-08-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(1,0), 
     axes=F, xlab="", ylab="", lwd = 1.5)


# No more alarms # 
plot(MOOS$MeanDischarge ~ MOOS$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-09-01 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-09-01 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)

MOOS_storm1_07_23_Q = subset(MOOS_storm1_07_23, select = c("DateTime","MeanDischarge"))
names(MOOS_storm1_07_23_Q) = c("valuedatetime","datavalue")
MOOS_storm1_07_23_NO3 = subset(MOOS_storm1_07_23, select = c("DateTime","nitrateuM"))
names(MOOS_storm1_07_23_NO3) = c("valuedatetime","datavalue")
MOOS_storm1_07_23_fDOM = subset(MOOS_storm1_07_23, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm1_07_23_fDOM) = c("valuedatetime","datavalue")
MOOS_storm1_07_23_SPC = subset(MOOS_storm1_07_23, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm1_07_23_SPC) = c("valuedatetime","datavalue")
MOOS_storm1_07_23_turb = subset(MOOS_storm1_07_23, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm1_07_23_turb) = c("valuedatetime","datavalue")

MOOS_storm2_07_27_Q = subset(MOOS_storm2_07_27, select = c("DateTime","MeanDischarge"))
names(MOOS_storm2_07_27_Q) = c("valuedatetime","datavalue")
MOOS_storm2_07_27_NO3 = subset(MOOS_storm2_07_27, select = c("DateTime","nitrateuM"))
names(MOOS_storm2_07_27_NO3) = c("valuedatetime","datavalue")
MOOS_storm2_07_27_fDOM = subset(MOOS_storm2_07_27, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm2_07_27_fDOM) = c("valuedatetime","datavalue")
MOOS_storm2_07_27_SPC = subset(MOOS_storm2_07_27, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm2_07_27_SPC) = c("valuedatetime","datavalue")
MOOS_storm2_07_27_turb = subset(MOOS_storm2_07_27, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm2_07_27_turb) = c("valuedatetime","datavalue")

MOOS_storm3a_08_06_Q = subset(MOOS_storm3a_08_06, select = c("DateTime","MeanDischarge"))
names(MOOS_storm3a_08_06_Q) = c("valuedatetime","datavalue")
MOOS_storm3a_08_06_NO3 = subset(MOOS_storm3a_08_06, select = c("DateTime","nitrateuM"))
names(MOOS_storm3a_08_06_NO3) = c("valuedatetime","datavalue")
MOOS_storm3a_08_06_fDOM = subset(MOOS_storm3a_08_06, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm3a_08_06_fDOM) = c("valuedatetime","datavalue")
MOOS_storm3a_08_06_SPC = subset(MOOS_storm3a_08_06, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm3a_08_06_SPC) = c("valuedatetime","datavalue")
MOOS_storm3a_08_06_turb = subset(MOOS_storm3a_08_06, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm3a_08_06_turb) = c("valuedatetime","datavalue")

MOOS_storm3b_08_08_Q = subset(MOOS_storm3b_08_08, select = c("DateTime","MeanDischarge"))
names(MOOS_storm3b_08_08_Q) = c("valuedatetime","datavalue")
MOOS_storm3b_08_08_NO3 = subset(MOOS_storm3b_08_08, select = c("DateTime","nitrateuM"))
names(MOOS_storm3b_08_08_NO3) = c("valuedatetime","datavalue")
MOOS_storm3b_08_08_fDOM = subset(MOOS_storm3b_08_08, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm3b_08_08_fDOM) = c("valuedatetime","datavalue")
MOOS_storm3b_08_08_SPC = subset(MOOS_storm3b_08_08, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm3b_08_08_SPC) = c("valuedatetime","datavalue")
MOOS_storm3b_08_08_turb = subset(MOOS_storm3b_08_08, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm3b_08_08_turb) = c("valuedatetime","datavalue")

MOOS_storm4a_08_15_Q = subset(MOOS_storm4a_08_15, select = c("DateTime","MeanDischarge"))
names(MOOS_storm4a_08_15_Q) = c("valuedatetime","datavalue")
MOOS_storm4a_08_15_NO3 = subset(MOOS_storm4a_08_15, select = c("DateTime","nitrateuM"))
names(MOOS_storm4a_08_15_NO3) = c("valuedatetime","datavalue")
MOOS_storm4a_08_15_fDOM = subset(MOOS_storm4a_08_15, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm4a_08_15_fDOM) = c("valuedatetime","datavalue")
MOOS_storm4a_08_15_SPC = subset(MOOS_storm4a_08_15, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm4a_08_15_SPC) = c("valuedatetime","datavalue")
MOOS_storm4a_08_15_turb = subset(MOOS_storm4a_08_15, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm4a_08_15_turb) = c("valuedatetime","datavalue")

MOOS_storm4b_08_17_Q = subset(MOOS_storm4b_08_17, select = c("DateTime","MeanDischarge"))
names(MOOS_storm4b_08_17_Q) = c("valuedatetime","datavalue")
MOOS_storm4b_08_17_NO3 = subset(MOOS_storm4b_08_17, select = c("DateTime","nitrateuM"))
names(MOOS_storm4b_08_17_NO3) = c("valuedatetime","datavalue")
MOOS_storm4b_08_17_fDOM = subset(MOOS_storm4b_08_17, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm4b_08_17_fDOM) = c("valuedatetime","datavalue")
MOOS_storm4b_08_17_SPC = subset(MOOS_storm4b_08_17, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm4b_08_17_SPC) = c("valuedatetime","datavalue")
MOOS_storm4b_08_17_turb = subset(MOOS_storm4b_08_17, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm4b_08_17_turb) = c("valuedatetime","datavalue")

MOOS_storm5a_08_19_Q = subset(MOOS_storm5a_08_19, select = c("DateTime","MeanDischarge"))
names(MOOS_storm5a_08_19_Q) = c("valuedatetime","datavalue")
MOOS_storm5a_08_19_NO3 = subset(MOOS_storm5a_08_19, select = c("DateTime","nitrateuM"))
names(MOOS_storm5a_08_19_NO3) = c("valuedatetime","datavalue")
MOOS_storm5a_08_19_fDOM = subset(MOOS_storm5a_08_19, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm5a_08_19_fDOM) = c("valuedatetime","datavalue")
MOOS_storm5a_08_19_SPC = subset(MOOS_storm5a_08_19, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm5a_08_19_SPC) = c("valuedatetime","datavalue")
MOOS_storm5a_08_19_turb = subset(MOOS_storm5a_08_19, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm5a_08_19_turb) = c("valuedatetime","datavalue")

MOOS_storm5b_08_21_Q = subset(MOOS_storm5b_08_21, select = c("DateTime","MeanDischarge"))
names(MOOS_storm5b_08_21_Q) = c("valuedatetime","datavalue")
MOOS_storm5b_08_21_NO3 = subset(MOOS_storm5b_08_21, select = c("DateTime","nitrateuM"))
names(MOOS_storm5b_08_21_NO3) = c("valuedatetime","datavalue")
MOOS_storm5b_08_21_fDOM = subset(MOOS_storm5b_08_21, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm5b_08_21_fDOM) = c("valuedatetime","datavalue")
MOOS_storm5b_08_21_SPC = subset(MOOS_storm5b_08_21, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm5b_08_21_SPC) = c("valuedatetime","datavalue")
MOOS_storm5b_08_21_turb = subset(MOOS_storm5b_08_21, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm5b_08_21_turb) = c("valuedatetime","datavalue")

MOOS_storm6_08_25_Q = subset(MOOS_storm6_08_25, select = c("DateTime","MeanDischarge"))
names(MOOS_storm6_08_25_Q) = c("valuedatetime","datavalue")
MOOS_storm6_08_25_NO3 = subset(MOOS_storm6_08_25, select = c("DateTime","nitrateuM"))
names(MOOS_storm6_08_25_NO3) = c("valuedatetime","datavalue")
MOOS_storm6_08_25_fDOM = subset(MOOS_storm6_08_25, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm6_08_25_fDOM) = c("valuedatetime","datavalue")
MOOS_storm6_08_25_SPC = subset(MOOS_storm6_08_25, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm6_08_25_SPC) = c("valuedatetime","datavalue")
MOOS_storm6_08_25_turb = subset(MOOS_storm6_08_25, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm6_08_25_turb) = c("valuedatetime","datavalue")

MOOS_storm7_08_27_Q = subset(MOOS_storm7_08_27, select = c("DateTime","MeanDischarge"))
names(MOOS_storm7_08_27_Q) = c("valuedatetime","datavalue")
MOOS_storm7_08_27_NO3 = subset(MOOS_storm7_08_27, select = c("DateTime","nitrateuM"))
names(MOOS_storm7_08_27_NO3) = c("valuedatetime","datavalue")
MOOS_storm7_08_27_fDOM = subset(MOOS_storm7_08_27, select = c("DateTime","fDOM.QSU"))
names(MOOS_storm7_08_27_fDOM) = c("valuedatetime","datavalue")
MOOS_storm7_08_27_SPC = subset(MOOS_storm7_08_27, select = c("DateTime","SpCond.uScm"))
names(MOOS_storm7_08_27_SPC) = c("valuedatetime","datavalue")
MOOS_storm7_08_27_turb = subset(MOOS_storm7_08_27, select = c("DateTime","Turbidity.FNU"))
names(MOOS_storm7_08_27_turb) = c("valuedatetime","datavalue")


### Write csv ###
write.csv(MOOS_storm1_07_23, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm1_07_23.csv")
write.csv(MOOS_storm1_07_23_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm1_07_23_Q.csv")
write.csv(MOOS_storm1_07_23_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm1_07_23_NO3.csv")
write.csv(MOOS_storm1_07_23_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm1_07_23_fDOM.csv")
write.csv(MOOS_storm1_07_23_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm1_07_23_SPC.csv")
write.csv(MOOS_storm1_07_23_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm1_07_23_Turb.csv")

write.csv(MOOS_storm2_07_27, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm2_07_27.csv")
write.csv(MOOS_storm2_07_27_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm2_07_27_Q.csv")
write.csv(MOOS_storm2_07_27_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm2_07_27_NO3.csv")
write.csv(MOOS_storm2_07_27_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm2_07_27_fDOM.csv")
write.csv(MOOS_storm2_07_27_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm2_07_27_SPC.csv")
write.csv(MOOS_storm2_07_27_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm2_07_27_Turb.csv")

write.csv(MOOS_storm3a_08_06, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3a_08_06.csv")
write.csv(MOOS_storm3a_08_06_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3a_08_06_Q.csv")
write.csv(MOOS_storm3a_08_06_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3a_08_06_NO3.csv")
write.csv(MOOS_storm3a_08_06_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3a_08_06_fDOM.csv")
write.csv(MOOS_storm3a_08_06_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3a_08_06_SPC.csv")
write.csv(MOOS_storm3a_08_06_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3a_08_06_Turb.csv")

write.csv(MOOS_storm3b_08_08, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3b_08_08.csv")
write.csv(MOOS_storm3b_08_08_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3b_08_08_Q.csv")
write.csv(MOOS_storm3b_08_08_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3b_08_08_NO3.csv")
write.csv(MOOS_storm3b_08_08_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3b_08_08_fDOM.csv")
write.csv(MOOS_storm3b_08_08_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3b_08_08_SPC.csv")
write.csv(MOOS_storm3b_08_08_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm3b_08_08_Turb.csv")

write.csv(MOOS_storm4a_08_15, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4a_08_15.csv")
write.csv(MOOS_storm4a_08_15_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4a_08_15_Q.csv")
write.csv(MOOS_storm4a_08_15_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4a_08_15_NO3.csv")
write.csv(MOOS_storm4a_08_15_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4a_08_15_fDOM.csv")
write.csv(MOOS_storm4a_08_15_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4a_08_15_SPC.csv")
write.csv(MOOS_storm4a_08_15_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4a_08_15_Turb.csv")

write.csv(MOOS_storm4b_08_17, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4b_08_17.csv")
write.csv(MOOS_storm4b_08_17_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4b_08_17_Q.csv")
write.csv(MOOS_storm4b_08_17_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4b_08_17_NO3.csv")
write.csv(MOOS_storm4b_08_17_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4b_08_17_fDOM.csv")
write.csv(MOOS_storm4b_08_17_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4b_08_17_SPC.csv")
write.csv(MOOS_storm4b_08_17_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm4b_08_17_Turb.csv")

write.csv(MOOS_storm5a_08_19, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5a_08_19.csv")
write.csv(MOOS_storm5a_08_19_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5a_08_19_Q.csv")
write.csv(MOOS_storm5a_08_19_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5a_08_19_NO3.csv")
write.csv(MOOS_storm5a_08_19_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5a_08_19_fDOM.csv")
write.csv(MOOS_storm5a_08_19_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5a_08_19_SPC.csv")
write.csv(MOOS_storm5a_08_19_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5a_08_19_Turb.csv")

write.csv(MOOS_storm5b_08_21, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5b_08_21.csv")
write.csv(MOOS_storm5b_08_21_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5b_08_21_Q.csv")
write.csv(MOOS_storm5b_08_21_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5b_08_21_NO3.csv")
write.csv(MOOS_storm5b_08_21_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5b_08_21_fDOM.csv")
write.csv(MOOS_storm5b_08_21_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5b_08_21_SPC.csv")
write.csv(MOOS_storm5b_08_21_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm5b_08_21_Turb.csv")

write.csv(MOOS_storm6_08_25, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm6_08_25.csv")
write.csv(MOOS_storm6_08_25_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm6_08_25_Q.csv")
write.csv(MOOS_storm6_08_25_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm6_08_25_NO3.csv")
write.csv(MOOS_storm6_08_25_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm6_08_25_fDOM.csv")
write.csv(MOOS_storm6_08_25_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm6_08_25_SPC.csv")
write.csv(MOOS_storm6_08_25_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm6_08_25_Turb.csv")

write.csv(MOOS_storm7_08_27, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm7_08_27.csv")
write.csv(MOOS_storm7_08_27_Q, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm7_08_27_Q.csv")
write.csv(MOOS_storm7_08_27_NO3, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm7_08_27_NO3.csv")
write.csv(MOOS_storm7_08_27_fDOM, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm7_08_27_fDOM.csv")
write.csv(MOOS_storm7_08_27_SPC, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm7_08_27_SPC.csv")
write.csv(MOOS_storm7_08_27_turb, "~/Documents/Storms/Storm_Events/2021/MOOS/MOOS_storm7_08_27_Turb.csv")


# FRCH # 
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(7,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)

par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
par(new = T)

plot(FRCH.2021.chem$Q ~ FRCH.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")

### Storms ###
FRCH <- FRCH.2021.chem
FRCH$MeanDischarge <- FRCH$Q

# No storm in this #
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)

# storm 1 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-23 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-25 23:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm1_07_23 = FRCH[FRCH$DateTime > as.POSIXct("2021-07-23 23:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2021-07-25 23:30:00", tz="America/Anchorage"),]
plot(FRCH_storm1_07_23$MeanDischarge ~ as.POSIXct(FRCH_storm1_07_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,400), col="blue", main="FRCH 210723 storm 1",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 2 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-27 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-30 18:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm2_07_27 = FRCH[FRCH$DateTime > as.POSIXct("2021-07-27 14:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2021-07-30 18:30:00", tz="America/Anchorage"),]
plot(FRCH_storm2_07_27$MeanDischarge ~ as.POSIXct(FRCH_storm2_07_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="FRCH 210727 storm 2",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 3 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-05 22:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-08 02:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm3_08_05 = FRCH[FRCH$DateTime > as.POSIXct("2021-08-05 22:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2021-08-08 02:30:00", tz="America/Anchorage"),]
plot(FRCH_storm3_08_05$MeanDischarge ~ as.POSIXct(FRCH_storm3_08_05$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,400), col="blue", main="FRCH 210805 storm 3",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# storm 4 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-08 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-10 22:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm4_08_08 = FRCH[FRCH$DateTime > as.POSIXct("2021-08-08 14:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2021-08-10 22:30:00", tz="America/Anchorage"),]
plot(FRCH_storm4_08_08$MeanDischarge ~ as.POSIXct(FRCH_storm4_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,500), col="blue", main="FRCH 210808 storm 4",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-31 00:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-15 03:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-17 01:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm5a_08_15 = FRCH[FRCH$DateTime > as.POSIXct("2021-08-15 03:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2021-08-17 01:30:00", tz="America/Anchorage"),]
plot(FRCH_storm5a_08_15$MeanDischarge ~ as.POSIXct(FRCH_storm5a_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,600), col="blue", main="FRCH 210815 storm 5a",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5b # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-17 01:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm5b_08_17 = FRCH[FRCH$DateTime > as.POSIXct("2021-08-17 01:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage"),]
plot(FRCH_storm5b_08_17$MeanDischarge ~ as.POSIXct(FRCH_storm5b_08_17$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(300,600), col="blue", main="FRCH 210817 storm 5b",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 6a # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-19 19:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-20 23:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm6a_08_19 = FRCH[FRCH$DateTime > as.POSIXct("2021-08-19 19:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2021-08-20 23:30:00", tz="America/Anchorage"),]
plot(FRCH_storm6a_08_19$MeanDischarge ~ as.POSIXct(FRCH_storm6a_08_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,600), col="blue", main="FRCH 210819 storm 6a",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 6b # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-20 23:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-24 05:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm6b_08_20 = FRCH[FRCH$DateTime > as.POSIXct("2021-08-20 23:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2021-08-24 05:30:00", tz="America/Anchorage"),]
plot(FRCH_storm6b_08_20$MeanDischarge ~ as.POSIXct(FRCH_storm6b_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,600), col="blue", main="FRCH 210820 storm 6b",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-25 14:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-27 01:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm7_08_25 = FRCH[FRCH$DateTime > as.POSIXct("2021-08-25 14:30:00", tz="America/Anchorage") &
                            FRCH$DateTime < as.POSIXct("2021-08-27 01:30:00", tz="America/Anchorage"),]
plot(FRCH_storm7_08_25$MeanDischarge ~ as.POSIXct(FRCH_storm7_08_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,600), col="blue", main="FRCH 210825 storm 7",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 8 # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-27 02:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-31 23:30:00", tz="America/Anchorage"), col="purple")

FRCH_storm8_08_27 = FRCH[FRCH$DateTime > as.POSIXct("2021-08-27 02:30:00", tz="America/Anchorage") &
                           FRCH$DateTime < as.POSIXct("2021-08-31 23:30:00", tz="America/Anchorage"),]
plot(FRCH_storm8_08_27$MeanDischarge ~ as.POSIXct(FRCH_storm8_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1000), col="blue", main="FRCH 210827 storm 8",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$nitrateuM * 10 ~ FRCH$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$fDOM.QSU * 10 ~ FRCH$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$SpCond.uScm * 2 ~ FRCH$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(FRCH$Turbidity.FNU * 50 ~ FRCH$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# no more alarms # 
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-31 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-31 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)

FRCH_storm1_07_23_Q = subset(FRCH_storm1_07_23, select = c("DateTime","MeanDischarge"))
names(FRCH_storm1_07_23_Q) = c("valuedatetime","datavalue")
FRCH_storm1_07_23_NO3 = subset(FRCH_storm1_07_23, select = c("DateTime","nitrateuM"))
names(FRCH_storm1_07_23_NO3) = c("valuedatetime","datavalue")
FRCH_storm1_07_23_fDOM = subset(FRCH_storm1_07_23, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm1_07_23_fDOM) = c("valuedatetime","datavalue")
FRCH_storm1_07_23_SPC = subset(FRCH_storm1_07_23, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm1_07_23_SPC) = c("valuedatetime","datavalue")
FRCH_storm1_07_23_turb = subset(FRCH_storm1_07_23, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm1_07_23_turb) = c("valuedatetime","datavalue")

FRCH_storm2_07_27_Q = subset(FRCH_storm2_07_27, select = c("DateTime","MeanDischarge"))
names(FRCH_storm2_07_27_Q) = c("valuedatetime","datavalue")
FRCH_storm2_07_27_NO3 = subset(FRCH_storm2_07_27, select = c("DateTime","nitrateuM"))
names(FRCH_storm2_07_27_NO3) = c("valuedatetime","datavalue")
FRCH_storm2_07_27_fDOM = subset(FRCH_storm2_07_27, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm2_07_27_fDOM) = c("valuedatetime","datavalue")
FRCH_storm2_07_27_SPC = subset(FRCH_storm2_07_27, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm2_07_27_SPC) = c("valuedatetime","datavalue")
FRCH_storm2_07_27_turb = subset(FRCH_storm2_07_27, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm2_07_27_turb) = c("valuedatetime","datavalue")

FRCH_storm3_08_05_Q = subset(FRCH_storm3_08_05, select = c("DateTime","MeanDischarge"))
names(FRCH_storm3_08_05_Q) = c("valuedatetime","datavalue")
FRCH_storm3_08_05_NO3 = subset(FRCH_storm3_08_05, select = c("DateTime","nitrateuM"))
names(FRCH_storm3_08_05_NO3) = c("valuedatetime","datavalue")
FRCH_storm3_08_05_fDOM = subset(FRCH_storm3_08_05, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm3_08_05_fDOM) = c("valuedatetime","datavalue")
FRCH_storm3_08_05_SPC = subset(FRCH_storm3_08_05, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm3_08_05_SPC) = c("valuedatetime","datavalue")
FRCH_storm3_08_05_turb = subset(FRCH_storm3_08_05, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm3_08_05_turb) = c("valuedatetime","datavalue")

FRCH_storm4_08_08_Q = subset(FRCH_storm4_08_08, select = c("DateTime","MeanDischarge"))
names(FRCH_storm4_08_08_Q) = c("valuedatetime","datavalue")
FRCH_storm4_08_08_NO3 = subset(FRCH_storm4_08_08, select = c("DateTime","nitrateuM"))
names(FRCH_storm4_08_08_NO3) = c("valuedatetime","datavalue")
FRCH_storm4_08_08_fDOM = subset(FRCH_storm4_08_08, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm4_08_08_fDOM) = c("valuedatetime","datavalue")
FRCH_storm4_08_08_SPC = subset(FRCH_storm4_08_08, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm4_08_08_SPC) = c("valuedatetime","datavalue")
FRCH_storm4_08_08_turb = subset(FRCH_storm4_08_08, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm4_08_08_turb) = c("valuedatetime","datavalue")

FRCH_storm5a_08_15_Q = subset(FRCH_storm5a_08_15, select = c("DateTime","MeanDischarge"))
names(FRCH_storm5a_08_15_Q) = c("valuedatetime","datavalue")
FRCH_storm5a_08_15_NO3 = subset(FRCH_storm5a_08_15, select = c("DateTime","nitrateuM"))
names(FRCH_storm5a_08_15_NO3) = c("valuedatetime","datavalue")
FRCH_storm5a_08_15_fDOM = subset(FRCH_storm5a_08_15, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm5a_08_15_fDOM) = c("valuedatetime","datavalue")
FRCH_storm5a_08_15_SPC = subset(FRCH_storm5a_08_15, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm5a_08_15_SPC) = c("valuedatetime","datavalue")
FRCH_storm5a_08_15_turb = subset(FRCH_storm5a_08_15, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm5a_08_15_turb) = c("valuedatetime","datavalue")

FRCH_storm5b_08_17_Q = subset(FRCH_storm5b_08_17, select = c("DateTime","MeanDischarge"))
names(FRCH_storm5b_08_17_Q) = c("valuedatetime","datavalue")
FRCH_storm5b_08_17_NO3 = subset(FRCH_storm5b_08_17, select = c("DateTime","nitrateuM"))
names(FRCH_storm5b_08_17_NO3) = c("valuedatetime","datavalue")
FRCH_storm5b_08_17_fDOM = subset(FRCH_storm5b_08_17, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm5b_08_17_fDOM) = c("valuedatetime","datavalue")
FRCH_storm5b_08_17_SPC = subset(FRCH_storm5b_08_17, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm5b_08_17_SPC) = c("valuedatetime","datavalue")
FRCH_storm5b_08_17_turb = subset(FRCH_storm5b_08_17, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm5b_08_17_turb) = c("valuedatetime","datavalue")

FRCH_storm6a_08_19_Q = subset(FRCH_storm6a_08_19, select = c("DateTime","MeanDischarge"))
names(FRCH_storm6a_08_19_Q) = c("valuedatetime","datavalue")
FRCH_storm6a_08_19_NO3 = subset(FRCH_storm6a_08_19, select = c("DateTime","nitrateuM"))
names(FRCH_storm6a_08_19_NO3) = c("valuedatetime","datavalue")
FRCH_storm6a_08_19_fDOM = subset(FRCH_storm6a_08_19, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm6a_08_19_fDOM) = c("valuedatetime","datavalue")
FRCH_storm6a_08_19_SPC = subset(FRCH_storm6a_08_19, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm6a_08_19_SPC) = c("valuedatetime","datavalue")
FRCH_storm6a_08_19_turb = subset(FRCH_storm6a_08_19, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm6a_08_19_turb) = c("valuedatetime","datavalue")

FRCH_storm6b_08_20_Q = subset(FRCH_storm6b_08_20, select = c("DateTime","MeanDischarge"))
names(FRCH_storm6b_08_20_Q) = c("valuedatetime","datavalue")
FRCH_storm6b_08_20_NO3 = subset(FRCH_storm6b_08_20, select = c("DateTime","nitrateuM"))
names(FRCH_storm6b_08_20_NO3) = c("valuedatetime","datavalue")
FRCH_storm6b_08_20_fDOM = subset(FRCH_storm6b_08_20, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm6b_08_20_fDOM) = c("valuedatetime","datavalue")
FRCH_storm6b_08_20_SPC = subset(FRCH_storm6b_08_20, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm6b_08_20_SPC) = c("valuedatetime","datavalue")
FRCH_storm6b_08_20_turb = subset(FRCH_storm6b_08_20, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm6b_08_20_turb) = c("valuedatetime","datavalue")

FRCH_storm7_08_25_Q = subset(FRCH_storm7_08_25, select = c("DateTime","MeanDischarge"))
names(FRCH_storm7_08_25_Q) = c("valuedatetime","datavalue")
FRCH_storm7_08_25_NO3 = subset(FRCH_storm7_08_25, select = c("DateTime","nitrateuM"))
names(FRCH_storm7_08_25_NO3) = c("valuedatetime","datavalue")
FRCH_storm7_08_25_fDOM = subset(FRCH_storm7_08_25, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm7_08_25_fDOM) = c("valuedatetime","datavalue")
FRCH_storm7_08_25_SPC = subset(FRCH_storm7_08_25, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm7_08_25_SPC) = c("valuedatetime","datavalue")
FRCH_storm7_08_25_turb = subset(FRCH_storm7_08_25, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm7_08_25_turb) = c("valuedatetime","datavalue")

FRCH_storm8_08_27_Q = subset(FRCH_storm8_08_27, select = c("DateTime","MeanDischarge"))
names(FRCH_storm8_08_27_Q) = c("valuedatetime","datavalue")
FRCH_storm8_08_27_NO3 = subset(FRCH_storm8_08_27, select = c("DateTime","nitrateuM"))
names(FRCH_storm8_08_27_NO3) = c("valuedatetime","datavalue")
FRCH_storm8_08_27_fDOM = subset(FRCH_storm8_08_27, select = c("DateTime","fDOM.QSU"))
names(FRCH_storm8_08_27_fDOM) = c("valuedatetime","datavalue")
FRCH_storm8_08_27_SPC = subset(FRCH_storm8_08_27, select = c("DateTime","SpCond.uScm"))
names(FRCH_storm8_08_27_SPC) = c("valuedatetime","datavalue")
FRCH_storm8_08_27_turb = subset(FRCH_storm8_08_27, select = c("DateTime","Turbidity.FNU"))
names(FRCH_storm8_08_27_turb) = c("valuedatetime","datavalue")


### Write csv ###
write.csv(FRCH_storm1_07_23, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm1_07_23.csv")
write.csv(FRCH_storm1_07_23_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm1_07_23_Q.csv")
write.csv(FRCH_storm1_07_23_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm1_07_23_NO3.csv")
write.csv(FRCH_storm1_07_23_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm1_07_23_fDOM.csv")
write.csv(FRCH_storm1_07_23_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm1_07_23_SPC.csv")
write.csv(FRCH_storm1_07_23_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm1_07_23_Turb.csv")

write.csv(FRCH_storm2_07_27, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm2_07_27.csv")
write.csv(FRCH_storm2_07_27_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm2_07_27_Q.csv")
write.csv(FRCH_storm2_07_27_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm2_07_27_NO3.csv")
write.csv(FRCH_storm2_07_27_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm2_07_27_fDOM.csv")
write.csv(FRCH_storm2_07_27_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm2_07_27_SPC.csv")
write.csv(FRCH_storm2_07_27_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm2_07_27_Turb.csv")

write.csv(FRCH_storm3_08_05, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm3_08_05.csv")
write.csv(FRCH_storm3_08_05_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm3_08_05_Q.csv")
write.csv(FRCH_storm3_08_05_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm3_08_05_NO3.csv")
write.csv(FRCH_storm3_08_05_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm3_08_05_fDOM.csv")
write.csv(FRCH_storm3_08_05_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm3_08_05_SPC.csv")
write.csv(FRCH_storm3_08_05_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm3_08_05_Turb.csv")

write.csv(FRCH_storm4_08_08, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm4_08_08.csv")
write.csv(FRCH_storm4_08_08_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm4_08_08_Q.csv")
write.csv(FRCH_storm4_08_08_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm4_08_08_NO3.csv")
write.csv(FRCH_storm4_08_08_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm4_08_08_fDOM.csv")
write.csv(FRCH_storm4_08_08_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm4_08_08_SPC.csv")
write.csv(FRCH_storm4_08_08_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm4_08_08_Turb.csv")

write.csv(FRCH_storm5a_08_15, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5a_08_15.csv")
write.csv(FRCH_storm5a_08_15_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5a_08_15_Q.csv")
write.csv(FRCH_storm5a_08_15_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5a_08_15_NO3.csv")
write.csv(FRCH_storm5a_08_15_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5a_08_15_fDOM.csv")
write.csv(FRCH_storm5a_08_15_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5a_08_15_SPC.csv")
write.csv(FRCH_storm5a_08_15_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5a_08_15_Turb.csv")

write.csv(FRCH_storm5b_08_17, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5b_08_17.csv")
write.csv(FRCH_storm5b_08_17_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5b_08_17_Q.csv")
write.csv(FRCH_storm5b_08_17_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5b_08_17_NO3.csv")
write.csv(FRCH_storm5b_08_17_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5b_08_17_fDOM.csv")
write.csv(FRCH_storm5b_08_17_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5b_08_17_SPC.csv")
write.csv(FRCH_storm5b_08_17_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm5b_08_17_Turb.csv")

write.csv(FRCH_storm6a_08_19, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6a_08_19.csv")
write.csv(FRCH_storm6a_08_19_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6a_08_19_Q.csv")
write.csv(FRCH_storm6a_08_19_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6a_08_19_NO3.csv")
write.csv(FRCH_storm6a_08_19_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6a_08_19_fDOM.csv")
write.csv(FRCH_storm6a_08_19_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6a_08_19_SPC.csv")
write.csv(FRCH_storm6a_08_19_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6a_08_19_Turb.csv")

write.csv(FRCH_storm6b_08_20, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6b_08_20.csv")
write.csv(FRCH_storm6b_08_20_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6b_08_20_Q.csv")
write.csv(FRCH_storm6b_08_20_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6b_08_20_NO3.csv")
write.csv(FRCH_storm6b_08_20_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6b_08_20_fDOM.csv")
write.csv(FRCH_storm6b_08_20_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6b_08_20_SPC.csv")
write.csv(FRCH_storm6b_08_20_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm6b_08_20_Turb.csv")

write.csv(FRCH_storm7_08_25, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm7_08_25.csv")
write.csv(FRCH_storm7_08_25_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm7_08_25_Q.csv")
write.csv(FRCH_storm7_08_25_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm7_08_25_NO3.csv")
write.csv(FRCH_storm7_08_25_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm7_08_25_fDOM.csv")
write.csv(FRCH_storm7_08_25_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm7_08_25_SPC.csv")
write.csv(FRCH_storm7_08_25_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm7_08_25_Turb.csv")

write.csv(FRCH_storm8_08_27, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm8_08_27.csv")
write.csv(FRCH_storm8_08_27_Q, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm8_08_27_Q.csv")
write.csv(FRCH_storm8_08_27_NO3, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm8_08_27_NO3.csv")
write.csv(FRCH_storm8_08_27_fDOM, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm8_08_27_fDOM.csv")
write.csv(FRCH_storm8_08_27_SPC, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm8_08_27_SPC.csv")
write.csv(FRCH_storm8_08_27_turb, "~/Documents/Storms/Storm_Events/2021/FRCH/FRCH_storm8_08_27_Turb.csv")

# STRT # 

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(7,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)

par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
par(new = T)

plot(STRT.2021.chem$Q ~ STRT.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")

### Storms ###
STRT <- STRT.2021.chem
STRT$MeanDischarge <- STRT$Q

# storm 1a # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-15 02:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-17 02:30:00", tz="America/Anchorage"), col="purple")

STRT_storm1a_08_15 = STRT[STRT$DateTime > as.POSIXct("2021-08-15 02:30:00", tz="America/Anchorage") &
                           STRT$DateTime < as.POSIXct("2021-08-17 02:30:00", tz="America/Anchorage"),]
plot(STRT_storm1a_08_15$MeanDischarge ~ as.POSIXct(STRT_storm1a_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(600,1500), col="blue", main="FRCH 210815 storm 1a",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$nitrateuM * 10 ~ STRT$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$fDOM.QSU * 10 ~ STRT$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$SpCond.uScm * 2 ~ STRT$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$Turbidity.FNU * 50 ~ STRT$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 1b # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-17 02:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage"), col="purple")

STRT_storm1b_08_17 = STRT[STRT$DateTime > as.POSIXct("2021-08-17 02:30:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage"),]
plot(STRT_storm1b_08_17$MeanDischarge ~ as.POSIXct(STRT_storm1b_08_17$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(600,1500), col="blue", main="FRCH 210817 storm 1b",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$nitrateuM * 10 ~ STRT$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$fDOM.QSU * 10 ~ STRT$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$SpCond.uScm * 2 ~ STRT$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$Turbidity.FNU * 50 ~ STRT$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 2a # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-20 18:30:00", tz="America/Anchorage"), col="purple")

STRT_storm2a_08_19 = STRT[STRT$DateTime > as.POSIXct("2021-08-19 18:30:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2021-08-20 18:30:00", tz="America/Anchorage"),]
plot(STRT_storm2a_08_19$MeanDischarge ~ as.POSIXct(STRT_storm2a_08_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1500), col="blue", main="FRCH 210819 storm 2a",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$nitrateuM * 10 ~ STRT$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$fDOM.QSU * 10 ~ STRT$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$SpCond.uScm * 2 ~ STRT$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$Turbidity.FNU * 50 ~ STRT$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 2b # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-20 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-22 23:30:00", tz="America/Anchorage"), col="purple")

STRT_storm2b_08_20 = STRT[STRT$DateTime > as.POSIXct("2021-08-20 18:30:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2021-08-22 23:30:00", tz="America/Anchorage"),]
plot(STRT_storm2b_08_20$MeanDischarge ~ as.POSIXct(STRT_storm2b_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1500), col="blue", main="FRCH 2108120 storm 2b",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$nitrateuM * 10 ~ STRT$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$fDOM.QSU * 10 ~ STRT$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$SpCond.uScm * 2 ~ STRT$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$Turbidity.FNU * 50 ~ STRT$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 3 # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-25 15:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-26 23:30:00", tz="America/Anchorage"), col="purple")

STRT_storm3_08_25 = STRT[STRT$DateTime > as.POSIXct("2021-08-25 15:30:00", tz="America/Anchorage") &
                            STRT$DateTime < as.POSIXct("2021-08-26 23:30:00", tz="America/Anchorage"),]
plot(STRT_storm3_08_25$MeanDischarge ~ as.POSIXct(STRT_storm3_08_25$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(900,1300), col="blue", main="FRCH 210825 storm 3",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$nitrateuM * 10 ~ STRT$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$fDOM.QSU * 10 ~ STRT$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$SpCond.uScm * 2 ~ STRT$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT$Turbidity.FNU * 50 ~ STRT$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-13 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No more storms # 
plot(STRT$MeanDischarge ~ STRT$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-09-01 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)

plot(STRT.st$inst_rainfall_mm ~ STRT.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-09-01 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.05)

# Modify #
STRT_storm1a_08_15_Q = subset(STRT_storm1a_08_15, select = c("DateTime","MeanDischarge"))
names(STRT_storm1a_08_15_Q) = c("valuedatetime","datavalue")
STRT_storm1a_08_15_NO3 = subset(STRT_storm1a_08_15, select = c("DateTime","nitrateuM"))
names(STRT_storm1a_08_15_NO3) = c("valuedatetime","datavalue")
STRT_storm1a_08_15_fDOM = subset(STRT_storm1a_08_15, select = c("DateTime","fDOM.QSU"))
names(STRT_storm1a_08_15_fDOM) = c("valuedatetime","datavalue")
STRT_storm1a_08_15_SPC = subset(STRT_storm1a_08_15, select = c("DateTime","SpCond.uScm"))
names(STRT_storm1a_08_15_SPC) = c("valuedatetime","datavalue")
STRT_storm1a_08_15_turb = subset(STRT_storm1a_08_15, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm1a_08_15_turb) = c("valuedatetime","datavalue")

STRT_storm1b_08_17_Q = subset(STRT_storm1b_08_17, select = c("DateTime","MeanDischarge"))
names(STRT_storm1b_08_17_Q) = c("valuedatetime","datavalue")
STRT_storm1b_08_17_NO3 = subset(STRT_storm1b_08_17, select = c("DateTime","nitrateuM"))
names(STRT_storm1b_08_17_NO3) = c("valuedatetime","datavalue")
STRT_storm1b_08_17_fDOM = subset(STRT_storm1b_08_17, select = c("DateTime","fDOM.QSU"))
names(STRT_storm1b_08_17_fDOM) = c("valuedatetime","datavalue")
STRT_storm1b_08_17_SPC = subset(STRT_storm1b_08_17, select = c("DateTime","SpCond.uScm"))
names(STRT_storm1b_08_17_SPC) = c("valuedatetime","datavalue")
STRT_storm1b_08_17_turb = subset(STRT_storm1b_08_17, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm1b_08_17_turb) = c("valuedatetime","datavalue")

STRT_storm2a_08_19_Q = subset(STRT_storm2a_08_19, select = c("DateTime","MeanDischarge"))
names(STRT_storm2a_08_19_Q) = c("valuedatetime","datavalue")
STRT_storm2a_08_19_NO3 = subset(STRT_storm2a_08_19, select = c("DateTime","nitrateuM"))
names(STRT_storm2a_08_19_NO3) = c("valuedatetime","datavalue")
STRT_storm2a_08_19_fDOM = subset(STRT_storm2a_08_19, select = c("DateTime","fDOM.QSU"))
names(STRT_storm2a_08_19_fDOM) = c("valuedatetime","datavalue")
STRT_storm2a_08_19_SPC = subset(STRT_storm2a_08_19, select = c("DateTime","SpCond.uScm"))
names(STRT_storm2a_08_19_SPC) = c("valuedatetime","datavalue")
STRT_storm2a_08_19_turb = subset(STRT_storm2a_08_19, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm2a_08_19_turb) = c("valuedatetime","datavalue")

STRT_storm2b_08_20_Q = subset(STRT_storm2b_08_20, select = c("DateTime","MeanDischarge"))
names(STRT_storm2b_08_20_Q) = c("valuedatetime","datavalue")
STRT_storm2b_08_20_NO3 = subset(STRT_storm2b_08_20, select = c("DateTime","nitrateuM"))
names(STRT_storm2b_08_20_NO3) = c("valuedatetime","datavalue")
STRT_storm2b_08_20_fDOM = subset(STRT_storm2b_08_20, select = c("DateTime","fDOM.QSU"))
names(STRT_storm2b_08_20_fDOM) = c("valuedatetime","datavalue")
STRT_storm2b_08_20_SPC = subset(STRT_storm2b_08_20, select = c("DateTime","SpCond.uScm"))
names(STRT_storm2b_08_20_SPC) = c("valuedatetime","datavalue")
STRT_storm2b_08_20_turb = subset(STRT_storm2b_08_20, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm2b_08_20_turb) = c("valuedatetime","datavalue")

STRT_storm3_08_25_Q = subset(STRT_storm3_08_25, select = c("DateTime","MeanDischarge"))
names(STRT_storm3_08_25_Q) = c("valuedatetime","datavalue")
STRT_storm3_08_25_NO3 = subset(STRT_storm3_08_25, select = c("DateTime","nitrateuM"))
names(STRT_storm3_08_25_NO3) = c("valuedatetime","datavalue")
STRT_storm3_08_25_fDOM = subset(STRT_storm3_08_25, select = c("DateTime","fDOM.QSU"))
names(STRT_storm3_08_25_fDOM) = c("valuedatetime","datavalue")
STRT_storm3_08_25_SPC = subset(STRT_storm3_08_25, select = c("DateTime","SpCond.uScm"))
names(STRT_storm3_08_25_SPC) = c("valuedatetime","datavalue")
STRT_storm3_08_25_turb = subset(STRT_storm3_08_25, select = c("DateTime","Turbidity.FNU"))
names(STRT_storm3_08_25_turb) = c("valuedatetime","datavalue")

# Write CSV # 
write.csv(STRT_storm1a_08_15, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1a_08_15.csv")
write.csv(STRT_storm1a_08_15_Q, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1a_08_15_Q.csv")
write.csv(STRT_storm1a_08_15_NO3, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1a_08_15_NO3.csv")
write.csv(STRT_storm1a_08_15_fDOM, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1a_08_15_fDOM.csv")
write.csv(STRT_storm1a_08_15_SPC, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1a_08_15_SPC.csv")
write.csv(STRT_storm1a_08_15_turb, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1a_08_15_Turb.csv")

write.csv(STRT_storm1b_08_17, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1b_08_17.csv")
write.csv(STRT_storm1b_08_17_Q, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1b_08_17_Q.csv")
write.csv(STRT_storm1b_08_17_NO3, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1b_08_17_NO3.csv")
write.csv(STRT_storm1b_08_17_fDOM, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1b_08_17_fDOM.csv")
write.csv(STRT_storm1b_08_17_SPC, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1b_08_17_SPC.csv")
write.csv(STRT_storm1b_08_17_turb, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm1b_08_17_Turb.csv")

write.csv(STRT_storm2a_08_19, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2a_08_19.csv")
write.csv(STRT_storm2a_08_19_Q, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2a_08_19_Q.csv")
write.csv(STRT_storm2a_08_19_NO3, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2a_08_19_NO3.csv")
write.csv(STRT_storm2a_08_19_fDOM, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2a_08_19_fDOM.csv")
write.csv(STRT_storm2a_08_19_SPC, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2a_08_19_SPC.csv")
write.csv(STRT_storm2a_08_19_turb, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2a_08_19_Turb.csv")

write.csv(STRT_storm2b_08_20, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2b_08_20.csv")
write.csv(STRT_storm2b_08_20_Q, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2b_08_20_Q.csv")
write.csv(STRT_storm2b_08_20_NO3, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2b_08_20_NO3.csv")
write.csv(STRT_storm2b_08_20_fDOM, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2b_08_20_fDOM.csv")
write.csv(STRT_storm2b_08_20_SPC, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2b_08_20_SPC.csv")
write.csv(STRT_storm2b_08_20_turb, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm2b_08_20_Turb.csv")

write.csv(STRT_storm3_08_25, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm3_08_25.csv")
write.csv(STRT_storm3_08_25_Q, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm3_08_25_Q.csv")
write.csv(STRT_storm3_08_25_NO3, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm3_08_25_NO3.csv")
write.csv(STRT_storm3_08_25_fDOM, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm3_08_25_fDOM.csv")
write.csv(STRT_storm3_08_25_SPC, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm3_08_25_SPC.csv")
write.csv(STRT_storm3_08_25_turb, "~/Documents/Storms/Storm_Events/2021/STRT/STRT_storm3_08_25_Turb.csv")


# POKE # 

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(7,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)

par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
par(new = T)

plot(POKE.2021.chem$Q ~ POKE.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")

### Storms ###
POKE <- POKE.2021.chem
POKE$MeanDischarge <- POKE$Q

# storm 1 # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-05-16 07:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-05-18 18:30:00", tz="America/Anchorage"), col="purple")

POKE_storm1_05_16 = POKE[POKE$DateTime > as.POSIXct("2021-05-16 07:30:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2021-05-18 18:30:00", tz="America/Anchorage"),]
plot(POKE_storm1_05_16$MeanDischarge ~ as.POSIXct(POKE_storm1_05_16$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,800), col="blue", main="POKE 210516 storm 1",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 2 # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-06-01 07:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-06-03 07:30:00", tz="America/Anchorage"), col="purple")

POKE_storm2_06_01 = POKE[POKE$DateTime > as.POSIXct("2021-06-01 07:30:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2021-06-03 07:30:00", tz="America/Anchorage"),]
plot(POKE_storm2_06_01$MeanDischarge ~ as.POSIXct(POKE_storm2_06_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,600), col="blue", main="POKE 210601 storm 2",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 3 # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-06-19 07:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-06-21 01:30:00", tz="America/Anchorage"), col="purple")

POKE_storm3_06_19 = POKE[POKE$DateTime > as.POSIXct("2021-06-19 07:30:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2021-06-21 01:30:00", tz="America/Anchorage"),]
plot(POKE_storm3_06_19$MeanDischarge ~ as.POSIXct(POKE_storm3_06_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,600), col="blue", main="POKE 210619 storm 3",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 4 # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-23 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-25 20:30:00", tz="America/Anchorage"), col="purple")

POKE_storm4_07_23 = POKE[POKE$DateTime > as.POSIXct("2021-07-23 20:30:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2021-07-25 20:30:00", tz="America/Anchorage"),]
plot(POKE_storm4_07_23$MeanDischarge ~ as.POSIXct(POKE_storm4_07_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,600), col="blue", main="POKE 210723 storm 4",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 5 # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-07-27 09:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-31 05:30:00", tz="America/Anchorage"), col="purple")

POKE_storm5_07_27 = POKE[POKE$DateTime > as.POSIXct("2021-07-27 09:30:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2021-07-31 05:30:00", tz="America/Anchorage"),]
plot(POKE_storm5_07_27$MeanDischarge ~ as.POSIXct(POKE_storm5_07_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,600), col="blue", main="POKE 210727 storm 5",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-01 00:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 6 # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-08 13:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-10 05:30:00", tz="America/Anchorage"), col="purple")

POKE_storm6_08_08 = POKE[POKE$DateTime > as.POSIXct("2021-08-08 13:30:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2021-08-10 05:30:00", tz="America/Anchorage"),]
plot(POKE_storm6_08_08$MeanDischarge ~ as.POSIXct(POKE_storm6_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(200,600), col="blue", main="POKE 210808 storm 6",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7a # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-14 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-19 13:30:00", tz="America/Anchorage"), col="purple")

POKE_storm7a_08_14 = POKE[POKE$DateTime > as.POSIXct("2021-08-14 20:30:00", tz="America/Anchorage") &
                           POKE$DateTime < as.POSIXct("2021-08-19 13:30:00", tz="America/Anchorage"),]
plot(POKE_storm7a_08_14$MeanDischarge ~ as.POSIXct(POKE_storm7a_08_14$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1400), col="blue", main="POKE 210814 storm 7a",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7b # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-19 13:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-22 07:30:00", tz="America/Anchorage"), col="purple")

POKE_storm7b_08_19 = POKE[POKE$DateTime > as.POSIXct("2021-08-19 13:30:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2021-08-22 07:30:00", tz="America/Anchorage"),]
plot(POKE_storm7b_08_19$MeanDischarge ~ as.POSIXct(POKE_storm7b_08_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(400,1400), col="blue", main="POKE 210819 storm 7b",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7c # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-23 07:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-24 08:30:00", tz="America/Anchorage"), col="purple")

POKE_storm7c_08_23 = POKE[POKE$DateTime > as.POSIXct("2021-08-23 07:30:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2021-08-24 08:30:00", tz="America/Anchorage"),]
plot(POKE_storm7c_08_23$MeanDischarge ~ as.POSIXct(POKE_storm7c_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1000), col="blue", main="POKE 210823 storm 7c",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# storm 7d # 
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)
abline(v= as.POSIXct("2021-08-26 19:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-28 08:30:00", tz="America/Anchorage"), col="purple")

POKE_storm7d_08_26 = POKE[POKE$DateTime > as.POSIXct("2021-08-26 19:30:00", tz="America/Anchorage") &
                            POKE$DateTime < as.POSIXct("2021-08-28 08:30:00", tz="America/Anchorage"),]
plot(POKE_storm7d_08_26$MeanDischarge ~ as.POSIXct(POKE_storm7d_08_26$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(800,1200), col="blue", main="POKE 210826 storm 7d",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$nitrateuM * 10 ~ POKE$DateTime, xlab="", ylab="", col="purple",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$fDOM.QSU * 10 ~ POKE$DateTime, xlab="", ylab="", col="maroon",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$SpCond.uScm * 2 ~ POKE$DateTime, xlab="", ylab="", col="red",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE$Turbidity.FNU * 50 ~ POKE$DateTime, xlab="", ylab="", col="black",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-01 00:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# No more alarms #
plot(POKE$MeanDischarge ~ POKE$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-09-01 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
par(new = T)

plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-09-01 00:00:00","2021-09-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.05)

# Modify #
POKE_storm1_05_16_Q = subset(POKE_storm1_05_16, select = c("DateTime","MeanDischarge"))
names(POKE_storm1_05_16_Q) = c("valuedatetime","datavalue")
POKE_storm1_05_16_NO3 = subset(POKE_storm1_05_16, select = c("DateTime","nitrateuM"))
names(POKE_storm1_05_16_NO3) = c("valuedatetime","datavalue")
POKE_storm1_05_16_fDOM = subset(POKE_storm1_05_16, select = c("DateTime","fDOM.QSU"))
names(POKE_storm1_05_16_fDOM) = c("valuedatetime","datavalue")
POKE_storm1_05_16_SPC = subset(POKE_storm1_05_16, select = c("DateTime","SpCond.uScm"))
names(POKE_storm1_05_16_SPC) = c("valuedatetime","datavalue")
POKE_storm1_05_16_turb = subset(POKE_storm1_05_16, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm1_05_16_turb) = c("valuedatetime","datavalue")

POKE_storm2_06_01_Q = subset(POKE_storm2_06_01, select = c("DateTime","MeanDischarge"))
names(POKE_storm2_06_01_Q) = c("valuedatetime","datavalue")
POKE_storm2_06_01_NO3 = subset(POKE_storm2_06_01, select = c("DateTime","nitrateuM"))
names(POKE_storm2_06_01_NO3) = c("valuedatetime","datavalue")
POKE_storm2_06_01_fDOM = subset(POKE_storm2_06_01, select = c("DateTime","fDOM.QSU"))
names(POKE_storm2_06_01_fDOM) = c("valuedatetime","datavalue")
POKE_storm2_06_01_SPC = subset(POKE_storm2_06_01, select = c("DateTime","SpCond.uScm"))
names(POKE_storm2_06_01_SPC) = c("valuedatetime","datavalue")
POKE_storm2_06_01_turb = subset(POKE_storm2_06_01, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm2_06_01_turb) = c("valuedatetime","datavalue")

POKE_storm3_06_19_Q = subset(POKE_storm3_06_19, select = c("DateTime","MeanDischarge"))
names(POKE_storm3_06_19_Q) = c("valuedatetime","datavalue")
POKE_storm3_06_19_NO3 = subset(POKE_storm3_06_19, select = c("DateTime","nitrateuM"))
names(POKE_storm3_06_19_NO3) = c("valuedatetime","datavalue")
POKE_storm3_06_19_fDOM = subset(POKE_storm3_06_19, select = c("DateTime","fDOM.QSU"))
names(POKE_storm3_06_19_fDOM) = c("valuedatetime","datavalue")
POKE_storm3_06_19_SPC = subset(POKE_storm3_06_19, select = c("DateTime","SpCond.uScm"))
names(POKE_storm3_06_19_SPC) = c("valuedatetime","datavalue")
POKE_storm3_06_19_turb = subset(POKE_storm3_06_19, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm3_06_19_turb) = c("valuedatetime","datavalue")

POKE_storm4_07_23_Q = subset(POKE_storm4_07_23, select = c("DateTime","MeanDischarge"))
names(POKE_storm4_07_23_Q) = c("valuedatetime","datavalue")
POKE_storm4_07_23_NO3 = subset(POKE_storm4_07_23, select = c("DateTime","nitrateuM"))
names(POKE_storm4_07_23_NO3) = c("valuedatetime","datavalue")
POKE_storm4_07_23_fDOM = subset(POKE_storm4_07_23, select = c("DateTime","fDOM.QSU"))
names(POKE_storm4_07_23_fDOM) = c("valuedatetime","datavalue")
POKE_storm4_07_23_SPC = subset(POKE_storm4_07_23, select = c("DateTime","SpCond.uScm"))
names(POKE_storm4_07_23_SPC) = c("valuedatetime","datavalue")
POKE_storm4_07_23_turb = subset(POKE_storm4_07_23, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm4_07_23_turb) = c("valuedatetime","datavalue")

POKE_storm5_07_27_Q = subset(POKE_storm5_07_27, select = c("DateTime","MeanDischarge"))
names(POKE_storm5_07_27_Q) = c("valuedatetime","datavalue")
POKE_storm5_07_27_NO3 = subset(POKE_storm5_07_27, select = c("DateTime","nitrateuM"))
names(POKE_storm5_07_27_NO3) = c("valuedatetime","datavalue")
POKE_storm5_07_27_fDOM = subset(POKE_storm5_07_27, select = c("DateTime","fDOM.QSU"))
names(POKE_storm5_07_27_fDOM) = c("valuedatetime","datavalue")
POKE_storm5_07_27_SPC = subset(POKE_storm5_07_27, select = c("DateTime","SpCond.uScm"))
names(POKE_storm5_07_27_SPC) = c("valuedatetime","datavalue")
POKE_storm5_07_27_turb = subset(POKE_storm5_07_27, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm5_07_27_turb) = c("valuedatetime","datavalue")

POKE_storm6_08_08_Q = subset(POKE_storm6_08_08, select = c("DateTime","MeanDischarge"))
names(POKE_storm6_08_08_Q) = c("valuedatetime","datavalue")
POKE_storm6_08_08_NO3 = subset(POKE_storm6_08_08, select = c("DateTime","nitrateuM"))
names(POKE_storm6_08_08_NO3) = c("valuedatetime","datavalue")
POKE_storm6_08_08_fDOM = subset(POKE_storm6_08_08, select = c("DateTime","fDOM.QSU"))
names(POKE_storm6_08_08_fDOM) = c("valuedatetime","datavalue")
POKE_storm6_08_08_SPC = subset(POKE_storm6_08_08, select = c("DateTime","SpCond.uScm"))
names(POKE_storm6_08_08_SPC) = c("valuedatetime","datavalue")
POKE_storm6_08_08_turb = subset(POKE_storm6_08_08, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm6_08_08_turb) = c("valuedatetime","datavalue")

POKE_storm7a_08_14_Q = subset(POKE_storm7a_08_14, select = c("DateTime","MeanDischarge"))
names(POKE_storm7a_08_14_Q) = c("valuedatetime","datavalue")
POKE_storm7a_08_14_NO3 = subset(POKE_storm7a_08_14, select = c("DateTime","nitrateuM"))
names(POKE_storm7a_08_14_NO3) = c("valuedatetime","datavalue")
POKE_storm7a_08_14_fDOM = subset(POKE_storm7a_08_14, select = c("DateTime","fDOM.QSU"))
names(POKE_storm7a_08_14_fDOM) = c("valuedatetime","datavalue")
POKE_storm7a_08_14_SPC = subset(POKE_storm7a_08_14, select = c("DateTime","SpCond.uScm"))
names(POKE_storm7a_08_14_SPC) = c("valuedatetime","datavalue")
POKE_storm7a_08_14_turb = subset(POKE_storm7a_08_14, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm7a_08_14_turb) = c("valuedatetime","datavalue")

POKE_storm7b_08_19_Q = subset(POKE_storm7b_08_19, select = c("DateTime","MeanDischarge"))
names(POKE_storm7b_08_19_Q) = c("valuedatetime","datavalue")
POKE_storm7b_08_19_NO3 = subset(POKE_storm7b_08_19, select = c("DateTime","nitrateuM"))
names(POKE_storm7b_08_19_NO3) = c("valuedatetime","datavalue")
POKE_storm7b_08_19_fDOM = subset(POKE_storm7b_08_19, select = c("DateTime","fDOM.QSU"))
names(POKE_storm7b_08_19_fDOM) = c("valuedatetime","datavalue")
POKE_storm7b_08_19_SPC = subset(POKE_storm7b_08_19, select = c("DateTime","SpCond.uScm"))
names(POKE_storm7b_08_19_SPC) = c("valuedatetime","datavalue")
POKE_storm7b_08_19_turb = subset(POKE_storm7b_08_19, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm7b_08_19_turb) = c("valuedatetime","datavalue")

POKE_storm7c_08_23_Q = subset(POKE_storm7c_08_23, select = c("DateTime","MeanDischarge"))
names(POKE_storm7c_08_23_Q) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_NO3 = subset(POKE_storm7c_08_23, select = c("DateTime","nitrateuM"))
names(POKE_storm7c_08_23_NO3) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_fDOM = subset(POKE_storm7c_08_23, select = c("DateTime","fDOM.QSU"))
names(POKE_storm7c_08_23_fDOM) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_SPC = subset(POKE_storm7c_08_23, select = c("DateTime","SpCond.uScm"))
names(POKE_storm7c_08_23_SPC) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_turb = subset(POKE_storm7c_08_23, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm7c_08_23_turb) = c("valuedatetime","datavalue")

POKE_storm7d_08_26_Q = subset(POKE_storm7d_08_26, select = c("DateTime","MeanDischarge"))
names(POKE_storm7d_08_26_Q) = c("valuedatetime","datavalue")
POKE_storm7d_08_26_NO3 = subset(POKE_storm7d_08_26, select = c("DateTime","nitrateuM"))
names(POKE_storm7d_08_26_NO3) = c("valuedatetime","datavalue")
POKE_storm7d_08_26_fDOM = subset(POKE_storm7d_08_26, select = c("DateTime","fDOM.QSU"))
names(POKE_storm7d_08_26_fDOM) = c("valuedatetime","datavalue")
POKE_storm7d_08_26_SPC = subset(POKE_storm7d_08_26, select = c("DateTime","SpCond.uScm"))
names(POKE_storm7d_08_26_SPC) = c("valuedatetime","datavalue")
POKE_storm7d_08_26_turb = subset(POKE_storm7d_08_26, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm7d_08_26_turb) = c("valuedatetime","datavalue")

# Write CSV # 
write.csv(POKE_storm1_05_16, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm1_05_16.csv")
write.csv(POKE_storm1_05_16_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm1_05_16_Q.csv")
write.csv(POKE_storm1_05_16_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm1_05_16_NO3.csv")
write.csv(POKE_storm1_05_16_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm1_05_16_fDOM.csv")
write.csv(POKE_storm1_05_16_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm1_05_16_SPC.csv")
write.csv(POKE_storm1_05_16_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm1_05_16_Turb.csv")

write.csv(POKE_storm2_06_01, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm2_06_01.csv")
write.csv(POKE_storm2_06_01_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm2_06_01_Q.csv")
write.csv(POKE_storm2_06_01_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm2_06_01_NO3.csv")
write.csv(POKE_storm2_06_01_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm2_06_01_fDOM.csv")
write.csv(POKE_storm2_06_01_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm2_06_01_SPC.csv")
write.csv(POKE_storm2_06_01_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm2_06_01_Turb.csv")

write.csv(POKE_storm3_06_19, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm3_06_19.csv")
write.csv(POKE_storm3_06_19_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm3_06_19_Q.csv")
write.csv(POKE_storm3_06_19_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm3_06_19_NO3.csv")
write.csv(POKE_storm3_06_19_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm3_06_19_fDOM.csv")
write.csv(POKE_storm3_06_19_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm3_06_19_SPC.csv")
write.csv(POKE_storm3_06_19_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm3_06_19_Turb.csv")

write.csv(POKE_storm4_07_23, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm4_07_23.csv")
write.csv(POKE_storm4_07_23_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm4_07_23_Q.csv")
write.csv(POKE_storm4_07_23_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm4_07_23_NO3.csv")
write.csv(POKE_storm4_07_23_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm4_07_23_fDOM.csv")
write.csv(POKE_storm4_07_23_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm4_07_23_SPC.csv")
write.csv(POKE_storm4_07_23_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm4_07_23_Turb.csv")

write.csv(POKE_storm5_07_27, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm5_07_27.csv")
write.csv(POKE_storm5_07_27_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm5_07_27_Q.csv")
write.csv(POKE_storm5_07_27_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm5_07_27_NO3.csv")
write.csv(POKE_storm5_07_27_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm5_07_27_fDOM.csv")
write.csv(POKE_storm5_07_27_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm5_07_27_SPC.csv")
write.csv(POKE_storm5_07_27_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm5_07_27_Turb.csv")

write.csv(POKE_storm6_08_08, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm6_08_08.csv")
write.csv(POKE_storm6_08_08_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm6_08_08_Q.csv")
write.csv(POKE_storm6_08_08_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm6_08_08_NO3.csv")
write.csv(POKE_storm6_08_08_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm6_08_08_fDOM.csv")
write.csv(POKE_storm6_08_08_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm6_08_08_SPC.csv")
write.csv(POKE_storm6_08_08_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm6_08_08_Turb.csv")

write.csv(POKE_storm7a_08_14, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7a_08_14.csv")
write.csv(POKE_storm7a_08_14_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7a_08_14_Q.csv")
write.csv(POKE_storm7a_08_14_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7a_08_14_NO3.csv")
write.csv(POKE_storm7a_08_14_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7a_08_14_fDOM.csv")
write.csv(POKE_storm7a_08_14_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7a_08_14_SPC.csv")
write.csv(POKE_storm7a_08_14_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7a_08_14_Turb.csv")

write.csv(POKE_storm7b_08_19, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19.csv")
write.csv(POKE_storm7b_08_19_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_Q.csv")
write.csv(POKE_storm7b_08_19_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_NO3.csv")
write.csv(POKE_storm7b_08_19_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_fDOM.csv")
write.csv(POKE_storm7b_08_19_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_SPC.csv")
write.csv(POKE_storm7b_08_19_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_Turb.csv")

write.csv(POKE_storm7c_08_23, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23.csv")
write.csv(POKE_storm7c_08_23_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_Q.csv")
write.csv(POKE_storm7c_08_23_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_NO3.csv")
write.csv(POKE_storm7c_08_23_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_fDOM.csv")
write.csv(POKE_storm7c_08_23_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_SPC.csv")
write.csv(POKE_storm7c_08_23_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_Turb.csv")

write.csv(POKE_storm7d_08_26, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7d_08_26.csv")
write.csv(POKE_storm7d_08_26_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7d_08_26_Q.csv")
write.csv(POKE_storm7d_08_26_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7d_08_26_NO3.csv")
write.csv(POKE_storm7d_08_26_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7d_08_26_fDOM.csv")
write.csv(POKE_storm7d_08_26_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7d_08_26_SPC.csv")
write.csv(POKE_storm7d_08_26_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7d_08_26_Turb.csv")


# CARI # 

# Whole record #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)


# Storm 1 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-05-16 13:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-05-18 07:45:00", tz="America/Anchorage"), col="purple")

CARI_storm1_05_16 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-05-16 13:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-05-18 07:45:00", tz="America/Anchorage"),]
plot(CARI_storm1_05_16$Discharge ~ as.POSIXct(CARI_storm1_05_16$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,400), col="blue", main="CARI 200516 storm 1",
     xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 5 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1.5 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 10 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 20 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-15 0:00:00","2021-05-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 2 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-05-31 0:00:00","2021-06-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-31 0:00:00","2021-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-06-01 20:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-06-03 07:45:00", tz="America/Anchorage"), col="purple")

CARI_storm2_06_01 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-06-01 20:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-06-03 07:45:00", tz="America/Anchorage"),]
plot(CARI_storm2_06_01$Discharge ~ as.POSIXct(CARI_storm2_06_01$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,100), col="blue", main="CARI 200601 storm 2",
     xlim = as.POSIXct(c("2021-05-31 0:00:00","2021-06-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 6 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-05-31 0:00:00","2021-06-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 3 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-06-15 0:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-06-15 0:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-06-19 18:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-06-21 10:45:00", tz="America/Anchorage"), col="purple")

CARI_storm3_06_19 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-06-19 18:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-06-21 10:45:00", tz="America/Anchorage"),]
plot(CARI_storm3_06_19$Discharge ~ as.POSIXct(CARI_storm3_06_19$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,150), col="blue", main="CARI 200619 storm 3",
     xlim = as.POSIXct(c("2021-06-15 0:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 6 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-06-15 0:00:00","2021-06-30 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 4 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-07-24 04:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-25 12:45:00", tz="America/Anchorage"), col="purple")

CARI_storm4_07_24 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-07-24 04:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-07-25 12:45:00", tz="America/Anchorage"),]
plot(CARI_storm4_07_24$Discharge ~ as.POSIXct(CARI_storm4_07_24$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,150), col="blue", main="CARI 200724 storm 4",
     xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 4 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 5 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-07-27 17:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-07-31 20:45:00", tz="America/Anchorage"), col="purple")

CARI_storm5_07_27 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-07-27 17:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-07-31 20:45:00", tz="America/Anchorage"),]
plot(CARI_storm5_07_27$Discharge ~ as.POSIXct(CARI_storm5_07_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,150), col="blue", main="CARI 200727 storm 5",
     xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 4 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-15 0:00:00","2021-07-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 6 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-07-31 0:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-31 0:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-08 23:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-12 20:45:00", tz="America/Anchorage"), col="purple")

CARI_storm6_08_08 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-08 17:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-08-12 20:45:00", tz="America/Anchorage"),]
plot(CARI_storm6_08_08$Discharge ~ as.POSIXct(CARI_storm6_08_08$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,150), col="blue", main="CARI 200808 storm 6",
     xlim = as.POSIXct(c("2021-07-31 0:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 4 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-07-31 0:00:00","2021-08-15 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 7 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-15 07:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-19 23:45:00", tz="America/Anchorage"), col="purple")

CARI_storm7_08_15 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-15 07:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-08-19 23:45:00", tz="America/Anchorage"),]
plot(CARI_storm7_08_15$Discharge ~ as.POSIXct(CARI_storm7_08_15$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,700), col="blue", main="CARI 200815 storm 7",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 4 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 8#
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-20 03:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-23 12:45:00", tz="America/Anchorage"), col="purple")

CARI_storm8_08_20 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-20 03:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-08-23 12:45:00", tz="America/Anchorage"),]
plot(CARI_storm8_08_20$Discharge ~ as.POSIXct(CARI_storm8_08_20$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,400), col="blue", main="CARI 200820 storm 8",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 4 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 9 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-23 12:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-24 15:45:00", tz="America/Anchorage"), col="purple")

CARI_storm9_08_23 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-23 12:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-08-24 15:45:00", tz="America/Anchorage"),]
plot(CARI_storm9_08_23$Discharge ~ as.POSIXct(CARI_storm9_08_23$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,400), col="blue", main="CARI 200823 storm 9",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 4 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)

# Storm 10 #
plot(CARI_2021$Discharge ~ CARI_2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
abline(h=CARI_bfQ_mn*2, col="red", lty=2)
abline(h=CARI_bfQ_mn, col="red")
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(poke.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(poke.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2021-08-27 02:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2021-08-29 15:45:00", tz="America/Anchorage"), col="purple")

CARI_storm10_08_27 = CARI_2021[CARI_2021$DateTime > as.POSIXct("2021-08-27 02:45:00", tz="America/Anchorage") &
                                CARI_2021$DateTime < as.POSIXct("2021-08-29 15:45:00", tz="America/Anchorage"),]
plot(CARI_storm10_08_27$Discharge ~ as.POSIXct(CARI_storm10_08_27$DateTime, tz="America/Anchorage"), type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,400), col="blue", main="CARI 200827 storm 10",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$NO3 * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$fDOM * 1 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="brown",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$SpCond * 1/8 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="red",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
lines(CARI_2021$Turb * 4 ~ CARI_2021$DateTime, type="l", xlab="", ylab="", col="black",
      xlim = as.POSIXct(c("2021-05-01 0:00:00","2021-10-31 23:45:00"), tz="America/Anchorage"))
par(new = T)
plot(POKE.st$inst_rainfall_mm ~ POKE.st$DateTime, type="h",
     xlim = as.POSIXct(c("2021-08-14 0:00:00","2021-08-31 23:45:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)


# NO3 fDOM SPC Turb #

CARI_storm1_05_16_Q = subset(CARI_storm1_05_16, select = c("DateTime","Discharge"))
names(CARI_storm1_05_16_Q) = c("valuedatetime","datavalue")
CARI_storm1_05_16_NO3 = subset(CARI_storm1_05_16, select = c("DateTime", "NO3"))
names(CARI_storm1_05_16_NO3) = c("valuedatetime","datavalue")
CARI_storm1_05_16_fDOM = subset(CARI_storm1_05_16, select = c("DateTime","fDOM"))
names(CARI_storm1_05_16_fDOM) = c("valuedatetime","datavalue")
CARI_storm1_05_16_SPC = subset(CARI_storm1_05_16, select = c("DateTime", "SpCond"))
names(CARI_storm1_05_16_SPC) = c("valuedatetime","datavalue")
CARI_storm1_05_16_turb = subset(CARI_storm1_05_16, select = c("DateTime", "Turb"))
names(CARI_storm1_05_16_turb) = c("valuedatetime","datavalue")

CARI_storm2_06_01_Q = subset(CARI_storm2_06_01, select = c("DateTime","Discharge"))
names(CARI_storm2_06_01_Q) = c("valuedatetime","datavalue")
CARI_storm2_06_01_NO3 = subset(CARI_storm2_06_01, select = c("DateTime", "NO3"))
names(CARI_storm2_06_01_NO3) = c("valuedatetime","datavalue")
CARI_storm2_06_01_fDOM = subset(CARI_storm2_06_01, select = c("DateTime","fDOM"))
names(CARI_storm2_06_01_fDOM) = c("valuedatetime","datavalue")
CARI_storm2_06_01_SPC = subset(CARI_storm2_06_01, select = c("DateTime", "SpCond"))
names(CARI_storm2_06_01_SPC) = c("valuedatetime","datavalue")
CARI_storm2_06_01_turb = subset(CARI_storm2_06_01, select = c("DateTime", "Turb"))
names(CARI_storm2_06_01_turb) = c("valuedatetime","datavalue")

CARI_storm3_06_19_Q = subset(CARI_storm3_06_19, select = c("DateTime","Discharge"))
names(CARI_storm3_06_19_Q) = c("valuedatetime","datavalue")
CARI_storm3_06_19_NO3 = subset(CARI_storm3_06_19, select = c("DateTime", "NO3"))
names(CARI_storm3_06_19_NO3) = c("valuedatetime","datavalue")
CARI_storm3_06_19_fDOM = subset(CARI_storm3_06_19, select = c("DateTime","fDOM"))
names(CARI_storm3_06_19_fDOM) = c("valuedatetime","datavalue")
CARI_storm3_06_19_SPC = subset(CARI_storm3_06_19, select = c("DateTime", "SpCond"))
names(CARI_storm3_06_19_SPC) = c("valuedatetime","datavalue")
CARI_storm3_06_19_turb = subset(CARI_storm3_06_19, select = c("DateTime", "Turb"))
names(CARI_storm3_06_19_turb) = c("valuedatetime","datavalue")

CARI_storm4_07_24_Q = subset(CARI_storm4_07_24, select = c("DateTime","Discharge"))
names(CARI_storm4_07_24_Q) = c("valuedatetime","datavalue")
CARI_storm4_07_24_NO3 = subset(CARI_storm4_07_24, select = c("DateTime", "NO3"))
names(CARI_storm4_07_24_NO3) = c("valuedatetime","datavalue")
CARI_storm4_07_24_fDOM = subset(CARI_storm4_07_24, select = c("DateTime","fDOM"))
names(CARI_storm4_07_24_fDOM) = c("valuedatetime","datavalue")
CARI_storm4_07_24_SPC = subset(CARI_storm4_07_24, select = c("DateTime", "SpCond"))
names(CARI_storm4_07_24_SPC) = c("valuedatetime","datavalue")
CARI_storm4_07_24_turb = subset(CARI_storm4_07_24, select = c("DateTime", "Turb"))
names(CARI_storm4_07_24_turb) = c("valuedatetime","datavalue")

CARI_storm5_07_27_Q = subset(CARI_storm5_07_27, select = c("DateTime","Discharge"))
names(CARI_storm5_07_27_Q) = c("valuedatetime","datavalue")
CARI_storm5_07_27_NO3 = subset(CARI_storm5_07_27, select = c("DateTime", "NO3"))
names(CARI_storm5_07_27_NO3) = c("valuedatetime","datavalue")
CARI_storm5_07_27_fDOM = subset(CARI_storm5_07_27, select = c("DateTime","fDOM"))
names(CARI_storm5_07_27_fDOM) = c("valuedatetime","datavalue")
CARI_storm5_07_27_SPC = subset(CARI_storm5_07_27, select = c("DateTime", "SpCond"))
names(CARI_storm5_07_27_SPC) = c("valuedatetime","datavalue")
CARI_storm5_07_27_turb = subset(CARI_storm5_07_27, select = c("DateTime", "Turb"))
names(CARI_storm5_07_27_turb) = c("valuedatetime","datavalue")

CARI_storm6_08_08_Q = subset(CARI_storm6_08_08, select = c("DateTime","Discharge"))
names(CARI_storm6_08_08_Q) = c("valuedatetime","datavalue")
CARI_storm6_08_08_NO3 = subset(CARI_storm6_08_08, select = c("DateTime", "NO3"))
names(CARI_storm6_08_08_NO3) = c("valuedatetime","datavalue")
CARI_storm6_08_08_fDOM = subset(CARI_storm6_08_08, select = c("DateTime","fDOM"))
names(CARI_storm6_08_08_fDOM) = c("valuedatetime","datavalue")
CARI_storm6_08_08_SPC = subset(CARI_storm6_08_08, select = c("DateTime", "SpCond"))
names(CARI_storm6_08_08_SPC) = c("valuedatetime","datavalue")
CARI_storm6_08_08_turb = subset(CARI_storm6_08_08, select = c("DateTime", "Turb"))
names(CARI_storm6_08_08_turb) = c("valuedatetime","datavalue")

CARI_storm7_08_15_Q = subset(CARI_storm7_08_15, select = c("DateTime","Discharge"))
names(CARI_storm7_08_15_Q) = c("valuedatetime","datavalue")
CARI_storm7_08_15_NO3 = subset(CARI_storm7_08_15, select = c("DateTime", "NO3"))
names(CARI_storm7_08_15_NO3) = c("valuedatetime","datavalue")
CARI_storm7_08_15_fDOM = subset(CARI_storm7_08_15, select = c("DateTime","fDOM"))
names(CARI_storm7_08_15_fDOM) = c("valuedatetime","datavalue")
CARI_storm7_08_15_SPC = subset(CARI_storm7_08_15, select = c("DateTime", "SpCond"))
names(CARI_storm7_08_15_SPC) = c("valuedatetime","datavalue")
CARI_storm7_08_15_turb = subset(CARI_storm7_08_15, select = c("DateTime", "Turb"))
names(CARI_storm7_08_15_turb) = c("valuedatetime","datavalue")

CARI_storm8_08_20_Q = subset(CARI_storm8_08_20, select = c("DateTime","Discharge"))
names(CARI_storm8_08_20_Q) = c("valuedatetime","datavalue")
CARI_storm8_08_20_NO3 = subset(CARI_storm8_08_20, select = c("DateTime", "NO3"))
names(CARI_storm8_08_20_NO3) = c("valuedatetime","datavalue")
CARI_storm8_08_20_fDOM = subset(CARI_storm8_08_20, select = c("DateTime","fDOM"))
names(CARI_storm8_08_20_fDOM) = c("valuedatetime","datavalue")
CARI_storm8_08_20_SPC = subset(CARI_storm8_08_20, select = c("DateTime", "SpCond"))
names(CARI_storm8_08_20_SPC) = c("valuedatetime","datavalue")
CARI_storm8_08_20_turb = subset(CARI_storm8_08_20, select = c("DateTime", "Turb"))
names(CARI_storm8_08_20_turb) = c("valuedatetime","datavalue")

CARI_storm9_08_23_Q = subset(CARI_storm9_08_23, select = c("DateTime","Discharge"))
names(CARI_storm9_08_23_Q) = c("valuedatetime","datavalue")
CARI_storm9_08_23_NO3 = subset(CARI_storm9_08_23, select = c("DateTime", "NO3"))
names(CARI_storm9_08_23_NO3) = c("valuedatetime","datavalue")
CARI_storm9_08_23_fDOM = subset(CARI_storm9_08_23, select = c("DateTime","fDOM"))
names(CARI_storm9_08_23_fDOM) = c("valuedatetime","datavalue")
CARI_storm9_08_23_SPC = subset(CARI_storm9_08_23, select = c("DateTime", "SpCond"))
names(CARI_storm9_08_23_SPC) = c("valuedatetime","datavalue")
CARI_storm9_08_23_turb = subset(CARI_storm9_08_23, select = c("DateTime", "Turb"))
names(CARI_storm9_08_23_turb) = c("valuedatetime","datavalue")

CARI_storm10_08_27_Q = subset(CARI_storm10_08_27, select = c("DateTime","Discharge"))
names(CARI_storm10_08_27_Q) = c("valuedatetime","datavalue")
CARI_storm10_08_27_NO3 = subset(CARI_storm10_08_27, select = c("DateTime", "NO3"))
names(CARI_storm10_08_27_NO3) = c("valuedatetime","datavalue")
CARI_storm10_08_27_fDOM = subset(CARI_storm10_08_27, select = c("DateTime","fDOM"))
names(CARI_storm10_08_27_fDOM) = c("valuedatetime","datavalue")
CARI_storm10_08_27_SPC = subset(CARI_storm10_08_27, select = c("DateTime", "SpCond"))
names(CARI_storm10_08_27_SPC) = c("valuedatetime","datavalue")
CARI_storm10_08_27_turb = subset(CARI_storm10_08_27, select = c("DateTime", "Turb"))
names(CARI_storm10_08_27_turb) = c("valuedatetime","datavalue")


# Write csv #
write.csv(CARI_storm1_05_16, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm1_05_16.csv")
write.csv(CARI_storm1_05_16_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm1_05_16_Q.csv")
write.csv(CARI_storm1_05_16_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm1_05_16_NO3.csv")
write.csv(CARI_storm1_05_16_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm1_05_16_fDOM.csv")
write.csv(CARI_storm1_05_16_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm1_05_16_SPC.csv")
write.csv(CARI_storm1_05_16_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm1_05_16_Turb.csv")

write.csv(CARI_storm2_06_01, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm2_06_01.csv")
write.csv(CARI_storm2_06_01_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm2_06_01_Q.csv")
write.csv(CARI_storm2_06_01_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm2_06_01_NO3.csv")
write.csv(CARI_storm2_06_01_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm2_06_01_fDOM.csv")
write.csv(CARI_storm2_06_01_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm2_06_01_SPC.csv")
write.csv(CARI_storm2_06_01_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm2_06_01_Turb.csv")

write.csv(CARI_storm3_06_19, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm3_06_19.csv")
write.csv(CARI_storm3_06_19_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm3_06_19_Q.csv")
write.csv(CARI_storm3_06_19_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm3_06_19_NO3.csv")
write.csv(CARI_storm3_06_19_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm3_06_19_fDOM.csv")
write.csv(CARI_storm3_06_19_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm3_06_19_SPC.csv")
write.csv(CARI_storm3_06_19_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm3_06_19_Turb.csv")

write.csv(CARI_storm4_07_24, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm4_07_24.csv")
write.csv(CARI_storm4_07_24_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm4_07_24_Q.csv")
write.csv(CARI_storm4_07_24_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm4_07_24_NO3.csv")
write.csv(CARI_storm4_07_24_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm4_07_24_fDOM.csv")
write.csv(CARI_storm4_07_24_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm4_07_24_SPC.csv")
write.csv(CARI_storm4_07_24_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm4_07_24_Turb.csv")

write.csv(CARI_storm5_07_27, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm5_07_27.csv")
write.csv(CARI_storm5_07_27_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm5_07_27_Q.csv")
write.csv(CARI_storm5_07_27_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm5_07_27_NO3.csv")
write.csv(CARI_storm5_07_27_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm5_07_27_fDOM.csv")
write.csv(CARI_storm5_07_27_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm5_07_27_SPC.csv")
write.csv(CARI_storm5_07_27_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm5_07_27_Turb.csv")

write.csv(CARI_storm6_08_08, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm6_08_08.csv")
write.csv(CARI_storm6_08_08_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm6_08_08_Q.csv")
write.csv(CARI_storm6_08_08_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm6_08_08_NO3.csv")
write.csv(CARI_storm6_08_08_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm6_08_08_fDOM.csv")
write.csv(CARI_storm6_08_08_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm6_08_08_SPC.csv")
write.csv(CARI_storm6_08_08_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm6_08_08_Turb.csv")

write.csv(CARI_storm7_08_15, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm7_08_15.csv")
write.csv(CARI_storm7_08_15_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm7_08_15_Q.csv")
write.csv(CARI_storm7_08_15_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm7_08_15_NO3.csv")
write.csv(CARI_storm7_08_15_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm7_08_15_fDOM.csv")
write.csv(CARI_storm7_08_15_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm7_08_15_SPC.csv")
write.csv(CARI_storm7_08_15_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm7_08_15_Turb.csv")

write.csv(CARI_storm8_08_20, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm8_08_20.csv")
write.csv(CARI_storm8_08_20_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm8_08_20_Q.csv")
write.csv(CARI_storm8_08_20_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm8_08_20_NO3.csv")
write.csv(CARI_storm8_08_20_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm8_08_20_fDOM.csv")
write.csv(CARI_storm8_08_20_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm8_08_20_SPC.csv")
write.csv(CARI_storm8_08_20_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm8_08_20_Turb.csv")

write.csv(CARI_storm9_08_23, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm9_08_23.csv")
write.csv(CARI_storm9_08_23_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm9_08_23_Q.csv")
write.csv(CARI_storm9_08_23_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm9_08_23_NO3.csv")
write.csv(CARI_storm9_08_23_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm9_08_23_fDOM.csv")
write.csv(CARI_storm9_08_23_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm9_08_23_SPC.csv")
write.csv(CARI_storm9_08_23_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm9_08_23_Turb.csv")

write.csv(CARI_storm10_08_27, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm10_08_27.csv")
write.csv(CARI_storm10_08_27_Q, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm10_08_27_Q.csv")
write.csv(CARI_storm10_08_27_NO3, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm10_08_27_NO3.csv")
write.csv(CARI_storm10_08_27_fDOM, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm10_08_27_fDOM.csv")
write.csv(CARI_storm10_08_27_SPC, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm10_08_27_SPC.csv")
write.csv(CARI_storm10_08_27_turb, "~/Documents/Storms/Storm_Events/2021/CARI/CARI_storm10_08_27_Turb.csv")


# load storm data #

storm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI/", 
                              recursive=F, 
                              pattern=".csv", 
                              full.names=TRUE)

storm_list<-do.call("list", lapply(storm_file_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   header=T, row.names=1))

storm_file_list = sub("~/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list, replacement = "")
storm_file_list = sub(".csv", storm_file_list, replacement = "")
names(storm_list) = storm_file_list


#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list = storm_list[c(1:50)] #50
FRCH_storm_list = storm_list[c(51:100)] #50
MOOS_storm_list = storm_list[c(101:150)] #50
POKE_storm_list = storm_list[c(151:200)]# 50
STRT_storm_list = storm_list[c(201:225)] #25
VAUL_storm_list = storm_list[c(226:265)] #40

for(i in 1:length(CARI_storm_list)){
  CARI_storm_list[[i]][["valuedatetime"]] = as.POSIXct(CARI_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 

CARI_NO3_storm_list = CARI_storm_list[c(grep("NO3", names(CARI_storm_list)))]
CARI_fDOM_storm_list = CARI_storm_list[c(grep("fDOM", names(CARI_storm_list)))]
CARI_SpCond_storm_list = CARI_storm_list[c(grep("SPC", names(CARI_storm_list)))]
CARI_turb_storm_list = CARI_storm_list[c(grep("Turb", names(CARI_storm_list)))]

FRCH_NO3_storm_list = FRCH_storm_list[c(grep("NO3", names(FRCH_storm_list)))]
FRCH_fDOM_storm_list = FRCH_storm_list[c(grep("fDOM", names(FRCH_storm_list)))]
FRCH_SpCond_storm_list = FRCH_storm_list[c(grep("SPC", names(FRCH_storm_list)))]
FRCH_turb_storm_list = FRCH_storm_list[c(grep("Turb", names(FRCH_storm_list)))]

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["valuedatetime"]] = mdy_hm(FRCH_NO3_storm_list[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["valuedatetime"]] = mdy_hm(FRCH_fDOM_storm_list[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["valuedatetime"]] = mdy_hm(FRCH_SpCond_storm_list[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["valuedatetime"]] = mdy_hm(FRCH_turb_storm_list[[i]][["valuedatetime"]])
  
} 


for(i in 1:length(MOOS_storm_list)){
  MOOS_storm_list[[i]][["valuedatetime"]] = as.POSIXct(MOOS_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 

MOOS_NO3_storm_list = MOOS_storm_list[c(grep("NO3", names(MOOS_storm_list)))]
MOOS_fDOM_storm_list = MOOS_storm_list[c(grep("fDOM", names(MOOS_storm_list)))]
MOOS_SpCond_storm_list = MOOS_storm_list[c(grep("SPC", names(MOOS_storm_list)))]
MOOS_turb_storm_list = MOOS_storm_list[c(grep("Turb", names(MOOS_storm_list)))]

for(i in 1:length(POKE_storm_list)){
  POKE_storm_list[[i]][["valuedatetime"]] = as.POSIXct(POKE_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 

POKE_NO3_storm_list = POKE_storm_list[c(grep("NO3", names(POKE_storm_list)))]
POKE_fDOM_storm_list = POKE_storm_list[c(grep("fDOM", names(POKE_storm_list)))]
POKE_SpCond_storm_list = POKE_storm_list[c(grep("SPC", names(POKE_storm_list)))]
POKE_turb_storm_list = POKE_storm_list[c(grep("Turb", names(POKE_storm_list)))]

STRT_NO3_storm_list = STRT_storm_list[c(grep("NO3", names(STRT_storm_list)))]
STRT_fDOM_storm_list = STRT_storm_list[c(grep("fDOM", names(STRT_storm_list)))]
STRT_SpCond_storm_list = STRT_storm_list[c(grep("SPC", names(STRT_storm_list)))]
STRT_turb_storm_list = STRT_storm_list[c(grep("Turb", names(STRT_storm_list)))]


for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]][["valuedatetime"]] = mdy_hm(STRT_NO3_storm_list[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["valuedatetime"]] = mdy_hm(STRT_fDOM_storm_list[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]][["valuedatetime"]] = mdy_hm(STRT_SpCond_storm_list[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["valuedatetime"]] = mdy_hm(STRT_turb_storm_list[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(VAUL_storm_list)){
  VAUL_storm_list[[i]][["valuedatetime"]] = as.POSIXct(VAUL_storm_list[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 

VAUL_NO3_storm_list = VAUL_storm_list[c(grep("NO3", names(VAUL_storm_list)))]
VAUL_fDOM_storm_list = VAUL_storm_list[c(grep("fDOM", names(VAUL_storm_list)))]
VAUL_SpCond_storm_list = VAUL_storm_list[c(grep("SPC", names(VAUL_storm_list)))]
VAUL_turb_storm_list = VAUL_storm_list[c(grep("Turb", names(VAUL_storm_list)))]

#### load burst SUNA data #

FRCHfile_list <- list.files(path="~/Documents/DoD_2021/SUNA_data/from_internal_harddrive/raw/FRCH/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

MOOSfile_list <- list.files(path="~/Documents/DoD_2021/SUNA_data/from_internal_harddrive/raw/MOOS/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

POKEfile_list <- list.files(path="~/Documents/DoD_2021/SUNA_data/from_internal_harddrive/raw/POKE/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

STRTfile_list <- list.files(path="~/Documents/DoD_2021/SUNA_data/from_internal_harddrive/raw/STRT/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

VAULfile_list <- list.files(path="~/Documents/DoD_2021/SUNA_data/from_internal_harddrive/raw/VAUL/", 
                            recursive=F, 
                            pattern=".CSV", 
                            full.names=TRUE)

### Merge all data files for sensor ###
#correct header=14

SUNA.FRCH<-do.call("rbind", lapply(FRCHfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.MOOS<-do.call("rbind", lapply(MOOSfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.POKE<-do.call("rbind", lapply(POKEfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.STRT<-do.call("rbind", lapply(STRTfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

SUNA.VAUL<-do.call("rbind", lapply(VAULfile_list, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   skip=14, header=FALSE))

### Variable names for SUNA output file ###
pre<-"ch"
suff<-seq(12:267)
ch<-paste(pre, suff)
SUNAnames<-c("ID", "date_yearday", "time_fhoursUTC", "nitrateuM", "nitratemgL", "abs254", 
             "abs350", "brtrace", "specave", "darkvaluefit", "inttimefac", ch, "int_TC", 
             "spec_TC", "lamp_TC", "lamptimecum", "relhum", "mainV", "lampV", "intV", 
             "mainmA", "fit1", "fit2", "fitbase1", "fitbase2", "fitRMSE", "CTDtime", 
             "CTDsal", "CTDT", "CTDdBar", "checksum")
names(SUNA.FRCH)<-SUNAnames
names(SUNA.MOOS)<-SUNAnames
names(SUNA.POKE)<-SUNAnames
names(SUNA.STRT)<-SUNAnames
names(SUNA.VAUL)<-SUNAnames
### Remove unneeded columns ###

#remove raw channel data
SUNA.FRCHr<-SUNA.FRCH[,c(1:11,268:286)]
SUNA.MOOSr<-SUNA.MOOS[,c(1:11,268:286)]
SUNA.POKEr<-SUNA.POKE[,c(1:11,268:286)]
SUNA.STRTr<-SUNA.STRT[,c(1:11,268:286)]
SUNA.VAULr<-SUNA.VAUL[,c(1:11,268:286)]

#remove dark frames. 
### <<Note: Change date below>> ###
sum(SUNA.FRCHr$ID == 'DF')
SUNA.FRCHr %>% group_by(ID) %>% tally()
SUNA.FRCHrlf<-SUNA.FRCHr[!grepl("DF", SUNA.FRCHr$ID),]

SUNA.MOOSr %>% group_by(ID) %>% tally()
SUNA.MOOSrlf<-SUNA.MOOSr[!grepl("DF", SUNA.MOOSr$ID),]

SUNA.POKEr %>% group_by(ID) %>% tally()
SUNA.POKErlf<-SUNA.POKEr[!grepl("DF", SUNA.POKEr$ID),]

SUNA.STRTr %>% group_by(ID) %>% tally()
SUNA.STRTrlf<-SUNA.STRTr[!grepl("DF", SUNA.STRTr$ID),]

SUNA.VAULr %>% group_by(ID) %>% tally()
SUNA.VAULrlf<-SUNA.VAULr[!grepl("DF", SUNA.VAULr$ID),]

### Date and time reformatting ###
## FRCH ##
# create separate year and day columns
year_day <- t(sapply(SUNA.FRCHrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.FRCHrlf<-cbind(SUNA.FRCHrlf, year_day)
# combine hours and julian day into fractional days
SUNA.FRCHrlf$day_timeUTC<-SUNA.FRCHrlf$day+(SUNA.FRCHrlf$time_fhoursUTC/24)
# assign year to 2021 data
origin17 <- as.POSIXct("2020-12-31 00:00:00", tz="GMT")
SUNA.FRCHrlf$date_timeUTC<-origin17 + SUNA.FRCHrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.FRCHrlf$date_timeAK<-as.POSIXct(format(SUNA.FRCHrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.FRCHrlf$date_timeAK)
class(SUNA.FRCHrlf$date_timeAK)
tz(SUNA.FRCHrlf$date_timeAK) = "America/Anchorage"

## MOOS ##
# create separate year and day columns
year_day <- t(sapply(SUNA.MOOSrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.MOOSrlf<-cbind(SUNA.MOOSrlf, year_day)
# combine hours and julian day into fractional days
SUNA.MOOSrlf$day_timeUTC<-SUNA.MOOSrlf$day+(SUNA.MOOSrlf$time_fhoursUTC/24)
# assign year to 2021 data
origin17 <- as.POSIXct("2020-12-31 00:00:00", tz="GMT")
SUNA.MOOSrlf$date_timeUTC<-origin17 + SUNA.MOOSrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.MOOSrlf$date_timeAK<-as.POSIXct(format(SUNA.MOOSrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.MOOSrlf$date_timeAK)
class(SUNA.MOOSrlf$date_timeAK)
tz(SUNA.MOOSrlf$date_timeAK) = "America/Anchorage"
head(SUNA.MOOSrlf$date_timeAK)

## POKE ##
# create separate year and day columns
year_day <- t(sapply(SUNA.POKErlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.POKErlf<-cbind(SUNA.POKErlf, year_day)
# combine hours and julian day into fractional days
SUNA.POKErlf$day_timeUTC<-SUNA.POKErlf$day+(SUNA.POKErlf$time_fhoursUTC/24)
# assign year to 2021 data
origin17 <- as.POSIXct("2020-12-31 00:00:00", tz="GMT")
SUNA.POKErlf$date_timeUTC<-origin17 + SUNA.POKErlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.POKErlf$date_timeAK<-as.POSIXct(format(SUNA.POKErlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.POKErlf$date_timeAK)
class(SUNA.POKErlf$date_timeAK)
tz(SUNA.POKErlf$date_timeAK) = "America/Anchorage"
head(SUNA.POKErlf$date_timeAK)

## STRT ##
# create separate year and day columns
year_day <- t(sapply(SUNA.STRTrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.STRTrlf<-cbind(SUNA.STRTrlf, year_day)
# combine hours and julian day into fractional days
SUNA.STRTrlf$day_timeUTC<-SUNA.STRTrlf$day+(SUNA.STRTrlf$time_fhoursUTC/24)
# assign year to 2021 data
origin17 <- as.POSIXct("2020-12-31 00:00:00", tz="GMT")
SUNA.STRTrlf$date_timeUTC<-origin17 + SUNA.STRTrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.STRTrlf$date_timeAK<-as.POSIXct(format(SUNA.STRTrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.STRTrlf$date_timeAK)
class(SUNA.STRTrlf$date_timeAK)
tz(SUNA.STRTrlf$date_timeAK) = "America/Anchorage"
head(SUNA.STRTrlf$date_timeAK)

## VAUL ##
# create separate year and day columns
year_day <- t(sapply(SUNA.VAULrlf$date_yearday, function(x) substring(x, first=c(1,5), last=c(4,7))))
year_day<-as.data.frame(year_day)
names(year_day)<-c("year", "day")
year_day$year <- as.numeric(year_day$year)
year_day$day<-as.numeric(year_day$day)
SUNA.VAULrlf<-cbind(SUNA.VAULrlf, year_day)
# combine hours and julian day into fractional days
SUNA.VAULrlf$day_timeUTC<-SUNA.VAULrlf$day+(SUNA.VAULrlf$time_fhoursUTC/24)
# assign year to 2021 data
origin17 <- as.POSIXct("2020-12-31 00:00:00", tz="GMT")
SUNA.VAULrlf$date_timeUTC<-origin17 + SUNA.VAULrlf$day_timeUTC * 3600 * 24
# convert from UTC to AKDT
SUNA.VAULrlf$date_timeAK<-as.POSIXct(format(SUNA.VAULrlf$date_timeUTC, tz="America/Anchorage", usetz=TRUE))
summary(SUNA.VAULrlf$date_timeAK)
class(SUNA.VAULrlf$date_timeAK)
tz(SUNA.VAULrlf$date_timeAK) = "America/Anchorage"
head(SUNA.VAULrlf$date_timeAK)

### reduce columns ###

SUNA.FRCH.burst = subset(SUNA.FRCHrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.MOOS.burst = subset(SUNA.MOOSrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.POKE.burst = subset(SUNA.POKErlf, select = c("date_timeAK", "nitrateuM"))
SUNA.STRT.burst = subset(SUNA.STRTrlf, select = c("date_timeAK", "nitrateuM"))
SUNA.VAUL.burst = subset(SUNA.VAULrlf, select = c("date_timeAK", "nitrateuM"))

### rename columns ###
names(SUNA.FRCH.burst) <- c("DateTime", "nitrateuM")
names(SUNA.MOOS.burst) <- c("DateTime", "nitrateuM")
names(SUNA.POKE.burst) <- c("DateTime", "nitrateuM")
names(SUNA.STRT.burst) <- c("DateTime", "nitrateuM")
names(SUNA.VAUL.burst) <- c("DateTime", "nitrateuM")

### round to nearest 15 min ###

SUNA.FRCH.burst$DateTime = lubridate::round_date(SUNA.FRCH.burst$DateTime, "15 minutes") 
SUNA.MOOS.burst$DateTime = lubridate::round_date(SUNA.MOOS.burst$DateTime, "15 minutes") 
SUNA.POKE.burst$DateTime = lubridate::round_date(SUNA.POKE.burst$DateTime, "15 minutes") 
SUNA.STRT.burst$DateTime = lubridate::round_date(SUNA.STRT.burst$DateTime, "15 minutes") 
SUNA.VAUL.burst$DateTime = lubridate::round_date(SUNA.VAUL.burst$DateTime, "15 minutes") 

#### load burst EXO data #

### load and stitch EXO data ###

# FRCH #
FRCHfile_list <- list.files(path="~/Documents/DoD_2021/EXO_data/from_internal_harddrive/raw/FRCH/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.FRCH<-do.call("rbind", lapply(FRCHfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE, 
                                  skip = 9,
                                  header=F))
colNames <- c("Date..MM.DD.YYYY.", "Time..HH.mm.ss.", "Time..Fract..Sec.", "Site.Name" , "Cond.µS.cm" ,
              "fDOM.QSU", "fDOM.RFU", "nLF.Cond.µS.cm", "ODO...sat", "ODO...local",
              "ODO.mg.L", "Sal.psu","SpCond.µS.cm",  "TDS.mg.L", "Turbidity.FNU" ,
              "TSS.mg.L", "Wiper.Position.volt", "Temp..C", "Battery.V", "Cable.Pwr.V")

names(EXO.FRCH)<-colNames

# MOOS #
MOOSfile_list <- list.files(path="~/Documents/DoD_2021/EXO_data/from_internal_harddrive/raw/MOOS/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.MOOS<-do.call("rbind", lapply(MOOSfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE, 
                                  skip = 9,
                                  header=F))
names(EXO.MOOS)<-colNames
# POKE #
POKEfile_list <- list.files(path="~/Documents/DoD_2021/EXO_data/from_internal_harddrive/raw/POKE/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.POKE<-do.call("rbind", lapply(POKEfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.POKE)<-colNames
# STRT #
STRTfile_list <- list.files(path="~/Documents/DoD_2021/EXO_data/from_internal_harddrive/raw/STRT/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.STRT<-do.call("rbind", lapply(STRTfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.STRT)<-colNames
# VAUL #
VAULfile_list <- list.files(path="~/Documents/DoD_2021/EXO_data/from_internal_harddrive/raw/VAUL/", 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

EXO.VAUL<-do.call("rbind", lapply(VAULfile_list, 
                                  read.csv, 
                                  stringsAsFactors=FALSE,
                                  skip = 9,
                                  header=F))
names(EXO.VAUL)<-colNames

## FRCH ##
# put date and time in same column
EXO.FRCH$date_time = paste(EXO.FRCH$Date..MM.DD.YYYY., EXO.FRCH$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.FRCH$date_timeET<-mdy_hms(EXO.FRCH$date_time)
# convert to Alaska Time
EXO.FRCH$date_timeAK<-with_tz(EXO.FRCH$date_timeET, tz="America/Anchorage")
head(EXO.FRCH)
class(EXO.FRCH$date_timeAK)
tz(EXO.FRCH$date_timeAK)

## MOOS ##
# put date and time in same column
EXO.MOOS$date_time = paste(EXO.MOOS$Date..MM.DD.YYYY., EXO.MOOS$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.MOOS$date_timeET <- mdy_hms(EXO.MOOS$date_time)
# convert to Alaska Time
EXO.MOOS$date_timeAK<-with_tz(EXO.MOOS$date_timeET, tz="America/Anchorage")
head(EXO.MOOS)
class(EXO.MOOS$date_timeAK)
tz(EXO.MOOS$date_timeAK)

## POKE ##
# put date and time in same column
EXO.POKE$date_time = paste(EXO.POKE$Date..MM.DD.YYYY., EXO.POKE$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.POKE$date_timeET<-mdy_hms(EXO.POKE$date_time)
# convert to Alaska Time
EXO.POKE$date_timeAK<-with_tz(EXO.POKE$date_timeET, tz="America/Anchorage")
head(EXO.POKE)
class(EXO.POKE$date_timeAK)
tz(EXO.POKE$date_timeAK)

## STRT ##
# put date and time in same column
EXO.STRT$date_time = paste(EXO.STRT$Date..MM.DD.YYYY., EXO.STRT$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.STRT$date_timeET<-mdy_hms(EXO.STRT$date_time)
# convert to Alaska Time
EXO.STRT$date_timeAK<-with_tz(EXO.STRT$date_timeET, tz="America/Anchorage")
head(EXO.STRT)
class(EXO.STRT$date_timeAK)
tz(EXO.STRT$date_timeAK)

## VAUL ##
# put date and time in same column
EXO.VAUL$date_time = paste(EXO.VAUL$Date..MM.DD.YYYY., EXO.VAUL$Time..HH.mm.ss., sep = " ")
# convert to POIXct and set timezone
EXO.VAUL$date_timeET<-mdy_hms(EXO.VAUL$date_time)
# convert to Alaska Time
EXO.VAUL$date_timeAK<-with_tz(EXO.VAUL$date_timeET, tz="America/Anchorage")
head(EXO.VAUL)
class(EXO.VAUL$date_timeAK)
tz(EXO.VAUL$date_timeAK)

### reduce columns ###

EXO.FRCH.burst = subset(EXO.FRCH, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.MOOS.burst = subset(EXO.MOOS, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.POKE.burst = subset(EXO.POKE, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.STRT.burst = subset(EXO.STRT, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))
EXO.VAUL.burst = subset(EXO.VAUL, select=c("date_timeAK", "fDOM.QSU", "SpCond.µS.cm", "Turbidity.FNU"))

###  rename columns ###
names(EXO.FRCH.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.MOOS.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.POKE.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.STRT.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")
names(EXO.VAUL.burst) <- c("DateTime", "fDOM.QSU.mn", "SpCond.µS.cm", "Turbidity.FNU")

### round to nearest 15 min ###

EXO.FRCH.burst$DateTime = lubridate::round_date(EXO.FRCH.burst$DateTime, "15 minutes") 
EXO.MOOS.burst$DateTime = lubridate::round_date(EXO.MOOS.burst$DateTime, "15 minutes") 
EXO.POKE.burst$DateTime = lubridate::round_date(EXO.POKE.burst$DateTime, "15 minutes") 
EXO.STRT.burst$DateTime = lubridate::round_date(EXO.STRT.burst$DateTime, "15 minutes") 
EXO.VAUL.burst$DateTime = lubridate::round_date(EXO.VAUL.burst$DateTime, "15 minutes") 

#### match NAs in DOD 2019 to bursts ####

## NO3 ##
#temp= inner_join(SUNA.FRCH.burst, subset(FRCH, select=c("DateTime", "nitrateuM")), by= "DateTime")
#temp$nitrateuM = ifelse(is.na(temp$nitrateuM), NA, temp$nitrateuM)
#SUNA.FRCH.burst$nitrateuM = temp$nitrateuM # not the same amount of rows 

#temp= inner_join(SUNA.C3.burst, subset(C3, select=c("date_timeAK", "nitrate_uM")), by= "date_timeAK")
#temp$nitrateuM = ifelse(is.na(temp$nitrate_uM), NA, temp$nitrateuM)
#SUNA.C3.burst$nitrateuM = temp$nitrateuM


#### save clean-ish burst data ####

write_csv(SUNA.FRCH.burst, "~/Documents/DoD_2021/Stitched_data/SUNA.FRCH.burst.csv")
write_csv(SUNA.MOOS.burst, "~/Documents/DoD_2021/Stitched_data/SUNA.MOOS.burst.csv")
write_csv(SUNA.POKE.burst, "~/Documents/DoD_2021/Stitched_data/SUNA.POKE.burst.csv")
write_csv(SUNA.STRT.burst, "~/Documents/DoD_2021/Stitched_data/SUNA.STRT.burst.csv")
write_csv(SUNA.VAUL.burst, "~/Documents/DoD_2021/Stitched_data/SUNA.VAUL.burst.csv")

write_csv(EXO.FRCH.burst, "~/Documents/DoD_2021/Stitched_data/EXO.FRCH.burst.csv")
write_csv(EXO.MOOS.burst, "~/Documents/DoD_2021/Stitched_data/EXO.MOOS.burst.csv")
write_csv(EXO.POKE.burst, "~/Documents/DoD_2021/Stitched_data/EXO.POKE.burst.csv")
write_csv(EXO.STRT.burst, "~/Documents/DoD_2021/Stitched_data/EXO.STRT.burst.csv")
write_csv(EXO.VAUL.burst, "~/Documents/DoD_2021/Stitched_data/EXO.VAUL.burst.csv")


#### join burst and storm data ####

### NO3 ### 

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]] = inner_join(FRCH_NO3_storm_list[[i]], SUNA.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]] = inner_join(MOOS_NO3_storm_list[[i]], SUNA.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]] = inner_join(POKE_NO3_storm_list[[i]], SUNA.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]] = inner_join(STRT_NO3_storm_list[[i]], SUNA.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]] = inner_join(VAUL_NO3_storm_list[[i]], SUNA.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]] = inner_join(FRCH_fDOM_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]] = inner_join(MOOS_fDOM_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]] = inner_join(POKE_fDOM_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]] = inner_join(STRT_fDOM_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]] = inner_join(VAUL_fDOM_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]] = inner_join(FRCH_SpCond_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]] = inner_join(MOOS_SpCond_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]] = inner_join(POKE_SpCond_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]] = inner_join(STRT_SpCond_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]] = inner_join(VAUL_SpCond_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

#Turb
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]] = inner_join(FRCH_turb_storm_list[[i]], EXO.FRCH.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]] = inner_join(MOOS_turb_storm_list[[i]], EXO.MOOS.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]] = inner_join(POKE_turb_storm_list[[i]], EXO.POKE.burst, by=c("valuedatetime" = "DateTime"))
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]] = inner_join(STRT_turb_storm_list[[i]], EXO.STRT.burst, by=c("valuedatetime" = "DateTime"))
}


for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]] = inner_join(VAUL_turb_storm_list[[i]], EXO.VAUL.burst, by=c("valuedatetime" = "DateTime"))
}

# save storm with burst data #

saveRDS(FRCH_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/FRCH_NO3_storm_list.RData")
saveRDS(MOOS_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/MOOS_NO3_storm_list.RData")
saveRDS(POKE_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/POKE_NO3_storm_list.RData")
saveRDS(STRT_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/STRT_NO3_storm_list.RData")
saveRDS(VAUL_NO3_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/VAUL_NO3_storm_list.RData")

saveRDS(FRCH_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/FRCH_fDOM_storm_list.RData")
saveRDS(MOOS_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/MOOS_fDOM_storm_list.RData")
saveRDS(POKE_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/POKE_fDOM_storm_list.RData")
saveRDS(STRT_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/STRT_fDOM_storm_list.RData")
saveRDS(VAUL_fDOM_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/VAUL_fDOM_storm_list.RData")

saveRDS(FRCH_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/FRCH_SPC_storm_list.RData")
saveRDS(MOOS_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/MOOS_SPC_storm_list.RData")
saveRDS(POKE_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/POKE_SPC_storm_list.RData")
saveRDS(STRT_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/STRT_SPC_storm_list.RData")
saveRDS(VAUL_SpCond_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/VAUL_SPC_storm_list.RData")

saveRDS(FRCH_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/FRCH_turb_storm_list.RData")
saveRDS(MOOS_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/MOOS_turb_storm_list.RData")
saveRDS(POKE_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/POKE_turb_storm_list.RData")
saveRDS(STRT_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/STRT_turb_storm_list.RData")
saveRDS(VAUL_turb_storm_list, file="~/Documents/Storms/Storm_Events/WithBurst/2021/VAUL_turb_storm_list.RData")


############################## 2019 & 2020 data together #########################################
###################################################################################################
#import 2019 
FRCH_Q_2019 <- read_csv("~/Documents/DoD_2019/Storm Analysis/Plots/Hydrograph Separation /FRCH/FRCH_Q_2019.csv") # discharge per day
FRCH_final_2019 <- read_csv("~/Documents/DoD_2019/Q/Final_Q/FRCH/FRCH.csv") # predicted discharge
FRCH_final_2019 <- FRCH_final_2019[,-c(4:5)] # Remove PTs

#import 2020 discharge per day
FRCH_Q_2020 <- read_csv("Predicted_Discharge/Processed/FRCH_Q_2020.csv")
FRCH_final_2020 <- read_csv("Predicted_Discharge/Processed/FRCH.csv")
names(FRCH_final_2020) <- c("Site", "DateTime", "MeanDischarge")

#Combine data sets
FRCH_all <- full_join(FRCH_Q_2019, FRCH_Q_2020)
FRCH_ALL.final.discharge <- full_join(FRCH_final_2019, FRCH_final_2020)

any(is.na(FRCH_ALL.final.discharge))
FRCH_ALL.final.discharge <- na.omit(FRCH_ALL.final.discharge) # Removed 4 rows

any(is.na(FRCH_all))
FRCH_all <- na.omit(FRCH_all) # Removed 22 rows

FRCH_Q_bf_2019_2020 = BaseflowSeparation(FRCH_ALL.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH_all, select = c(day, Discharge_Lsec)), streamflow2 = FRCH_Q_bf_2019_2020$bt) 

FRCH_Q_bf = BaseflowSeparation(frch.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH_Q, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
hydrograph(FRCH_Q_bf_2019_2020)
