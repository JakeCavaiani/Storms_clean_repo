### The purpose of this script is to regress mean HI at each site per year against burn extent (percentage burned)
  # and against permafrost extent (% coverage OR soil temperature profile)
# Input: HI.dat 
# Step 1) import HI.dat file which is HI for individual storms in 2018-2021 across DoD sites
# Step 2) Calculate mean HI at each site for each year
# Step 3) run a linear model of mean HI against burn extent 
# Step 4) run a linear model of mean HI against permafrost extent
# Output: linear model plot 

# % of most recent burn # 
# Poker Creek 33%
# Vault Creek: NA
# French Creek: 7.3% 
# Moose Creek: 65.7%
# Stuart Creek: 67.4%

# Permafrost extent # 
# Poker Creek Low
# Vault Creek: High- continuous (100%)
# French Creek: Medium
# Moose Creek: Medium
# Stuart Creek: High

library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)

# Import data #
FRCH_HI_doy_df_2018 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2018/FRCH/FRCH.HI.df.doy.csv")
MOOS_HI_doy_df_2018 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2018/MOOS/MOOS.HI.df.doy.csv")
CARI_HI_doy_df_2018 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2018/CARI/CARI.HI.df.doy.csv")
CARI_HI_doy_df_2018 <- CARI_HI_doy_df_2018[,-2]

FRCH_HI_doy_df <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/FRCH/FRCH.HI.df.doy.csv")
MOOS_HI_doy_df <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/MOOS/MOOS.HI.df.doy.csv")
POKE_HI_doy_df <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/POKE/POKE.HI.df.doy.csv")
STRT_HI_doy_df <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/STRT/STRT.HI.df.doy.csv")
VAUL_HI_doy_df <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/VAUL/VAUL.HI.df.doy.csv")
CARI_HI_doy_df <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/CARI/CARI.HI.df.doy.csv")
STRT_HI_doy_df[c(1701:1900), 7] <- "storm7c"


FRCH_HI_doy_df_2020 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/FRCH/FRCH.HI.df.doy.csv")
MOOS_HI_doy_df_2020 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/MOOS/MOOS.HI.df.doy.csv")
POKE_HI_doy_df_2020 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/POKE/POKE.HI.df.doy.csv")
STRT_HI_doy_df_2020 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/STRT/STRT.HI.df.doy.csv")
VAUL_HI_doy_df_2020 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/VAUL/VAUL.HI.df.doy.csv")
CARI_HI_doy_df_2020 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/CARI/CARI.HI.df.doy.csv")

FRCH_HI_doy_df_2021 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/FRCH/FRCH.HI.doy.df.csv")
MOOS_HI_doy_df_2021 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/MOOS/MOOS.HI.doy.df.csv")
POKE_HI_doy_df_2021 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/POKE/POKE.HI.df.doy.csv")
STRT_HI_doy_df_2021 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/STRT/STRT.HI.df.doy.csv")
VAUL_HI_doy_df_2021 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/VAUL/VAUL.HI.doy.df.csv")
CARI_HI_doy_df_2021 <- read_csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/CARI/CARI.HI.df.doy.csv")


HI.dat_2018 <- rbind(FRCH_HI_doy_df_2018, MOOS_HI_doy_df_2018, CARI_HI_doy_df_2018)
HI.dat_2018$year <- "2018"

HI.dat_2019 <- rbind(FRCH_HI_doy_df, MOOS_HI_doy_df, POKE_HI_doy_df, STRT_HI_doy_df, VAUL_HI_doy_df, CARI_HI_doy_df)
HI.dat_2019$year <- "2019"

HI.dat_2020 <- rbind(FRCH_HI_doy_df_2020, MOOS_HI_doy_df_2020, POKE_HI_doy_df_2020, STRT_HI_doy_df_2020, VAUL_HI_doy_df_2020, CARI_HI_doy_df_2020)
HI.dat_2020$year <- "2020"

HI.dat_2021 <- rbind(FRCH_HI_doy_df_2021, MOOS_HI_doy_df_2021, POKE_HI_doy_df_2021, STRT_HI_doy_df_2021, VAUL_HI_doy_df_2021, CARI_HI_doy_df_2021)
HI.dat_2021$year <- "2021"

HI.dat <- rbind(HI.dat_2018, HI.dat_2019, HI.dat_2020, HI.dat_2021)
write.csv(HI.dat, "~/Documents/Storms/Output_from_analysis/HI.dat.csv")

HI.dat <- read_csv("~/Documents/Storms/Output_from_analysis/HI.dat.csv")


HI.mean<- HI.dat %>% group_by(site.ID, response, year) %>%  
  summarise_at(vars(HI), list(HI = median)) # take mean by site response and year 

# merged # 
# By site and response
FRCH.fDOM <- subset(HI.mean, site.ID == "FRCH" & response == "fDOM")
POKE.fDOM <- subset(HI.mean, site.ID == "POKE" & response == "fDOM")
MOOS.fDOM <- subset(HI.mean, site.ID == "MOOS" & response == "fDOM")
STRT.fDOM <- subset(HI.mean, site.ID == "STRT" & response == "fDOM")
VAUL.fDOM <- subset(HI.mean, site.ID == "VAUL" & response == "fDOM")

FRCH.NO3 <- subset(HI.mean, site.ID == "FRCH" & response == "NO3")
POKE.NO3 <- subset(HI.mean, site.ID == "POKE" & response == "NO3")
MOOS.NO3 <- subset(HI.mean, site.ID == "MOOS" & response == "NO3")
STRT.NO3 <- subset(HI.mean, site.ID == "STRT" & response == "NO3")
VAUL.NO3 <- subset(HI.mean, site.ID == "VAUL" & response == "NO3")

FRCH.fDOM$burn <- "unburned"

POKE.fDOM$burn <- "burned"

MOOS.fDOM$burn <- "burned"

STRT.fDOM$burn <- "burned"

VAUL.fDOM$burn <- "unburned"

FRCH.NO3$burn <- "unburned"

POKE.NO3$burn <- "burned"

MOOS.NO3$burn <- "burned"

STRT.NO3$burn <- "burned"

VAUL.NO3$burn <- "unburned"

fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM)
no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3)

fdom.hi$year <- as.character(fdom.hi$year)
no3.hi$year <- as.character(no3.hi$year)


fdom.lm <- lm(fdom.hi$HI ~ fdom.hi$burn)
no3.lm <- lm(no3.hi$HI ~ no3.hi$burn)

fdom.hi %>%
  ggplot(aes(x=burn, 
             y=HI, 
             color=year))+
  geom_point() +
  geom_smooth(method = "lm") + 
  ylim(-1,1) + 
  ggtitle("DOC") +
  xlab("Catchment burned (%)") +
  ylab("HI-Solute Storage")

no3.hi %>%
  ggplot(aes(x=burn, 
             y=HI, 
             color=year))+
  geom_point() +
  geom_smooth(method = "lm") + 
  ylim(-1,1) + 
  ggtitle("NO3") +
  xlab("Catchment burned (%)") +
  ylab("HI-Solute Storage")

# Permafrost #
FRCH.fDOM$pf <- "medium"

POKE.fDOM$pf <- "medium"

MOOS.fDOM$pf <- "medium"

STRT.fDOM$pf <- "high"

VAUL.fDOM$pf <- "high"

FRCH.NO3$pf <- "medium"

POKE.NO3$pf <- "medium"

MOOS.NO3$pf <- "medium"

STRT.NO3$pf <- "high"

VAUL.NO3$pf <- "high"


pf.fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM)
pf.no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3)

pf.fdom.hi$year <- as.character(pf.fdom.hi$year)
pf.no3.hi$year <- as.character(pf.no3.hi$year)


pf.fdom.lm <- lm(pf.fdom.hi$HI ~ pf.fdom.hi$burn)
pf.no3.lm <- lm(pf.no3.hi$HI ~ pf.no3.hi$burn)

pf.fdom.hi %>%
  ggplot(aes(x=pf, 
             y=HI, 
             color=year))+
  geom_point() +
  geom_smooth(method = "lm") + 
  ylim(-1,1) + 
  ggtitle("DOC") +
  xlab("Permafrost Extent (%)") +
  ylab("HI-Solute Storage")

pf.no3.hi %>%
  ggplot(aes(x=pf, 
             y=HI, 
             color=year))+
  geom_point() +
  geom_smooth(method = "lm") + 
  ylim(-1,1) + 
  ggtitle("NO3") +
  xlab("Permafrost Extent (%)") +
  ylab("HI-Solute Storage")


### H 1.1: HI against precip ###
HI.mean.precip <- HI.dat %>% group_by(site.ID, year, storm.num) %>%  
  summarise_at(vars(HI), list(HI = median)) # take mean by site response and year 

HI.mean.precip.response <- HI.dat %>% group_by(site.ID, year, storm.num, response) %>%  
  summarise_at(vars(HI), list(HI = median)) # take mean by site response and year 


### USGS pulled data ###
# Peak stream flow for the Chena River
# 2018 -05-22
# 2019-08-17
# 2020 - 2020-05-12
#2021 - 2021-05-12
##############################################################################################################
#################################### Antecedent conditions #####################################################################
##############################################################################################################

######################################## 2018 #####################################################################
## Step 1) Read in list of all sites storms and filter by site
## Step 2) Assign storm number to each individual storm
## Step 3) read in Rain gauge data and summarize storm characteristics (Total precip/Intensity) and 
# antecedent conditions (week/month/3month/doy/time since peak SWE)
## Step 4) Separate by constituent 

FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2018/All_Sites/", 
                              recursive=F, 
                              pattern="FRCH", 
                              full.names=TRUE) # reading in individual storms by site 

FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list, 
                                  read.csv, 
                                  check.names = FALSE,
                                  stringsAsFactors=FALSE, 
                                  header=T, blank.lines.skip = TRUE, fill=TRUE))

FRCH_storms$storm.num = c(rep("storm1", 142),
                        rep("storm10", 704),
                        rep("storm11a", 91),
                        rep("storm11b", 264),
                        rep("storm2a", 230),
                        rep("storm2b", 190),
                        rep("storm3", 212),
                        rep("storm4a", 72),
                        rep("storm4b", 383),
                        rep("storm5", 331),
                        rep("storm6", 303),
                        rep("storm7", 119),
                        rep("storm8a", 79),
                        rep("storm8b", 95),
                        rep("storm9", 115)) # naming each storm by the number of storm 

#write_csv(FRCH_storms, "~/Desktop/FRCH_2018_test_beta.csv")


POKE_RainGauge_2018 <- read_csv("~/Documents/DoD_2018/RainGauge/POKE.RainGauge.2018.csv") # Reading in rain gauge data in 
attributes(POKE_RainGauge_2018$DateTime)$tzone <- 'America/Anchorage' # converting to AK time 
airtempmean <- read_csv("~/Documents/Storms/Ancilliary_data/airtempmean.csv")
attributes(airtempmean$date_timeAK)$tzone <- 'America/Anchorage'
names(airtempmean)[2] <- "DateTime"
FRCH_storms$DateTime <- as.POSIXct(FRCH_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") #making datetime column 
FRCH.2018.storms.1<- left_join(FRCH_storms, POKE_RainGauge_2018, by = "DateTime") # joining 
FRCH.2018.storms.1<- left_join(FRCH.2018.storms.1, airtempmean, by = "DateTime") # joining 

names(FRCH.2018.storms.1)[names(FRCH.2018.storms.1) == ''] <- 'x'

FRCH.2018.per.storm.1 <- FRCH.2018.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE) # finding the total precip for each delineated storm

temp <- FRCH.2018.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 
FRCH.2018.per.storm.1$temp <- temp$temp

FRCH.2018 <- read_csv("~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2018.csv",
                      col_types = cols(fDOM.QSU = col_double(), 
                                       nitrateuM = col_double(), SpCond.uScm = col_double(), 
                                       Turbidity.FNU = col_double()))
FRCH.2018$DateTime <- as.POSIXct(FRCH.2018$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
FRCH.2018 <- left_join(FRCH.2018, POKE_RainGauge_2018, by = "DateTime")
FRCH.2018 <- left_join(FRCH.2018, airtempmean, by = "DateTime")
FRCH.2018$week <- rollapplyr(FRCH.2018$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2018$month <- rollapplyr(FRCH.2018$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2018$ThreeMonth <- rollapplyr(FRCH.2018$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2018$temp.week <- rollapplyr(FRCH.2018$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

FRCH.2018.1 <- left_join(FRCH.2018.storms.1, FRCH.2018, by = "DateTime") # week month and 3 month precip totals 

FRCH.2018.per.storm.2 <- FRCH.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
FRCH.2018.per.storm.3 <- FRCH.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
FRCH.2018.per.storm.4 <- FRCH.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
FRCH.2018.per.storm.5 <- FRCH.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping one week mean temperature leading up to a storm 

HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2018" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2018" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2018" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2018" & site.ID == "FRCH" & response == "turb")

HI.frch.no3.2018 <- left_join(HI.mean.precip.frch.NO3, FRCH.2018.per.storm.1, by = "storm.num")
HI.frch.no3.2018 <- left_join(HI.frch.no3.2018, FRCH.2018.per.storm.1, by = "storm.num")
HI.frch.no3.2018 <- left_join(HI.frch.no3.2018, FRCH.2018.per.storm.2, by = "storm.num")
HI.frch.no3.2018 <- left_join(HI.frch.no3.2018, FRCH.2018.per.storm.3, by = "storm.num")
HI.frch.no3.2018 <- left_join(HI.frch.no3.2018, FRCH.2018.per.storm.4, by = "storm.num")
HI.frch.no3.2018 <- left_join(HI.frch.no3.2018, FRCH.2018.per.storm.5, by = "storm.num")

HI.frch.no3.2018 <- HI.frch.no3.2018[,-c(6:7)]
names(HI.frch.no3.2018) <- c("site.ID", "year", "storm.num","response", "HI", "precip", "temp", "precip.week", 
                             "precip.month", "ThreeMonth", "temp.week")

frch.lm.no3 <- lm(HI.frch.no3.2018$HI ~ HI.frch.no3.2018$precip) # model one with just total precip

frch.formula <- y ~ x

ba <- HI.frch.no3.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bb <- HI.frch.no3.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bc <- HI.frch.no3.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bd <- HI.frch.no3.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bd2 <- HI.frch.no3.2018 %>%
  ggplot(aes(x=temp.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("temp.week") +
  ylab("HI-Solute Storage") # plot model 
bd2

HI.frch.fDOM.2018 <- left_join(HI.mean.precip.frch.fDOM, FRCH.2018.per.storm.1, by = "storm.num")
HI.frch.fDOM.2018 <- left_join(HI.frch.fDOM.2018, FRCH.2018.per.storm.2, by = "storm.num")
HI.frch.fDOM.2018 <- left_join(HI.frch.fDOM.2018, FRCH.2018.per.storm.3, by = "storm.num")
HI.frch.fDOM.2018 <- left_join(HI.frch.fDOM.2018, FRCH.2018.per.storm.4, by = "storm.num")
HI.frch.fDOM.2018 <- left_join(HI.frch.fDOM.2018, FRCH.2018.per.storm.5, by = "storm.num")

frch.lm.fDOM <- lm(HI.frch.fDOM.2018$HI ~ HI.frch.fDOM.2018$precip) # model one with just total precip
frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2018$HI ~ HI.frch.fDOM.2018$precip.week) # model one with just total precip
frch.lm.fDOM.3 <- lm(HI.frch.fDOM.2018$HI ~ HI.frch.fDOM.2018$precip.month) # model one with just total precip
frch.lm.fDOM.4 <- lm(HI.frch.fDOM.2018$HI ~ HI.frch.fDOM.2018$ThreeMonth) # model one with just total precip
frch.lm.fDOM.5 <- lm(HI.frch.fDOM.2018$HI ~ HI.frch.fDOM.2018$temp.week) # model one with just total precip

frch.formula <- y ~ x

be <- HI.frch.fDOM.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bf <- HI.frch.fDOM.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bg <- HI.frch.fDOM.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bh <- HI.frch.fDOM.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bh2 <- HI.frch.fDOM.2018 %>%
  ggplot(aes(x=temp.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("temp.week") +
  ylab("HI-Solute Storage") # plot model 
bh2

HI.frch.SPC.2018 <- left_join(HI.mean.precip.frch.SPC, FRCH.2018.per.storm.1, by = "storm.num")
HI.frch.SPC.2018 <- left_join(HI.frch.SPC.2018, FRCH.2018.per.storm.2, by = "storm.num")
HI.frch.SPC.2018 <- left_join(HI.frch.SPC.2018, FRCH.2018.per.storm.3, by = "storm.num")
HI.frch.SPC.2018 <- left_join(HI.frch.SPC.2018, FRCH.2018.per.storm.4, by = "storm.num")
HI.frch.SPC.2018 <- left_join(HI.frch.SPC.2018, FRCH.2018.per.storm.5, by = "storm.num")

frch.lm.SPC <- lm(HI.frch.SPC.2018$HI ~ HI.frch.SPC.2018$precip) # model one with just total precip
frch.lm.SPC.2 <- lm(HI.frch.SPC.2018$HI ~ HI.frch.SPC.2018$precip.week) # model one with just total precip
frch.lm.SPC.3 <- lm(HI.frch.SPC.2018$HI ~ HI.frch.SPC.2018$precip.month) # model one with just total precip
frch.lm.SPC.4 <- lm(HI.frch.SPC.2018$HI ~ HI.frch.SPC.2018$ThreeMonth) # model one with just total precip


bi <- HI.frch.SPC.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bj <- HI.frch.SPC.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bk <- HI.frch.SPC.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bl <- HI.frch.SPC.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bl2 <- HI.frch.SPC.2018 %>%
  ggplot(aes(x=temp.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("temp.week") +
  ylab("HI-Solute Storage") # plot model

bl2

HI.frch.turb.2018 <- left_join(HI.mean.precip.frch.turb, FRCH.2018.per.storm.1, by = "storm.num")
HI.frch.turb.2018 <- left_join(HI.frch.turb.2018, FRCH.2018.per.storm.2, by = "storm.num")
HI.frch.turb.2018 <- left_join(HI.frch.turb.2018, FRCH.2018.per.storm.3, by = "storm.num")
HI.frch.turb.2018 <- left_join(HI.frch.turb.2018, FRCH.2018.per.storm.4, by = "storm.num")
HI.frch.turb.2018 <- left_join(HI.frch.turb.2018, FRCH.2018.per.storm.5, by = "storm.num")

frch.lm.turb <- lm(HI.frch.turb.2018$HI ~ HI.frch.turb.2018$precip) # model one with just total precip
frch.lm.turb.2 <- lm(HI.frch.turb.2018$HI ~ HI.frch.turb.2018$precip.week) # model one with just total precip
frch.lm.turb.3 <- lm(HI.frch.turb.2018$HI ~ HI.frch.turb.2018$precip.month) # model one with just total precip
frch.lm.turb.4 <- lm(HI.frch.turb.2018$HI ~ HI.frch.turb.2018$ThreeMonth) # model one with just total precip

bm <- HI.frch.turb.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bn <- HI.frch.turb.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bo <- HI.frch.turb.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bp <- HI.frch.turb.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- FRCH.2018.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.frch.no3.2.2018 <- left_join(HI.frch.no3.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.no3.2.2018$TOTAL.TIME <- as.numeric(HI.frch.no3.2.2018$TOTAL.TIME)
HI.frch.no3.2.2018$Intensity <- HI.frch.no3.2.2018$precip/HI.frch.no3.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.no3.2 <- lm(HI.frch.no3.2.2018$HI ~ HI.frch.no3.2.2018$precip + HI.frch.no3.2.2018$Intensity) # model one with total precip and intensity 

bq <- HI.frch.no3.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2.2018 <- left_join(HI.frch.fDOM.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.fDOM.2.2018$TOTAL.TIME <- as.numeric(HI.frch.fDOM.2.2018$TOTAL.TIME)
HI.frch.fDOM.2.2018$Intensity <- HI.frch.fDOM.2.2018$precip/HI.frch.fDOM.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2.2018$HI ~ HI.frch.fDOM.2.2018$precip + HI.frch.fDOM.2.2018$Intensity) # model one with total precip and intensity 

br <- HI.frch.fDOM.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2.2018 <- left_join(HI.frch.SPC.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.SPC.2.2018$TOTAL.TIME <- as.numeric(HI.frch.SPC.2.2018$TOTAL.TIME)
HI.frch.SPC.2.2018$Intensity <- HI.frch.SPC.2.2018$precip/HI.frch.SPC.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.SPC.2 <- lm(HI.frch.SPC.2.2018$HI ~ HI.frch.SPC.2.2018$precip + HI.frch.SPC.2.2018$Intensity) # model one with total precip and intensity 

bs <- HI.frch.SPC.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2.2018 <- left_join(HI.frch.turb.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.turb.2.2018$TOTAL.TIME <- as.numeric(HI.frch.turb.2.2018$TOTAL.TIME)
HI.frch.turb.2.2018$Intensity <- HI.frch.turb.2.2018$precip/HI.frch.turb.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.turb.2 <- lm(HI.frch.turb.2.2018$HI ~ HI.frch.turb.2.2018$precip + HI.frch.turb.2.2018$Intensity) # model one with total precip and intensity 

bt <- HI.frch.turb.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
FRCH.2018.1$day <- julian(FRCH.2018.1$DateTime, origin = as.POSIXct('2018-01-01', tz = 'America/Anchorage')) # making a fractional day column 
FRCH.2018.1$day <- as.numeric(FRCH.2018.1$day)

FRCH.2018.per.storm.5 <- FRCH.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.frch.no3.2.2018 <- left_join(HI.frch.no3.2.2018, FRCH.2018.per.storm.5, by = "storm.num")
frch.lm.no3.5 <- lm(HI.frch.no3.2.2018$HI ~ HI.frch.no3.2.2018$doy)

bu <- HI.frch.no3.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2.2018 <- left_join(HI.frch.fDOM.2.2018, FRCH.2018.per.storm.5, by = "storm.num")
frch.lm.fDOM.5 <- lm(HI.frch.fDOM.2.2018$HI ~ HI.frch.fDOM.2.2018$doy)

bv <- HI.frch.fDOM.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2.2018 <- left_join(HI.frch.SPC.2.2018, FRCH.2018.per.storm.5, by = "storm.num")
frch.lm.SPC.5 <- lm(HI.frch.SPC.2.2018$HI ~ HI.frch.SPC.2.2018$doy)

bw <- HI.frch.SPC.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2.2018 <- left_join(HI.frch.turb.2.2018, FRCH.2018.per.storm.5, by = "storm.num")
frch.lm.turb.5 <- lm(HI.frch.turb.2.2018$HI ~ HI.frch.turb.2.2018$doy)

bx <- HI.frch.turb.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.2018 <- rbind(HI.frch.no3.2.2018, HI.frch.fDOM.2.2018, HI.frch.SPC.2.2018, HI.frch.turb.2.2018) # merging all responses together 
HI.frch.2018$burn <- "unburned" # adding a burn column
HI.frch.2018$pf <- "medium" # adding a pf column

write.csv(HI.frch.2018, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.frch.2018.csv")

# MOOS # 
MOOSstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2018/All_Sites/", 
                                  recursive=F, 
                                  pattern="MOOS", 
                                  full.names=TRUE)

MOOS_storms<-do.call("rbind", lapply(MOOSstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

MOOS_storms$storm.num = c(rep("storm1", 58),
                          rep("storm10", 432),
                          rep("storm11a", 74),
                          rep("storm11b", 36),
                          rep("storm12", 310),
                          rep("storm2a", 74),
                          rep("storm2b", 162),
                          rep("storm2c", 192),
                          rep("storm3", 240),
                          rep("storm4", 244),
                          rep("storm5", 276),
                          rep("storm6", 332),
                          rep("storm7", 124),
                          rep("storm8a", 80),
                          rep("storm8b", 96),
                          rep("storm9", 108))

MOOS_storms$DateTime <- as.POSIXct(MOOS_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
MOOS.2018.storms.1<- left_join(MOOS_storms, POKE_RainGauge_2018, by = "DateTime")
MOOS.2018.storms.1<- left_join(MOOS.2018.storms.1, airtempmean, by = "DateTime")

names(MOOS.2018.storms.1)[names(MOOS.2018.storms.1) == ''] <- 'x'

MOOS.2018.per.storm.1 <- MOOS.2018.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- MOOS.2018.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

MOOS.2018.per.storm.1$temp <- temp$temp


MOOS.2018 <- read_csv("~/Documents/Storms/Q_Chem/MOOS/MOOS_chem_2018.csv",
                      col_types = cols(fDOM.QSU = col_double(), 
                                       nitrateuM = col_double(), SpCond.uScm = col_double(), 
                                       Turbidity.FNU = col_double()))
MOOS.2018$DateTime <- as.POSIXct(MOOS.2018$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
MOOS.2018 <- left_join(MOOS.2018, POKE_RainGauge_2018, by = "DateTime")
MOOS.2018 <- left_join(MOOS.2018, airtempmean, by = "DateTime")
MOOS.2018$week <- rollapplyr(MOOS.2018$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2018$month <- rollapplyr(MOOS.2018$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2018$ThreeMonth <- rollapplyr(MOOS.2018$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2018$temp.week <- rollapplyr(MOOS.2018$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)
  
MOOS.2018.1 <- left_join(MOOS.2018.storms.1, MOOS.2018, by = "DateTime") # week month and 3 month precip totals 

MOOS.2018.per.storm.2 <- MOOS.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
MOOS.2018.per.storm.3 <- MOOS.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
MOOS.2018.per.storm.4 <- MOOS.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
MOOS.2018.per.storm.5 <- MOOS.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping one week mean temperature leading up to a storm 

HI.mean.precip.moos.NO3 <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "NO3")
HI.mean.precip.moos.fDOM <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "fDOM")
HI.mean.precip.moos.SPC <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "SPC")
HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "turb")

HI.moos.no3.2018 <- left_join(HI.mean.precip.moos.NO3, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.no3.2018 <- left_join(HI.moos.no3.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.no3.2018 <- left_join(HI.moos.no3.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.no3.2018 <- left_join(HI.moos.no3.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.no3.2018 <- left_join(HI.moos.no3.2018, MOOS.2018.per.storm.5, by = "storm.num")

moos.lm.no3 <- lm(HI.moos.no3.2018$HI ~ HI.moos.no3.2018$precip) # model one with just total precip
moos.lm.no3.2 <- lm(HI.moos.no3.2018$HI ~ HI.moos.no3.2018$precip.week) # model one with just total precip
moos.lm.no3.3 <- lm(HI.moos.no3.2018$HI ~ HI.moos.no3.2018$precip.month) # model one with just total precip
moos.lm.no3.4 <- lm(HI.moos.no3.2018$HI ~ HI.moos.no3.2018$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

aa <- HI.moos.no3.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ab <- HI.moos.no3.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ac <- HI.moos.no3.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ad <- HI.moos.no3.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ad2 <- HI.moos.no3.2018 %>%
  ggplot(aes(x=temp.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("temp.week") +
  ylab("HI-Solute Storage") # plot model 
ad2

HI.moos.fDOM.2018 <- left_join(HI.mean.precip.moos.fDOM, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.fDOM.2018 <- left_join(HI.moos.fDOM.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.fDOM.2018 <- left_join(HI.moos.fDOM.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.fDOM.2018 <- left_join(HI.moos.fDOM.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.fDOM.2018 <- left_join(HI.moos.fDOM.2018, MOOS.2018.per.storm.5, by = "storm.num")

moos.lm.fDOM <- lm(HI.moos.fDOM.2018$HI ~ HI.moos.fDOM.2018$precip) # model one with just total precip
moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2018$HI ~ HI.moos.fDOM.2018$precip.week) # model one with just total precip
moos.lm.fDOM.3 <- lm(HI.moos.fDOM.2018$HI ~ HI.moos.fDOM.2018$precip.month) # model one with just total precip
moos.lm.fDOM.4 <- lm(HI.moos.fDOM.2018$HI ~ HI.moos.fDOM.2018$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

ae <- HI.moos.fDOM.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

af <- HI.moos.fDOM.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ag <- HI.moos.fDOM.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ah <- HI.moos.fDOM.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.SPC.2018 <- left_join(HI.mean.precip.moos.SPC, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.SPC.2018 <- left_join(HI.moos.SPC.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.SPC.2018 <- left_join(HI.moos.SPC.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.SPC.2018 <- left_join(HI.moos.SPC.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.SPC.2018 <- left_join(HI.moos.SPC.2018, MOOS.2018.per.storm.5, by = "storm.num")

moos.lm.SPC <- lm(HI.moos.SPC.2018$HI ~ HI.moos.SPC.2018$precip) # model one with just total precip
moos.lm.SPC.2 <- lm(HI.moos.SPC.2018$HI ~ HI.moos.SPC.2018$precip.week) # model one with just total precip
moos.lm.SPC.3 <- lm(HI.moos.SPC.2018$HI ~ HI.moos.SPC.2018$precip.month) # model one with just total precip
moos.lm.SPC.4 <- lm(HI.moos.SPC.2018$HI ~ HI.moos.SPC.2018$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

ai <- HI.moos.SPC.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

aj <- HI.moos.SPC.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ak <- HI.moos.SPC.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

al <- HI.moos.SPC.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.turb.2018 <- left_join(HI.mean.precip.moos.turb, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.turb.2018 <- left_join(HI.moos.turb.2018, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.turb.2018 <- left_join(HI.moos.turb.2018, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.turb.2018 <- left_join(HI.moos.turb.2018, MOOS.2018.per.storm.4, by = "storm.num")
HI.moos.turb.2018 <- left_join(HI.moos.turb.2018, MOOS.2018.per.storm.5, by = "storm.num")

moos.lm.turb <- lm(HI.moos.turb.2018$HI ~ HI.moos.turb.2018$precip) # model one with just total precip
moos.lm.turb.2 <- lm(HI.moos.turb.2018$HI ~ HI.moos.turb.2018$precip.week) # model one with just total precip
moos.lm.turb.3 <- lm(HI.moos.turb.2018$HI ~ HI.moos.turb.2018$precip.month) # model one with just total precip
moos.lm.turb.4 <- lm(HI.moos.turb.2018$HI ~ HI.moos.turb.2018$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

am <- HI.moos.turb.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

an <- HI.moos.turb.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ao <- HI.moos.turb.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ap <- HI.moos.turb.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sum.time <- MOOS.2018.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.moos.no3.2.2018 <- left_join(HI.moos.no3.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.no3.2.2018$TOTAL.TIME <- as.numeric(HI.moos.no3.2.2018$TOTAL.TIME)
HI.moos.no3.2.2018$Intensity <- HI.moos.no3.2.2018$precip/HI.moos.no3.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.no3.2 <- lm(HI.moos.no3.2.2018$HI ~ HI.moos.no3.2.2018$precip + HI.moos.no3.2.2018$Intensity) # model one with total precip and intensity 

aq <- HI.moos.no3.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2.2018 <- left_join(HI.moos.fDOM.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.fDOM.2.2018$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2.2018$TOTAL.TIME)
HI.moos.fDOM.2.2018$Intensity <- HI.moos.fDOM.2.2018$precip/HI.moos.fDOM.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2.2018$HI ~ HI.moos.fDOM.2.2018$precip + HI.moos.fDOM.2.2018$Intensity) # model one with total precip and intensity 

ar <- HI.moos.fDOM.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2.2018 <- left_join(HI.moos.SPC.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.SPC.2.2018$TOTAL.TIME <- as.numeric(HI.moos.SPC.2.2018$TOTAL.TIME)
HI.moos.SPC.2.2018$Intensity <- HI.moos.SPC.2.2018$precip/HI.moos.SPC.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.SPC.2 <- lm(HI.moos.SPC.2.2018$HI ~ HI.moos.SPC.2.2018$precip + HI.moos.SPC.2.2018$Intensity) # model one with total precip and intensity 

as <- HI.moos.SPC.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2.2018 <- left_join(HI.moos.turb.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.turb.2.2018$TOTAL.TIME <- as.numeric(HI.moos.turb.2.2018$TOTAL.TIME)
HI.moos.turb.2.2018$Intensity <- HI.moos.turb.2.2018$precip/HI.moos.turb.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.turb.2 <- lm(HI.moos.turb.2.2018$HI ~ HI.moos.turb.2.2018$precip + HI.moos.turb.2.2018$Intensity) # model one with total precip and intensity 

at <- HI.moos.turb.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
MOOS.2018.1$day <- julian(MOOS.2018.1$DateTime, origin = as.POSIXct('2018-01-01', tz = 'America/Anchorage')) # making a fractional day column 
MOOS.2018.1$day <- as.numeric(MOOS.2018.1$day)

MOOS.2018.per.storm.5 <- MOOS.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.moos.no3.2.2018 <- left_join(HI.moos.no3.2.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.no3.5 <- lm(HI.moos.no3.2.2018$HI ~ HI.moos.no3.2.2018$doy)

au <- HI.moos.no3.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2.2018 <- left_join(HI.moos.fDOM.2.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.fDOM.5 <- lm(HI.moos.fDOM.2.2018$HI ~ HI.moos.fDOM.2.2018$doy)

av <- HI.moos.fDOM.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2.2018 <- left_join(HI.moos.SPC.2.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.SPC.5 <- lm(HI.moos.SPC.2.2018$HI ~ HI.moos.SPC.2.2018$doy)

aw <- HI.moos.SPC.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2.2018 <- left_join(HI.moos.turb.2.2018, MOOS.2018.per.storm.5, by = "storm.num")
moos.lm.turb.5 <- lm(HI.moos.turb.2.2018$HI ~ HI.moos.turb.2.2018$doy)

ax <- HI.moos.turb.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.2018 <- rbind(HI.moos.no3.2.2018, HI.moos.fDOM.2.2018, HI.moos.SPC.2.2018, HI.moos.turb.2.2018) # merging all responses together 
HI.moos.2018$burn <- "burned" # adding a burn column
HI.moos.2018$pf <- "medium" # adding a pf column

write.csv(HI.moos.2018, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.moos.2018.csv")

# CARI # 
CARIstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2018/All_Sites/", 
                                  recursive=F, 
                                  pattern="CARI", 
                                  full.names=TRUE)

CARI_storms<-do.call("rbind", lapply(CARIstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

CARI_storms$storm.num = c(rep("storm1", 4769),
                          rep("storm10", 3739),
                          rep("storm11", 2879),
                          rep("storm12a", 6299),
                          rep("storm12b", 7762),
                          rep("storm2", 2729),
                          rep("storm3", 1776),
                          rep("storm4a", 1229),
                          rep("storm4b", 2729),
                          rep("storm5a", 1169),
                          rep("storm5b", 1829),
                          rep("storm5c", 8639),
                          rep("storm6", 9684),
                          rep("storm7", 2519),
                          rep("storm8", 2879),
                          rep("storm9", 5399))

CARI_storms$DateTime <- as.POSIXct(CARI_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
CARI.2018.storms.1<- left_join(CARI_storms, POKE_RainGauge_2018, by = "DateTime")
CARI.2018.storms.1<- left_join(CARI.2018.storms.1, airtempmean, by = "DateTime")

names(CARI.2018.storms.1)[names(CARI.2018.storms.1) == ''] <- 'x'

CARI.2018.per.storm.1 <- CARI.2018.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- CARI.2018.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

CARI.2018.per.storm.1$temp <- temp$temp

CARI.2018 <- CARI_storms
CARI.2018 <- CARI.2018[,-c(1,10)]
CARI.2018$DateTime <- as.POSIXct(CARI.2018$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
CARI.2018 <- left_join(CARI.2018, POKE_RainGauge_2018, by = "DateTime")
CARI.2018 <- left_join(CARI.2018, airtempmean, by = "DateTime")
CARI.2018$week <- rollapplyr(CARI.2018$inst_rainfall_mm, 10080, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2018$month <- rollapplyr(CARI.2018$inst_rainfall_mm, 40320, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2018$ThreeMonth <- rollapplyr(CARI.2018$inst_rainfall_mm, 120960, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2018$temp.week <- rollapplyr(CARI.2018$airtemp_100.1000cm_mean, 10080, mean, na.rm = TRUE, fill = NA, partial = TRUE)

CARI.2018.1 <- left_join(CARI.2018.storms.1, CARI.2018, by = "DateTime") # week month and 3 month precip totals 

CARI.2018.per.storm.2 <- CARI.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
CARI.2018.per.storm.3 <- CARI.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
CARI.2018.per.storm.4 <- CARI.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
CARI.2018.per.storm.5 <- CARI.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping one week mean temperature leading up to a storm 

HI.mean.precip.cari.NO3 <- subset(HI.mean.precip.response, year == "2018" & site.ID == "CARI" & response == "NO3")
HI.mean.precip.cari.fDOM <- subset(HI.mean.precip.response, year == "2018" & site.ID == "CARI" & response == "fDOM")
HI.mean.precip.cari.SPC <- subset(HI.mean.precip.response, year == "2018" & site.ID == "CARI" & response == "SPC")
HI.mean.precip.cari.turb <- subset(HI.mean.precip.response, year == "2018" & site.ID == "CARI" & response == "turb")

HI.cari.no3.2018 <- left_join(HI.mean.precip.cari.NO3, CARI.2018.per.storm.1, by = "storm.num")
HI.cari.no3.2018 <- left_join(HI.cari.no3.2018, CARI.2018.per.storm.2, by = "storm.num")
HI.cari.no3.2018 <- left_join(HI.cari.no3.2018, CARI.2018.per.storm.3, by = "storm.num")
HI.cari.no3.2018 <- left_join(HI.cari.no3.2018, CARI.2018.per.storm.4, by = "storm.num")
HI.cari.no3.2018 <- left_join(HI.cari.no3.2018, CARI.2018.per.storm.5, by = "storm.num")

cari.lm.no3 <- lm(HI.cari.no3.2018$HI ~ HI.cari.no3.2018$precip) # model one with just total precip
cari.lm.no3.2 <- lm(HI.cari.no3.2018$HI ~ HI.cari.no3.2018$precip.week) # model one with just total precip
cari.lm.no3.3 <- lm(HI.cari.no3.2018$HI ~ HI.cari.no3.2018$precip.month) # model one with just total precip
cari.lm.no3.4 <- lm(HI.cari.no3.2018$HI ~ HI.cari.no3.2018$ThreeMonth) # model one with just total precip

cari.formula <- y ~ x

sa <- HI.cari.no3.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sb <- HI.cari.no3.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sc <- HI.cari.no3.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sd <- HI.cari.no3.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


HI.cari.fDOM.2018 <- left_join(HI.mean.precip.cari.fDOM, CARI.2018.per.storm.1, by = "storm.num")
HI.cari.fDOM.2018 <- left_join(HI.cari.fDOM.2018, CARI.2018.per.storm.2, by = "storm.num")
HI.cari.fDOM.2018 <- left_join(HI.cari.fDOM.2018, CARI.2018.per.storm.3, by = "storm.num")
HI.cari.fDOM.2018 <- left_join(HI.cari.fDOM.2018, CARI.2018.per.storm.4, by = "storm.num")
HI.cari.fDOM.2018 <- left_join(HI.cari.fDOM.2018, CARI.2018.per.storm.5, by = "storm.num")

cari.lm.fDOM <- lm(HI.cari.fDOM.2018$HI ~ HI.cari.fDOM.2018$precip) # model one with just total precip
cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2018$HI ~ HI.cari.fDOM.2018$precip.week) # model one with just total precip
cari.lm.fDOM.3 <- lm(HI.cari.fDOM.2018$HI ~ HI.cari.fDOM.2018$precip.month) # model one with just total precip
cari.lm.fDOM.4 <- lm(HI.cari.fDOM.2018$HI ~ HI.cari.fDOM.2018$ThreeMonth) # model one with just total precip

se <- HI.cari.fDOM.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sf <- HI.cari.fDOM.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model

sg <- HI.cari.fDOM.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model

sh <- HI.cari.fDOM.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.cari.SPC.2018 <- left_join(HI.mean.precip.cari.SPC, CARI.2018.per.storm.1, by = "storm.num")
HI.cari.SPC.2018 <- left_join(HI.cari.SPC.2018, CARI.2018.per.storm.2, by = "storm.num")
HI.cari.SPC.2018 <- left_join(HI.cari.SPC.2018, CARI.2018.per.storm.3, by = "storm.num")
HI.cari.SPC.2018 <- left_join(HI.cari.SPC.2018, CARI.2018.per.storm.4, by = "storm.num")
HI.cari.SPC.2018 <- left_join(HI.cari.SPC.2018, CARI.2018.per.storm.5, by = "storm.num")

cari.lm.SPC <- lm(HI.cari.SPC.2018$HI ~ HI.cari.SPC.2018$precip) # model one with just total precip
cari.lm.SPC.2 <- lm(HI.cari.SPC.2018$HI ~ HI.cari.SPC.2018$precip.week) # model one with just total precip
cari.lm.SPC.3 <- lm(HI.cari.SPC.2018$HI ~ HI.cari.SPC.2018$precip.month) # model one with just total precip
cari.lm.SPC.4 <- lm(HI.cari.SPC.2018$HI ~ HI.cari.SPC.2018$ThreeMonth) # model one with just total precip

si <- HI.cari.SPC.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sj <- HI.cari.SPC.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sk <- HI.cari.SPC.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sl <- HI.cari.SPC.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.cari.turb.2018 <- left_join(HI.mean.precip.cari.turb, CARI.2018.per.storm.1, by = "storm.num")
HI.cari.turb.2018 <- left_join(HI.cari.turb.2018, CARI.2018.per.storm.2, by = "storm.num")
HI.cari.turb.2018 <- left_join(HI.cari.turb.2018, CARI.2018.per.storm.3, by = "storm.num")
HI.cari.turb.2018 <- left_join(HI.cari.turb.2018, CARI.2018.per.storm.4, by = "storm.num")
HI.cari.turb.2018 <- left_join(HI.cari.turb.2018, CARI.2018.per.storm.5, by = "storm.num")

cari.lm.turb <- lm(HI.cari.turb.2018$HI ~ HI.cari.turb.2018$precip) # model one with just total precip
cari.lm.turb.2 <- lm(HI.cari.turb.2018$HI ~ HI.cari.turb.2018$precip.week) # model one with just total precip
cari.lm.turb.3 <- lm(HI.cari.turb.2018$HI ~ HI.cari.turb.2018$precip.month) # model one with just total precip
cari.lm.turb.4 <- lm(HI.cari.turb.2018$HI ~ HI.cari.turb.2018$ThreeMonth) # model one with just total precip

sm <- HI.cari.turb.2018 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sn <- HI.cari.turb.2018 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

so <- HI.cari.turb.2018 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sp <- HI.cari.turb.2018 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

#CARI.2019.storms.1 <- na.omit(CARI.2019.storms.1)

sum.time <- CARI.2018.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.cari.no3.2.2018 <- left_join(sum.time, HI.cari.no3.2018, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.no3.2.2018$TOTAL.TIME <- as.numeric(HI.cari.no3.2.2018$TOTAL.TIME)
HI.cari.no3.2.2018$Intensity <- HI.cari.no3.2.2018$precip/HI.cari.no3.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.no3.2 <- lm(HI.cari.no3.2.2018$HI ~ HI.cari.no3.2.2018$precip + HI.cari.no3.2.2018$Intensity) # model one with total precip and intensity 

sq <- HI.cari.no3.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.fDOM.2.2018 <- left_join(HI.cari.fDOM.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.fDOM.2.2018$TOTAL.TIME <- as.numeric(HI.cari.fDOM.2.2018$TOTAL.TIME)
HI.cari.fDOM.2.2018$Intensity <- HI.cari.fDOM.2.2018$precip/HI.cari.fDOM.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2.2018$HI ~ HI.cari.fDOM.2.2018$precip + HI.cari.fDOM.2.2018$Intensity) # model one with total precip and intensity 

sr <- HI.cari.fDOM.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.SPC.2.2018 <- left_join(HI.cari.SPC.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.SPC.2.2018$TOTAL.TIME <- as.numeric(HI.cari.SPC.2.2018$TOTAL.TIME)
HI.cari.SPC.2.2018$Intensity <- HI.cari.SPC.2.2018$precip/HI.cari.SPC.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.SPC.2 <- lm(HI.cari.SPC.2.2018$HI ~ HI.cari.SPC.2.2018$precip + HI.cari.SPC.2.2018$Intensity) # model one with total precip and intensity 

ss <- HI.cari.SPC.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.turb.2.2018 <- left_join(HI.cari.turb.2018, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.turb.2.2018$TOTAL.TIME <- as.numeric(HI.cari.turb.2.2018$TOTAL.TIME)
HI.cari.turb.2.2018$Intensity <- HI.cari.turb.2.2018$precip/HI.cari.turb.2.2018$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.turb.2 <- lm(HI.cari.turb.2.2018$HI ~ HI.cari.turb.2.2018$precip + HI.cari.turb.2.2018$Intensity) # model one with total precip and intensity 

st <- HI.cari.turb.2.2018 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
CARI.2018.1$day <- julian(CARI.2018.1$DateTime, origin = as.POSIXct('2018-01-01', tz = 'America/Anchorage')) # making a fractional day column 
CARI.2018.1$day <- as.numeric(CARI.2018.1$day)

CARI.2018.per.storm.5 <- CARI.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.cari.no3.2.2018 <- left_join(HI.cari.no3.2.2018, CARI.2018.per.storm.5, by = "storm.num")
cari.lm.no3.5 <- lm(HI.cari.no3.2.2018$HI ~ HI.cari.no3.2.2018$doy)

su <- HI.cari.no3.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.fDOM.2.2018 <- left_join(HI.cari.fDOM.2.2018, CARI.2018.per.storm.5, by = "storm.num")
cari.lm.fDOM.5 <- lm(HI.cari.fDOM.2.2018$HI ~ HI.cari.fDOM.2.2018$doy)

sv <- HI.cari.fDOM.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.SPC.2.2018 <- left_join(HI.cari.SPC.2.2018, CARI.2018.per.storm.5, by = "storm.num")
cari.lm.SPC.5 <- lm(HI.cari.SPC.2.2018$HI ~ HI.cari.SPC.2.2018$doy)

sw <- HI.cari.SPC.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.turb.2.2018 <- left_join(HI.cari.turb.2.2018, CARI.2018.per.storm.5, by = "storm.num")
cari.lm.turb.5 <- lm(HI.cari.turb.2.2018$HI ~ HI.cari.turb.2.2018$doy)

sx <- HI.cari.turb.2.2018 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(sa,sb,sc,sd,se,sf,sg,sh,si,sj,sk,sl,sm,sn,so,sp,sq,sr,ss,st,su,sv,sw,sx,
#          ncol = 4)

HI.cari.2018 <- rbind(HI.cari.no3.2.2018, HI.cari.fDOM.2.2018, HI.cari.SPC.2.2018, HI.cari.turb.2.2018) # merging all responses together 
HI.cari.2018$burn <- "burned" # adding a burn column
HI.cari.2018$pf <- "medium" # adding a pf column

write.csv(HI.cari.2018, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.cari.2018.csv")


HI.2018 <- rbind(HI.moos.2018, HI.frch.2018, HI.cari.2018) # bind all 2018 together
#write.csv(HI.2018, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2018.csv")


# add time since peak  Q in chena #
HI.2018 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2018.csv")
HI.2018$date <- as.Date(HI.2018$doy, origin = "2018-01-01")
origin_date <- as.Date("2018-05-22")
HI.2018$TimeSinceChena <- julian(HI.2018$date, origin_date)

write.csv(HI.2018, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2018.csv")

############################################# 2019 ################################################################
# import rain gauge data #
FRCH_RainGauge_2019 <- read_csv("~/Documents/DoD_2019/RainGauge/FRCH.RainGauge.2019.csv")
POKE_RainGauge_2019 <- read_csv("~/Documents/DoD_2019/RainGauge/POKE.RainGauge.2019.csv")
VAUL_RainGauge_2019 <- read_csv("~/Documents/DoD_2019/RainGauge/VAUL.RainGauge.2019.csv")
airtempmean <- read_csv("~/Documents/Storms/Ancilliary_data/airtempmean.csv")

# convert to AK time 
attributes(FRCH_RainGauge_2019$Datetime)$tzone <- 'America/Anchorage'
attributes(POKE_RainGauge_2019$DateTime)$tzone <- 'America/Anchorage'
attributes(VAUL_RainGauge_2019$DateTime)$tzone <- 'America/Anchorage'
attributes(airtempmean$date_timeAK)$tzone <- 'America/Anchorage'
names(airtempmean)[2] <- "DateTime"

# round to nearest 15 min 
FRCH_RainGauge_2019$DateTime <- lubridate::floor_date(FRCH_RainGauge_2019$Datetime, "15 minutes")
POKE_RainGauge_2019$DateTime <- lubridate::floor_date(POKE_RainGauge_2019$DateTime, "15 minutes")
VAUL_RainGauge_2019$DateTime <- lubridate::floor_date(VAUL_RainGauge_2019$DateTime, "15 minutes")

# MOOS # 
MOOSstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/All_Sites/", 
                                  recursive=F, 
                                  pattern="MOOS", 
                                  full.names=TRUE)

MOOS_storms<-do.call("rbind", lapply(MOOSstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

MOOS_storms$storm.num = c(rep("storm1", 702),
                          rep("storm3", 250),
                          rep("storm4", 256),
                          rep("storm5", 266),
                          rep("storm6a", 114),
                          rep("storm6b", 95),
                          rep("storm6c", 223),
                          rep("storm6d", 479),
                          rep("storm7a", 166),
                          rep("storm7b", 84),
                          rep("storm7c", 430),
                          rep("storm8", 174),
                          rep("storm9", 530))

MOOS_storms$DateTime <- as.POSIXct(MOOS_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
MOOS.2019.storms.1<- left_join(MOOS_storms, FRCH_RainGauge_2019, by = "DateTime")
MOOS.2019.storms.1<- left_join(MOOS.2019.storms.1, airtempmean, by = "DateTime")

names(MOOS.2019.storms.1)[names(MOOS.2019.storms.1) == ''] <- 'x'

MOOS.2019.per.storm.1 <- MOOS.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- MOOS.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

MOOS.2019.per.storm.1$temp <- temp$temp


MOOS.2019 <- read.csv("~/Documents/Storms/Q_Chem/MOOS/MOOS_chem_2019.csv")
MOOS.2019$DateTime <- as.POSIXct(MOOS.2019$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
MOOS.2019 <- left_join(MOOS.2019, FRCH_RainGauge_2019, by = "DateTime")
MOOS.2019 <- left_join(MOOS.2019, airtempmean, by = "DateTime")
MOOS.2019$week <- rollapplyr(MOOS.2019$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2019$month <- rollapplyr(MOOS.2019$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2019$ThreeMonth <- rollapplyr(MOOS.2019$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2019$temp.week <- rollapplyr(MOOS.2019$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

MOOS.2019.1 <- left_join(MOOS.2019.storms.1, MOOS.2019, by = "DateTime") # week month and 3 month precip totals 

MOOS.2019.per.storm.2 <- MOOS.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
MOOS.2019.per.storm.3 <- MOOS.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
MOOS.2019.per.storm.4 <- MOOS.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
MOOS.2019.per.storm.5 <- MOOS.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.moos.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "MOOS" & response == "NO3")
HI.mean.precip.moos.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "MOOS" & response == "fDOM")
HI.mean.precip.moos.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "MOOS" & response == "SPC")
HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "MOOS" & response == "turb")

HI.moos.no3.2019 <- left_join(HI.mean.precip.moos.NO3, MOOS.2019.per.storm.1, by = "storm.num")
HI.moos.no3.2019 <- left_join(HI.moos.no3.2019, MOOS.2019.per.storm.2, by = "storm.num")
HI.moos.no3.2019 <- left_join(HI.moos.no3.2019, MOOS.2019.per.storm.3, by = "storm.num")
HI.moos.no3.2019 <- left_join(HI.moos.no3.2019, MOOS.2019.per.storm.4, by = "storm.num")
HI.moos.no3.2019 <- left_join(HI.moos.no3.2019, MOOS.2019.per.storm.5, by = "storm.num")

moos.lm.no3 <- lm(HI.moos.no3.2019$HI ~ HI.moos.no3.2019$precip) # model one with just total precip
moos.lm.no3.2 <- lm(HI.moos.no3.2019$HI ~ HI.moos.no3.2019$precip.week) # model one with just total precip
moos.lm.no3.3 <- lm(HI.moos.no3.2019$HI ~ HI.moos.no3.2019$precip.month) # model one with just total precip
moos.lm.no3.4 <- lm(HI.moos.no3.2019$HI ~ HI.moos.no3.2019$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

aa <- HI.moos.no3.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ab <- HI.moos.no3.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ac <- HI.moos.no3.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ad <- HI.moos.no3.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.fDOM.2019 <- left_join(HI.mean.precip.moos.fDOM, MOOS.2019.per.storm.1, by = "storm.num")
HI.moos.fDOM.2019 <- left_join(HI.moos.fDOM.2019, MOOS.2019.per.storm.2, by = "storm.num")
HI.moos.fDOM.2019 <- left_join(HI.moos.fDOM.2019, MOOS.2019.per.storm.3, by = "storm.num")
HI.moos.fDOM.2019 <- left_join(HI.moos.fDOM.2019, MOOS.2019.per.storm.4, by = "storm.num")
HI.moos.fDOM.2019 <- left_join(HI.moos.fDOM.2019, MOOS.2019.per.storm.5, by = "storm.num")

moos.lm.fDOM <- lm(HI.moos.fDOM.2019$HI ~ HI.moos.fDOM.2019$precip) # model one with just total precip
moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2019$HI ~ HI.moos.fDOM.2019$precip.week) # model one with just total precip
moos.lm.fDOM.3 <- lm(HI.moos.fDOM.2019$HI ~ HI.moos.fDOM.2019$precip.month) # model one with just total precip
moos.lm.fDOM.4 <- lm(HI.moos.fDOM.2019$HI ~ HI.moos.fDOM.2019$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

ae <- HI.moos.fDOM.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

af <- HI.moos.fDOM.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ag <- HI.moos.fDOM.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ah <- HI.moos.fDOM.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.SPC.2019 <- left_join(HI.mean.precip.moos.SPC, MOOS.2019.per.storm.1, by = "storm.num")
HI.moos.SPC.2019 <- left_join(HI.moos.SPC.2019, MOOS.2019.per.storm.2, by = "storm.num")
HI.moos.SPC.2019 <- left_join(HI.moos.SPC.2019, MOOS.2019.per.storm.3, by = "storm.num")
HI.moos.SPC.2019 <- left_join(HI.moos.SPC.2019, MOOS.2019.per.storm.4, by = "storm.num")
HI.moos.SPC.2019 <- left_join(HI.moos.SPC.2019, MOOS.2019.per.storm.5, by = "storm.num")

moos.lm.SPC <- lm(HI.moos.SPC.2019$HI ~ HI.moos.SPC.2019$precip) # model one with just total precip
moos.lm.SPC.2 <- lm(HI.moos.SPC.2019$HI ~ HI.moos.SPC.2019$precip.week) # model one with just total precip
moos.lm.SPC.3 <- lm(HI.moos.SPC.2019$HI ~ HI.moos.SPC.2019$precip.month) # model one with just total precip
moos.lm.SPC.4 <- lm(HI.moos.SPC.2019$HI ~ HI.moos.SPC.2019$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

ai <- HI.moos.SPC.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

aj <- HI.moos.SPC.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ak <- HI.moos.SPC.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

al <- HI.moos.SPC.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.turb.2019 <- left_join(HI.mean.precip.moos.turb, MOOS.2019.per.storm.1, by = "storm.num")
HI.moos.turb.2019 <- left_join(HI.moos.turb.2019, MOOS.2019.per.storm.2, by = "storm.num")
HI.moos.turb.2019 <- left_join(HI.moos.turb.2019, MOOS.2019.per.storm.3, by = "storm.num")
HI.moos.turb.2019 <- left_join(HI.moos.turb.2019, MOOS.2019.per.storm.4, by = "storm.num")
HI.moos.turb.2019 <- left_join(HI.moos.turb.2019, MOOS.2019.per.storm.5, by = "storm.num")

moos.lm.turb <- lm(HI.moos.turb.2019$HI ~ HI.moos.turb.2019$precip) # model one with just total precip
moos.lm.turb.2 <- lm(HI.moos.turb.2019$HI ~ HI.moos.turb.2019$precip.week) # model one with just total precip
moos.lm.turb.3 <- lm(HI.moos.turb.2019$HI ~ HI.moos.turb.2019$precip.month) # model one with just total precip
moos.lm.turb.4 <- lm(HI.moos.turb.2019$HI ~ HI.moos.turb.2019$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

am <- HI.moos.turb.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

an <- HI.moos.turb.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ao <- HI.moos.turb.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ap <- HI.moos.turb.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sum.time <- MOOS.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.moos.no3.2.2019 <- left_join(HI.moos.no3.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.no3.2.2019$TOTAL.TIME <- as.numeric(HI.moos.no3.2.2019$TOTAL.TIME)
HI.moos.no3.2.2019$Intensity <- HI.moos.no3.2.2019$precip/HI.moos.no3.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.no3.2 <- lm(HI.moos.no3.2.2019$HI ~ HI.moos.no3.2.2019$precip + HI.moos.no3.2.2019$Intensity) # model one with total precip and intensity 

aq <- HI.moos.no3.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2.2019 <- left_join(HI.moos.fDOM.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.fDOM.2.2019$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2.2019$TOTAL.TIME)
HI.moos.fDOM.2.2019$Intensity <- HI.moos.fDOM.2.2019$precip/HI.moos.fDOM.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2.2019$HI ~ HI.moos.fDOM.2.2019$precip + HI.moos.fDOM.2.2019$Intensity) # model one with total precip and intensity 

ar <- HI.moos.fDOM.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2.2019 <- left_join(HI.moos.SPC.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.SPC.2.2019$TOTAL.TIME <- as.numeric(HI.moos.SPC.2.2019$TOTAL.TIME)
HI.moos.SPC.2.2019$Intensity <- HI.moos.SPC.2.2019$precip/HI.moos.SPC.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.SPC.2 <- lm(HI.moos.SPC.2.2019$HI ~ HI.moos.SPC.2.2019$precip + HI.moos.SPC.2.2019$Intensity) # model one with total precip and intensity 

as <- HI.moos.SPC.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2.2019 <- left_join(HI.moos.turb.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.turb.2.2019$TOTAL.TIME <- as.numeric(HI.moos.turb.2.2019$TOTAL.TIME)
HI.moos.turb.2.2019$Intensity <- HI.moos.turb.2.2019$precip/HI.moos.turb.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.turb.2 <- lm(HI.moos.turb.2.2019$HI ~ HI.moos.turb.2.2019$precip + HI.moos.turb.2.2019$Intensity) # model one with total precip and intensity 

at <- HI.moos.turb.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
MOOS.2019.1$day <- julian(MOOS.2019.1$DateTime, origin = as.POSIXct('2019-01-01', tz = 'America/Anchorage')) # making a fractional day column 
MOOS.2019.1$day <- as.numeric(MOOS.2019.1$day)

MOOS.2019.per.storm.5 <- MOOS.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.moos.no3.2.2019 <- left_join(HI.moos.no3.2.2019, MOOS.2019.per.storm.5, by = "storm.num")
moos.lm.no3.5 <- lm(HI.moos.no3.2.2019$HI ~ HI.moos.no3.2.2019$doy)

au <- HI.moos.no3.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2.2019 <- left_join(HI.moos.fDOM.2.2019, MOOS.2019.per.storm.5, by = "storm.num")
moos.lm.fDOM.5 <- lm(HI.moos.fDOM.2.2019$HI ~ HI.moos.fDOM.2.2019$doy)

av <- HI.moos.fDOM.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2.2019 <- left_join(HI.moos.SPC.2.2019, MOOS.2019.per.storm.5, by = "storm.num")
moos.lm.SPC.5 <- lm(HI.moos.SPC.2.2019$HI ~ HI.moos.SPC.2.2019$doy)

aw <- HI.moos.SPC.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2.2019 <- left_join(HI.moos.turb.2.2019, MOOS.2019.per.storm.5, by = "storm.num")
moos.lm.turb.5 <- lm(HI.moos.turb.2.2019$HI ~ HI.moos.turb.2.2019$doy)

ax <- HI.moos.turb.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.2019 <- rbind(HI.moos.no3.2.2019, HI.moos.fDOM.2.2019, HI.moos.SPC.2.2019, HI.moos.turb.2.2019) # merging all responses together 
HI.moos.2019$burn <- "burned" # adding a burn column
HI.moos.2019$pf <- "medium" # adding a pf column

write.csv(HI.moos.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.moos.2019.csv")


# FRCH # 
FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/All_Sites/", 
                                  recursive=F, 
                                  pattern="FRCH", 
                                  full.names=TRUE)

FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

FRCH_storms$storm.num = c(rep("storm1", 993),
                          rep("storm10a", 121),
                          rep("storm10b", 95),
                          rep("storm10c", 207),
                          rep("storm11", 479),
                          rep("storm12a", 183),
                          rep("storm12b", 67),
                          rep("storm12c", 511),
                          rep("storm12d", 99),
                          rep("storm12e", 127),
                          rep("storm13", 391),
                          rep("storm14", 631),
                          rep("storm2", 165),
                          rep("storm3", 201),
                          rep("storm4", 193),
                          rep("storm5", 229),
                          rep("storm6", 257),
                          rep("storm7", 133),
                          rep("storm8", 105),
                          rep("storm9a", 61),
                          rep("storm9b", 149))
FRCH_storms$DateTime <- as.POSIXct(FRCH_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
FRCH.2019.storms.1<- left_join(FRCH_storms, FRCH_RainGauge_2019, by = "DateTime")
FRCH.2019.storms.1<- left_join(FRCH.2019.storms.1, airtempmean, by = "DateTime")

names(FRCH.2019.storms.1)[names(FRCH.2019.storms.1) == ''] <- 'x'

FRCH.2019.per.storm.1 <- FRCH.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- FRCH.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

FRCH.2019.per.storm.1$temp <- temp$temp

FRCH.2019 <- read.csv("~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2019.csv")
FRCH.2019$DateTime <- as.POSIXct(FRCH.2019$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
FRCH.2019 <- left_join(FRCH.2019, FRCH_RainGauge_2019, by = "DateTime")
FRCH.2019 <- left_join(FRCH.2019, airtempmean, by = "DateTime")
FRCH.2019$week <- rollapplyr(FRCH.2019$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2019$month <- rollapplyr(FRCH.2019$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2019$ThreeMonth <- rollapplyr(FRCH.2019$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2019$temp.week <- rollapplyr(FRCH.2019$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

FRCH.2019.1 <- left_join(FRCH.2019.storms.1, FRCH.2019, by = "DateTime") # week month and 3 month precip totals 

FRCH.2019.per.storm.2 <- FRCH.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
FRCH.2019.per.storm.3 <- FRCH.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
FRCH.2019.per.storm.4 <- FRCH.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
FRCH.2019.per.storm.5 <- FRCH.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "FRCH" & response == "turb")

HI.frch.no3.2019 <- left_join(HI.mean.precip.frch.NO3, FRCH.2019.per.storm.1, by = "storm.num")
HI.frch.no3.2019 <- left_join(HI.frch.no3.2019, FRCH.2019.per.storm.1, by = "storm.num")
HI.frch.no3.2019 <- left_join(HI.frch.no3.2019, FRCH.2019.per.storm.2, by = "storm.num")
HI.frch.no3.2019 <- left_join(HI.frch.no3.2019, FRCH.2019.per.storm.3, by = "storm.num")
HI.frch.no3.2019 <- left_join(HI.frch.no3.2019, FRCH.2019.per.storm.4, by = "storm.num")
HI.frch.no3.2019 <- left_join(HI.frch.no3.2019, FRCH.2019.per.storm.5, by = "storm.num")

HI.frch.no3.2019 <- HI.frch.no3.2019[,-c(6:7)]
names(HI.frch.no3.2019) <- c("site.ID", "year", "storm.num","response", "HI", "precip", "temp", "precip.week", 
                     "precip.month", "ThreeMonth", "temp.week")
frch.lm.no3 <- lm(HI.frch.no3.2019$HI ~ HI.frch.no3.2019$precip) # model one with just total precip

frch.formula <- y ~ x

ba <- HI.frch.no3.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bb <- HI.frch.no3.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bc <- HI.frch.no3.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bd <- HI.frch.no3.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.fDOM.2019 <- left_join(HI.mean.precip.frch.fDOM, FRCH.2019.per.storm.1, by = "storm.num")
HI.frch.fDOM.2019 <- left_join(HI.frch.fDOM.2019, FRCH.2019.per.storm.2, by = "storm.num")
HI.frch.fDOM.2019 <- left_join(HI.frch.fDOM.2019, FRCH.2019.per.storm.3, by = "storm.num")
HI.frch.fDOM.2019 <- left_join(HI.frch.fDOM.2019, FRCH.2019.per.storm.4, by = "storm.num")
HI.frch.fDOM.2019 <- left_join(HI.frch.fDOM.2019, FRCH.2019.per.storm.5, by = "storm.num")

frch.lm.fDOM <- lm(HI.frch.fDOM.2019$HI ~ HI.frch.fDOM.2019$precip) # model one with just total precip
frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2019$HI ~ HI.frch.fDOM.2019$precip.week) # model one with just total precip
frch.lm.fDOM.3 <- lm(HI.frch.fDOM.2019$HI ~ HI.frch.fDOM.2019$precip.month) # model one with just total precip
frch.lm.fDOM.4 <- lm(HI.frch.fDOM.2019$HI ~ HI.frch.fDOM.2019$ThreeMonth) # model one with just total precip

frch.formula <- y ~ x

be <- HI.frch.fDOM.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bf <- HI.frch.fDOM.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bg <- HI.frch.fDOM.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bh <- HI.frch.fDOM.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.SPC.2019 <- left_join(HI.mean.precip.frch.SPC, FRCH.2019.per.storm.1, by = "storm.num")
HI.frch.SPC.2019 <- left_join(HI.frch.SPC.2019, FRCH.2019.per.storm.2, by = "storm.num")
HI.frch.SPC.2019 <- left_join(HI.frch.SPC.2019, FRCH.2019.per.storm.3, by = "storm.num")
HI.frch.SPC.2019 <- left_join(HI.frch.SPC.2019, FRCH.2019.per.storm.4, by = "storm.num")
HI.frch.SPC.2019 <- left_join(HI.frch.SPC.2019, FRCH.2019.per.storm.5, by = "storm.num")

frch.lm.SPC <- lm(HI.frch.SPC.2019$HI ~ HI.frch.SPC.2019$precip) # model one with just total precip
frch.lm.SPC.2 <- lm(HI.frch.SPC.2019$HI ~ HI.frch.SPC.2019$precip.week) # model one with just total precip
frch.lm.SPC.3 <- lm(HI.frch.SPC.2019$HI ~ HI.frch.SPC.2019$precip.month) # model one with just total precip
frch.lm.SPC.4 <- lm(HI.frch.SPC.2019$HI ~ HI.frch.SPC.2019$ThreeMonth) # model one with just total precip


bi <- HI.frch.SPC.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bj <- HI.frch.SPC.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bk <- HI.frch.SPC.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bl <- HI.frch.SPC.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.turb.2019 <- left_join(HI.mean.precip.frch.turb, FRCH.2019.per.storm.1, by = "storm.num")
HI.frch.turb.2019 <- left_join(HI.frch.turb.2019, FRCH.2019.per.storm.2, by = "storm.num")
HI.frch.turb.2019 <- left_join(HI.frch.turb.2019, FRCH.2019.per.storm.3, by = "storm.num")
HI.frch.turb.2019 <- left_join(HI.frch.turb.2019, FRCH.2019.per.storm.4, by = "storm.num")
HI.frch.turb.2019 <- left_join(HI.frch.turb.2019, FRCH.2019.per.storm.5, by = "storm.num")

frch.lm.turb <- lm(HI.frch.turb.2019$HI ~ HI.frch.turb.2019$precip) # model one with just total precip
frch.lm.turb.2 <- lm(HI.frch.turb.2019$HI ~ HI.frch.turb.2019$precip.week) # model one with just total precip
frch.lm.turb.3 <- lm(HI.frch.turb.2019$HI ~ HI.frch.turb.2019$precip.month) # model one with just total precip
frch.lm.turb.4 <- lm(HI.frch.turb.2019$HI ~ HI.frch.turb.2019$ThreeMonth) # model one with just total precip

bm <- HI.frch.turb.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bn <- HI.frch.turb.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bo <- HI.frch.turb.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bp <- HI.frch.turb.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- FRCH.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.frch.no3.2.2019 <- left_join(HI.frch.no3.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.no3.2.2019$TOTAL.TIME <- as.numeric(HI.frch.no3.2.2019$TOTAL.TIME)
HI.frch.no3.2.2019$Intensity <- HI.frch.no3.2.2019$precip/HI.frch.no3.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.no3.2 <- lm(HI.frch.no3.2.2019$HI ~ HI.frch.no3.2.2019$precip + HI.frch.no3.2.2019$Intensity) # model one with total precip and intensity 

bq <- HI.frch.no3.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2.2019 <- left_join(HI.frch.fDOM.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.fDOM.2.2019$TOTAL.TIME <- as.numeric(HI.frch.fDOM.2.2019$TOTAL.TIME)
HI.frch.fDOM.2.2019$Intensity <- HI.frch.fDOM.2.2019$precip/HI.frch.fDOM.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2.2019$HI ~ HI.frch.fDOM.2.2019$precip + HI.frch.fDOM.2.2019$Intensity) # model one with total precip and intensity 

br <- HI.frch.fDOM.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2.2019 <- left_join(HI.frch.SPC.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.SPC.2.2019$TOTAL.TIME <- as.numeric(HI.frch.SPC.2.2019$TOTAL.TIME)
HI.frch.SPC.2.2019$Intensity <- HI.frch.SPC.2.2019$precip/HI.frch.SPC.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.SPC.2 <- lm(HI.frch.SPC.2.2019$HI ~ HI.frch.SPC.2.2019$precip + HI.frch.SPC.2.2019$Intensity) # model one with total precip and intensity 

bs <- HI.frch.SPC.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2.2019 <- left_join(HI.frch.turb.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.turb.2.2019$TOTAL.TIME <- as.numeric(HI.frch.turb.2.2019$TOTAL.TIME)
HI.frch.turb.2.2019$Intensity <- HI.frch.turb.2.2019$precip/HI.frch.turb.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.turb.2 <- lm(HI.frch.turb.2.2019$HI ~ HI.frch.turb.2.2019$precip + HI.frch.turb.2.2019$Intensity) # model one with total precip and intensity 

bt <- HI.frch.turb.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
FRCH.2019.1$day <- julian(FRCH.2019.1$DateTime, origin = as.POSIXct('2019-01-01', tz = 'America/Anchorage')) # making a fractional day column 
FRCH.2019.1$day <- as.numeric(FRCH.2019.1$day)

FRCH.2019.per.storm.5 <- FRCH.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.frch.no3.2.2019 <- left_join(HI.frch.no3.2.2019, FRCH.2019.per.storm.5, by = "storm.num")
frch.lm.no3.5 <- lm(HI.frch.no3.2.2019$HI ~ HI.frch.no3.2.2019$doy)

bu <- HI.frch.no3.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2.2019 <- left_join(HI.frch.fDOM.2.2019, FRCH.2019.per.storm.5, by = "storm.num")
frch.lm.fDOM.5 <- lm(HI.frch.fDOM.2.2019$HI ~ HI.frch.fDOM.2.2019$doy)

bv <- HI.frch.fDOM.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2.2019 <- left_join(HI.frch.SPC.2.2019, FRCH.2019.per.storm.5, by = "storm.num")
frch.lm.SPC.5 <- lm(HI.frch.SPC.2.2019$HI ~ HI.frch.SPC.2.2019$doy)

bw <- HI.frch.SPC.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2.2019 <- left_join(HI.frch.turb.2.2019, FRCH.2019.per.storm.5, by = "storm.num")
frch.lm.turb.5 <- lm(HI.frch.turb.2.2019$HI ~ HI.frch.turb.2.2019$doy)

bx <- HI.frch.turb.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.2019 <- rbind(HI.frch.no3.2.2019, HI.frch.fDOM.2.2019, HI.frch.SPC.2.2019, HI.frch.turb.2.2019) # merging all responses together 
HI.frch.2019$burn <- "unburned" # adding a burn column
HI.frch.2019$pf <- "medium" # adding a pf column

write.csv(HI.frch.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.frch.2019.csv")


# POKE # 
POKEstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/All_Sites/", 
                                  recursive=F, 
                                  pattern="POKE", 
                                  full.names=TRUE)

POKE_storms<-do.call("rbind", lapply(POKEstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

POKE_storms$storm.num = c(rep("storm1", 103),
                          rep("storm2", 91),
                          rep("storm3", 147),
                          rep("storm4", 115),
                          rep("storm5a", 87),
                          rep("storm5b", 239),
                          rep("storm5c", 111),
                          rep("storm5d", 99),
                          rep("storm6a", 51),
                          rep("storm6b", 227),
                          rep("storm7", 267),
                          rep("storm8", 95),
                          rep("storm9", 211))

POKE_storms$DateTime <- as.POSIXct(POKE_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
POKE.2019.storms.1<- left_join(POKE_storms, POKE_RainGauge_2019, by = "DateTime")
POKE.2019.storms.1<- left_join(POKE.2019.storms.1, airtempmean, by = "DateTime")

names(POKE.2019.storms.1)[names(POKE.2019.storms.1) == ''] <- 'x'

POKE.2019.per.storm.1 <- POKE.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- POKE.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

POKE.2019.per.storm.1$temp <- temp$temp

POKE.2019 <- read.csv("~/Documents/Storms/Q_Chem/POKE/POKE_chem_2019.csv")
POKE.2019$DateTime <- as.POSIXct(POKE.2019$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
POKE.2019 <- left_join(POKE.2019, POKE_RainGauge_2019, by = "DateTime")
POKE.2019 <- left_join(POKE.2019, airtempmean, by = "DateTime")
POKE.2019$week <- rollapplyr(POKE.2019$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2019$month <- rollapplyr(POKE.2019$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2019$ThreeMonth <- rollapplyr(POKE.2019$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2019$temp.week <- rollapplyr(POKE.2019$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

POKE.2019.1 <- left_join(POKE.2019.storms.1, POKE.2019, by = "DateTime") # week month and 3 month precip totals 

POKE.2019.per.storm.2 <- POKE.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
POKE.2019.per.storm.3 <- POKE.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
POKE.2019.per.storm.4 <- POKE.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
POKE.2019.per.storm.5 <- POKE.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.poke.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "NO3")
HI.mean.precip.poke.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "fDOM")
HI.mean.precip.poke.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "SPC")
HI.mean.precip.poke.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "turb")

HI.poke.no3.2019 <- left_join(HI.mean.precip.poke.NO3, POKE.2019.per.storm.1, by = "storm.num")
HI.poke.no3.2019 <- left_join(HI.poke.no3.2019, POKE.2019.per.storm.2, by = "storm.num")
HI.poke.no3.2019 <- left_join(HI.poke.no3.2019, POKE.2019.per.storm.3, by = "storm.num")
HI.poke.no3.2019 <- left_join(HI.poke.no3.2019, POKE.2019.per.storm.4, by = "storm.num")
HI.poke.no3.2019 <- left_join(HI.poke.no3.2019, POKE.2019.per.storm.5, by = "storm.num")

poke.lm.no3 <- lm(HI.poke.no3.2019$HI ~ HI.poke.no3.2019$precip) # model one with just total precip
poke.lm.no3.2 <- lm(HI.poke.no3.2019$HI ~ HI.poke.no3.2019$precip.week) # model one with just total precip
poke.lm.no3.3 <- lm(HI.poke.no3.2019$HI ~ HI.poke.no3.2019$precip.month) # model one with just total precip
poke.lm.no3.4 <- lm(HI.poke.no3.2019$HI ~ HI.poke.no3.2019$ThreeMonth) # model one with just total precip

poke.formula <- y ~ x

pa <- HI.poke.no3.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

pb <- HI.poke.no3.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("One-weeek Precip") +
  ylab("HI-Solute Storage") # plot model 

pc <- HI.poke.no3.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

pd <- HI.poke.no3.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.fDOM.2019 <- left_join(HI.mean.precip.poke.fDOM, POKE.2019.per.storm.1, by = "storm.num")
HI.poke.fDOM.2019 <- left_join(HI.poke.fDOM.2019, POKE.2019.per.storm.2, by = "storm.num")
HI.poke.fDOM.2019 <- left_join(HI.poke.fDOM.2019, POKE.2019.per.storm.3, by = "storm.num")
HI.poke.fDOM.2019 <- left_join(HI.poke.fDOM.2019, POKE.2019.per.storm.4, by = "storm.num")
HI.poke.fDOM.2019 <- left_join(HI.poke.fDOM.2019, POKE.2019.per.storm.5, by = "storm.num")

poke.lm.fDOM <- lm(HI.poke.fDOM.2019$HI ~ HI.poke.fDOM.2019$precip) # model one with just total precip
poke.lm.fDOM.2 <- lm(HI.poke.fDOM.2019$HI ~ HI.poke.fDOM.2019$precip.week) # model one with just total precip
poke.lm.fDOM.3 <- lm(HI.poke.fDOM.2019$HI ~ HI.poke.fDOM.2019$precip.month) # model one with just total precip
poke.lm.fDOM.4 <- lm(HI.poke.fDOM.2019$HI ~ HI.poke.fDOM.2019$ThreeMonth) # model one with just total precip

pe <- HI.poke.fDOM.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

pf <- HI.poke.fDOM.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

pg <- HI.poke.fDOM.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ph <- HI.poke.fDOM.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.SPC.2019 <- left_join(HI.mean.precip.poke.SPC, POKE.2019.per.storm.1, by = "storm.num")
HI.poke.SPC.2019 <- left_join(HI.poke.SPC.2019, POKE.2019.per.storm.2, by = "storm.num")
HI.poke.SPC.2019 <- left_join(HI.poke.SPC.2019, POKE.2019.per.storm.3, by = "storm.num")
HI.poke.SPC.2019 <- left_join(HI.poke.SPC.2019, POKE.2019.per.storm.4, by = "storm.num")
HI.poke.SPC.2019 <- left_join(HI.poke.SPC.2019, POKE.2019.per.storm.5, by = "storm.num")

poke.lm.SPC <- lm(HI.poke.SPC.2019$HI ~ HI.poke.SPC.2019$precip) # model one with just total precip
poke.lm.SPC.2 <- lm(HI.poke.SPC.2019$HI ~ HI.poke.SPC.2019$precip.week) # model one with just total precip
poke.lm.SPC.3 <- lm(HI.poke.SPC.2019$HI ~ HI.poke.SPC.2019$precip.month) # model one with just total precip
poke.lm.SPC.4 <- lm(HI.poke.SPC.2019$HI ~ HI.poke.SPC.2019$ThreeMonth) # model one with just total precip

pi <- HI.poke.SPC.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

pj <- HI.poke.SPC.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

pk <- HI.poke.SPC.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model

pl <- HI.poke.SPC.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.poke.turb.2019 <- left_join(HI.mean.precip.poke.turb, POKE.2019.per.storm.1, by = "storm.num")
HI.poke.turb.2019 <- left_join(HI.poke.turb.2019, POKE.2019.per.storm.2, by = "storm.num")
HI.poke.turb.2019 <- left_join(HI.poke.turb.2019, POKE.2019.per.storm.3, by = "storm.num")
HI.poke.turb.2019 <- left_join(HI.poke.turb.2019, POKE.2019.per.storm.4, by = "storm.num")
HI.poke.turb.2019 <- left_join(HI.poke.turb.2019, POKE.2019.per.storm.5, by = "storm.num")

poke.lm.turb <- lm(HI.poke.turb.2019$HI ~ HI.poke.turb.2019$precip) # model one with just total precip
poke.lm.turb.2 <- lm(HI.poke.turb.2019$HI ~ HI.poke.turb.2019$precip.week) # model one with just total precip
poke.lm.turb.3 <- lm(HI.poke.turb.2019$HI ~ HI.poke.turb.2019$precip.month) # model one with just total precip
poke.lm.turb.4 <- lm(HI.poke.turb.2019$HI ~ HI.poke.turb.2019$ThreeMonth) # model one with just total precip

pm <- HI.poke.turb.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

pn <- HI.poke.turb.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

po <- HI.poke.turb.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

pp <- HI.poke.turb.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- POKE.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.poke.no3.2.2019 <- left_join(HI.poke.no3.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.no3.2.2019$TOTAL.TIME <- as.numeric(HI.poke.no3.2.2019$TOTAL.TIME)
HI.poke.no3.2.2019$Intensity <- HI.poke.no3.2.2019$precip/HI.poke.no3.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.no3.2 <- lm(HI.poke.no3.2.2019$HI ~ HI.poke.no3.2.2019$precip + HI.poke.no3.2.2019$Intensity) # model one with total precip and intensity 

pq <- HI.poke.no3.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.fDOM.2.2019 <- left_join(HI.poke.fDOM.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.fDOM.2.2019$TOTAL.TIME <- as.numeric(HI.poke.fDOM.2.2019$TOTAL.TIME)
HI.poke.fDOM.2.2019$Intensity <- HI.poke.fDOM.2.2019$precip/HI.poke.fDOM.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.fDOM.2 <- lm(HI.poke.fDOM.2.2019$HI ~ HI.poke.fDOM.2.2019$precip + HI.poke.fDOM.2.2019$Intensity) # model one with total precip and intensity 

pr <- HI.poke.fDOM.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.SPC.2.2019 <- left_join(HI.poke.SPC.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.SPC.2.2019$TOTAL.TIME <- as.numeric(HI.poke.SPC.2.2019$TOTAL.TIME)
HI.poke.SPC.2.2019$Intensity <- HI.poke.SPC.2.2019$precip/HI.poke.SPC.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.SPC.2.2019 <- lm(HI.poke.SPC.2.2019$HI ~ HI.poke.SPC.2.2019$precip + HI.poke.SPC.2.2019$Intensity) # model one with total precip and intensity 

ps <- HI.poke.SPC.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.turb.2.2019 <- left_join(HI.poke.turb.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.turb.2.2019$TOTAL.TIME <- as.numeric(HI.poke.turb.2.2019$TOTAL.TIME)
HI.poke.turb.2.2019$Intensity <- HI.poke.turb.2.2019$precip/HI.poke.turb.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.turb.2 <- lm(HI.poke.turb.2.2019$HI ~ HI.poke.turb.2.2019$precip + HI.poke.turb.2.2019$Intensity) # model one with total precip and intensity 

pt <- HI.poke.turb.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
POKE.2019.1$day <- julian(POKE.2019.1$DateTime, origin = as.POSIXct('2019-01-01', tz = 'America/Anchorage')) # making a fractional day column 
POKE.2019.1$day <- as.numeric(POKE.2019.1$day)

POKE.2019.per.storm.5 <- POKE.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.poke.no3.2.2019 <- left_join(HI.poke.no3.2.2019, POKE.2019.per.storm.5, by = "storm.num")
poke.lm.no3.5 <- lm(HI.poke.no3.2.2019$HI ~ HI.poke.no3.2.2019$doy)

pu <- HI.poke.no3.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.fDOM.2.2019 <- left_join(HI.poke.fDOM.2.2019, POKE.2019.per.storm.5, by = "storm.num")
poke.lm.fDOM.5 <- lm(HI.poke.fDOM.2.2019$HI ~ HI.poke.fDOM.2.2019$doy)

pv <- HI.poke.fDOM.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.SPC.2.2019 <- left_join(HI.poke.SPC.2.2019, POKE.2019.per.storm.5, by = "storm.num")
poke.lm.SPC.5 <- lm(HI.poke.SPC.2.2019$HI ~ HI.poke.SPC.2.2019$doy)

pw <- HI.poke.SPC.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.turb.2.2019 <- left_join(HI.poke.turb.2.2019, POKE.2019.per.storm.5, by = "storm.num")
poke.lm.turb.5 <- lm(HI.poke.turb.2.2019$HI ~ HI.poke.turb.2.2019$doy)

px <- HI.poke.turb.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(pa,pb,pc,pd,pe,pf,pg,ph,pi,pj,pk,pl,pm,pn,po,pp,pq,pr,ps,pt,pu,pv,pw,px,
        #  ncol = 4)

HI.poke.2019 <- rbind(HI.poke.no3.2.2019, HI.poke.fDOM.2.2019, HI.poke.SPC.2.2019, HI.poke.turb.2.2019) # merging all responses together 
HI.poke.2019$burn <- "burned" # adding a burn column
HI.poke.2019$pf <- "medium" # adding a pf column

write.csv(HI.poke.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.poke.2019.csv")

# VAUL # 
VAULstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/All_Sites/", 
                                  recursive=F, 
                                  pattern="VAUL", 
                                  full.names=TRUE)

VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

VAUL_storms$storm.num = c(rep("storm1", 191),
                          rep("storm2", 207),
                          rep("storm3", 191),
                          rep("storm4a", 83),
                          rep("storm4b", 219),
                          rep("storm4c", 707),
                          rep("storm5", 275),
                          rep("storm6", 263),
                          rep("storm7", 107),
                          rep("storm8a", 167),
                          rep("storm8b", 223),
                          rep("storm8c", 479))

VAUL_storms$DateTime <- as.POSIXct(VAUL_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
VAUL.2019.storms.1<- left_join(VAUL_storms, VAUL_RainGauge_2019, by = "DateTime")
VAUL.2019.storms.1<- left_join(VAUL.2019.storms.1, airtempmean, by = "DateTime")

names(VAUL.2019.storms.1)[names(VAUL.2019.storms.1) == ''] <- 'x'

VAUL.2019.per.storm.1 <- VAUL.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- VAUL.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

VAUL.2019.per.storm.1$temp <- temp$temp

VAUL.2019 <- read.csv("~/Documents/Storms/Q_Chem/VAUL/VAUL_chem_2019.csv")
VAUL.2019$DateTime <- as.POSIXct(VAUL.2019$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
VAUL.2019 <- left_join(VAUL.2019, VAUL_RainGauge_2019, by = "DateTime")
VAUL.2019 <- left_join(VAUL.2019, airtempmean, by = "DateTime")
VAUL.2019$week <- rollapplyr(VAUL.2019$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2019$month <- rollapplyr(VAUL.2019$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2019$ThreeMonth <- rollapplyr(VAUL.2019$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2019$temp.week <- rollapplyr(VAUL.2019$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

VAUL.2019.1 <- left_join(VAUL.2019.storms.1, VAUL.2019, by = "DateTime") # week month and 3 month precip totals 

VAUL.2019.per.storm.2 <- VAUL.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
VAUL.2019.per.storm.3 <- VAUL.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
VAUL.2019.per.storm.4 <- VAUL.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
VAUL.2019.per.storm.5 <- VAUL.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.vaul.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "VAUL" & response == "NO3")
HI.mean.precip.vaul.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "VAUL" & response == "fDOM")
HI.mean.precip.vaul.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "VAUL" & response == "SPC")
HI.mean.precip.vaul.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "VAUL" & response == "turb")

HI.vaul.no3.2019 <- left_join(HI.mean.precip.vaul.NO3, VAUL.2019.per.storm.1, by = "storm.num")
HI.vaul.no3.2019 <- left_join(HI.vaul.no3.2019, VAUL.2019.per.storm.2, by = "storm.num")
HI.vaul.no3.2019 <- left_join(HI.vaul.no3.2019, VAUL.2019.per.storm.3, by = "storm.num")
HI.vaul.no3.2019 <- left_join(HI.vaul.no3.2019, VAUL.2019.per.storm.4, by = "storm.num")
HI.vaul.no3.2019 <- left_join(HI.vaul.no3.2019, VAUL.2019.per.storm.5, by = "storm.num")

vaul.lm.no3 <- lm(HI.vaul.no3.2019$HI ~ HI.vaul.no3.2019$precip) # model one with just total precip
vaul.lm.no3.2 <- lm(HI.vaul.no3.2019$HI ~ HI.vaul.no3.2019$precip.week) # model one with just total precip
vaul.lm.no3.3 <- lm(HI.vaul.no3.2019$HI ~ HI.vaul.no3.2019$precip.month) # model one with just total precip
vaul.lm.no3.4 <- lm(HI.vaul.no3.2019$HI ~ HI.vaul.no3.2019$ThreeMonth) # model one with just total precip

vaul.formula <- y ~ x

va <- HI.vaul.no3.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

vb <- HI.vaul.no3.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

vc <- HI.vaul.no3.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

vd <- HI.vaul.no3.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.fDOM.2019 <- left_join(HI.mean.precip.vaul.fDOM, VAUL.2019.per.storm.1, by = "storm.num")
HI.vaul.fDOM.2019 <- left_join(HI.vaul.fDOM.2019, VAUL.2019.per.storm.2, by = "storm.num")
HI.vaul.fDOM.2019 <- left_join(HI.vaul.fDOM.2019, VAUL.2019.per.storm.3, by = "storm.num")
HI.vaul.fDOM.2019 <- left_join(HI.vaul.fDOM.2019, VAUL.2019.per.storm.4, by = "storm.num")
HI.vaul.fDOM.2019 <- left_join(HI.vaul.fDOM.2019, VAUL.2019.per.storm.5, by = "storm.num")

vaul.lm.fDOM <- lm(HI.vaul.fDOM.2019$HI ~ HI.vaul.fDOM.2019$precip) # model one with just total precip
vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2019$HI ~ HI.vaul.fDOM.2019$precip.week) # model one with just total precip
vaul.lm.fDOM.3 <- lm(HI.vaul.fDOM.2019$HI ~ HI.vaul.fDOM.2019$precip.month) # model one with just total precip
vaul.lm.fDOM.4 <- lm(HI.vaul.fDOM.2019$HI ~ HI.vaul.fDOM.2019$ThreeMonth) # model one with just total precip

ve <- HI.vaul.fDOM.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

vf <- HI.vaul.fDOM.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

vg <- HI.vaul.fDOM.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

vh <- HI.vaul.fDOM.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.SPC.2019 <- left_join(HI.mean.precip.vaul.SPC, VAUL.2019.per.storm.1, by = "storm.num")
HI.vaul.SPC.2019 <- left_join(HI.vaul.SPC.2019, VAUL.2019.per.storm.2, by = "storm.num")
HI.vaul.SPC.2019 <- left_join(HI.vaul.SPC.2019, VAUL.2019.per.storm.3, by = "storm.num")
HI.vaul.SPC.2019 <- left_join(HI.vaul.SPC.2019, VAUL.2019.per.storm.4, by = "storm.num")
HI.vaul.SPC.2019 <- left_join(HI.vaul.SPC.2019, VAUL.2019.per.storm.5, by = "storm.num")

vaul.lm.SPC <- lm(HI.vaul.SPC.2019$HI ~ HI.vaul.SPC.2019$precip) # model one with just total precip
vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2019$HI ~ HI.vaul.SPC.2019$precip.week) # model one with just total precip
vaul.lm.SPC.3 <- lm(HI.vaul.SPC.2019$HI ~ HI.vaul.SPC.2019$precip.month) # model one with just total precip
vaul.lm.SPC.4 <- lm(HI.vaul.SPC.2019$HI ~ HI.vaul.SPC.2019$ThreeMonth) # model one with just total precip

vi <- HI.vaul.SPC.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

vj <- HI.vaul.SPC.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

vk <- HI.vaul.SPC.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

vl <- HI.vaul.SPC.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.turb.2019 <- left_join(HI.mean.precip.vaul.turb, VAUL.2019.per.storm.1, by = "storm.num")
HI.vaul.turb.2019 <- left_join(HI.vaul.turb.2019, VAUL.2019.per.storm.2, by = "storm.num")
HI.vaul.turb.2019 <- left_join(HI.vaul.turb.2019, VAUL.2019.per.storm.3, by = "storm.num")
HI.vaul.turb.2019 <- left_join(HI.vaul.turb.2019, VAUL.2019.per.storm.4, by = "storm.num")
HI.vaul.turb.2019 <- left_join(HI.vaul.turb.2019, VAUL.2019.per.storm.5, by = "storm.num")

vaul.lm.turb <- lm(HI.vaul.turb.2019$HI ~ HI.vaul.turb.2019$precip) # model one with just total precip
vaul.lm.turb.2 <- lm(HI.vaul.turb.2019$HI ~ HI.vaul.turb.2019$precip.week) # model one with just total precip
vaul.lm.turb.3 <- lm(HI.vaul.turb.2019$HI ~ HI.vaul.turb.2019$precip.month) # model one with just total precip
vaul.lm.turb.4 <- lm(HI.vaul.turb.2019$HI ~ HI.vaul.turb.2019$ThreeMonth) # model one with just total precip

vm <- HI.vaul.turb.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

vn <- HI.vaul.turb.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

vo <- HI.vaul.turb.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

vp <- HI.vaul.turb.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- VAUL.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.vaul.no3.2.2019 <- left_join(HI.vaul.no3.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.no3.2.2019$TOTAL.TIME <- as.numeric(HI.vaul.no3.2.2019$TOTAL.TIME)
HI.vaul.no3.2.2019$Intensity <- HI.vaul.no3.2.2019$precip/HI.vaul.no3.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.no3.2 <- lm(HI.vaul.no3.2.2019$HI ~ HI.vaul.no3.2.2019$precip + HI.vaul.no3.2.2019$Intensity) # model one with total precip and intensity 

vq <- HI.vaul.no3.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.fDOM.2.2019 <- left_join(HI.vaul.fDOM.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.fDOM.2.2019$TOTAL.TIME <- as.numeric(HI.vaul.fDOM.2.2019$TOTAL.TIME)
HI.vaul.fDOM.2.2019$Intensity <- HI.vaul.fDOM.2.2019$precip/HI.vaul.fDOM.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2.2019$HI ~ HI.vaul.fDOM.2.2019$precip + HI.vaul.fDOM.2.2019$Intensity) # model one with total precip and intensity 

vr <- HI.vaul.fDOM.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.SPC.2.2019 <- left_join(HI.vaul.SPC.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.SPC.2.2019$TOTAL.TIME <- as.numeric(HI.vaul.SPC.2.2019$TOTAL.TIME)
HI.vaul.SPC.2.2019$Intensity <- HI.vaul.SPC.2.2019$precip/HI.vaul.SPC.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2.2019$HI ~ HI.vaul.SPC.2.2019$precip + HI.vaul.SPC.2.2019$Intensity) # model one with total precip and intensity 

vs <- HI.vaul.SPC.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.turb.2.2019 <- left_join(HI.vaul.turb.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.turb.2.2019$TOTAL.TIME <- as.numeric(HI.vaul.turb.2.2019$TOTAL.TIME)
HI.vaul.turb.2.2019$Intensity <- HI.vaul.turb.2.2019$precip/HI.vaul.turb.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.turb.2 <- lm(HI.vaul.turb.2.2019$HI ~ HI.vaul.turb.2.2019$precip + HI.vaul.turb.2.2019$Intensity) # model one with total precip and intensity 

vt <- HI.vaul.turb.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
VAUL.2019.1$day <- julian(VAUL.2019.1$DateTime, origin = as.POSIXct('2019-01-01', tz = 'America/Anchorage')) # making a fractional day column 
VAUL.2019.1$day <- as.numeric(VAUL.2019.1$day)

VAUL.2019.per.storm.5 <- VAUL.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.vaul.no3.2.2019 <- left_join(HI.vaul.no3.2.2019, VAUL.2019.per.storm.5, by = "storm.num")
vaul.lm.no3.5 <- lm(HI.vaul.no3.2.2019$HI ~ HI.vaul.no3.2.2019$doy)

vu <- HI.vaul.no3.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.fDOM.2.2019 <- left_join(HI.vaul.fDOM.2.2019, VAUL.2019.per.storm.5, by = "storm.num")
vaul.lm.fDOM.5 <- lm(HI.vaul.fDOM.2.2019$HI ~ HI.vaul.fDOM.2.2019$doy)

vv <- HI.vaul.fDOM.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.SPC.2.2019 <- left_join(HI.vaul.SPC.2.2019, VAUL.2019.per.storm.5, by = "storm.num")
vaul.lm.SPC.5 <- lm(HI.vaul.SPC.2.2019$HI ~ HI.vaul.SPC.2.2019$doy)

vw <- HI.vaul.SPC.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.turb.2.2019 <- left_join(HI.vaul.turb.2.2019, VAUL.2019.per.storm.5, by = "storm.num")
vaul.lm.turb.5 <- lm(HI.vaul.turb.2.2019$HI ~ HI.vaul.turb.2.2019$doy)

vx <- HI.vaul.turb.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(va,vb,vc,vd,ve,vf,vg,vh,vi,vj,vk,vl,vm,vn,vo,vp,vq,vr,vs,vt,vu,vv,vw,vx,
  #        ncol = 4)

HI.vaul.2019 <- rbind(HI.vaul.no3.2.2019, HI.vaul.fDOM.2.2019, HI.vaul.SPC.2.2019, HI.vaul.turb.2.2019) # merging all responses together 
HI.vaul.2019$burn <- "unburned" # adding a burn column
HI.vaul.2019$pf <- "high" # adding a pf column

write.csv(HI.vaul.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.vaul.2019.csv")


# STRT # 
STRTstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/All_Sites/", 
                                  recursive=F, 
                                  pattern="STRT", 
                                  full.names=TRUE)

STRT_storms<-do.call("rbind", lapply(STRTstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

STRT_storms$storm.num = c(rep("storm1", 638),
                          rep("storm2", 274),
                          rep("storm3a", 1035),
                          rep("storm3b", 286),
                          rep("storm3c", 174),
                          rep("storm4", 466),
                          rep("storm5", 98),
                          rep("storm6", 246),
                          rep("storm7", 218),
                          rep("storm7b", 266),
                          rep("storm7c", 258))

STRT_storms$DateTime <- as.POSIXct(STRT_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
STRT.2019.storms.1<- left_join(STRT_storms, FRCH_RainGauge_2019, by = "DateTime")
STRT.2019.storms.1<- left_join(STRT.2019.storms.1, airtempmean, by = "DateTime")

names(STRT.2019.storms.1)[names(STRT.2019.storms.1) == ''] <- 'x'

STRT.2019.per.storm.1 <- STRT.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- STRT.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

STRT.2019.per.storm.1$temp <- temp$temp

STRT.2019 <- read.csv("~/Documents/Storms/Q_Chem/STRT/STRT_chem_2019.csv")
STRT.2019$DateTime <- as.POSIXct(STRT.2019$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
STRT.2019 <- left_join(STRT.2019, FRCH_RainGauge_2019, by = "DateTime")
STRT.2019 <- STRT.2019[,-10]
STRT.2019 <- left_join(STRT.2019, airtempmean, by = "DateTime")
STRT.2019$week <- rollapplyr(STRT.2019$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2019$month <- rollapplyr(STRT.2019$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2019$ThreeMonth <- rollapplyr(STRT.2019$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2019$temp.week <- rollapplyr(STRT.2019$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

STRT.2019.1 <- left_join(STRT.2019.storms.1, STRT.2019, by = "DateTime") # week month and 3 month precip totals 

STRT.2019.per.storm.2 <- STRT.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
STRT.2019.per.storm.3 <- STRT.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
STRT.2019.per.storm.4 <- STRT.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
STRT.2019.per.storm.5 <- STRT.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.strt.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "STRT" & response == "NO3")
HI.mean.precip.strt.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "STRT" & response == "fDOM")
HI.mean.precip.strt.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "STRT" & response == "SPC")
HI.mean.precip.strt.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "STRT" & response == "turb")

HI.strt.no3.2019 <- left_join(HI.mean.precip.strt.NO3, STRT.2019.per.storm.1, by = "storm.num")
HI.strt.no3.2019 <- left_join(HI.strt.no3.2019, STRT.2019.per.storm.2, by = "storm.num")
HI.strt.no3.2019 <- left_join(HI.strt.no3.2019, STRT.2019.per.storm.3, by = "storm.num")
HI.strt.no3.2019 <- left_join(HI.strt.no3.2019, STRT.2019.per.storm.4, by = "storm.num")
HI.strt.no3.2019 <- left_join(HI.strt.no3.2019, STRT.2019.per.storm.5, by = "storm.num")

strt.lm.no3 <- lm(HI.strt.no3.2019$HI ~ HI.strt.no3.2019$precip) # model one with just total precip
strt.lm.no3.2 <- lm(HI.strt.no3.2019$HI ~ HI.strt.no3.2019$precip.week) # model one with just total precip
strt.lm.no3.3 <- lm(HI.strt.no3.2019$HI ~ HI.strt.no3.2019$precip.month) # model one with just total precip
strt.lm.no3.4 <- lm(HI.strt.no3.2019$HI ~ HI.strt.no3.2019$ThreeMonth) # model one with just total precip

strt.formula <- y ~ x

sa <- HI.strt.no3.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sb <- HI.strt.no3.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sc <- HI.strt.no3.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sd <- HI.strt.no3.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


HI.strt.fDOM.2019 <- left_join(HI.mean.precip.strt.fDOM, STRT.2019.per.storm.1, by = "storm.num")
HI.strt.fDOM.2019 <- left_join(HI.strt.fDOM.2019, STRT.2019.per.storm.2, by = "storm.num")
HI.strt.fDOM.2019 <- left_join(HI.strt.fDOM.2019, STRT.2019.per.storm.3, by = "storm.num")
HI.strt.fDOM.2019 <- left_join(HI.strt.fDOM.2019, STRT.2019.per.storm.4, by = "storm.num")
HI.strt.fDOM.2019 <- left_join(HI.strt.fDOM.2019, STRT.2019.per.storm.5, by = "storm.num")

strt.lm.fDOM <- lm(HI.strt.fDOM.2019$HI ~ HI.strt.fDOM.2019$precip) # model one with just total precip
strt.lm.fDOM.2 <- lm(HI.strt.fDOM.2019$HI ~ HI.strt.fDOM.2019$precip.week) # model one with just total precip
strt.lm.fDOM.3 <- lm(HI.strt.fDOM.2019$HI ~ HI.strt.fDOM.2019$precip.month) # model one with just total precip
strt.lm.fDOM.4 <- lm(HI.strt.fDOM.2019$HI ~ HI.strt.fDOM.2019$ThreeMonth) # model one with just total precip

se <- HI.strt.fDOM.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sf <- HI.strt.fDOM.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model

sg <- HI.strt.fDOM.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model

sh <- HI.strt.fDOM.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.strt.SPC.2019 <- left_join(HI.mean.precip.strt.SPC, STRT.2019.per.storm.1, by = "storm.num")
HI.strt.SPC.2019 <- left_join(HI.strt.SPC.2019, STRT.2019.per.storm.2, by = "storm.num")
HI.strt.SPC.2019 <- left_join(HI.strt.SPC.2019, STRT.2019.per.storm.3, by = "storm.num")
HI.strt.SPC.2019 <- left_join(HI.strt.SPC.2019, STRT.2019.per.storm.4, by = "storm.num")
HI.strt.SPC.2019 <- left_join(HI.strt.SPC.2019, STRT.2019.per.storm.5, by = "storm.num")

strt.lm.SPC <- lm(HI.strt.SPC.2019$HI ~ HI.strt.SPC.2019$precip) # model one with just total precip
strt.lm.SPC.2 <- lm(HI.strt.SPC.2019$HI ~ HI.strt.SPC.2019$precip.week) # model one with just total precip
strt.lm.SPC.3 <- lm(HI.strt.SPC.2019$HI ~ HI.strt.SPC.2019$precip.month) # model one with just total precip
strt.lm.SPC.4 <- lm(HI.strt.SPC.2019$HI ~ HI.strt.SPC.2019$ThreeMonth) # model one with just total precip

si <- HI.strt.SPC.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sj <- HI.strt.SPC.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sk <- HI.strt.SPC.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sl <- HI.strt.SPC.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.turb.2019 <- left_join(HI.mean.precip.strt.turb, STRT.2019.per.storm.1, by = "storm.num")
HI.strt.turb.2019 <- left_join(HI.strt.turb.2019, STRT.2019.per.storm.2, by = "storm.num")
HI.strt.turb.2019 <- left_join(HI.strt.turb.2019, STRT.2019.per.storm.3, by = "storm.num")
HI.strt.turb.2019 <- left_join(HI.strt.turb.2019, STRT.2019.per.storm.4, by = "storm.num")
HI.strt.turb.2019 <- left_join(HI.strt.turb.2019, STRT.2019.per.storm.5, by = "storm.num")

strt.lm.turb <- lm(HI.strt.turb.2019$HI ~ HI.strt.turb.2019$precip) # model one with just total precip
strt.lm.turb.2 <- lm(HI.strt.turb.2019$HI ~ HI.strt.turb.2019$precip.week) # model one with just total precip
strt.lm.turb.3 <- lm(HI.strt.turb.2019$HI ~ HI.strt.turb.2019$precip.month) # model one with just total precip
strt.lm.turb.4 <- lm(HI.strt.turb.2019$HI ~ HI.strt.turb.2019$ThreeMonth) # model one with just total precip

sm <- HI.strt.turb.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sn <- HI.strt.turb.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

so <- HI.strt.turb.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sp <- HI.strt.turb.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

STRT.2019.storms.1 <- na.omit(STRT.2019.storms.1)

sum.time <- STRT.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.strt.no3.2.2019 <- left_join(sum.time, HI.strt.no3.2019, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.no3.2.2019$TOTAL.TIME <- as.numeric(HI.strt.no3.2.2019$TOTAL.TIME)
HI.strt.no3.2.2019$Intensity <- HI.strt.no3.2.2019$precip/HI.strt.no3.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.no3.2 <- lm(HI.strt.no3.2.2019$HI ~ HI.strt.no3.2.2019$precip + HI.strt.no3.2.2019$Intensity) # model one with total precip and intensity 

sq <- HI.strt.no3.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.fDOM.2.2019 <- left_join(HI.strt.fDOM.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.fDOM.2.2019$TOTAL.TIME <- as.numeric(HI.strt.fDOM.2.2019$TOTAL.TIME)
HI.strt.fDOM.2.2019$Intensity <- HI.strt.fDOM.2.2019$precip/HI.strt.fDOM.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.fDOM.2 <- lm(HI.strt.fDOM.2.2019$HI ~ HI.strt.fDOM.2.2019$precip + HI.strt.fDOM.2.2019$Intensity) # model one with total precip and intensity 

sr <- HI.strt.fDOM.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.SPC.2.2019 <- left_join(HI.strt.SPC.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.SPC.2.2019$TOTAL.TIME <- as.numeric(HI.strt.SPC.2.2019$TOTAL.TIME)
HI.strt.SPC.2.2019$Intensity <- HI.strt.SPC.2.2019$precip/HI.strt.SPC.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.SPC.2 <- lm(HI.strt.SPC.2.2019$HI ~ HI.strt.SPC.2.2019$precip + HI.strt.SPC.2.2019$Intensity) # model one with total precip and intensity 

ss <- HI.strt.SPC.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.turb.2.2019 <- left_join(HI.strt.turb.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.turb.2.2019$TOTAL.TIME <- as.numeric(HI.strt.turb.2.2019$TOTAL.TIME)
HI.strt.turb.2.2019$Intensity <- HI.strt.turb.2.2019$precip/HI.strt.turb.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.turb.2 <- lm(HI.strt.turb.2.2019$HI ~ HI.strt.turb.2.2019$precip + HI.strt.turb.2.2019$Intensity) # model one with total precip and intensity 

st <- HI.strt.turb.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
STRT.2019.1$day <- julian(STRT.2019.1$DateTime, origin = as.POSIXct('2019-01-01', tz = 'America/Anchorage')) # making a fractional day column 
STRT.2019.1$day <- as.numeric(STRT.2019.1$day)

STRT.2019.per.storm.5 <- STRT.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.strt.no3.2.2019 <- left_join(HI.strt.no3.2.2019, STRT.2019.per.storm.5, by = "storm.num")
strt.lm.no3.5 <- lm(HI.strt.no3.2.2019$HI ~ HI.strt.no3.2.2019$doy)

su <- HI.strt.no3.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.fDOM.2.2019 <- left_join(HI.strt.fDOM.2.2019, STRT.2019.per.storm.5, by = "storm.num")
strt.lm.fDOM.5 <- lm(HI.strt.fDOM.2.2019$HI ~ HI.strt.fDOM.2.2019$doy)

sv <- HI.strt.fDOM.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.SPC.2.2019 <- left_join(HI.strt.SPC.2.2019, STRT.2019.per.storm.5, by = "storm.num")
strt.lm.SPC.5 <- lm(HI.strt.SPC.2.2019$HI ~ HI.strt.SPC.2.2019$doy)

sw <- HI.strt.SPC.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.turb.2.2019 <- left_join(HI.strt.turb.2.2019, STRT.2019.per.storm.5, by = "storm.num")
strt.lm.turb.5 <- lm(HI.strt.turb.2.2019$HI ~ HI.strt.turb.2.2019$doy)

sx <- HI.strt.turb.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(sa,sb,sc,sd,se,sf,sg,sh,si,sj,sk,sl,sm,sn,so,sp,sq,sr,ss,st,su,sv,sw,sx,
#          ncol = 4)

HI.strt.2019 <- rbind(HI.strt.no3.2.2019, HI.strt.fDOM.2.2019, HI.strt.SPC.2.2019, HI.strt.turb.2.2019) # merging all responses together 
HI.strt.2019$burn <- "burned" # adding a burn column
HI.strt.2019$pf <- "high" # adding a pf column

write.csv(HI.strt.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.strt.2019.csv")


# CARI # 
CARIstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/All_Sites/", 
                                  recursive=F, 
                                  pattern="CARI", 
                                  full.names=TRUE)

CARI_storms<-do.call("rbind", lapply(CARIstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

CARI_storms$storm.num = c(rep("storm1", 371),
                          rep("storm2", 143),
                          rep("storm3", 72),
                          rep("storm4", 0),
                          rep("storm5", 135),
                          rep("storm6a", 83),
                          rep("storm6b", 235),
                          rep("storm6c", 426),
                          rep("storm6d", 135),
                          rep("storm7a", 51),
                          rep("storm7b", 217),
                          rep("storm8", 267))

CARI_storms$DateTime <- as.POSIXct(CARI_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
CARI.2019.storms.1<- left_join(CARI_storms, POKE_RainGauge_2019, by = "DateTime")
CARI.2019.storms.1<- left_join(CARI.2019.storms.1, airtempmean, by = "DateTime")

names(CARI.2019.storms.1)[names(CARI.2019.storms.1) == ''] <- 'x'

CARI.2019.per.storm.1 <- CARI.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- CARI.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

CARI.2019.per.storm.1$temp <- temp$temp


CARI.2019 <- CARI_storms
CARI.2019 <- CARI.2019[,-c(1,10)]
CARI.2019$DateTime <- as.POSIXct(CARI.2019$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
CARI.2019 <- left_join(CARI.2019, POKE_RainGauge_2019, by = "DateTime")
CARI.2019 <- left_join(CARI.2019, airtempmean, by = "DateTime")
CARI.2019$week <- rollapplyr(CARI.2019$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2019$month <- rollapplyr(CARI.2019$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2019$ThreeMonth <- rollapplyr(CARI.2019$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2019$temp.week <- rollapplyr(CARI.2019$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

CARI.2019.1 <- left_join(CARI.2019.storms.1, CARI.2019, by = "DateTime") # week month and 3 month precip totals 

CARI.2019.per.storm.2 <- CARI.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
CARI.2019.per.storm.3 <- CARI.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
CARI.2019.per.storm.4 <- CARI.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
CARI.2019.per.storm.5 <- CARI.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.cari.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "CARI" & response == "NO3")
HI.mean.precip.cari.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "CARI" & response == "fDOM")
HI.mean.precip.cari.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "CARI" & response == "SPC")
HI.mean.precip.cari.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "CARI" & response == "turb")

HI.cari.no3.2019 <- left_join(HI.mean.precip.cari.NO3, CARI.2019.per.storm.1, by = "storm.num")
HI.cari.no3.2019 <- left_join(HI.cari.no3.2019, CARI.2019.per.storm.2, by = "storm.num")
HI.cari.no3.2019 <- left_join(HI.cari.no3.2019, CARI.2019.per.storm.3, by = "storm.num")
HI.cari.no3.2019 <- left_join(HI.cari.no3.2019, CARI.2019.per.storm.4, by = "storm.num")
HI.cari.no3.2019 <- left_join(HI.cari.no3.2019, CARI.2019.per.storm.5, by = "storm.num")

cari.lm.no3 <- lm(HI.cari.no3.2019$HI ~ HI.cari.no3.2019$precip) # model one with just total precip
cari.lm.no3.2 <- lm(HI.cari.no3.2019$HI ~ HI.cari.no3.2019$precip.week) # model one with just total precip
cari.lm.no3.3 <- lm(HI.cari.no3.2019$HI ~ HI.cari.no3.2019$precip.month) # model one with just total precip
cari.lm.no3.4 <- lm(HI.cari.no3.2019$HI ~ HI.cari.no3.2019$ThreeMonth) # model one with just total precip

cari.formula <- y ~ x

sa <- HI.cari.no3.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sb <- HI.cari.no3.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sc <- HI.cari.no3.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sd <- HI.cari.no3.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


HI.cari.fDOM.2019 <- left_join(HI.mean.precip.cari.fDOM, CARI.2019.per.storm.1, by = "storm.num")
HI.cari.fDOM.2019 <- left_join(HI.cari.fDOM.2019, CARI.2019.per.storm.2, by = "storm.num")
HI.cari.fDOM.2019 <- left_join(HI.cari.fDOM.2019, CARI.2019.per.storm.3, by = "storm.num")
HI.cari.fDOM.2019 <- left_join(HI.cari.fDOM.2019, CARI.2019.per.storm.4, by = "storm.num")
HI.cari.fDOM.2019 <- left_join(HI.cari.fDOM.2019, CARI.2019.per.storm.5, by = "storm.num")

cari.lm.fDOM <- lm(HI.cari.fDOM.2019$HI ~ HI.cari.fDOM.2019$precip) # model one with just total precip
cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2019$HI ~ HI.cari.fDOM.2019$precip.week) # model one with just total precip
cari.lm.fDOM.3 <- lm(HI.cari.fDOM.2019$HI ~ HI.cari.fDOM.2019$precip.month) # model one with just total precip
cari.lm.fDOM.4 <- lm(HI.cari.fDOM.2019$HI ~ HI.cari.fDOM.2019$ThreeMonth) # model one with just total precip

se <- HI.cari.fDOM.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sf <- HI.cari.fDOM.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model

sg <- HI.cari.fDOM.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model

sh <- HI.cari.fDOM.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.cari.SPC.2019 <- left_join(HI.mean.precip.cari.SPC, CARI.2019.per.storm.1, by = "storm.num")
HI.cari.SPC.2019 <- left_join(HI.cari.SPC.2019, CARI.2019.per.storm.2, by = "storm.num")
HI.cari.SPC.2019 <- left_join(HI.cari.SPC.2019, CARI.2019.per.storm.3, by = "storm.num")
HI.cari.SPC.2019 <- left_join(HI.cari.SPC.2019, CARI.2019.per.storm.4, by = "storm.num")
HI.cari.SPC.2019 <- left_join(HI.cari.SPC.2019, CARI.2019.per.storm.5, by = "storm.num")

cari.lm.SPC <- lm(HI.cari.SPC.2019$HI ~ HI.cari.SPC.2019$precip) # model one with just total precip
cari.lm.SPC.2 <- lm(HI.cari.SPC.2019$HI ~ HI.cari.SPC.2019$precip.week) # model one with just total precip
cari.lm.SPC.3 <- lm(HI.cari.SPC.2019$HI ~ HI.cari.SPC.2019$precip.month) # model one with just total precip
cari.lm.SPC.4 <- lm(HI.cari.SPC.2019$HI ~ HI.cari.SPC.2019$ThreeMonth) # model one with just total precip

si <- HI.cari.SPC.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sj <- HI.cari.SPC.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sk <- HI.cari.SPC.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sl <- HI.cari.SPC.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.cari.turb.2019 <- left_join(HI.mean.precip.cari.turb, CARI.2019.per.storm.1, by = "storm.num")
HI.cari.turb.2019 <- left_join(HI.cari.turb.2019, CARI.2019.per.storm.2, by = "storm.num")
HI.cari.turb.2019 <- left_join(HI.cari.turb.2019, CARI.2019.per.storm.3, by = "storm.num")
HI.cari.turb.2019 <- left_join(HI.cari.turb.2019, CARI.2019.per.storm.4, by = "storm.num")
HI.cari.turb.2019 <- left_join(HI.cari.turb.2019, CARI.2019.per.storm.5, by = "storm.num")

cari.lm.turb <- lm(HI.cari.turb.2019$HI ~ HI.cari.turb.2019$precip) # model one with just total precip
cari.lm.turb.2 <- lm(HI.cari.turb.2019$HI ~ HI.cari.turb.2019$precip.week) # model one with just total precip
cari.lm.turb.3 <- lm(HI.cari.turb.2019$HI ~ HI.cari.turb.2019$precip.month) # model one with just total precip
cari.lm.turb.4 <- lm(HI.cari.turb.2019$HI ~ HI.cari.turb.2019$ThreeMonth) # model one with just total precip

sm <- HI.cari.turb.2019 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sn <- HI.cari.turb.2019 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

so <- HI.cari.turb.2019 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sp <- HI.cari.turb.2019 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

#CARI.2019.storms.1 <- na.omit(CARI.2019.storms.1)

sum.time <- CARI.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.cari.no3.2.2019 <- left_join(sum.time, HI.cari.no3.2019, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.no3.2.2019$TOTAL.TIME <- as.numeric(HI.cari.no3.2.2019$TOTAL.TIME)
HI.cari.no3.2.2019$Intensity <- HI.cari.no3.2.2019$precip/HI.cari.no3.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.no3.2 <- lm(HI.cari.no3.2.2019$HI ~ HI.cari.no3.2.2019$precip + HI.cari.no3.2.2019$Intensity) # model one with total precip and intensity 

sq <- HI.cari.no3.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.fDOM.2.2019 <- left_join(HI.cari.fDOM.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.fDOM.2.2019$TOTAL.TIME <- as.numeric(HI.cari.fDOM.2.2019$TOTAL.TIME)
HI.cari.fDOM.2.2019$Intensity <- HI.cari.fDOM.2.2019$precip/HI.cari.fDOM.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2.2019$HI ~ HI.cari.fDOM.2.2019$precip + HI.cari.fDOM.2.2019$Intensity) # model one with total precip and intensity 

sr <- HI.cari.fDOM.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.SPC.2.2019 <- left_join(HI.cari.SPC.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.SPC.2.2019$TOTAL.TIME <- as.numeric(HI.cari.SPC.2.2019$TOTAL.TIME)
HI.cari.SPC.2.2019$Intensity <- HI.cari.SPC.2.2019$precip/HI.cari.SPC.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.SPC.2 <- lm(HI.cari.SPC.2.2019$HI ~ HI.cari.SPC.2.2019$precip + HI.cari.SPC.2.2019$Intensity) # model one with total precip and intensity 

ss <- HI.cari.SPC.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.turb.2.2019 <- left_join(HI.cari.turb.2019, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.turb.2.2019$TOTAL.TIME <- as.numeric(HI.cari.turb.2.2019$TOTAL.TIME)
HI.cari.turb.2.2019$Intensity <- HI.cari.turb.2.2019$precip/HI.cari.turb.2.2019$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.turb.2 <- lm(HI.cari.turb.2.2019$HI ~ HI.cari.turb.2.2019$precip + HI.cari.turb.2.2019$Intensity) # model one with total precip and intensity 

st <- HI.cari.turb.2.2019 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
CARI.2019.1$day <- julian(CARI.2019.1$DateTime, origin = as.POSIXct('2019-01-01', tz = 'America/Anchorage')) # making a fractional day column 
CARI.2019.1$day <- as.numeric(CARI.2019.1$day)

CARI.2019.per.storm.5 <- CARI.2019.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.cari.no3.2.2019 <- left_join(HI.cari.no3.2.2019, CARI.2019.per.storm.5, by = "storm.num")
cari.lm.no3.5 <- lm(HI.cari.no3.2.2019$HI ~ HI.cari.no3.2.2019$doy)

su <- HI.cari.no3.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.fDOM.2.2019 <- left_join(HI.cari.fDOM.2.2019, CARI.2019.per.storm.5, by = "storm.num")
cari.lm.fDOM.5 <- lm(HI.cari.fDOM.2.2019$HI ~ HI.cari.fDOM.2.2019$doy)

sv <- HI.cari.fDOM.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.SPC.2.2019 <- left_join(HI.cari.SPC.2.2019, CARI.2019.per.storm.5, by = "storm.num")
cari.lm.SPC.5 <- lm(HI.cari.SPC.2.2019$HI ~ HI.cari.SPC.2.2019$doy)

sw <- HI.cari.SPC.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.turb.2.2019 <- left_join(HI.cari.turb.2.2019, CARI.2019.per.storm.5, by = "storm.num")
cari.lm.turb.5 <- lm(HI.cari.turb.2.2019$HI ~ HI.cari.turb.2.2019$doy)

sx <- HI.cari.turb.2.2019 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(sa,sb,sc,sd,se,sf,sg,sh,si,sj,sk,sl,sm,sn,so,sp,sq,sr,ss,st,su,sv,sw,sx,
#          ncol = 4)

HI.cari.2019 <- rbind(HI.cari.no3.2.2019, HI.cari.fDOM.2.2019, HI.cari.SPC.2.2019, HI.cari.turb.2.2019) # merging all responses together 
HI.cari.2019$burn <- "burned" # adding a burn column
HI.cari.2019$pf <- "medium" # adding a pf column

write.csv(HI.cari.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.cari.2019.csv")


HI.2019 <- rbind(HI.moos.2019, HI.frch.2019, HI.poke.2019, HI.vaul.2019, HI.strt.2019, HI.cari.2019) # bind all 2019 together
write.csv(HI.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2019.csv")

# add time since peak  Q in chena #
HI.2019 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2019.csv")
HI.2019$date <- as.Date(HI.2019$doy, origin = "2019-01-01")
origin_date <- as.Date("2019-05-18")
HI.2019$TimeSinceChena <- julian(HI.2019$date, origin_date)

write.csv(HI.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2019.csv")

write.csv(storms.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/storms.2019.csv")
############################################# 2020 ################################################################
# import rain gauge data #
FRCH_RainGauge_2020 <- read_csv("~/Documents/DoD_2020/RainGauge/FRCH.RainGauge.2020.csv")
POKE_RainGauge_2020 <- read_csv("~/Documents/DoD_2020/RainGauge/POKE.RainGauge.2020.csv")
VAUL_RainGauge_2020 <- read_csv("~/Documents/DoD_2020/RainGauge/VAUL.RainGauge.2020.csv")
STRT_RainGauge_2020 <- read_csv("~/Documents/DoD_2020/RainGauge/STRT.RainGauge.2020.csv")
airtempmean <- read_csv("Ancilliary_data/airtempmean.csv")
names(airtempmean)[2] <- "DateTime"

# convert to AK time 
attributes(FRCH_RainGauge_2020$DateTime)$tzone <- 'America/Anchorage'
attributes(POKE_RainGauge_2020$DateTime)$tzone <- 'America/Anchorage'
attributes(VAUL_RainGauge_2020$DateTime)$tzone <- 'America/Anchorage'
attributes(STRT_RainGauge_2020$DateTime)$tzone <- 'America/Anchorage'
attributes(airtempmean$DateTime)$tzone <- 'America/Anchorage'
# round to nearest 15 min 
FRCH_RainGauge_2020$DateTime <- lubridate::floor_date(FRCH_RainGauge_2020$DateTime, "15 minutes")
POKE_RainGauge_2020$DateTime <- lubridate::floor_date(POKE_RainGauge_2020$DateTime, "15 minutes")
VAUL_RainGauge_2020$DateTime <- lubridate::floor_date(VAUL_RainGauge_2020$DateTime, "15 minutes")
STRT_RainGauge_2020$DateTime <- lubridate::floor_date(STRT_RainGauge_2020$DateTime, "15 minutes")

# MOOS # 
MOOSstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="MOOS", 
                                  full.names=TRUE)

MOOS_storms<-do.call("rbind", lapply(MOOSstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

MOOS_storms$storm.num = c(rep("storm1", 691),
                          rep("storm2", 327),
                          rep("storm3", 129),
                          rep("storm4", 321),
                          rep("storm5", 252),
                          rep("storm6a", 108),
                          rep("storm6b", 288),
                          rep("storm7a", 276),
                          rep("storm7b", 186),
                          rep("storm8", 195),
                          rep("storm9", 405))

MOOS_storms$DateTime <- as.POSIXct(MOOS_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
MOOS.2020.storms.1<- left_join(MOOS_storms, FRCH_RainGauge_2020, by = "DateTime")
MOOS.2020.storms.1<- left_join(MOOS.2020.storms.1, airtempmean, by = "DateTime")

names(MOOS.2020.storms.1)[names(MOOS.2020.storms.1) == ''] <- 'x'

MOOS.2020.per.storm.1 <- MOOS.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- MOOS.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

MOOS.2020.per.storm.1$temp <- temp$temp


MOOS.2020 <- read_csv("~/Documents/Storms/Q_Chem/MOOS/MOOS_chem_2020.csv", 
                           col_types = cols(day = col_character(), 
                                            nitrateuM = col_double()))
attributes(MOOS.2020$DateTime)$tzone <- 'America/Anchorage'
MOOS.2020$day <- ymd_hms(MOOS.2020$day)
MOOS.2020$day <- as.character(MOOS.2020$day)
MOOS.2020 <- left_join(MOOS.2020, FRCH_RainGauge_2020, by = "DateTime")
MOOS.2020 <- left_join(MOOS.2020, airtempmean, by = "DateTime")
MOOS.2020$week <- rollapplyr(MOOS.2020$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2020$month <- rollapplyr(MOOS.2020$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2020$ThreeMonth <- rollapplyr(MOOS.2020$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2020$temp.week <- rollapplyr(MOOS.2020$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

MOOS.2020.1 <- left_join(MOOS.2020.storms.1, MOOS.2020, by = "DateTime") # week month and 3 month precip totals 

MOOS.2020.per.storm.2 <- MOOS.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
MOOS.2020.per.storm.3 <- MOOS.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
MOOS.2020.per.storm.4 <- MOOS.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
MOOS.2020.per.storm.5 <- MOOS.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.moos.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "MOOS" & response == "NO3")
HI.mean.precip.moos.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "MOOS" & response == "fDOM")
HI.mean.precip.moos.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "MOOS" & response == "SPC")
HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "MOOS" & response == "turb")

HI.moos.no3.2020 <- left_join(HI.mean.precip.moos.NO3, MOOS.2020.per.storm.1, by = "storm.num")
HI.moos.no3.2020 <- left_join(HI.moos.no3.2020, MOOS.2020.per.storm.2, by = "storm.num")
HI.moos.no3.2020 <- left_join(HI.moos.no3.2020, MOOS.2020.per.storm.3, by = "storm.num")
HI.moos.no3.2020 <- left_join(HI.moos.no3.2020, MOOS.2020.per.storm.4, by = "storm.num")
HI.moos.no3.2020 <- left_join(HI.moos.no3.2020, MOOS.2020.per.storm.5, by = "storm.num")

moos.lm.no3 <- lm(HI.moos.no3.2020$HI ~ HI.moos.no3.2020$precip) # model one with just total precip
moos.lm.no3 <- lm(HI.moos.no3.2020$HI ~ HI.moos.no3.2020$precip.week) # model one with just total precip
moos.lm.no3 <- lm(HI.moos.no3.2020$HI ~ HI.moos.no3.2020$precip.month) # model one with just total precip
moos.lm.no3 <- lm(HI.moos.no3.2020$HI ~ HI.moos.no3.2020$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

aaa <- HI.moos.no3.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bbb <- HI.moos.no3.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ccc <- HI.moos.no3.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ddd <- HI.moos.no3.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.fDOM.2020 <- left_join(HI.mean.precip.moos.fDOM, MOOS.2020.per.storm.1, by = "storm.num")
HI.moos.fDOM.2020 <- left_join(HI.moos.fDOM.2020, MOOS.2020.per.storm.2, by = "storm.num")
HI.moos.fDOM.2020 <- left_join(HI.moos.fDOM.2020, MOOS.2020.per.storm.3, by = "storm.num")
HI.moos.fDOM.2020 <- left_join(HI.moos.fDOM.2020, MOOS.2020.per.storm.4, by = "storm.num")
HI.moos.fDOM.2020 <- left_join(HI.moos.fDOM.2020, MOOS.2020.per.storm.5, by = "storm.num")

moos.lm.fDOM <- lm(HI.moos.fDOM.2020$HI ~ HI.moos.fDOM.2020$precip) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2020$HI ~ HI.moos.fDOM.2020$precip.week) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2020$HI ~ HI.moos.fDOM.2020$precip.month) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2020$HI ~ HI.moos.fDOM.2020$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

eee <- HI.moos.fDOM.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

fff <- HI.moos.fDOM.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ggg <- HI.moos.fDOM.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

hhh <- HI.moos.fDOM.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.SPC.2020 <- left_join(HI.mean.precip.moos.SPC, MOOS.2020.per.storm.1, by = "storm.num")
HI.moos.SPC.2020 <- left_join(HI.moos.SPC.2020, MOOS.2020.per.storm.2, by = "storm.num")
HI.moos.SPC.2020 <- left_join(HI.moos.SPC.2020, MOOS.2020.per.storm.3, by = "storm.num")
HI.moos.SPC.2020 <- left_join(HI.moos.SPC.2020, MOOS.2020.per.storm.4, by = "storm.num")
HI.moos.SPC.2020 <- left_join(HI.moos.SPC.2020, MOOS.2020.per.storm.5, by = "storm.num")

moos.lm.SPC <- lm(HI.moos.SPC.2020$HI ~ HI.moos.SPC.2020$precip) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2020$HI ~ HI.moos.SPC.2020$precip.week) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2020$HI ~ HI.moos.SPC.2020$precip.month) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2020$HI ~ HI.moos.SPC.2020$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

iii <- HI.moos.SPC.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

jjj <- HI.moos.SPC.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

kkk <- HI.moos.SPC.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

lll <- HI.moos.SPC.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.turb.2020 <- left_join(HI.mean.precip.moos.turb, MOOS.2020.per.storm.1, by = "storm.num")
HI.moos.turb.2020 <- left_join(HI.moos.turb.2020, MOOS.2020.per.storm.2, by = "storm.num")
HI.moos.turb.2020 <- left_join(HI.moos.turb.2020, MOOS.2020.per.storm.3, by = "storm.num")
HI.moos.turb.2020 <- left_join(HI.moos.turb.2020, MOOS.2020.per.storm.4, by = "storm.num")
HI.moos.turb.2020 <- left_join(HI.moos.turb.2020, MOOS.2020.per.storm.5, by = "storm.num")

moos.lm.turb <- lm(HI.moos.turb.2020$HI ~ HI.moos.turb.2020$precip) # model one with just total precip
moos.lm.turb.1 <- lm(HI.moos.turb.2020$HI ~ HI.moos.turb.2020$precip.week) # model one with just total precip
moos.lm.turb.2 <- lm(HI.moos.turb.2020$HI ~ HI.moos.turb.2020$precip.month) # model one with just total precip
moos.lm.turb.3 <- lm(HI.moos.turb.2020$HI ~ HI.moos.turb.2020$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

mmm <- HI.moos.turb.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

nnn <- HI.moos.turb.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ooo <- HI.moos.turb.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ppp <- HI.moos.turb.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sum.time <- MOOS.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.moos.no3.2.2020 <- left_join(HI.moos.no3.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.no3.2.2020$TOTAL.TIME <- as.numeric(HI.moos.no3.2.2020$TOTAL.TIME)
HI.moos.no3.2.2020$Intensity <- HI.moos.no3.2.2020$precip/HI.moos.no3.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.no3.2 <- lm(HI.moos.no3.2.2020$HI ~ HI.moos.no3.2.2020$precip + HI.moos.no3.2.2020$Intensity) # model one with total precip and intensity 

qqq <- HI.moos.no3.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2.2020 <- left_join(HI.moos.fDOM.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.fDOM.2.2020$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2.2020$TOTAL.TIME)
HI.moos.fDOM.2.2020$Intensity <- HI.moos.fDOM.2.2020$precip/HI.moos.fDOM.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2.2020$HI ~ HI.moos.fDOM.2.2020$precip + HI.moos.fDOM.2.2020$Intensity) # model one with total precip and intensity 

rrr <- HI.moos.fDOM.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2.2020 <- left_join(HI.moos.SPC.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.SPC.2.2020$TOTAL.TIME <- as.numeric(HI.moos.SPC.2.2020$TOTAL.TIME)
HI.moos.SPC.2.2020$Intensity <- HI.moos.SPC.2.2020$precip/HI.moos.SPC.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.SPC.2 <- lm(HI.moos.SPC.2.2020$HI ~ HI.moos.SPC.2.2020$precip + HI.moos.SPC.2.2020$Intensity) # model one with total precip and intensity 

sss <- HI.moos.SPC.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2.2020 <- left_join(HI.moos.turb.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.turb.2.2020$TOTAL.TIME <- as.numeric(HI.moos.turb.2.2020$TOTAL.TIME)
HI.moos.turb.2.2020$Intensity <- HI.moos.turb.2.2020$precip/HI.moos.turb.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.turb.2 <- lm(HI.moos.turb.2.2020$HI ~ HI.moos.turb.2.2020$precip + HI.moos.turb.2.2020$Intensity) # model one with total precip and intensity 

ttt <- HI.moos.turb.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
MOOS.2020.1$day <- julian(MOOS.2020.1$DateTime, origin = "2020-01-01", tz = 'America/Anchorage')
MOOS.2020.1$day <- as.numeric(MOOS.2020.1$day)
MOOS.2020.per.storm.5 <- MOOS.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.moos.no3.2.2020 <- left_join(HI.moos.no3.2.2020, MOOS.2020.per.storm.5, by = "storm.num")
moos.lm.no3.5 <- lm(HI.moos.no3.2.2020$HI ~ HI.moos.no3.2.2020$doy)

uuu <- HI.moos.no3.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2.2020 <- left_join(HI.moos.fDOM.2.2020, MOOS.2020.per.storm.5, by = "storm.num")
moos.lm.fDOM.5 <- lm(HI.moos.fDOM.2.2020$HI ~ HI.moos.fDOM.2.2020$doy)

utb <- HI.moos.fDOM.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2.2020 <- left_join(HI.moos.SPC.2.2020, MOOS.2020.per.storm.5, by = "storm.num")
moos.lm.SPC.5 <- lm(HI.moos.SPC.2.2020$HI ~ HI.moos.SPC.2.2020$doy)

vvv <- HI.moos.SPC.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2.2020 <- left_join(HI.moos.turb.2.2020, MOOS.2020.per.storm.5, by = "storm.num")
moos.lm.turb.5 <- lm(HI.moos.turb.2.2020$HI ~ HI.moos.turb.2.2020$doy)

www <- HI.moos.turb.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(aaa,bbb,ccc,ddd,eee,fff,ggg,hhh,iii,jjj,kkk,lll,mmm,nnn,ooo,ppp,qqq,rrr,sss,ttt,uuu,utb,vvv,www,
#          ncol = 4)


HI.moos.2020 <- rbind(HI.moos.no3.2.2020, HI.moos.fDOM.2.2020, HI.moos.SPC.2.2020, HI.moos.turb.2.2020) # merging all responses together 
HI.moos.2020$burn <- "burned" # adding a burn column
HI.moos.2020$pf <- "medium" # adding a pf column

write.csv(HI.moos.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.moos.2020.csv")

# FRCH # 
FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="FRCH", 
                                  full.names=TRUE)

FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

FRCH_storms$storm.num = c(rep("storm1", 487),
                          rep("storm10a", 255),
                          rep("storm10b", 439),
                          rep("storm11", 91),
                          rep("storm12", 67),
                          rep("storm13", 211),
                          rep("storm2", 123),
                          rep("storm3a", 163),
                          rep("storm3b", 435),
                          rep("storm3c", 159),
                          rep("storm4a", 187),
                          rep("storm4b", 203),
                          rep("storm5", 62),
                          rep("storm6", 103),
                          rep("storm7", 339),
                          rep("storm8", 383),
                          rep("storm9a", 139),
                          rep("storm9b", 289))
                          
FRCH_storms$DateTime <- as.POSIXct(FRCH_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
FRCH.2020.storms.1<- left_join(FRCH_storms, FRCH_RainGauge_2020, by = "DateTime")
FRCH.2020.storms.1<- left_join(FRCH.2020.storms.1, airtempmean, by = "DateTime")

names(FRCH.2020.storms.1)[names(FRCH.2020.storms.1) == ''] <- 'x'

FRCH.2020.per.storm.1 <- FRCH.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- FRCH.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

FRCH.2020.per.storm.1$temp <- temp$temp


FRCH.2020 <- read_csv("~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2020.csv")
attributes(FRCH.2020$DateTime)$tzone <- 'America/Anchorage'
FRCH.2020 <- left_join(FRCH.2020, FRCH_RainGauge_2020, by = "DateTime")
FRCH.2020 <- left_join(FRCH.2020, airtempmean, by = "DateTime")
FRCH.2020$week <- rollapplyr(FRCH.2020$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2020$month <- rollapplyr(FRCH.2020$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2020$ThreeMonth <- rollapplyr(FRCH.2020$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2020$temp.week <- rollapplyr(FRCH.2020$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

FRCH.2020.1 <- left_join(FRCH.2020.storms.1, FRCH.2020, by = "DateTime") # week month and 3 month precip totals 

FRCH.2020.per.storm.2 <- FRCH.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
FRCH.2020.per.storm.3 <- FRCH.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
FRCH.2020.per.storm.4 <- FRCH.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
FRCH.2020.per.storm.5 <- FRCH.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "turb")

HI.frch.no3.2020 <- left_join(HI.mean.precip.frch.NO3, FRCH.2020.per.storm.1, by = "storm.num")
HI.frch.no3.2020 <- left_join(HI.frch.no3.2020, FRCH.2020.per.storm.2, by = "storm.num")
HI.frch.no3.2020 <- left_join(HI.frch.no3.2020, FRCH.2020.per.storm.3, by = "storm.num")
HI.frch.no3.2020 <- left_join(HI.frch.no3.2020, FRCH.2020.per.storm.4, by = "storm.num")
HI.frch.no3.2020 <- left_join(HI.frch.no3.2020, FRCH.2020.per.storm.5, by = "storm.num")

frch.lm.no3 <- lm(HI.frch.no3.2020$HI ~ HI.frch.no3.2020$precip) # model one with just total precip
frch.lm.no3.2 <- lm(HI.frch.no3.2020$HI ~ HI.frch.no3.2020$precip.week) # model one with just total precip
frch.lm.no3.3 <- lm(HI.frch.no3.2020$HI ~ HI.frch.no3.2020$precip.month) # model one with just total precip
frch.lm.no3.4 <- lm(HI.frch.no3.2020$HI ~ HI.frch.no3.2020$ThreeMonth) # model one with just total precip

frch.formula <- y ~ x

baa <- HI.frch.no3.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bab <- HI.frch.no3.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bcc <- HI.frch.no3.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bdd <- HI.frch.no3.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.fDOM.2020 <- left_join(HI.mean.precip.frch.fDOM, FRCH.2020.per.storm.1, by = "storm.num")
HI.frch.fDOM.2020 <- left_join(HI.frch.fDOM.2020, FRCH.2020.per.storm.2, by = "storm.num")
HI.frch.fDOM.2020 <- left_join(HI.frch.fDOM.2020, FRCH.2020.per.storm.3, by = "storm.num")
HI.frch.fDOM.2020 <- left_join(HI.frch.fDOM.2020, FRCH.2020.per.storm.4, by = "storm.num")
HI.frch.fDOM.2020 <- left_join(HI.frch.fDOM.2020, FRCH.2020.per.storm.5, by = "storm.num")

frch.lm.fDOM <- lm(HI.frch.fDOM.2020$HI ~ HI.frch.fDOM.2020$precip) # model one with just total precip
frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2020$HI ~ HI.frch.fDOM.2020$precip.week) # model one with just total precip
frch.lm.fDOM.3 <- lm(HI.frch.fDOM.2020$HI ~ HI.frch.fDOM.2020$precip.month) # model one with just total precip
frch.lm.fDOM.4 <- lm(HI.frch.fDOM.2020$HI ~ HI.frch.fDOM.2020$ThreeMonth) # model one with just total precip

frch.formula <- y ~ x

bee <- HI.frch.fDOM.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bff <- HI.frch.fDOM.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bgg <- HI.frch.fDOM.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bhh <- HI.frch.fDOM.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.SPC.2020 <- left_join(HI.mean.precip.frch.SPC, FRCH.2020.per.storm.1, by = "storm.num")
HI.frch.SPC.2020 <- left_join(HI.frch.SPC.2020, FRCH.2020.per.storm.2, by = "storm.num")
HI.frch.SPC.2020 <- left_join(HI.frch.SPC.2020, FRCH.2020.per.storm.3, by = "storm.num")
HI.frch.SPC.2020 <- left_join(HI.frch.SPC.2020, FRCH.2020.per.storm.4, by = "storm.num")
HI.frch.SPC.2020 <- left_join(HI.frch.SPC.2020, FRCH.2020.per.storm.5, by = "storm.num")

frch.lm.SPC <- lm(HI.frch.SPC.2020$HI ~ HI.frch.SPC.2020$precip) # model one with just total precip
frch.lm.SPC.2 <- lm(HI.frch.SPC.2020$HI ~ HI.frch.SPC.2020$precip.week) # model one with just total precip
frch.lm.SPC.3 <- lm(HI.frch.SPC.2020$HI ~ HI.frch.SPC.2020$precip.month) # model one with just total precip
frch.lm.SPC.4 <- lm(HI.frch.SPC.2020$HI ~ HI.frch.SPC.2020$ThreeMonth) # model one with just total precip


bii <- HI.frch.SPC.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bjj <- HI.frch.SPC.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bkk <- HI.frch.SPC.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bll <- HI.frch.SPC.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model


HI.frch.turb.2020 <- left_join(HI.mean.precip.frch.turb, FRCH.2020.per.storm.1, by = "storm.num")
HI.frch.turb.2020 <- left_join(HI.frch.turb.2020, FRCH.2020.per.storm.2, by = "storm.num")
HI.frch.turb.2020 <- left_join(HI.frch.turb.2020, FRCH.2020.per.storm.3, by = "storm.num")
HI.frch.turb.2020 <- left_join(HI.frch.turb.2020, FRCH.2020.per.storm.4, by = "storm.num")
HI.frch.turb.2020 <- left_join(HI.frch.turb.2020, FRCH.2020.per.storm.5, by = "storm.num")

frch.lm.turb <- lm(HI.frch.turb.2020$HI ~ HI.frch.turb.2020$precip) # model one with just total precip
frch.lm.turb.2 <- lm(HI.frch.turb.2020$HI ~ HI.frch.turb.2020$precip.week) # model one with just total precip
frch.lm.turb.3 <- lm(HI.frch.turb.2020$HI ~ HI.frch.turb.2020$precip.month) # model one with just total precip
frch.lm.turb.4 <- lm(HI.frch.turb.2020$HI ~ HI.frch.turb.2020$ThreeMonth) # model one with just total precip

bmm <- HI.frch.turb.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bnn <- HI.frch.turb.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

boo <- HI.frch.turb.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bpp <- HI.frch.turb.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sum.time <- FRCH.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.frch.no3.2.2020 <- left_join(HI.frch.no3.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.no3.2.2020$TOTAL.TIME <- as.numeric(HI.frch.no3.2.2020$TOTAL.TIME)
HI.frch.no3.2.2020$Intensity <- HI.frch.no3.2.2020$precip/HI.frch.no3.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.no3.2 <- lm(HI.frch.no3.2.2020$HI ~ HI.frch.no3.2.2020$precip + HI.frch.no3.2.2020$Intensity) # model one with total precip and intensity 

bqq <- HI.frch.no3.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2.2020 <- left_join(HI.frch.fDOM.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.fDOM.2.2020$TOTAL.TIME <- as.numeric(HI.frch.fDOM.2.2020$TOTAL.TIME)
HI.frch.fDOM.2.2020$Intensity <- HI.frch.fDOM.2.2020$precip/HI.frch.fDOM.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2.2020$HI ~ HI.frch.fDOM.2.2020$precip + HI.frch.fDOM.2.2020$Intensity) # model one with total precip and intensity 

brr <- HI.frch.fDOM.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2.2020 <- left_join(HI.frch.SPC.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.SPC.2.2020$TOTAL.TIME <- as.numeric(HI.frch.SPC.2.2020$TOTAL.TIME)
HI.frch.SPC.2.2020$Intensity <- HI.frch.SPC.2.2020$precip/HI.frch.SPC.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.SPC.2 <- lm(HI.frch.SPC.2.2020$HI ~ HI.frch.SPC.2.2020$precip + HI.frch.SPC.2.2020$Intensity) # model one with total precip and intensity 

bss <- HI.frch.SPC.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2.2020 <- left_join(HI.frch.turb.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.turb.2.2020$TOTAL.TIME <- as.numeric(HI.frch.turb.2.2020$TOTAL.TIME)
HI.frch.turb.2.2020$Intensity <- HI.frch.turb.2.2020$precip/HI.frch.turb.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.turb.2 <- lm(HI.frch.turb.2.2020$HI ~ HI.frch.turb.2.2020$precip + HI.frch.turb.2.2020$Intensity) # model one with total precip and intensity 

btt <- HI.frch.turb.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
FRCH.2020.1$day <- julian(FRCH.2020.1$DateTime, origin = "2020-01-01", tz = 'America/Anchorage')
FRCH.2020.1$day <- as.numeric(FRCH.2020.1$day)
FRCH.2020.per.storm.5 <- FRCH.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.frch.no3.2.2020 <- left_join(HI.frch.no3.2.2020, FRCH.2020.per.storm.5, by = "storm.num")
frch.lm.no3.5 <- lm(HI.frch.no3.2.2020$HI ~ HI.frch.no3.2.2020$doy)

buu <- HI.frch.no3.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2.2020 <- left_join(HI.frch.fDOM.2.2020, FRCH.2020.per.storm.5, by = "storm.num")
frch.lm.fDOM.5 <- lm(HI.frch.fDOM.2.2020$HI ~ HI.frch.fDOM.2.2020$doy)

btb <- HI.frch.fDOM.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2.2020 <- left_join(HI.frch.SPC.2.2020, FRCH.2020.per.storm.5, by = "storm.num")
frch.lm.SPC.5 <- lm(HI.frch.SPC.2.2020$HI ~ HI.frch.SPC.2.2020$doy)

bvv <- HI.frch.SPC.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2.2020 <- left_join(HI.frch.turb.2.2020, FRCH.2020.per.storm.5, by = "storm.num")
frch.lm.turb.5 <- lm(HI.frch.turb.2.2020$HI ~ HI.frch.turb.2.2020$doy)

bww <- HI.frch.turb.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(baa,bab,bcc,bdd,bee,bff,bgg,bhh,bii,bjj,bkk,bll,bmm,bnn,boo,bpp,bqq,brr,bss,bt,buu,btb,bvv,bww,
#          ncol = 4)

HI.frch.2020 <- rbind(HI.frch.no3.2.2020, HI.frch.fDOM.2.2020, HI.frch.SPC.2.2020, HI.frch.turb.2.2020) # merging all responses together 
HI.frch.2020$burn <- "unburned" # adding a burn column
HI.frch.2020$pf <- "medium" # adding a pf column

write.csv(HI.frch.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.frch.2020.csv")

# POKE # 
POKEstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="POKE", 
                                  full.names=TRUE)

POKE_storms<-do.call("rbind", lapply(POKEstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

POKE_storms$storm.num = c(rep("storm1", 95),
                          rep("storm10", 99),
                          rep("storm11", 199),
                          rep("storm12", 307),
                          rep("storm13", 87),
                          rep("storm14", 383),
                          rep("storm15", 335),
                          rep("storm16", 95),
                          rep("storm17", 119),
                          rep("storm18", 95),
                          rep("storm19", 135),
                          rep("storm2", 87),
                          rep("storm20", 139),
                          rep("storm21", 219),
                          rep("storm22a", 107),
                          rep("storm3", 120),
                          rep("storm4a", 98),
                          rep("storm4b", 95),
                          rep("storm4c", 159),
                          rep("storm5", 219),
                          rep("storm6", 95),
                          rep("storm7", 127),
                          rep("storm8", 135),
                          rep("storm9", 263))

POKE_storms$DateTime <- as.POSIXct(POKE_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
POKE.2020.storms.1<- left_join(POKE_storms, POKE_RainGauge_2020, by = "DateTime")
POKE.2020.storms.1<- left_join(POKE.2020.storms.1, airtempmean, by = "DateTime")

names(POKE.2020.storms.1)[names(POKE.2020.storms.1) == ''] <- 'x'

POKE.2020.per.storm.1 <- POKE.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- POKE.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

POKE.2020.per.storm.1$temp <- temp$temp

POKE.2020 <- read_csv("~/Documents/Storms/Q_Chem/POKE/POKE_chem_2020.csv")
attributes(POKE.2020$DateTime)$tzone <- 'America/Anchorage'
POKE.2020 <- left_join(POKE.2020, POKE_RainGauge_2020, by = "DateTime")
POKE.2020 <- left_join(POKE.2020, airtempmean, by = "DateTime")
POKE.2020$week <- rollapplyr(POKE.2020$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2020$month <- rollapplyr(POKE.2020$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2020$ThreeMonth <- rollapplyr(POKE.2020$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2020$temp.week <- rollapplyr(POKE.2020$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

POKE.2020.1 <- left_join(POKE.2020.storms.1, POKE.2020, by = "DateTime") # week month and 3 month precip totals 

POKE.2020.per.storm.2 <- POKE.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
POKE.2020.per.storm.3 <- POKE.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
POKE.2020.per.storm.4 <- POKE.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
POKE.2020.per.storm.5 <- POKE.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.poke.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "POKE" & response == "NO3")
HI.mean.precip.poke.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "POKE" & response == "fDOM")
HI.mean.precip.poke.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "POKE" & response == "SPC")
HI.mean.precip.poke.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "POKE" & response == "turb")

HI.poke.no3.2020 <- left_join(HI.mean.precip.poke.NO3, POKE.2020.per.storm.1, by = "storm.num")
HI.poke.no3.2020 <- left_join(HI.poke.no3.2020, POKE.2020.per.storm.2, by = "storm.num")
HI.poke.no3.2020 <- left_join(HI.poke.no3.2020, POKE.2020.per.storm.3, by = "storm.num")
HI.poke.no3.2020 <- left_join(HI.poke.no3.2020, POKE.2020.per.storm.4, by = "storm.num")
HI.poke.no3.2020 <- left_join(HI.poke.no3.2020, POKE.2020.per.storm.5, by = "storm.num")

poke.lm.no3 <- lm(HI.poke.no3.2020$HI ~ HI.poke.no3.2020$precip) # model one with just total precip
poke.lm.no3.2 <- lm(HI.poke.no3.2020$HI ~ HI.poke.no3.2020$precip.week) # model one with just total precip
poke.lm.no3.3 <- lm(HI.poke.no3.2020$HI ~ HI.poke.no3.2020$precip.month) # model one with just total precip
poke.lm.no3.4 <- lm(HI.poke.no3.2020$HI ~ HI.poke.no3.2020$ThreeMonth) # model one with just total precip

poke.formula <- y ~ x

ppa <- HI.poke.no3.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ppb <- HI.poke.no3.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ppc <- HI.poke.no3.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ppd <- HI.poke.no3.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.fDOM.2020 <- left_join(HI.mean.precip.poke.fDOM, POKE.2020.per.storm.1, by = "storm.num")
HI.poke.fDOM.2020 <- left_join(HI.poke.fDOM.2020, POKE.2020.per.storm.2, by = "storm.num")
HI.poke.fDOM.2020 <- left_join(HI.poke.fDOM.2020, POKE.2020.per.storm.3, by = "storm.num")
HI.poke.fDOM.2020 <- left_join(HI.poke.fDOM.2020, POKE.2020.per.storm.4, by = "storm.num")
HI.poke.fDOM.2020 <- left_join(HI.poke.fDOM.2020, POKE.2020.per.storm.5, by = "storm.num")

poke.lm.fDOM <- lm(HI.poke.fDOM.2020$HI ~ HI.poke.fDOM.2020$precip) # model one with just total precip
poke.lm.fDOM.2 <- lm(HI.poke.fDOM.2020$HI ~ HI.poke.fDOM.2020$precip.week) # model one with just total precip
poke.lm.fDOM.3 <- lm(HI.poke.fDOM.2020$HI ~ HI.poke.fDOM.2020$precip.month) # model one with just total precip
poke.lm.fDOM.4 <- lm(HI.poke.fDOM.2020$HI ~ HI.poke.fDOM.2020$ThreeMonth) # model one with just total precip

ppe <- HI.poke.fDOM.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ppf <- HI.poke.fDOM.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ppg <- HI.poke.fDOM.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

pph <- HI.poke.fDOM.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Three-week Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.SPC.2020 <- left_join(HI.mean.precip.poke.SPC, POKE.2020.per.storm.1, by = "storm.num")
HI.poke.SPC.2020 <- left_join(HI.poke.SPC.2020, POKE.2020.per.storm.2, by = "storm.num")
HI.poke.SPC.2020 <- left_join(HI.poke.SPC.2020, POKE.2020.per.storm.3, by = "storm.num")
HI.poke.SPC.2020 <- left_join(HI.poke.SPC.2020, POKE.2020.per.storm.4, by = "storm.num")
HI.poke.SPC.2020 <- left_join(HI.poke.SPC.2020, POKE.2020.per.storm.5, by = "storm.num")

poke.lm.SPC <- lm(HI.poke.SPC.2020$HI ~ HI.poke.SPC.2020$precip) # model one with just total precip
poke.lm.SPC.2 <- lm(HI.poke.SPC.2020$HI ~ HI.poke.SPC.2020$precip.week) # model one with just total precip
poke.lm.SPC.3 <- lm(HI.poke.SPC.2020$HI ~ HI.poke.SPC.2020$precip.month) # model one with just total precip
poke.lm.SPC.4 <- lm(HI.poke.SPC.2020$HI ~ HI.poke.SPC.2020$ThreeMonth) # model one with just total precip

ppi <- HI.poke.SPC.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ppj <- HI.poke.SPC.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ppk <- HI.poke.SPC.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ppl <- HI.poke.SPC.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.turb.2020 <- left_join(HI.mean.precip.poke.turb, POKE.2020.per.storm.1, by = "storm.num")
HI.poke.turb.2020 <- left_join(HI.poke.turb.2020, POKE.2020.per.storm.2, by = "storm.num")
HI.poke.turb.2020 <- left_join(HI.poke.turb.2020, POKE.2020.per.storm.3, by = "storm.num")
HI.poke.turb.2020 <- left_join(HI.poke.turb.2020, POKE.2020.per.storm.4, by = "storm.num")
HI.poke.turb.2020 <- left_join(HI.poke.turb.2020, POKE.2020.per.storm.5, by = "storm.num")

poke.lm.turb <- lm(HI.poke.turb.2020$HI ~ HI.poke.turb.2020$precip) # model one with just total precip
poke.lm.turb.2 <- lm(HI.poke.turb.2020$HI ~ HI.poke.turb.2020$precip.week) # model one with just total precip
poke.lm.turb.3 <- lm(HI.poke.turb.2020$HI ~ HI.poke.turb.2020$precip.month) # model one with just total precip
poke.lm.turb.4 <- lm(HI.poke.turb.2020$HI ~ HI.poke.turb.2020$ThreeMonth) # model one with just total precip

ppm <- HI.poke.turb.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ppn <- HI.poke.turb.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ppo <- HI.poke.turb.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ppp <- HI.poke.turb.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- POKE.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.poke.no3.2.2020 <- left_join(HI.poke.no3.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.no3.2.2020$TOTAL.TIME <- as.numeric(HI.poke.no3.2.2020$TOTAL.TIME)
HI.poke.no3.2.2020$Intensity <- HI.poke.no3.2.2020$precip/HI.poke.no3.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.no3.2 <- lm(HI.poke.no3.2.2020$HI ~ HI.poke.no3.2.2020$precip + HI.poke.no3.2.2020$Intensity) # model one with total precip and intensity 

ppq <- HI.poke.no3.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.fDOM.2.2020 <- left_join(HI.poke.fDOM.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.fDOM.2.2020$TOTAL.TIME <- as.numeric(HI.poke.fDOM.2.2020$TOTAL.TIME)
HI.poke.fDOM.2.2020$Intensity <- HI.poke.fDOM.2.2020$precip/HI.poke.fDOM.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.fDOM.2 <- lm(HI.poke.fDOM.2.2020$HI ~ HI.poke.fDOM.2.2020$precip + HI.poke.fDOM.2.2020$Intensity) # model one with total precip and intensity 

ppr <- HI.poke.fDOM.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.SPC.2.2020 <- left_join(HI.poke.SPC.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.SPC.2.2020$TOTAL.TIME <- as.numeric(HI.poke.SPC.2.2020$TOTAL.TIME)
HI.poke.SPC.2.2020$Intensity <- HI.poke.SPC.2.2020$precip/HI.poke.SPC.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.SPC.2 <- lm(HI.poke.SPC.2.2020$HI ~ HI.poke.SPC.2.2020$precip + HI.poke.SPC.2.2020$Intensity) # model one with total precip and intensity 

pps <- HI.poke.SPC.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.turb.2.2020 <- left_join(HI.poke.turb.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.turb.2.2020$TOTAL.TIME <- as.numeric(HI.poke.turb.2.2020$TOTAL.TIME)
HI.poke.turb.2.2020$Intensity <- HI.poke.turb.2.2020$precip/HI.poke.turb.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.turb.2 <- lm(HI.poke.turb.2.2020$HI ~ HI.poke.turb.2.2020$precip + HI.poke.turb.2.2020$Intensity) # model one with total precip and intensity 

ppt <- HI.poke.turb.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
POKE.2020.1$day <- julian(POKE.2020.1$DateTime, origin = "2020-01-01", tz = 'America/Anchorage')
POKE.2020.1$day <- as.numeric(POKE.2020.1$day)
POKE.2020.per.storm.5 <- POKE.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.poke.no3.2.2020 <- left_join(HI.poke.no3.2.2020, POKE.2020.per.storm.5, by = "storm.num")
poke.lm.no3.5 <- lm(HI.poke.no3.2.2020$HI ~ HI.poke.no3.2.2020$doy)

ppu <- HI.poke.no3.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.fDOM.2.2020 <- left_join(HI.poke.fDOM.2.2020, POKE.2020.per.storm.5, by = "storm.num")
poke.lm.fDOM.5 <- lm(HI.poke.fDOM.2.2020$HI ~ HI.poke.fDOM.2.2020$doy)

ppv <- HI.poke.fDOM.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.SPC.2.2020 <- left_join(HI.poke.SPC.2.2020, POKE.2020.per.storm.5, by = "storm.num")
poke.lm.SPC.5 <- lm(HI.poke.SPC.2.2020$HI ~ HI.poke.SPC.2.2020$doy)

ppw <- HI.poke.SPC.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.turb.2.2020 <- left_join(HI.poke.turb.2.2020, POKE.2020.per.storm.5, by = "storm.num")
poke.lm.turb.5 <- lm(HI.poke.turb.2.2020$HI ~ HI.poke.turb.2.2020$doy)

ppx <- HI.poke.turb.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(ppa,ppb,ppc,ppd,ppe,ppf,ppg,pph,ppq,ppr,ppu,ppv,
  #        ncol = 4)

HI.poke.2020 <- rbind(HI.poke.no3.2.2020, HI.poke.fDOM.2.2020, HI.poke.SPC.2.2020, HI.poke.turb.2.2020) # merging all responses together 
HI.poke.2020$burn <- "burned" # adding a burn column
HI.poke.2020$pf <- "medium" # adding a pf column

write.csv(HI.poke.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.poke.2020.csv")

# VAUL # 
VAULstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="VAUL", 
                                  full.names=TRUE)

VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

VAUL_storms$storm.num = c(rep("storm10", 195),
                          rep("storm11", 400),
                          rep("storm12", 171),
                          rep("storm13", 319),
                          rep("storm14", 211),
                          rep("storm1a", 111),
                          rep("storm1b", 234),
                          rep("storm1c", 406),
                          rep("storm2", 182),
                          rep("storm3", 310),
                          rep("storm4", 318),
                          rep("storm5", 198),
                          rep("storm6a", 107),
                          rep("storm6b", 511),
                          rep("storm7", 284),
                          rep("storm8", 91),
                          rep("storm9", 91))

VAUL_storms$DateTime <- as.POSIXct(VAUL_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
VAUL.2020.storms.1<- left_join(VAUL_storms, VAUL_RainGauge_2020, by = "DateTime")
VAUL.2020.storms.1<- left_join(VAUL.2020.storms.1, airtempmean, by = "DateTime")

names(VAUL.2020.storms.1)[names(VAUL.2020.storms.1) == ''] <- 'x'

VAUL.2020.per.storm.1 <- VAUL.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- VAUL.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

VAUL.2020.per.storm.1$temp <- temp$temp

VAUL.2020 <- read_csv("~/Documents/Storms/Q_Chem/VAUL/VAUL_chem_2020.csv")
attributes(VAUL.2020$DateTime)$tzone <- 'America/Anchorage'
VAUL.2020 <- left_join(VAUL.2020, VAUL_RainGauge_2020, by = "DateTime")
VAUL.2020 <- left_join(VAUL.2020, airtempmean, by = "DateTime")
VAUL.2020$week <- rollapplyr(VAUL.2020$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2020$month <- rollapplyr(VAUL.2020$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2020$ThreeMonth <- rollapplyr(VAUL.2020$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2020$temp.week <- rollapplyr(VAUL.2020$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

VAUL.2020.1 <- left_join(VAUL.2020.storms.1, VAUL.2020, by = "DateTime") # week month and 3 month precip totals 

VAUL.2020.per.storm.2 <- VAUL.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
VAUL.2020.per.storm.3 <- VAUL.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
VAUL.2020.per.storm.4 <- VAUL.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
VAUL.2020.per.storm.5 <- VAUL.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.vaul.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "NO3")
HI.mean.precip.vaul.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "fDOM")
HI.mean.precip.vaul.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "SPC")
HI.mean.precip.vaul.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "turb")

HI.vaul.no3.2020 <- left_join(HI.mean.precip.vaul.NO3, VAUL.2020.per.storm.1, by = "storm.num")
HI.vaul.no3.2020 <- left_join(HI.vaul.no3.2020, VAUL.2020.per.storm.2, by = "storm.num")
HI.vaul.no3.2020 <- left_join(HI.vaul.no3.2020, VAUL.2020.per.storm.3, by = "storm.num")
HI.vaul.no3.2020 <- left_join(HI.vaul.no3.2020, VAUL.2020.per.storm.4, by = "storm.num")
HI.vaul.no3.2020 <- left_join(HI.vaul.no3.2020, VAUL.2020.per.storm.5, by = "storm.num")

vaul.lm.no3 <- lm(HI.vaul.no3.2020$HI ~ HI.vaul.no3.2020$precip) # model one with just total precip
vaul.lm.no3 <- lm(HI.vaul.no3.2020$HI ~ HI.vaul.no3.2020$precip.week) # model one with just total precip
vaul.lm.no3 <- lm(HI.vaul.no3.2020$HI ~ HI.vaul.no3.2020$precip.month) # model one with just total precip
vaul.lm.no3 <- lm(HI.vaul.no3.2020$HI ~ HI.vaul.no3.2020$ThreeMonth) # model one with just total precip

vaul.formula <- y ~ x

daa <- HI.vaul.no3.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

dbb <- HI.vaul.no3.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

dcc <- HI.vaul.no3.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model

dcd <- HI.vaul.no3.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.vaul.fDOM.2020 <- left_join(HI.mean.precip.vaul.fDOM, VAUL.2020.per.storm.1, by = "storm.num")
HI.vaul.fDOM.2020 <- left_join(HI.vaul.fDOM.2020, VAUL.2020.per.storm.2, by = "storm.num")
HI.vaul.fDOM.2020 <- left_join(HI.vaul.fDOM.2020, VAUL.2020.per.storm.3, by = "storm.num")
HI.vaul.fDOM.2020 <- left_join(HI.vaul.fDOM.2020, VAUL.2020.per.storm.4, by = "storm.num")
HI.vaul.fDOM.2020 <- left_join(HI.vaul.fDOM.2020, VAUL.2020.per.storm.5, by = "storm.num")

vaul.lm.fDOM <- lm(HI.vaul.fDOM.2020$HI ~ HI.vaul.fDOM.2020$precip) # model one with just total precip
vaul.lm.fDOM.1 <- lm(HI.vaul.fDOM.2020$HI ~ HI.vaul.fDOM.2020$precip.week) # model one with just total precip
vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2020$HI ~ HI.vaul.fDOM.2020$precip.month) # model one with just total precip
vaul.lm.fDOM.3 <- lm(HI.vaul.fDOM.2020$HI ~ HI.vaul.fDOM.2020$ThreeMonth) # model one with just total precip

dee <- HI.vaul.fDOM.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

dff <- HI.vaul.fDOM.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

dgg <- HI.vaul.fDOM.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model

dhh <- HI.vaul.fDOM.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.vaul.SPC.2020 <- left_join(HI.mean.precip.vaul.SPC, VAUL.2020.per.storm.1, by = "storm.num")
HI.vaul.SPC.2020 <- left_join(HI.vaul.SPC.2020, VAUL.2020.per.storm.2, by = "storm.num")
HI.vaul.SPC.2020 <- left_join(HI.vaul.SPC.2020, VAUL.2020.per.storm.3, by = "storm.num")
HI.vaul.SPC.2020 <- left_join(HI.vaul.SPC.2020, VAUL.2020.per.storm.4, by = "storm.num")
HI.vaul.SPC.2020 <- left_join(HI.vaul.SPC.2020, VAUL.2020.per.storm.5, by = "storm.num")

vaul.lm.SPC <- lm(HI.vaul.SPC.2020$HI ~ HI.vaul.SPC.2020$precip) # model one with just total precip
vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2020$HI ~ HI.vaul.SPC.2020$precip.week) # model one with just total precip
vaul.lm.SPC.3 <- lm(HI.vaul.SPC.2020$HI ~ HI.vaul.SPC.2020$precip.month) # model one with just total precip
vaul.lm.SPC.4 <- lm(HI.vaul.SPC.2020$HI ~ HI.vaul.SPC.2020$ThreeMonth) # model one with just total precip

dii <- HI.vaul.SPC.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

djj <- HI.vaul.SPC.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

dkk <- HI.vaul.SPC.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

dll <- HI.vaul.SPC.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.turb.2020 <- left_join(HI.mean.precip.vaul.turb, VAUL.2020.per.storm.1, by = "storm.num")
HI.vaul.turb.2020 <- left_join(HI.vaul.turb.2020, VAUL.2020.per.storm.2, by = "storm.num")
HI.vaul.turb.2020 <- left_join(HI.vaul.turb.2020, VAUL.2020.per.storm.3, by = "storm.num")
HI.vaul.turb.2020 <- left_join(HI.vaul.turb.2020, VAUL.2020.per.storm.4, by = "storm.num")
HI.vaul.turb.2020 <- left_join(HI.vaul.turb.2020, VAUL.2020.per.storm.5, by = "storm.num")

vaul.lm.turb <- lm(HI.vaul.turb.2020$HI ~ HI.vaul.turb.2020$precip) # model one with just total precip
vaul.lm.turb.2 <- lm(HI.vaul.turb.2020$HI ~ HI.vaul.turb.2020$precip.week) # model one with just total precip
vaul.lm.turb.3 <- lm(HI.vaul.turb.2020$HI ~ HI.vaul.turb.2020$precip.month) # model one with just total precip
vaul.lm.turb.4 <- lm(HI.vaul.turb.2020$HI ~ HI.vaul.turb.2020$ThreeMonth) # model one with just total precip

dmm <- HI.vaul.turb.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

dnn <- HI.vaul.turb.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

doo <- HI.vaul.turb.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

dpp <- HI.vaul.turb.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- VAUL.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.vaul.no3.2.2020 <- left_join(HI.vaul.no3.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.no3.2.2020$TOTAL.TIME <- as.numeric(HI.vaul.no3.2.2020$TOTAL.TIME)
HI.vaul.no3.2.2020$Intensity <- HI.vaul.no3.2.2020$precip/HI.vaul.no3.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.no3.2 <- lm(HI.vaul.no3.2.2020$HI ~ HI.vaul.no3.2.2020$precip + HI.vaul.no3.2.2020$Intensity) # model one with total precip and intensity 

dqq <- HI.vaul.no3.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.fDOM.2.2020 <- left_join(HI.vaul.fDOM.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.fDOM.2.2020$TOTAL.TIME <- as.numeric(HI.vaul.fDOM.2.2020$TOTAL.TIME)
HI.vaul.fDOM.2.2020$Intensity <- HI.vaul.fDOM.2.2020$precip/HI.vaul.fDOM.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2.2020$HI ~ HI.vaul.fDOM.2.2020$precip + HI.vaul.fDOM.2.2020$Intensity) # model one with total precip and intensity 

drr <- HI.vaul.fDOM.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.SPC.2.2020 <- left_join(HI.vaul.SPC.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.SPC.2.2020$TOTAL.TIME <- as.numeric(HI.vaul.SPC.2.2020$TOTAL.TIME)
HI.vaul.SPC.2.2020$Intensity <- HI.vaul.SPC.2.2020$precip/HI.vaul.SPC.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2.2020$HI ~ HI.vaul.SPC.2.2020$precip + HI.vaul.SPC.2.2020$Intensity) # model one with total precip and intensity 

dss <- HI.vaul.SPC.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.turb.2.2020 <- left_join(HI.vaul.turb.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.turb.2.2020$TOTAL.TIME <- as.numeric(HI.vaul.turb.2.2020$TOTAL.TIME)
HI.vaul.turb.2.2020$Intensity <- HI.vaul.turb.2.2020$precip/HI.vaul.turb.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.turb.2 <- lm(HI.vaul.turb.2.2020$HI ~ HI.vaul.turb.2.2020$precip + HI.vaul.turb.2.2020$Intensity) # model one with total precip and intensity 

dtt <- HI.vaul.turb.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
VAUL.2020.1$day <- julian(VAUL.2020.1$DateTime, origin = "2020-01-01", tz = 'America/Anchorage')
VAUL.2020.1$day <- as.numeric(VAUL.2020.1$day)
VAUL.2020.per.storm.5 <- VAUL.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.vaul.no3.2.2020 <- left_join(HI.vaul.no3.2.2020, VAUL.2020.per.storm.5, by = "storm.num")
vaul.lm.no3.5 <- lm(HI.vaul.no3.2.2020$HI ~ HI.vaul.no3.2.2020$doy)

duu <- HI.vaul.no3.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.fDOM.2.2020 <- left_join(HI.vaul.fDOM.2.2020, VAUL.2020.per.storm.5, by = "storm.num")
vaul.lm.fDOM.5 <- lm(HI.vaul.fDOM.2.2020$HI ~ HI.vaul.fDOM.2.2020$doy)

dtb <- HI.vaul.fDOM.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.SPC.2.2020 <- left_join(HI.vaul.SPC.2.2020, VAUL.2020.per.storm.5, by = "storm.num")
vaul.lm.SPC.5 <- lm(HI.vaul.SPC.2.2020$HI ~ HI.vaul.SPC.2.2020$doy)

dvv <- HI.vaul.SPC.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.turb.2.2020 <- left_join(HI.vaul.turb.2.2020, VAUL.2020.per.storm.5, by = "storm.num")
vaul.lm.turb.5 <- lm(HI.vaul.turb.2.2020$HI ~ HI.vaul.turb.2.2020$doy)

dww <- HI.vaul.turb.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(daa,dbb,dcc,dcd,dee,dff,dgg,dhh,dii,djj,dkk,dll,dmm,dnn,doo,dpp,dqq,drr,dss,dtt, duu,dtb,dvv,dww,
#          ncol = 4)

HI.vaul.2020 <- rbind(HI.vaul.no3.2.2020, HI.vaul.fDOM.2.2020, HI.vaul.SPC.2.2020, HI.vaul.turb.2.2020) # merging all responses together 
HI.vaul.2020$burn <- "unburned" # adding a burn column
HI.vaul.2020$pf <- "high" # adding a pf column

write.csv(HI.vaul.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2020/HI.vaul.2020.csv")

# STRT # 
STRTstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="STRT", 
                                  full.names=TRUE)

STRT_storms<-do.call("rbind", lapply(STRTstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

STRT_storms$storm.num = c(rep("storm10", 247),
                          rep("storm1a", 108),
                          rep("storm1b", 162),
                          rep("storm1c", 106),
                          rep("storm1d", 87),
                          rep("storm1e", 445),
                          rep("storm2", 167),
                          rep("storm3", 387),
                          rep("storm4a", 141),
                          rep("storm4b", 323),
                          rep("storm5", 239),
                          rep("storm6", 123),
                          rep("storm7a", 99),
                          rep("storm7b", 96),
                          rep("storm8", 83),
                          rep("storm9a", 295),
                          rep("storm9b", 135),
                          rep("storm9c", 483))

STRT_storms$DateTime <- as.POSIXct(STRT_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
STRT.2020.storms.1<- left_join(STRT_storms, STRT_RainGauge_2020, by = "DateTime")
STRT.2020.storms.1<- left_join(STRT.2020.storms.1, airtempmean, by = "DateTime")

names(STRT.2020.storms.1)[names(STRT.2020.storms.1) == ''] <- 'x'

STRT.2020.per.storm.1 <- STRT.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- STRT.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

STRT.2020.per.storm.1$temp <- temp$temp


STRT.2020 <- read_csv("~/Documents/Storms/Q_Chem/STRT/STRT_chem_2020.csv")
attributes(STRT.2020$DateTime)$tzone <- 'America/Anchorage'
STRT.2020 <- left_join(STRT.2020, STRT_RainGauge_2020, by = "DateTime")
STRT.2020 <- left_join(STRT.2020, airtempmean, by = "DateTime")
STRT.2020$week <- rollapplyr(STRT.2020$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2020$month <- rollapplyr(STRT.2020$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2020$ThreeMonth <- rollapplyr(STRT.2020$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2020$temp.week <- rollapplyr(STRT.2020$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

STRT.2020.1 <- left_join(STRT.2020.storms.1, STRT.2020, by = "DateTime") # week month and 3 month precip totals 

STRT.2020.per.storm.2 <- STRT.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
STRT.2020.per.storm.3 <- STRT.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
STRT.2020.per.storm.4 <- STRT.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
STRT.2020.per.storm.5 <- STRT.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.strt.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "NO3")
HI.mean.precip.strt.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "fDOM")
HI.mean.precip.strt.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "SPC")
HI.mean.precip.strt.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "turb")

HI.strt.no3.2020 <- left_join(HI.mean.precip.strt.NO3, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.no3.2020 <- left_join(HI.strt.no3.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.no3.2020 <- left_join(HI.strt.no3.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.no3.2020 <- left_join(HI.strt.no3.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.no3.2020 <- left_join(HI.strt.no3.2020, STRT.2020.per.storm.5, by = "storm.num")

strt.lm.no3 <- lm(HI.strt.no3.2020$HI ~ HI.strt.no3.2020$precip) # model one with just total precip
strt.lm.no3.2 <- lm(HI.strt.no3.2020$HI ~ HI.strt.no3.2020$precip.week) # model one with just total precip
strt.lm.no3.3 <- lm(HI.strt.no3.2020$HI ~ HI.strt.no3.2020$precip.month) # model one with just total precip
strt.lm.no3.4 <- lm(HI.strt.no3.2020$HI ~ HI.strt.no3.2020$ThreeMonth) # model one with just total precip

strt.formula <- y ~ x

eaa <- HI.strt.no3.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ebb <- HI.strt.no3.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ecc <- HI.strt.no3.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

edd <- HI.strt.no3.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Three Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.fDOM.2020 <- left_join(HI.mean.precip.strt.fDOM, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.fDOM.2020 <- left_join(HI.strt.fDOM.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.fDOM.2020 <- left_join(HI.strt.fDOM.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.fDOM.2020 <- left_join(HI.strt.fDOM.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.fDOM.2020 <- left_join(HI.strt.fDOM.2020, STRT.2020.per.storm.5, by = "storm.num")

strt.lm.fDOM <- lm(HI.strt.fDOM.2020$HI ~ HI.strt.fDOM.2020$precip) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2020$HI ~ HI.strt.fDOM.2020$precip.week) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2020$HI ~ HI.strt.fDOM.2020$precip.month) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2020$HI ~ HI.strt.fDOM.2020$ThreeMonth) # model one with just total precip

ede <- HI.strt.fDOM.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

eff <- HI.strt.fDOM.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

egg <- HI.strt.fDOM.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ehh <- HI.strt.fDOM.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.SPC.2020 <- left_join(HI.mean.precip.strt.SPC, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.SPC.2020 <- left_join(HI.strt.SPC.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.SPC.2020 <- left_join(HI.strt.SPC.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.SPC.2020 <- left_join(HI.strt.SPC.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.SPC.2020 <- left_join(HI.strt.SPC.2020, STRT.2020.per.storm.5, by = "storm.num")

strt.lm.SPC <- lm(HI.strt.SPC.2020$HI ~ HI.strt.SPC.2020$precip) # model one with just total precip
strt.lm.SPC.2 <- lm(HI.strt.SPC.2020$HI ~ HI.strt.SPC.2020$precip.week) # model one with just total precip
strt.lm.SPC.3 <- lm(HI.strt.SPC.2020$HI ~ HI.strt.SPC.2020$precip.month) # model one with just total precip
strt.lm.SPC.4 <- lm(HI.strt.SPC.2020$HI ~ HI.strt.SPC.2020$ThreeMonth) # model one with just total precip

eii <- HI.strt.SPC.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ejj <- HI.strt.SPC.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ekk <- HI.strt.SPC.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ell <- HI.strt.SPC.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.turb.2020 <- left_join(HI.mean.precip.strt.turb, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.turb.2020 <- left_join(HI.strt.turb.2020, STRT.2020.per.storm.2, by = "storm.num")
HI.strt.turb.2020 <- left_join(HI.strt.turb.2020, STRT.2020.per.storm.3, by = "storm.num")
HI.strt.turb.2020 <- left_join(HI.strt.turb.2020, STRT.2020.per.storm.4, by = "storm.num")
HI.strt.turb.2020 <- left_join(HI.strt.turb.2020, STRT.2020.per.storm.5, by = "storm.num")

strt.lm.turb <- lm(HI.strt.turb.2020$HI ~ HI.strt.turb.2020$precip) # model one with just total precip
strt.lm.turb.2 <- lm(HI.strt.turb.2020$HI ~ HI.strt.turb.2020$precip.week) # model one with just total precip
strt.lm.turb.3 <- lm(HI.strt.turb.2020$HI ~ HI.strt.turb.2020$precip.month) # model one with just total precip
strt.lm.turb.4 <- lm(HI.strt.turb.2020$HI ~ HI.strt.turb.2020$ThreeMonth) # model one with just total precip

emm <- HI.strt.turb.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

enn <- HI.strt.turb.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

eoo <- HI.strt.turb.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

epp <- HI.strt.turb.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

STRT.2020.storms.1 <- na.omit(STRT.2020.storms.1)

sum.time <- STRT.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.strt.no3.2.2020 <- left_join(HI.strt.no3.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.no3.2.2020$TOTAL.TIME <- as.numeric(HI.strt.no3.2.2020$TOTAL.TIME)
HI.strt.no3.2.2020$Intensity <- HI.strt.no3.2.2020$precip/HI.strt.no3.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.no3.2 <- lm(HI.strt.no3.2.2020$HI ~ HI.strt.no3.2.2020$precip + HI.strt.no3.2.2020$Intensity) # model one with total precip and intensity 

eqq <- HI.strt.no3.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.fDOM.2.2020 <- left_join(HI.strt.fDOM.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.fDOM.2.2020$TOTAL.TIME <- as.numeric(HI.strt.fDOM.2.2020$TOTAL.TIME)
HI.strt.fDOM.2.2020$Intensity <- HI.strt.fDOM.2.2020$precip/HI.strt.fDOM.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.fDOM.2 <- lm(HI.strt.fDOM.2.2020$HI ~ HI.strt.fDOM.2.2020$precip + HI.strt.fDOM.2.2020$Intensity) # model one with total precip and intensity 

err <- HI.strt.fDOM.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.SPC.2.2020 <- left_join(HI.strt.SPC.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.SPC.2.2020$TOTAL.TIME <- as.numeric(HI.strt.SPC.2.2020$TOTAL.TIME)
HI.strt.SPC.2.2020$Intensity <- HI.strt.SPC.2.2020$precip/HI.strt.SPC.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.SPC.2 <- lm(HI.strt.SPC.2.2020$HI ~ HI.strt.SPC.2.2020$precip + HI.strt.SPC.2.2020$Intensity) # model one with total precip and intensity 

ess <- HI.strt.SPC.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.turb.2.2020 <- left_join(HI.strt.turb.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.turb.2.2020$TOTAL.TIME <- as.numeric(HI.strt.turb.2.2020$TOTAL.TIME)
HI.strt.turb.2.2020$Intensity <- HI.strt.turb.2.2020$precip/HI.strt.turb.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.turb.2 <- lm(HI.strt.turb.2.2020$HI ~ HI.strt.turb.2.2020$precip + HI.strt.turb.2.2020$Intensity) # model one with total precip and intensity 

ett <- HI.strt.turb.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
STRT.2020.1$day <- julian(STRT.2020.1$DateTime, origin = "2020-01-01", tz = 'America/Anchorage')
STRT.2020.1$day <- as.numeric(STRT.2020.1$day)
STRT.2020.per.storm.5 <- STRT.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.strt.no3.2.2020 <- left_join(HI.strt.no3.2.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.no3.5 <- lm(HI.strt.no3.2.2020$HI ~ HI.strt.no3.2.2020$doy)

euu <- HI.strt.no3.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.fDOM.2.2020 <- left_join(HI.strt.fDOM.2.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.fDOM.5 <- lm(HI.strt.fDOM.2.2020$HI ~ HI.strt.fDOM.2.2020$doy)

etb <- HI.strt.fDOM.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.SPC.2.2020 <- left_join(HI.strt.SPC.2.2020, STRT.2020.per.storm.5, by = "storm.num")
sttrt.lm.SPC.5 <- lm(HI.strt.SPC.2.2020$HI ~ HI.strt.SPC.2.2020$doy)

evv <- HI.strt.SPC.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.turb.2.2020 <- left_join(HI.strt.turb.2.2020, STRT.2020.per.storm.5, by = "storm.num")
strt.lm.turb.5 <- lm(HI.strt.turb.2.2020$HI ~ HI.strt.turb.2.2020$doy)

eww <- HI.strt.turb.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(eaa,ebb,ecc,edd,ede,eff,egg,ehh,eii,ejj,ekk,ell,emm,enn,eoo,epp,eqq,err,ess,ett,euu,etb,evv,eww,
#          ncol = 4)

HI.strt.2020 <- rbind(HI.strt.no3.2.2020, HI.strt.fDOM.2.2020, HI.strt.SPC.2.2020, HI.strt.turb.2.2020) # merging all responses together 
HI.strt.2020$burn <- "burned" # adding a burn column
HI.strt.2020$pf <- "high" # adding a pf column

write.csv(HI.strt.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.strt.2020.csv")

# CARI # 
CARIstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="CARI", 
                                  full.names=TRUE)

CARI_storms<-do.call("rbind", lapply(CARIstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

CARI_storms$storm.num = c(rep("storm1", 5012),
                          rep("storm2a", 3118),
                          rep("storm2b", 2878),
                          rep("storm2c", 4678),
                          rep("storm3", 8399),
                          rep("storm4", 4678),
                          rep("storm5", 6598),
                          rep("storm6", 5518),
                          rep("storm7", 9238),
                          rep("storm8a", 3358),
                          rep("storm8b", 14398),
                          rep("storm9", 2998))

CARI_storms$DateTime <- as.POSIXct(CARI_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
CARI.2020.storms.1<- left_join(CARI_storms, POKE_RainGauge_2020, by = "DateTime")
CARI.2020.storms.1<- left_join(CARI.2020.storms.1, airtempmean, by = "DateTime")

names(CARI.2020.storms.1)[names(CARI.2020.storms.1) == ''] <- 'x'

CARI.2020.per.storm.1 <- CARI.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- CARI.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

CARI.2020.per.storm.1$temp <- temp$temp


CARI.2020 <- CARI_storms
CARI.2020 <- CARI.2020[,-c(1,10)]
CARI.2020$DateTime <- as.POSIXct(CARI.2020$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
CARI.2020 <- left_join(CARI.2020, POKE_RainGauge_2020, by = "DateTime")
CARI.2020 <- left_join(CARI.2020, airtempmean, by = "DateTime")
CARI.2020$week <- rollapplyr(CARI.2020$inst_rainfall_mm, 10080, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2020$month <- rollapplyr(CARI.2020$inst_rainfall_mm, 40320, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2020$ThreeMonth <- rollapplyr(CARI.2020$inst_rainfall_mm, 120960, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2020$temp.week <- rollapplyr(CARI.2020$airtemp_100.1000cm_mean, 10080, mean, na.rm = TRUE, fill = NA, partial = TRUE)

CARI.2020.1 <- left_join(CARI.2020.storms.1, CARI.2020, by = "DateTime") # week month and 3 month precip totals 

CARI.2020.per.storm.2 <- CARI.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
CARI.2020.per.storm.3 <- CARI.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
CARI.2020.per.storm.4 <- CARI.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
CARI.2020.per.storm.5 <- CARI.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.cari.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "CARI" & response == "NO3")
HI.mean.precip.cari.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "CARI" & response == "fDOM")
HI.mean.precip.cari.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "CARI" & response == "SPC")
HI.mean.precip.cari.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "CARI" & response == "turb")

HI.cari.no3.2020 <- left_join(HI.mean.precip.cari.NO3, CARI.2020.per.storm.1, by = "storm.num")
HI.cari.no3.2020 <- left_join(HI.cari.no3.2020, CARI.2020.per.storm.2, by = "storm.num")
HI.cari.no3.2020 <- left_join(HI.cari.no3.2020, CARI.2020.per.storm.3, by = "storm.num")
HI.cari.no3.2020 <- left_join(HI.cari.no3.2020, CARI.2020.per.storm.4, by = "storm.num")
HI.cari.no3.2020 <- left_join(HI.cari.no3.2020, CARI.2020.per.storm.5, by = "storm.num")

cari.lm.no3 <- lm(HI.cari.no3.2020$HI ~ HI.cari.no3.2020$precip) # model one with just total precip
cari.lm.no3.2 <- lm(HI.cari.no3.2020$HI ~ HI.cari.no3.2020$precip.week) # model one with just total precip
cari.lm.no3.3 <- lm(HI.cari.no3.2020$HI ~ HI.cari.no3.2020$precip.month) # model one with just total precip
cari.lm.no3.4 <- lm(HI.cari.no3.2020$HI ~ HI.cari.no3.2020$ThreeMonth) # model one with just total precip

cari.formula <- y ~ x

sa <- HI.cari.no3.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sb <- HI.cari.no3.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sc <- HI.cari.no3.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sd <- HI.cari.no3.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


HI.cari.fDOM.2020 <- left_join(HI.mean.precip.cari.fDOM, CARI.2020.per.storm.1, by = "storm.num")
HI.cari.fDOM.2020 <- left_join(HI.cari.fDOM.2020, CARI.2020.per.storm.2, by = "storm.num")
HI.cari.fDOM.2020 <- left_join(HI.cari.fDOM.2020, CARI.2020.per.storm.3, by = "storm.num")
HI.cari.fDOM.2020 <- left_join(HI.cari.fDOM.2020, CARI.2020.per.storm.4, by = "storm.num")
HI.cari.fDOM.2020 <- left_join(HI.cari.fDOM.2020, CARI.2020.per.storm.5, by = "storm.num")

cari.lm.fDOM <- lm(HI.cari.fDOM.2020$HI ~ HI.cari.fDOM.2020$precip) # model one with just total precip
cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2020$HI ~ HI.cari.fDOM.2020$precip.week) # model one with just total precip
cari.lm.fDOM.3 <- lm(HI.cari.fDOM.2020$HI ~ HI.cari.fDOM.2020$precip.month) # model one with just total precip
cari.lm.fDOM.4 <- lm(HI.cari.fDOM.2020$HI ~ HI.cari.fDOM.2020$ThreeMonth) # model one with just total precip

se <- HI.cari.fDOM.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sf <- HI.cari.fDOM.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model

sg <- HI.cari.fDOM.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model

sh <- HI.cari.fDOM.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.cari.SPC.2020 <- left_join(HI.mean.precip.cari.SPC, CARI.2020.per.storm.1, by = "storm.num")
HI.cari.SPC.2020 <- left_join(HI.cari.SPC.2020, CARI.2020.per.storm.2, by = "storm.num")
HI.cari.SPC.2020 <- left_join(HI.cari.SPC.2020, CARI.2020.per.storm.3, by = "storm.num")
HI.cari.SPC.2020 <- left_join(HI.cari.SPC.2020, CARI.2020.per.storm.4, by = "storm.num")
HI.cari.SPC.2020 <- left_join(HI.cari.SPC.2020, CARI.2020.per.storm.5, by = "storm.num")

cari.lm.SPC <- lm(HI.cari.SPC.2020$HI ~ HI.cari.SPC.2020$precip) # model one with just total precip
cari.lm.SPC.2 <- lm(HI.cari.SPC.2020$HI ~ HI.cari.SPC.2020$precip.week) # model one with just total precip
cari.lm.SPC.3 <- lm(HI.cari.SPC.2020$HI ~ HI.cari.SPC.2020$precip.month) # model one with just total precip
cari.lm.SPC.4 <- lm(HI.cari.SPC.2020$HI ~ HI.cari.SPC.2020$ThreeMonth) # model one with just total precip

si <- HI.cari.SPC.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sj <- HI.cari.SPC.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sk <- HI.cari.SPC.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sl <- HI.cari.SPC.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.cari.turb.2020 <- left_join(HI.mean.precip.cari.turb, CARI.2020.per.storm.1, by = "storm.num")
HI.cari.turb.2020 <- left_join(HI.cari.turb.2020, CARI.2020.per.storm.2, by = "storm.num")
HI.cari.turb.2020 <- left_join(HI.cari.turb.2020, CARI.2020.per.storm.3, by = "storm.num")
HI.cari.turb.2020 <- left_join(HI.cari.turb.2020, CARI.2020.per.storm.4, by = "storm.num")
HI.cari.turb.2020 <- left_join(HI.cari.turb.2020, CARI.2020.per.storm.5, by = "storm.num")

cari.lm.turb <- lm(HI.cari.turb.2020$HI ~ HI.cari.turb.2020$precip) # model one with just total precip
cari.lm.turb.2 <- lm(HI.cari.turb.2020$HI ~ HI.cari.turb.2020$precip.week) # model one with just total precip
cari.lm.turb.3 <- lm(HI.cari.turb.2020$HI ~ HI.cari.turb.2020$precip.month) # model one with just total precip
cari.lm.turb.4 <- lm(HI.cari.turb.2020$HI ~ HI.cari.turb.2020$ThreeMonth) # model one with just total precip

sm <- HI.cari.turb.2020 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sn <- HI.cari.turb.2020 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

so <- HI.cari.turb.2020 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sp <- HI.cari.turb.2020 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

#CARI.2019.storms.1 <- na.omit(CARI.2019.storms.1)

sum.time <- CARI.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.cari.no3.2.2020 <- left_join(sum.time, HI.cari.no3.2020, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.no3.2.2020$TOTAL.TIME <- as.numeric(HI.cari.no3.2.2020$TOTAL.TIME)
HI.cari.no3.2.2020$Intensity <- HI.cari.no3.2.2020$precip/HI.cari.no3.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.no3.2 <- lm(HI.cari.no3.2.2020$HI ~ HI.cari.no3.2.2020$precip + HI.cari.no3.2.2020$Intensity) # model one with total precip and intensity 

sq <- HI.cari.no3.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.fDOM.2.2020 <- left_join(HI.cari.fDOM.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.fDOM.2.2020$TOTAL.TIME <- as.numeric(HI.cari.fDOM.2.2020$TOTAL.TIME)
HI.cari.fDOM.2.2020$Intensity <- HI.cari.fDOM.2.2020$precip/HI.cari.fDOM.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2.2020$HI ~ HI.cari.fDOM.2.2020$precip + HI.cari.fDOM.2.2020$Intensity) # model one with total precip and intensity 

sr <- HI.cari.fDOM.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.SPC.2.2020 <- left_join(HI.cari.SPC.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.SPC.2.2020$TOTAL.TIME <- as.numeric(HI.cari.SPC.2.2020$TOTAL.TIME)
HI.cari.SPC.2.2020$Intensity <- HI.cari.SPC.2.2020$precip/HI.cari.SPC.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.SPC.2 <- lm(HI.cari.SPC.2.2020$HI ~ HI.cari.SPC.2.2020$precip + HI.cari.SPC.2.2020$Intensity) # model one with total precip and intensity 

ss <- HI.cari.SPC.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.turb.2.2020 <- left_join(HI.cari.turb.2020, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.turb.2.2020$TOTAL.TIME <- as.numeric(HI.cari.turb.2.2020$TOTAL.TIME)
HI.cari.turb.2.2020$Intensity <- HI.cari.turb.2.2020$precip/HI.cari.turb.2.2020$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.turb.2 <- lm(HI.cari.turb.2.2020$HI ~ HI.cari.turb.2.2020$precip + HI.cari.turb.2.2020$Intensity) # model one with total precip and intensity 

st <- HI.cari.turb.2.2020 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
CARI.2020.1$day <- julian(CARI.2020.1$DateTime, origin = as.POSIXct('2020-01-01', tz = 'America/Anchorage')) # making a fractional day column 
CARI.2020.1$day <- as.numeric(CARI.2020.1$day)

CARI.2020.per.storm.5 <- CARI.2020.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.cari.no3.2.2020 <- left_join(HI.cari.no3.2.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.no3.5 <- lm(HI.cari.no3.2.2020$HI ~ HI.cari.no3.2.2020$doy)

su <- HI.cari.no3.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.fDOM.2.2020 <- left_join(HI.cari.fDOM.2.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.fDOM.5 <- lm(HI.cari.fDOM.2.2020$HI ~ HI.cari.fDOM.2.2020$doy)

sv <- HI.cari.fDOM.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.SPC.2.2020 <- left_join(HI.cari.SPC.2.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.SPC.5 <- lm(HI.cari.SPC.2.2020$HI ~ HI.cari.SPC.2.2020$doy)

sw <- HI.cari.SPC.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.turb.2.2020 <- left_join(HI.cari.turb.2.2020, CARI.2020.per.storm.5, by = "storm.num")
cari.lm.turb.5 <- lm(HI.cari.turb.2.2020$HI ~ HI.cari.turb.2.2020$doy)

sx <- HI.cari.turb.2.2020 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(sa,sb,sc,sd,se,sf,sg,sh,si,sj,sk,sl,sm,sn,so,sp,sq,sr,ss,st,su,sv,sw,sx,
#          ncol = 4)

HI.cari.2020 <- rbind(HI.cari.no3.2.2020, HI.cari.fDOM.2.2020, HI.cari.SPC.2.2020, HI.cari.turb.2.2020) # merging all responses together 
HI.cari.2020$burn <- "burned" # adding a burn column
HI.cari.2020$pf <- "medium" # adding a pf column

write.csv(HI.cari.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.cari.2020.csv")

HI.cari.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2020/HI.cari.2020.csv")
HI.cari.2020 <- HI.cari.2020[,-1]
HI.frch.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2020/HI.frch.2020.csv")
HI.frch.2020 <- HI.frch.2020[,-1]
HI.moos.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2020/HI.moos.2020.csv")
HI.moos.2020 <- HI.moos.2020[,-1]
HI.poke.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2020/HI.poke.2020.csv")
HI.poke.2020 <- HI.poke.2020[,-1]
HI.strt.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2020/HI.strt.2020.csv")
HI.strt.2020 <- HI.strt.2020[,-1]


HI.2020 <- rbind(HI.moos.2020, HI.frch.2020, HI.poke.2020, HI.vaul.2020, HI.strt.2020, HI.cari.2020) # bind all 2020 together
write.csv(HI.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2020.csv")

# add time since peak  Q in chena #
HI.2020 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2020.csv")
HI.2020$date <- as.Date(HI.2020$doy, origin = "2020-01-01")
origin_date <- as.Date("2020-05-13")
HI.2020$TimeSinceChena <- julian(HI.2020$date, origin_date)

write.csv(HI.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2020.csv")


####################################### 2021 ############################################################

# import rain gauge data #
POKE_RainGauge_2021 <- read_csv("~/Documents/DoD_2021/RainGauge/POKE.RainGauge.2021.csv")
VAUL_RainGauge_2021 <- read_csv("~/Documents/DoD_2021/RainGauge/VAUL.RainGauge.2021.csv")
STRT_RainGauge_2021 <- read_csv("~/Documents/DoD_2021/RainGauge/STRT.RainGauge.2021.csv")
airtempmean <- read_csv("Ancilliary_data/airtempmean.csv")
names(airtempmean)[2] <- "DateTime"

# convert to AK time 
attributes(POKE_RainGauge_2021$DateTime)$tzone <- 'America/Anchorage'
attributes(VAUL_RainGauge_2021$DateTime)$tzone <- 'America/Anchorage'
attributes(STRT_RainGauge_2021$DateTime)$tzone <- 'America/Anchorage'
attributes(airtempmean$DateTime)$tzone <- 'America/Anchorage'

# round to nearest 15 min 
POKE_RainGauge_2021$DateTime <- lubridate::floor_date(POKE_RainGauge_2021$DateTime, "15 minutes")
VAUL_RainGauge_2021$DateTime <- lubridate::floor_date(VAUL_RainGauge_2021$DateTime, "15 minutes")
STRT_RainGauge_2021$DateTime <- lubridate::floor_date(STRT_RainGauge_2021$DateTime, "15 minutes")

# MOOS #### 
MOOSstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/", 
                                  recursive=F, 
                                  pattern="MOOS", 
                                  full.names=TRUE)

MOOS_storms<-do.call("rbind", lapply(MOOSstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

MOOS_storms$storm.num = c(rep("storm1", 575),
                          rep("storm2", 755),
                          rep("storm3a", 347),
                          rep("storm3b", 1079),
                          rep("storm4a", 503),
                          rep("storm4b", 743),
                          rep("storm5a", 371),
                          rep("storm5b", 575),
                          rep("storm6", 383),
                          rep("storm7", 779))
                          

MOOS_storms$DateTime <- as.POSIXct(MOOS_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
MOOS.2021.storms.1<- left_join(MOOS_storms, STRT_RainGauge_2021, by = "DateTime")
MOOS.2021.storms.1<- left_join(MOOS.2021.storms.1, airtempmean, by = "DateTime")

names(MOOS.2021.storms.1)[names(MOOS.2021.storms.1) == ''] <- 'x'

MOOS.2021.per.storm.1 <- MOOS.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- MOOS.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

MOOS.2021.per.storm.1$temp <- temp$temp

MOOS.2021 <- read.csv("~/Documents/Storms/Q_Chem/MOOS/MOOS_chem_2021.csv")
MOOS.2021$DateTime <- as.POSIXct(MOOS.2021$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
MOOS.2021 <- left_join(MOOS.2021, STRT_RainGauge_2021, by = "DateTime")
MOOS.2021 <- left_join(MOOS.2021, airtempmean, by = "DateTime")
MOOS.2021$week <- rollapplyr(MOOS.2021$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2021$month <- rollapplyr(MOOS.2021$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2021$ThreeMonth <- rollapplyr(MOOS.2021$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2021$temp.week <- rollapplyr(MOOS.2021$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

MOOS.2021.1 <- left_join(MOOS.2021.storms.1, MOOS.2021, by = "DateTime") # week month and 3 month precip totals 

MOOS.2021.per.storm.2 <- MOOS.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
MOOS.2021.per.storm.3 <- MOOS.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
MOOS.2021.per.storm.4 <- MOOS.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
MOOS.2021.per.storm.5 <- MOOS.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.moos.NO3 <- subset(HI.mean.precip.response, year == "2021" & site.ID == "MOOS" & response == "NO3")
HI.mean.precip.moos.fDOM <- subset(HI.mean.precip.response, year == "2021" & site.ID == "MOOS" & response == "fDOM")
HI.mean.precip.moos.SPC <- subset(HI.mean.precip.response, year == "2021" & site.ID == "MOOS" & response == "SPC")
HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2021" & site.ID == "MOOS" & response == "turb")

HI.moos.no3.2021 <- left_join(HI.mean.precip.moos.NO3, MOOS.2021.per.storm.1, by = "storm.num")
HI.moos.no3.2021 <- left_join(HI.moos.no3.2021, MOOS.2021.per.storm.2, by = "storm.num")
HI.moos.no3.2021 <- left_join(HI.moos.no3.2021, MOOS.2021.per.storm.3, by = "storm.num")
HI.moos.no3.2021 <- left_join(HI.moos.no3.2021, MOOS.2021.per.storm.4, by = "storm.num")
HI.moos.no3.2021 <- left_join(HI.moos.no3.2021, MOOS.2021.per.storm.5, by = "storm.num")

moos.lm.no3 <- lm(HI.moos.no3.2021$HI ~ HI.moos.no3.2021$precip) # model one with just total precip
moos.lm.no3 <- lm(HI.moos.no3.2021$HI ~ HI.moos.no3.2021$precip.week) # model one with just total precip
moos.lm.no3 <- lm(HI.moos.no3.2021$HI ~ HI.moos.no3.2021$precip.month) # model one with just total precip
moos.lm.no3 <- lm(HI.moos.no3.2021$HI ~ HI.moos.no3.2021$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

aaa <- HI.moos.no3.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bbb <- HI.moos.no3.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ccc <- HI.moos.no3.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ddd <- HI.moos.no3.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.fDOM.2021 <- left_join(HI.mean.precip.moos.fDOM, MOOS.2021.per.storm.1, by = "storm.num")
HI.moos.fDOM.2021 <- left_join(HI.moos.fDOM.2021, MOOS.2021.per.storm.2, by = "storm.num")
HI.moos.fDOM.2021 <- left_join(HI.moos.fDOM.2021, MOOS.2021.per.storm.3, by = "storm.num")
HI.moos.fDOM.2021 <- left_join(HI.moos.fDOM.2021, MOOS.2021.per.storm.4, by = "storm.num")
HI.moos.fDOM.2021 <- left_join(HI.moos.fDOM.2021, MOOS.2021.per.storm.5, by = "storm.num")

moos.lm.fDOM <- lm(HI.moos.fDOM.2021$HI ~ HI.moos.fDOM.2021$precip) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2021$HI ~ HI.moos.fDOM.2021$precip.week) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2021$HI ~ HI.moos.fDOM.2021$precip.month) # model one with just total precip
moos.lm.fDOM <- lm(HI.moos.fDOM.2021$HI ~ HI.moos.fDOM.2021$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

eee <- HI.moos.fDOM.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

fff <- HI.moos.fDOM.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ggg <- HI.moos.fDOM.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

hhh <- HI.moos.fDOM.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.SPC.2021 <- left_join(HI.mean.precip.moos.SPC, MOOS.2021.per.storm.1, by = "storm.num")
HI.moos.SPC.2021 <- left_join(HI.moos.SPC.2021, MOOS.2021.per.storm.2, by = "storm.num")
HI.moos.SPC.2021 <- left_join(HI.moos.SPC.2021, MOOS.2021.per.storm.3, by = "storm.num")
HI.moos.SPC.2021 <- left_join(HI.moos.SPC.2021, MOOS.2021.per.storm.4, by = "storm.num")
HI.moos.SPC.2021 <- left_join(HI.moos.SPC.2021, MOOS.2021.per.storm.5, by = "storm.num")

moos.lm.SPC <- lm(HI.moos.SPC.2021$HI ~ HI.moos.SPC.2021$precip) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2021$HI ~ HI.moos.SPC.2021$precip.week) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2021$HI ~ HI.moos.SPC.2021$precip.month) # model one with just total precip
moos.lm.SPC <- lm(HI.moos.SPC.2021$HI ~ HI.moos.SPC.2021$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

iii <- HI.moos.SPC.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

jjj <- HI.moos.SPC.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

kkk <- HI.moos.SPC.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

lll <- HI.moos.SPC.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.turb.2021 <- left_join(HI.mean.precip.moos.turb, MOOS.2021.per.storm.1, by = "storm.num")
HI.moos.turb.2021 <- left_join(HI.moos.turb.2021, MOOS.2021.per.storm.2, by = "storm.num")
HI.moos.turb.2021 <- left_join(HI.moos.turb.2021, MOOS.2021.per.storm.3, by = "storm.num")
HI.moos.turb.2021 <- left_join(HI.moos.turb.2021, MOOS.2021.per.storm.4, by = "storm.num")
HI.moos.turb.2021 <- left_join(HI.moos.turb.2021, MOOS.2021.per.storm.5, by = "storm.num")

moos.lm.turb <- lm(HI.moos.turb.2021$HI ~ HI.moos.turb.2021$precip) # model one with just total precip
moos.lm.turb.1 <- lm(HI.moos.turb.2021$HI ~ HI.moos.turb.2021$precip.week) # model one with just total precip
moos.lm.turb.2 <- lm(HI.moos.turb.2021$HI ~ HI.moos.turb.2021$precip.month) # model one with just total precip
moos.lm.turb.3 <- lm(HI.moos.turb.2021$HI ~ HI.moos.turb.2021$ThreeMonth) # model one with just total precip

moos.formula <- y ~ x

mmm <- HI.moos.turb.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

nnn <- HI.moos.turb.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ooo <- HI.moos.turb.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ppp <- HI.moos.turb.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sum.time <- MOOS.2021.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.moos.no3.2.2021 <- left_join(HI.moos.no3.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.no3.2.2021$TOTAL.TIME <- as.numeric(HI.moos.no3.2.2021$TOTAL.TIME)
HI.moos.no3.2.2021$Intensity <- HI.moos.no3.2.2021$precip/HI.moos.no3.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.no3.2 <- lm(HI.moos.no3.2.2021$HI ~ HI.moos.no3.2.2021$precip + HI.moos.no3.2.2021$Intensity) # model one with total precip and intensity 

qqq <- HI.moos.no3.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2.2021 <- left_join(HI.moos.fDOM.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.fDOM.2.2021$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2.2021$TOTAL.TIME)
HI.moos.fDOM.2.2021$Intensity <- HI.moos.fDOM.2.2021$precip/HI.moos.fDOM.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2.2021$HI ~ HI.moos.fDOM.2.2021$precip + HI.moos.fDOM.2.2021$Intensity) # model one with total precip and intensity 

rrr <- HI.moos.fDOM.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2.2021 <- left_join(HI.moos.SPC.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.SPC.2.2021$TOTAL.TIME <- as.numeric(HI.moos.SPC.2.2021$TOTAL.TIME)
HI.moos.SPC.2.2021$Intensity <- HI.moos.SPC.2.2021$precip/HI.moos.SPC.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.SPC.2 <- lm(HI.moos.SPC.2.2021$HI ~ HI.moos.SPC.2.2021$precip + HI.moos.SPC.2.2021$Intensity) # model one with total precip and intensity 

sss <- HI.moos.SPC.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2.2021 <- left_join(HI.moos.turb.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.turb.2.2021$TOTAL.TIME <- as.numeric(HI.moos.turb.2.2021$TOTAL.TIME)
HI.moos.turb.2.2021$Intensity <- HI.moos.turb.2.2021$precip/HI.moos.turb.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.turb.2 <- lm(HI.moos.turb.2.2021$HI ~ HI.moos.turb.2.2021$precip + HI.moos.turb.2.2021$Intensity) # model one with total precip and intensity 

ttt <- HI.moos.turb.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
MOOS.2021.1$day <- julian(MOOS.2021.1$DateTime, origin = "2021-01-01", tz = 'America/Anchorage')
MOOS.2021.1$day <- as.numeric(MOOS.2021.1$day)
MOOS.2021.per.storm.5 <- MOOS.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.moos.no3.2.2021 <- left_join(HI.moos.no3.2.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.no3.5 <- lm(HI.moos.no3.2.2021$HI ~ HI.moos.no3.2.2021$doy)

uuu <- HI.moos.no3.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2.2021 <- left_join(HI.moos.fDOM.2.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.fDOM.5 <- lm(HI.moos.fDOM.2.2021$HI ~ HI.moos.fDOM.2.2021$doy)

utb <- HI.moos.fDOM.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2.2021 <- left_join(HI.moos.SPC.2.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.SPC.5 <- lm(HI.moos.SPC.2.2021$HI ~ HI.moos.SPC.2.2021$doy)

vvv <- HI.moos.SPC.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2.2021 <- left_join(HI.moos.turb.2.2021, MOOS.2021.per.storm.5, by = "storm.num")
moos.lm.turb.5 <- lm(HI.moos.turb.2.2021$HI ~ HI.moos.turb.2.2021$doy)

www <- HI.moos.turb.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(aaa,bbb,ccc,ddd,eee,fff,ggg,hhh,iii,jjj,kkk,lll,mmm,nnn,ooo,ppp,qqq,rrr,sss,ttt,uuu,utb,vvv,www,
#          ncol = 4)


HI.moos.2021 <- rbind(HI.moos.no3.2.2021, HI.moos.fDOM.2.2021, HI.moos.SPC.2.2021, HI.moos.turb.2.2021) # merging all responses together 
HI.moos.2021$burn <- "unburned" # adding a burn column
HI.moos.2021$pf <- "medium" # adding a pf column

write.csv(HI.moos.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.moos.2021.csv")

# FRCH ####
FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/", 
                                  recursive=F, 
                                  pattern="FRCH", 
                                  full.names=TRUE)

FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

FRCH_storms$storm.num = c(rep("storm1", 892),
                          rep("storm2", 1228),
                          rep("storm3", 940),
                          rep("storm4", 988),
                          rep("storm5a", 868),
                          rep("storm5b", 1096),
                          rep("storm6a", 652),
                          rep("storm6b", 1252),
                          rep("storm7", 736),
                          rep("storm8", 1720))

FRCH_storms$DateTime <- as.POSIXct(FRCH_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
FRCH.2021.storms.1<- left_join(FRCH_storms, STRT_RainGauge_2021, by = "DateTime")
FRCH.2021.storms.1<- left_join(FRCH.2021.storms.1, airtempmean, by = "DateTime")

names(FRCH.2021.storms.1)[names(FRCH.2021.storms.1) == ''] <- 'x'

FRCH.2021.per.storm.1 <- FRCH.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- FRCH.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

FRCH.2021.per.storm.1$temp <- temp$temp

FRCH.2021 <- read_csv("~/Documents/Storms/Q_Chem/FRCH/FRCH_chem_2021.csv", 
                           col_types = cols(MeanDischarge = col_double()))
attributes(FRCH.2021$DateTime)$tzone <- 'America/Anchorage'
FRCH.2021 <- left_join(FRCH.2021, STRT_RainGauge_2021, by = "DateTime")
FRCH.2021 <- left_join(FRCH.2021, airtempmean, by = "DateTime")
FRCH.2021$week <- rollapplyr(FRCH.2021$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2021$month <- rollapplyr(FRCH.2021$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2021$ThreeMonth <- rollapplyr(FRCH.2021$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
FRCH.2021$temp.week <- rollapplyr(FRCH.2021$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

FRCH.2021.1 <- left_join(FRCH.2021.storms.1, FRCH.2021, by = "DateTime") # week month and 3 month precip totals 

FRCH.2021.per.storm.2 <- FRCH.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
FRCH.2021.per.storm.3 <- FRCH.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
FRCH.2021.per.storm.4 <- FRCH.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
FRCH.2021.per.storm.5 <- FRCH.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2021" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2021" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2021" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2021" & site.ID == "FRCH" & response == "turb")

HI.frch.no3.2021 <- left_join(HI.mean.precip.frch.NO3, FRCH.2021.per.storm.1, by = "storm.num")
HI.frch.no3.2021 <- left_join(HI.frch.no3.2021, FRCH.2021.per.storm.2, by = "storm.num")
HI.frch.no3.2021 <- left_join(HI.frch.no3.2021, FRCH.2021.per.storm.3, by = "storm.num")
HI.frch.no3.2021 <- left_join(HI.frch.no3.2021, FRCH.2021.per.storm.4, by = "storm.num")
HI.frch.no3.2021 <- left_join(HI.frch.no3.2021, FRCH.2021.per.storm.5, by = "storm.num")

frch.lm.no3 <- lm(HI.frch.no3.2021$HI ~ HI.frch.no3.2021$precip) # model one with just total precip
frch.lm.no3.2 <- lm(HI.frch.no3.2021$HI ~ HI.frch.no3.2021$precip.week) # model one with just total precip
frch.lm.no3.3 <- lm(HI.frch.no3.2021$HI ~ HI.frch.no3.2021$precip.month) # model one with just total precip
frch.lm.no3.4 <- lm(HI.frch.no3.2021$HI ~ HI.frch.no3.2021$ThreeMonth) # model one with just total precip

frch.formula <- y ~ x

baa <- HI.frch.no3.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bab <- HI.frch.no3.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bcc <- HI.frch.no3.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bdd <- HI.frch.no3.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.fDOM.2021 <- left_join(HI.mean.precip.frch.fDOM, FRCH.2021.per.storm.1, by = "storm.num")
HI.frch.fDOM.2021 <- left_join(HI.frch.fDOM.2021, FRCH.2021.per.storm.2, by = "storm.num")
HI.frch.fDOM.2021 <- left_join(HI.frch.fDOM.2021, FRCH.2021.per.storm.3, by = "storm.num")
HI.frch.fDOM.2021 <- left_join(HI.frch.fDOM.2021, FRCH.2021.per.storm.4, by = "storm.num")
HI.frch.fDOM.2021 <- left_join(HI.frch.fDOM.2021, FRCH.2021.per.storm.5, by = "storm.num")

frch.lm.fDOM <- lm(HI.frch.fDOM.2021$HI ~ HI.frch.fDOM.2021$precip) # model one with just total precip
frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2021$HI ~ HI.frch.fDOM.2021$precip.week) # model one with just total precip
frch.lm.fDOM.3 <- lm(HI.frch.fDOM.2021$HI ~ HI.frch.fDOM.2021$precip.month) # model one with just total precip
frch.lm.fDOM.4 <- lm(HI.frch.fDOM.2021$HI ~ HI.frch.fDOM.2021$ThreeMonth) # model one with just total precip

frch.formula <- y ~ x

bee <- HI.frch.fDOM.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bff <- HI.frch.fDOM.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bgg <- HI.frch.fDOM.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bhh <- HI.frch.fDOM.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.SPC.2021 <- left_join(HI.mean.precip.frch.SPC, FRCH.2021.per.storm.1, by = "storm.num")
HI.frch.SPC.2021 <- left_join(HI.frch.SPC.2021, FRCH.2021.per.storm.2, by = "storm.num")
HI.frch.SPC.2021 <- left_join(HI.frch.SPC.2021, FRCH.2021.per.storm.3, by = "storm.num")
HI.frch.SPC.2021 <- left_join(HI.frch.SPC.2021, FRCH.2021.per.storm.4, by = "storm.num")
HI.frch.SPC.2021 <- left_join(HI.frch.SPC.2021, FRCH.2021.per.storm.5, by = "storm.num")

frch.lm.SPC <- lm(HI.frch.SPC.2021$HI ~ HI.frch.SPC.2021$precip) # model one with just total precip
frch.lm.SPC.2 <- lm(HI.frch.SPC.2021$HI ~ HI.frch.SPC.2021$precip.week) # model one with just total precip
frch.lm.SPC.3 <- lm(HI.frch.SPC.2021$HI ~ HI.frch.SPC.2021$precip.month) # model one with just total precip
frch.lm.SPC.4 <- lm(HI.frch.SPC.2021$HI ~ HI.frch.SPC.2021$ThreeMonth) # model one with just total precip


bii <- HI.frch.SPC.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bjj <- HI.frch.SPC.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

bkk <- HI.frch.SPC.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bll <- HI.frch.SPC.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model


HI.frch.turb.2021 <- left_join(HI.mean.precip.frch.turb, FRCH.2021.per.storm.1, by = "storm.num")
HI.frch.turb.2021 <- left_join(HI.frch.turb.2021, FRCH.2021.per.storm.2, by = "storm.num")
HI.frch.turb.2021 <- left_join(HI.frch.turb.2021, FRCH.2021.per.storm.3, by = "storm.num")
HI.frch.turb.2021 <- left_join(HI.frch.turb.2021, FRCH.2021.per.storm.4, by = "storm.num")
HI.frch.turb.2021 <- left_join(HI.frch.turb.2021, FRCH.2021.per.storm.5, by = "storm.num")

frch.lm.turb <- lm(HI.frch.turb.2021$HI ~ HI.frch.turb.2021$precip) # model one with just total precip
frch.lm.turb.2 <- lm(HI.frch.turb.2021$HI ~ HI.frch.turb.2021$precip.week) # model one with just total precip
frch.lm.turb.3 <- lm(HI.frch.turb.2021$HI ~ HI.frch.turb.2021$precip.month) # model one with just total precip
frch.lm.turb.4 <- lm(HI.frch.turb.2021$HI ~ HI.frch.turb.2021$ThreeMonth) # model one with just total precip

bmm <- HI.frch.turb.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

bnn <- HI.frch.turb.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

boo <- HI.frch.turb.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

bpp <- HI.frch.turb.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

FRCH.2021.storms.1 <- na.omit(FRCH.2021.storms.1)

sum.time <- FRCH.2021.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.frch.no3.2.2021 <- left_join(HI.frch.no3.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.no3.2.2021$TOTAL.TIME <- as.numeric(HI.frch.no3.2.2021$TOTAL.TIME)
HI.frch.no3.2.2021$Intensity <- HI.frch.no3.2.2021$precip/HI.frch.no3.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.no3.2 <- lm(HI.frch.no3.2.2021$HI ~ HI.frch.no3.2.2021$precip + HI.frch.no3.2.2021$Intensity) # model one with total precip and intensity 

bqq <- HI.frch.no3.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2.2021 <- left_join(HI.frch.fDOM.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.fDOM.2.2021$TOTAL.TIME <- as.numeric(HI.frch.fDOM.2.2021$TOTAL.TIME)
HI.frch.fDOM.2.2021$Intensity <- HI.frch.fDOM.2.2021$precip/HI.frch.fDOM.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2.2021$HI ~ HI.frch.fDOM.2.2021$precip + HI.frch.fDOM.2.2021$Intensity) # model one with total precip and intensity 

brr <- HI.frch.fDOM.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2.2021 <- left_join(HI.frch.SPC.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.SPC.2.2021$TOTAL.TIME <- as.numeric(HI.frch.SPC.2.2021$TOTAL.TIME)
HI.frch.SPC.2.2021$Intensity <- HI.frch.SPC.2.2021$precip/HI.frch.SPC.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.SPC.2 <- lm(HI.frch.SPC.2.2021$HI ~ HI.frch.SPC.2.2021$precip + HI.frch.SPC.2.2021$Intensity) # model one with total precip and intensity 

bss <- HI.frch.SPC.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2.2021 <- left_join(HI.frch.turb.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.turb.2.2021$TOTAL.TIME <- as.numeric(HI.frch.turb.2.2021$TOTAL.TIME)
HI.frch.turb.2.2021$Intensity <- HI.frch.turb.2.2021$precip/HI.frch.turb.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.turb.2 <- lm(HI.frch.turb.2.2021$HI ~ HI.frch.turb.2.2021$precip + HI.frch.turb.2.2021$Intensity) # model one with total precip and intensity 

btt <- HI.frch.turb.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
FRCH.2021.1$day <- julian(FRCH.2021.1$DateTime, origin = "2021-01-01", tz = 'America/Anchorage')
FRCH.2021.1$day <- as.numeric(FRCH.2021.1$day)
FRCH.2021.per.storm.5 <- FRCH.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.frch.no3.2.2021 <- left_join(HI.frch.no3.2.2021, FRCH.2021.per.storm.5, by = "storm.num")
frch.lm.no3.5 <- lm(HI.frch.no3.2.2021$HI ~ HI.frch.no3.2.2021$doy)

buu <- HI.frch.no3.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2.2021 <- left_join(HI.frch.fDOM.2.2021, FRCH.2021.per.storm.5, by = "storm.num")
frch.lm.fDOM.5 <- lm(HI.frch.fDOM.2.2021$HI ~ HI.frch.fDOM.2.2021$doy)

btb <- HI.frch.fDOM.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2.2021 <- left_join(HI.frch.SPC.2.2021, FRCH.2021.per.storm.5, by = "storm.num")
frch.lm.SPC.5 <- lm(HI.frch.SPC.2.2021$HI ~ HI.frch.SPC.2.2021$doy)

bvv <- HI.frch.SPC.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2.2021 <- left_join(HI.frch.turb.2.2021, FRCH.2021.per.storm.5, by = "storm.num")
frch.lm.turb.5 <- lm(HI.frch.turb.2.2021$HI ~ HI.frch.turb.2.2021$doy)

bww <- HI.frch.turb.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(baa,bab,bcc,bdd,bee,bff,bgg,bhh,bii,bjj,bkk,bll,bmm,bnn,boo,bpp,bqq,brr,bss,bt,buu,btb,bvv,bww,
#          ncol = 4)

HI.frch.2021 <- rbind(HI.frch.no3.2.2021, HI.frch.fDOM.2.2021, HI.frch.SPC.2.2021, HI.frch.turb.2.2021) # merging all responses together 
HI.frch.2021$burn <- "unburned" # adding a burn column
HI.frch.2021$pf <- "medium" # adding a pf column

write.csv(HI.frch.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.frch.2021.csv")

# POKE #### 
POKEstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/", 
                                  recursive=F, 
                                  pattern="POKE", 
                                  full.names=TRUE)

POKE_storms<-do.call("rbind", lapply(POKEstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

POKE_storms$storm.num = c(rep("storm1", 235),
                          rep("storm2", 191),
                          rep("storm3", 167),
                          rep("storm4", 575),
                          rep("storm5", 1106),
                          rep("storm6", 479),
                          rep("storm7a", 1355),
                          rep("storm7b", 791),
                          rep("storm7c", 299),
                          rep("storm7d", 443))
                          

POKE_storms$DateTime <- as.POSIXct(POKE_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
POKE.2021.storms.1<- left_join(POKE_storms, POKE_RainGauge_2021, by = "DateTime")
POKE.2021.storms.1<- left_join(POKE.2021.storms.1, airtempmean, by = "DateTime")

names(POKE.2021.storms.1)[names(POKE.2021.storms.1) == ''] <- 'x'

POKE.2021.per.storm.1 <- POKE.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- POKE.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

POKE.2021.per.storm.1$temp <- temp$temp

POKE.2021 <- read_csv("~/Documents/Storms/Q_Chem/POKE/POKE_chem_2021.csv")
attributes(POKE.2021$DateTime)$tzone <- 'America/Anchorage'
POKE.2021 <- left_join(POKE.2021, POKE_RainGauge_2021, by = "DateTime")
POKE.2021 <- left_join(POKE.2021, airtempmean, by = "DateTime")
POKE.2021$week <- rollapplyr(POKE.2021$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2021$month <- rollapplyr(POKE.2021$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2021$ThreeMonth <- rollapplyr(POKE.2021$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
POKE.2021$temp.week <- rollapplyr(POKE.2021$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

POKE.2021.1 <- left_join(POKE.2021.storms.1, POKE.2021, by = "DateTime") # week month and 3 month precip totals 

POKE.2021.per.storm.2 <- POKE.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
POKE.2021.per.storm.3 <- POKE.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
POKE.2021.per.storm.4 <- POKE.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
POKE.2021.per.storm.5 <- POKE.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.poke.NO3 <- subset(HI.mean.precip.response, year == "2021" & site.ID == "POKE" & response == "NO3")
HI.mean.precip.poke.fDOM <- subset(HI.mean.precip.response, year == "2021" & site.ID == "POKE" & response == "fDOM")
HI.mean.precip.poke.SPC <- subset(HI.mean.precip.response, year == "2021" & site.ID == "POKE" & response == "SPC")
HI.mean.precip.poke.turb <- subset(HI.mean.precip.response, year == "2021" & site.ID == "POKE" & response == "turb")

HI.poke.no3.2021 <- left_join(HI.mean.precip.poke.NO3, POKE.2021.per.storm.1, by = "storm.num")
HI.poke.no3.2021 <- left_join(HI.poke.no3.2021, POKE.2021.per.storm.2, by = "storm.num")
HI.poke.no3.2021 <- left_join(HI.poke.no3.2021, POKE.2021.per.storm.3, by = "storm.num")
HI.poke.no3.2021 <- left_join(HI.poke.no3.2021, POKE.2021.per.storm.4, by = "storm.num")
HI.poke.no3.2021 <- left_join(HI.poke.no3.2021, POKE.2021.per.storm.5, by = "storm.num")

poke.lm.no3 <- lm(HI.poke.no3.2021$HI ~ HI.poke.no3.2021$precip) # model one with just total precip
poke.lm.no3.2 <- lm(HI.poke.no3.2021$HI ~ HI.poke.no3.2021$precip.week) # model one with just total precip
poke.lm.no3.3 <- lm(HI.poke.no3.2021$HI ~ HI.poke.no3.2021$precip.month) # model one with just total precip
poke.lm.no3.4 <- lm(HI.poke.no3.2021$HI ~ HI.poke.no3.2021$ThreeMonth) # model one with just total precip

poke.formula <- y ~ x

ppa <- HI.poke.no3.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ppb <- HI.poke.no3.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ppc <- HI.poke.no3.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ppd <- HI.poke.no3.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.fDOM.2021 <- left_join(HI.mean.precip.poke.fDOM, POKE.2021.per.storm.1, by = "storm.num")
HI.poke.fDOM.2021 <- left_join(HI.poke.fDOM.2021, POKE.2021.per.storm.2, by = "storm.num")
HI.poke.fDOM.2021 <- left_join(HI.poke.fDOM.2021, POKE.2021.per.storm.3, by = "storm.num")
HI.poke.fDOM.2021 <- left_join(HI.poke.fDOM.2021, POKE.2021.per.storm.4, by = "storm.num")
HI.poke.fDOM.2021 <- left_join(HI.poke.fDOM.2021, POKE.2021.per.storm.5, by = "storm.num")

poke.lm.fDOM <- lm(HI.poke.fDOM.2021$HI ~ HI.poke.fDOM.2021$precip) # model one with just total precip
poke.lm.fDOM.2 <- lm(HI.poke.fDOM.2021$HI ~ HI.poke.fDOM.2021$precip.week) # model one with just total precip
poke.lm.fDOM.3 <- lm(HI.poke.fDOM.2021$HI ~ HI.poke.fDOM.2021$precip.month) # model one with just total precip
poke.lm.fDOM.4 <- lm(HI.poke.fDOM.2021$HI ~ HI.poke.fDOM.2021$ThreeMonth) # model one with just total precip

ppe <- HI.poke.fDOM.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ppf <- HI.poke.fDOM.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ppg <- HI.poke.fDOM.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

pph <- HI.poke.fDOM.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Three-week Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.SPC.2021 <- left_join(HI.mean.precip.poke.SPC, POKE.2021.per.storm.1, by = "storm.num")
HI.poke.SPC.2021 <- left_join(HI.poke.SPC.2021, POKE.2021.per.storm.2, by = "storm.num")
HI.poke.SPC.2021 <- left_join(HI.poke.SPC.2021, POKE.2021.per.storm.3, by = "storm.num")
HI.poke.SPC.2021 <- left_join(HI.poke.SPC.2021, POKE.2021.per.storm.4, by = "storm.num")
HI.poke.SPC.2021 <- left_join(HI.poke.SPC.2021, POKE.2021.per.storm.5, by = "storm.num")

poke.lm.SPC <- lm(HI.poke.SPC.2021$HI ~ HI.poke.SPC.2021$precip) # model one with just total precip
poke.lm.SPC.2 <- lm(HI.poke.SPC.2021$HI ~ HI.poke.SPC.2021$precip.week) # model one with just total precip
poke.lm.SPC.3 <- lm(HI.poke.SPC.2021$HI ~ HI.poke.SPC.2021$precip.month) # model one with just total precip
poke.lm.SPC.4 <- lm(HI.poke.SPC.2021$HI ~ HI.poke.SPC.2021$ThreeMonth) # model one with just total precip

ppi <- HI.poke.SPC.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ppj <- HI.poke.SPC.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ppk <- HI.poke.SPC.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ppl <- HI.poke.SPC.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.turb.2021 <- left_join(HI.mean.precip.poke.turb, POKE.2021.per.storm.1, by = "storm.num")
HI.poke.turb.2021 <- left_join(HI.poke.turb.2021, POKE.2021.per.storm.2, by = "storm.num")
HI.poke.turb.2021 <- left_join(HI.poke.turb.2021, POKE.2021.per.storm.3, by = "storm.num")
HI.poke.turb.2021 <- left_join(HI.poke.turb.2021, POKE.2021.per.storm.4, by = "storm.num")
HI.poke.turb.2021 <- left_join(HI.poke.turb.2021, POKE.2021.per.storm.5, by = "storm.num")

poke.lm.turb <- lm(HI.poke.turb.2021$HI ~ HI.poke.turb.2021$precip) # model one with just total precip
poke.lm.turb.2 <- lm(HI.poke.turb.2021$HI ~ HI.poke.turb.2021$precip.week) # model one with just total precip
poke.lm.turb.3 <- lm(HI.poke.turb.2021$HI ~ HI.poke.turb.2021$precip.month) # model one with just total precip
poke.lm.turb.4 <- lm(HI.poke.turb.2021$HI ~ HI.poke.turb.2021$ThreeMonth) # model one with just total precip

ppm <- HI.poke.turb.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ppn <- HI.poke.turb.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ppo <- HI.poke.turb.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ppp <- HI.poke.turb.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

POKE.2021.storms.1 <- na.omit(POKE.2021.storms.1)

sum.time <- POKE.2021.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.poke.no3.2.2021 <- left_join(HI.poke.no3.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.no3.2.2021$TOTAL.TIME <- as.numeric(HI.poke.no3.2.2021$TOTAL.TIME)
HI.poke.no3.2.2021$Intensity <- HI.poke.no3.2.2021$precip/HI.poke.no3.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.no3.2 <- lm(HI.poke.no3.2.2020$HI ~ HI.poke.no3.2.2020$precip + HI.poke.no3.2.2020$Intensity) # model one with total precip and intensity 

ppq <- HI.poke.no3.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.fDOM.2.2021 <- left_join(HI.poke.fDOM.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.fDOM.2.2021$TOTAL.TIME <- as.numeric(HI.poke.fDOM.2.2021$TOTAL.TIME)
HI.poke.fDOM.2.2021$Intensity <- HI.poke.fDOM.2.2021$precip/HI.poke.fDOM.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.fDOM.2 <- lm(HI.poke.fDOM.2.2021$HI ~ HI.poke.fDOM.2.2021$precip + HI.poke.fDOM.2.2021$Intensity) # model one with total precip and intensity 

ppr <- HI.poke.fDOM.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.SPC.2.2021 <- left_join(HI.poke.SPC.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.SPC.2.2021$TOTAL.TIME <- as.numeric(HI.poke.SPC.2.2021$TOTAL.TIME)
HI.poke.SPC.2.2021$Intensity <- HI.poke.SPC.2.2021$precip/HI.poke.SPC.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.SPC.2 <- lm(HI.poke.SPC.2.2021$HI ~ HI.poke.SPC.2.2021$precip + HI.poke.SPC.2.2021$Intensity) # model one with total precip and intensity 

pps <- HI.poke.SPC.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.turb.2.2021 <- left_join(HI.poke.turb.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.turb.2.2021$TOTAL.TIME <- as.numeric(HI.poke.turb.2.2021$TOTAL.TIME)
HI.poke.turb.2.2021$Intensity <- HI.poke.turb.2.2021$precip/HI.poke.turb.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.turb.2 <- lm(HI.poke.turb.2.2021$HI ~ HI.poke.turb.2.2021$precip + HI.poke.turb.2.2021$Intensity) # model one with total precip and intensity 

ppt <- HI.poke.turb.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
POKE.2021.1$day <- julian(POKE.2021.1$DateTime, origin = "2021-01-01", tz = 'America/Anchorage')
POKE.2021.1$day <- as.numeric(POKE.2021.1$day)
POKE.2021.per.storm.5 <- POKE.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.poke.no3.2.2021 <- left_join(HI.poke.no3.2.2021, POKE.2021.per.storm.5, by = "storm.num")
poke.lm.no3.5 <- lm(HI.poke.no3.2.2021$HI ~ HI.poke.no3.2.2021$doy)

ppu <- HI.poke.no3.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.fDOM.2.2021 <- left_join(HI.poke.fDOM.2.2021, POKE.2021.per.storm.5, by = "storm.num")
poke.lm.fDOM.5 <- lm(HI.poke.fDOM.2.2021$HI ~ HI.poke.fDOM.2.2021$doy)

ppv <- HI.poke.fDOM.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.SPC.2.2021 <- left_join(HI.poke.SPC.2.2021, POKE.2021.per.storm.5, by = "storm.num")
poke.lm.SPC.5 <- lm(HI.poke.SPC.2.2021$HI ~ HI.poke.SPC.2.2021$doy)

ppw <- HI.poke.SPC.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.turb.2.2021 <- left_join(HI.poke.turb.2.2021, POKE.2021.per.storm.5, by = "storm.num")
poke.lm.turb.5 <- lm(HI.poke.turb.2.2021$HI ~ HI.poke.turb.2.2021$doy)

ppx <- HI.poke.turb.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(ppa,ppb,ppc,ppd,ppe,ppf,ppg,pph,ppq,ppr,ppu,ppv,
#        ncol = 4)

HI.poke.2021 <- rbind(HI.poke.no3.2.2021, HI.poke.fDOM.2.2021, HI.poke.SPC.2.2021, HI.poke.turb.2.2021) # merging all responses together 
HI.poke.2021$burn <- "burned" # adding a burn column
HI.poke.2021$pf <- "medium" # adding a pf column

write.csv(HI.poke.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.poke.2021.csv")

# VAUL #### 
VAULstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/", 
                                  recursive=F, 
                                  pattern="VAUL", 
                                  full.names=TRUE)

VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

VAUL_storms$storm.num = c(rep("storm1a", 1127),
                          rep("storm1b", 1379),
                          rep("storm2", 203),
                          rep("storm3", 2004),
                          rep("storm4a", 1283),
                          rep("storm4b", 959),
                          rep("storm5a", 996),
                          rep("storm5b", 1151))
                        

VAUL_storms$DateTime <- as.POSIXct(VAUL_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
VAUL.2021.storms.1<- left_join(VAUL_storms, VAUL_RainGauge_2021, by = "DateTime")
VAUL.2021.storms.1<- left_join(VAUL.2021.storms.1, airtempmean, by = "DateTime")

names(VAUL.2021.storms.1)[names(VAUL.2021.storms.1) == ''] <- 'x'

VAUL.2021.per.storm.1 <- VAUL.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- VAUL.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

VAUL.2021.per.storm.1$temp <- temp$temp

VAUL.2021 <- read_csv("~/Documents/Storms/Q_Chem/VAUL/VAUL_chem_2021.csv", 
                           col_types = cols(MeanDischarge = col_double()))
attributes(VAUL.2021$DateTime)$tzone <- 'America/Anchorage'
VAUL.2021 <- left_join(VAUL.2021, VAUL_RainGauge_2021, by = "DateTime")
VAUL.2021 <- left_join(VAUL.2021, airtempmean, by = "DateTime")
VAUL.2021$week <- rollapplyr(VAUL.2021$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2021$month <- rollapplyr(VAUL.2021$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2021$ThreeMonth <- rollapplyr(VAUL.2021$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
VAUL.2021$temp.week <- rollapplyr(VAUL.2021$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

VAUL.2021.1 <- left_join(VAUL.2021.storms.1, VAUL.2021, by = "DateTime") # week month and 3 month precip totals 

VAUL.2021.per.storm.2 <- VAUL.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
VAUL.2021.per.storm.3 <- VAUL.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
VAUL.2021.per.storm.4 <- VAUL.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
VAUL.2021.per.storm.5 <- VAUL.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.vaul.NO3 <- subset(HI.mean.precip.response, year == "2021" & site.ID == "VAUL" & response == "NO3")
HI.mean.precip.vaul.fDOM <- subset(HI.mean.precip.response, year == "2021" & site.ID == "VAUL" & response == "fDOM")
HI.mean.precip.vaul.SPC <- subset(HI.mean.precip.response, year == "2021" & site.ID == "VAUL" & response == "SPC")
HI.mean.precip.vaul.turb <- subset(HI.mean.precip.response, year == "2021" & site.ID == "VAUL" & response == "turb")

HI.vaul.no3.2021 <- left_join(HI.mean.precip.vaul.NO3, VAUL.2021.per.storm.1, by = "storm.num")
HI.vaul.no3.2021 <- left_join(HI.vaul.no3.2021, VAUL.2021.per.storm.2, by = "storm.num")
HI.vaul.no3.2021 <- left_join(HI.vaul.no3.2021, VAUL.2021.per.storm.3, by = "storm.num")
HI.vaul.no3.2021 <- left_join(HI.vaul.no3.2021, VAUL.2021.per.storm.4, by = "storm.num")
HI.vaul.no3.2021 <- left_join(HI.vaul.no3.2021, VAUL.2021.per.storm.5, by = "storm.num")

vaul.lm.no3 <- lm(HI.vaul.no3.2021$HI ~ HI.vaul.no3.2021$precip) # model one with just total precip
vaul.lm.no3 <- lm(HI.vaul.no3.2021$HI ~ HI.vaul.no3.2021$precip.week) # model one with just total precip
vaul.lm.no3 <- lm(HI.vaul.no3.2021$HI ~ HI.vaul.no3.2021$precip.month) # model one with just total precip
vaul.lm.no3 <- lm(HI.vaul.no3.2021$HI ~ HI.vaul.no3.2021$ThreeMonth) # model one with just total precip

vaul.formula <- y ~ x

daa <- HI.vaul.no3.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

dbb <- HI.vaul.no3.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

dcc <- HI.vaul.no3.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model

dcd <- HI.vaul.no3.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.vaul.fDOM.2021 <- left_join(HI.mean.precip.vaul.fDOM, VAUL.2021.per.storm.1, by = "storm.num")
HI.vaul.fDOM.2021 <- left_join(HI.vaul.fDOM.2021, VAUL.2021.per.storm.2, by = "storm.num")
HI.vaul.fDOM.2021 <- left_join(HI.vaul.fDOM.2021, VAUL.2021.per.storm.3, by = "storm.num")
HI.vaul.fDOM.2021 <- left_join(HI.vaul.fDOM.2021, VAUL.2021.per.storm.4, by = "storm.num")
HI.vaul.fDOM.2021 <- left_join(HI.vaul.fDOM.2021, VAUL.2021.per.storm.5, by = "storm.num")

vaul.lm.fDOM <- lm(HI.vaul.fDOM.2021$HI ~ HI.vaul.fDOM.2021$precip) # model one with just total precip
vaul.lm.fDOM.1 <- lm(HI.vaul.fDOM.2021$HI ~ HI.vaul.fDOM.2021$precip.week) # model one with just total precip
vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2021$HI ~ HI.vaul.fDOM.2021$precip.month) # model one with just total precip
vaul.lm.fDOM.3 <- lm(HI.vaul.fDOM.2021$HI ~ HI.vaul.fDOM.2021$ThreeMonth) # model one with just total precip

dee <- HI.vaul.fDOM.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

dff <- HI.vaul.fDOM.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

dgg <- HI.vaul.fDOM.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model

dhh <- HI.vaul.fDOM.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.vaul.SPC.2021 <- left_join(HI.mean.precip.vaul.SPC, VAUL.2021.per.storm.1, by = "storm.num")
HI.vaul.SPC.2021 <- left_join(HI.vaul.SPC.2021, VAUL.2021.per.storm.2, by = "storm.num")
HI.vaul.SPC.2021 <- left_join(HI.vaul.SPC.2021, VAUL.2021.per.storm.3, by = "storm.num")
HI.vaul.SPC.2021 <- left_join(HI.vaul.SPC.2021, VAUL.2021.per.storm.4, by = "storm.num")
HI.vaul.SPC.2021 <- left_join(HI.vaul.SPC.2021, VAUL.2021.per.storm.5, by = "storm.num")

vaul.lm.SPC <- lm(HI.vaul.SPC.2021$HI ~ HI.vaul.SPC.2021$precip) # model one with just total precip
vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2021$HI ~ HI.vaul.SPC.2021$precip.week) # model one with just total precip
vaul.lm.SPC.3 <- lm(HI.vaul.SPC.2021$HI ~ HI.vaul.SPC.2021$precip.month) # model one with just total precip
vaul.lm.SPC.4 <- lm(HI.vaul.SPC.2021$HI ~ HI.vaul.SPC.2021$ThreeMonth) # model one with just total precip

dii <- HI.vaul.SPC.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

djj <- HI.vaul.SPC.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

dkk <- HI.vaul.SPC.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

dll <- HI.vaul.SPC.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.turb.2021 <- left_join(HI.mean.precip.vaul.turb, VAUL.2021.per.storm.1, by = "storm.num")
HI.vaul.turb.2021 <- left_join(HI.vaul.turb.2021, VAUL.2021.per.storm.2, by = "storm.num")
HI.vaul.turb.2021 <- left_join(HI.vaul.turb.2021, VAUL.2021.per.storm.3, by = "storm.num")
HI.vaul.turb.2021 <- left_join(HI.vaul.turb.2021, VAUL.2021.per.storm.4, by = "storm.num")
HI.vaul.turb.2021 <- left_join(HI.vaul.turb.2021, VAUL.2021.per.storm.5, by = "storm.num")

vaul.lm.turb <- lm(HI.vaul.turb.2021$HI ~ HI.vaul.turb.2021$precip) # model one with just total precip
vaul.lm.turb.2 <- lm(HI.vaul.turb.2021$HI ~ HI.vaul.turb.2021$precip.week) # model one with just total precip
vaul.lm.turb.3 <- lm(HI.vaul.turb.2021$HI ~ HI.vaul.turb.2021$precip.month) # model one with just total precip
vaul.lm.turb.4 <- lm(HI.vaul.turb.2021$HI ~ HI.vaul.turb.2021$ThreeMonth) # model one with just total precip

dmm <- HI.vaul.turb.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

dnn <- HI.vaul.turb.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

doo <- HI.vaul.turb.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

dpp <- HI.vaul.turb.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- VAUL.2021.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.vaul.no3.2.2021 <- left_join(HI.vaul.no3.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.no3.2.2021$TOTAL.TIME <- as.numeric(HI.vaul.no3.2.2021$TOTAL.TIME)
HI.vaul.no3.2.2021$Intensity <- HI.vaul.no3.2.2021$precip/HI.vaul.no3.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.no3.2 <- lm(HI.vaul.no3.2.2021$HI ~ HI.vaul.no3.2.2021$precip + HI.vaul.no3.2.2021$Intensity) # model one with total precip and intensity 

dqq <- HI.vaul.no3.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.fDOM.2.2021 <- left_join(HI.vaul.fDOM.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.fDOM.2.2021$TOTAL.TIME <- as.numeric(HI.vaul.fDOM.2.2021$TOTAL.TIME)
HI.vaul.fDOM.2.2021$Intensity <- HI.vaul.fDOM.2.2021$precip/HI.vaul.fDOM.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2.2021$HI ~ HI.vaul.fDOM.2.2021$precip + HI.vaul.fDOM.2.2021$Intensity) # model one with total precip and intensity 

drr <- HI.vaul.fDOM.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.SPC.2.2021 <- left_join(HI.vaul.SPC.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.SPC.2.2021$TOTAL.TIME <- as.numeric(HI.vaul.SPC.2.2021$TOTAL.TIME)
HI.vaul.SPC.2.2021$Intensity <- HI.vaul.SPC.2.2021$precip/HI.vaul.SPC.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2.2021$HI ~ HI.vaul.SPC.2.2021$precip + HI.vaul.SPC.2.2021$Intensity) # model one with total precip and intensity 

dss <- HI.vaul.SPC.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.turb.2.2021 <- left_join(HI.vaul.turb.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.turb.2.2021$TOTAL.TIME <- as.numeric(HI.vaul.turb.2.2021$TOTAL.TIME)
HI.vaul.turb.2.2021$Intensity <- HI.vaul.turb.2.2021$precip/HI.vaul.turb.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.turb.2 <- lm(HI.vaul.turb.2.2021$HI ~ HI.vaul.turb.2.2021$precip + HI.vaul.turb.2.2021$Intensity) # model one with total precip and intensity 

dtt <- HI.vaul.turb.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
VAUL.2021.1$day <- julian(VAUL.2021.1$DateTime, origin = "2021-01-01", tz = 'America/Anchorage')
VAUL.2021.1$day <- as.numeric(VAUL.2021.1$day)
VAUL.2021.per.storm.5 <- VAUL.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.vaul.no3.2.2021 <- left_join(HI.vaul.no3.2.2021, VAUL.2021.per.storm.5, by = "storm.num")
vaul.lm.no3.5 <- lm(HI.vaul.no3.2.2021$HI ~ HI.vaul.no3.2.2021$doy)

duu <- HI.vaul.no3.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.fDOM.2.2021 <- left_join(HI.vaul.fDOM.2.2021, VAUL.2021.per.storm.5, by = "storm.num")
vaul.lm.fDOM.5 <- lm(HI.vaul.fDOM.2.2021$HI ~ HI.vaul.fDOM.2.2021$doy)

dtb <- HI.vaul.fDOM.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.SPC.2.2021 <- left_join(HI.vaul.SPC.2.2021, VAUL.2021.per.storm.5, by = "storm.num")
vaul.lm.SPC.5 <- lm(HI.vaul.SPC.2.2021$HI ~ HI.vaul.SPC.2.2021$doy)

dvv <- HI.vaul.SPC.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.turb.2.2021 <- left_join(HI.vaul.turb.2.2021, VAUL.2021.per.storm.5, by = "storm.num")
vaul.lm.turb.5 <- lm(HI.vaul.turb.2.2021$HI ~ HI.vaul.turb.2.2021$doy)

dww <- HI.vaul.turb.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(daa,dbb,dcc,dcd,dee,dff,dgg,dhh,dii,djj,dkk,dll,dmm,dnn,doo,dpp,dqq,drr,dss,dtt, duu,dtb,dvv,dww,
#          ncol = 4)

HI.vaul.2021 <- rbind(HI.vaul.no3.2.2021, HI.vaul.fDOM.2.2021, HI.vaul.SPC.2.2021, HI.vaul.turb.2.2021) # merging all responses together 
HI.vaul.2021$burn <- "unburned" # adding a burn column
HI.vaul.2021$pf <- "high" # adding a pf column

write.csv(HI.vaul.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2021/HI.vaul.2021.csv")

# STRT #### 
STRTstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/", 
                                  recursive=F, 
                                  pattern="STRT", 
                                  full.names=TRUE)

STRT_storms<-do.call("rbind", lapply(STRTstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

STRT_storms$storm.num = c(rep("storm1a", 661),
                          rep("storm1b", 853),
                          rep("storm2a", 373),
                          rep("storm2b", 721),
                          rep("storm3", 469))
                          

STRT_storms$DateTime <- as.POSIXct(STRT_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
STRT.2021.storms.1<- left_join(STRT_storms, STRT_RainGauge_2021, by = "DateTime")
STRT.2021.storms.1<- left_join(STRT.2021.storms.1, airtempmean, by = "DateTime")

names(STRT.2021.storms.1)[names(STRT.2021.storms.1) == ''] <- 'x'

STRT.2021.per.storm.1 <- STRT.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- STRT.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

STRT.2021.per.storm.1$temp <- temp$temp


STRT.2021 <- read_csv("~/Documents/Storms/Q_Chem/STRT/STRT_chem_2021.csv")
attributes(STRT.2021$DateTime)$tzone <- 'America/Anchorage'
STRT.2021 <- left_join(STRT.2021, STRT_RainGauge_2021, by = "DateTime")
STRT.2021 <- left_join(STRT.2021, airtempmean, by = "DateTime")
STRT.2021$week <- rollapplyr(STRT.2021$inst_rainfall_mm, 672, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2021$month <- rollapplyr(STRT.2021$inst_rainfall_mm, 2688, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2021$ThreeMonth <- rollapplyr(STRT.2021$inst_rainfall_mm, 8064, sum, na.rm = TRUE, fill = NA, partial = TRUE)
STRT.2021$temp.week <- rollapplyr(STRT.2021$airtemp_100.1000cm_mean, 672, mean, na.rm = TRUE, fill = NA, partial = TRUE)

STRT.2021.1 <- left_join(STRT.2021.storms.1, STRT.2021, by = "DateTime") # week month and 3 month precip totals 

STRT.2021.per.storm.2 <- STRT.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
STRT.2021.per.storm.3 <- STRT.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
STRT.2021.per.storm.4 <- STRT.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
STRT.2021.per.storm.5 <- STRT.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.strt.NO3 <- subset(HI.mean.precip.response, year == "2021" & site.ID == "STRT" & response == "NO3")
HI.mean.precip.strt.fDOM <- subset(HI.mean.precip.response, year == "2021" & site.ID == "STRT" & response == "fDOM")
HI.mean.precip.strt.SPC <- subset(HI.mean.precip.response, year == "2021" & site.ID == "STRT" & response == "SPC")
HI.mean.precip.strt.turb <- subset(HI.mean.precip.response, year == "2021" & site.ID == "STRT" & response == "turb")

HI.strt.no3.2021 <- left_join(HI.mean.precip.strt.NO3, STRT.2021.per.storm.1, by = "storm.num")
HI.strt.no3.2021 <- left_join(HI.strt.no3.2021, STRT.2021.per.storm.2, by = "storm.num")
HI.strt.no3.2021 <- left_join(HI.strt.no3.2021, STRT.2021.per.storm.3, by = "storm.num")
HI.strt.no3.2021 <- left_join(HI.strt.no3.2021, STRT.2021.per.storm.4, by = "storm.num")
HI.strt.no3.2021 <- left_join(HI.strt.no3.2021, STRT.2021.per.storm.5, by = "storm.num")

strt.lm.no3 <- lm(HI.strt.no3.2021$HI ~ HI.strt.no3.2021$precip) # model one with just total precip
strt.lm.no3.2 <- lm(HI.strt.no3.2021$HI ~ HI.strt.no3.2021$precip.week) # model one with just total precip
strt.lm.no3.3 <- lm(HI.strt.no3.2021$HI ~ HI.strt.no3.2021$precip.month) # model one with just total precip
strt.lm.no3.4 <- lm(HI.strt.no3.2021$HI ~ HI.strt.no3.2021$ThreeMonth) # model one with just total precip

strt.formula <- y ~ x

eaa <- HI.strt.no3.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ebb <- HI.strt.no3.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ecc <- HI.strt.no3.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

edd <- HI.strt.no3.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Three Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.fDOM.2021 <- left_join(HI.mean.precip.strt.fDOM, STRT.2021.per.storm.1, by = "storm.num")
HI.strt.fDOM.2021 <- left_join(HI.strt.fDOM.2021, STRT.2021.per.storm.2, by = "storm.num")
HI.strt.fDOM.2021 <- left_join(HI.strt.fDOM.2021, STRT.2021.per.storm.3, by = "storm.num")
HI.strt.fDOM.2021 <- left_join(HI.strt.fDOM.2021, STRT.2021.per.storm.4, by = "storm.num")
HI.strt.fDOM.2021 <- left_join(HI.strt.fDOM.2021, STRT.2021.per.storm.5, by = "storm.num")

strt.lm.fDOM <- lm(HI.strt.fDOM.2021$HI ~ HI.strt.fDOM.2021$precip) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2021$HI ~ HI.strt.fDOM.2021$precip.week) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2021$HI ~ HI.strt.fDOM.2021$precip.month) # model one with just total precip
strt.lm.fDOM <- lm(HI.strt.fDOM.2021$HI ~ HI.strt.fDOM.2021$ThreeMonth) # model one with just total precip

ede <- HI.strt.fDOM.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

eff <- HI.strt.fDOM.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

egg <- HI.strt.fDOM.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ehh <- HI.strt.fDOM.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.SPC.2021 <- left_join(HI.mean.precip.strt.SPC, STRT.2021.per.storm.1, by = "storm.num")
HI.strt.SPC.2021 <- left_join(HI.strt.SPC.2021, STRT.2021.per.storm.2, by = "storm.num")
HI.strt.SPC.2021 <- left_join(HI.strt.SPC.2021, STRT.2021.per.storm.3, by = "storm.num")
HI.strt.SPC.2021 <- left_join(HI.strt.SPC.2021, STRT.2021.per.storm.4, by = "storm.num")
HI.strt.SPC.2021 <- left_join(HI.strt.SPC.2021, STRT.2021.per.storm.5, by = "storm.num")

strt.lm.SPC <- lm(HI.strt.SPC.2021$HI ~ HI.strt.SPC.2021$precip) # model one with just total precip
strt.lm.SPC.2 <- lm(HI.strt.SPC.2021$HI ~ HI.strt.SPC.2021$precip.week) # model one with just total precip
strt.lm.SPC.3 <- lm(HI.strt.SPC.2021$HI ~ HI.strt.SPC.2021$precip.month) # model one with just total precip
strt.lm.SPC.4 <- lm(HI.strt.SPC.2021$HI ~ HI.strt.SPC.2021$ThreeMonth) # model one with just total precip

eii <- HI.strt.SPC.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

ejj <- HI.strt.SPC.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

ekk <- HI.strt.SPC.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

ell <- HI.strt.SPC.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.turb.2021 <- left_join(HI.mean.precip.strt.turb, STRT.2021.per.storm.1, by = "storm.num")
HI.strt.turb.2021 <- left_join(HI.strt.turb.2021, STRT.2021.per.storm.2, by = "storm.num")
HI.strt.turb.2021 <- left_join(HI.strt.turb.2021, STRT.2021.per.storm.3, by = "storm.num")
HI.strt.turb.2021 <- left_join(HI.strt.turb.2021, STRT.2021.per.storm.4, by = "storm.num")
HI.strt.turb.2021 <- left_join(HI.strt.turb.2021, STRT.2021.per.storm.5, by = "storm.num")

strt.lm.turb <- lm(HI.strt.turb.2021$HI ~ HI.strt.turb.2021$precip) # model one with just total precip
strt.lm.turb.2 <- lm(HI.strt.turb.2021$HI ~ HI.strt.turb.2021$precip.week) # model one with just total precip
strt.lm.turb.3 <- lm(HI.strt.turb.2021$HI ~ HI.strt.turb.2021$precip.month) # model one with just total precip
strt.lm.turb.4 <- lm(HI.strt.turb.2021$HI ~ HI.strt.turb.2021$ThreeMonth) # model one with just total precip

emm <- HI.strt.turb.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

enn <- HI.strt.turb.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model 

eoo <- HI.strt.turb.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("one-month Precip") +
  ylab("HI-Solute Storage") # plot model 

epp <- HI.strt.turb.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

STRT.2021.storms.1 <- na.omit(STRT.2021.storms.1)

sum.time <- STRT.2021.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.strt.no3.2.2021 <- left_join(HI.strt.no3.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.no3.2.2021$TOTAL.TIME <- as.numeric(HI.strt.no3.2.2021$TOTAL.TIME)
HI.strt.no3.2.2021$Intensity <- HI.strt.no3.2.2021$precip/HI.strt.no3.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.no3.2 <- lm(HI.strt.no3.2.2021$HI ~ HI.strt.no3.2.2021$precip + HI.strt.no3.2.2021$Intensity) # model one with total precip and intensity 

eqq <- HI.strt.no3.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.fDOM.2.2021 <- left_join(HI.strt.fDOM.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.fDOM.2.2021$TOTAL.TIME <- as.numeric(HI.strt.fDOM.2.2021$TOTAL.TIME)
HI.strt.fDOM.2.2021$Intensity <- HI.strt.fDOM.2.2021$precip/HI.strt.fDOM.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.fDOM.2 <- lm(HI.strt.fDOM.2.2020$HI ~ HI.strt.fDOM.2.2020$precip + HI.strt.fDOM.2.2020$Intensity) # model one with total precip and intensity 

err <- HI.strt.fDOM.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.SPC.2.2021 <- left_join(HI.strt.SPC.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.SPC.2.2021$TOTAL.TIME <- as.numeric(HI.strt.SPC.2.2021$TOTAL.TIME)
HI.strt.SPC.2.2021$Intensity <- HI.strt.SPC.2.2021$precip/HI.strt.SPC.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.SPC.2 <- lm(HI.strt.SPC.2.2021$HI ~ HI.strt.SPC.2.2021$precip + HI.strt.SPC.2.2021$Intensity) # model one with total precip and intensity 

ess <- HI.strt.SPC.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.turb.2.2021 <- left_join(HI.strt.turb.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.turb.2.2021$TOTAL.TIME <- as.numeric(HI.strt.turb.2.2021$TOTAL.TIME)
HI.strt.turb.2.2021$Intensity <- HI.strt.turb.2.2021$precip/HI.strt.turb.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.turb.2 <- lm(HI.strt.turb.2.2021$HI ~ HI.strt.turb.2.2021$precip + HI.strt.turb.2.2021$Intensity) # model one with total precip and intensity 

ett <- HI.strt.turb.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
STRT.2021.1$day <- julian(STRT.2021.1$DateTime, origin = "2021-01-01", tz = 'America/Anchorage')
STRT.2021.1$day <- as.numeric(STRT.2021.1$day)
STRT.2021.per.storm.5 <- STRT.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.strt.no3.2.2021 <- left_join(HI.strt.no3.2.2021, STRT.2021.per.storm.5, by = "storm.num")
strt.lm.no3.5 <- lm(HI.strt.no3.2.2021$HI ~ HI.strt.no3.2.2021$doy)

euu <- HI.strt.no3.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.fDOM.2.2021 <- left_join(HI.strt.fDOM.2.2021, STRT.2021.per.storm.5, by = "storm.num")
strt.lm.fDOM.5 <- lm(HI.strt.fDOM.2.2021$HI ~ HI.strt.fDOM.2.2021$doy)

etb <- HI.strt.fDOM.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.SPC.2.2021 <- left_join(HI.strt.SPC.2.2021, STRT.2021.per.storm.5, by = "storm.num")
sttrt.lm.SPC.5 <- lm(HI.strt.SPC.2.2021$HI ~ HI.strt.SPC.2.2021$doy)

evv <- HI.strt.SPC.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.turb.2.2021 <- left_join(HI.strt.turb.2.2021, STRT.2021.per.storm.5, by = "storm.num")
strt.lm.turb.5 <- lm(HI.strt.turb.2.2021$HI ~ HI.strt.turb.2.2021$doy)

eww <- HI.strt.turb.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(eaa,ebb,ecc,edd,ede,eff,egg,ehh,eii,ejj,ekk,ell,emm,enn,eoo,epp,eqq,err,ess,ett,euu,etb,evv,eww,
#          ncol = 4)

HI.strt.2021 <- rbind(HI.strt.no3.2.2021, HI.strt.fDOM.2.2021, HI.strt.SPC.2.2021, HI.strt.turb.2.2021) # merging all responses together 
HI.strt.2021$burn <- "burned" # adding a burn column
HI.strt.2021$pf <- "high" # adding a pf column

write.csv(HI.strt.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.strt.2021.csv")

# CARI ####
CARIstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/", 
                                  recursive=F, 
                                  pattern="CARI", 
                                  full.names=TRUE)

CARI_storms<-do.call("rbind", lapply(CARIstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

CARI_storms$storm.num = c(rep("storm1", 2519),
                          rep("storm2", 2099),
                          rep("storm3", 2399),
                          rep("storm4", 1919),
                          rep("storm5", 5939),
                          rep("storm6", 5916),
                          rep("storm7", 6566),
                          rep("storm8", 4859),
                          rep("storm9", 1619),
                          rep("storm10", 3659))
                          

CARI_storms$DateTime <- as.POSIXct(CARI_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
CARI.2021.storms.1<- left_join(CARI_storms, POKE_RainGauge_2021, by = "DateTime")
CARI.2021.storms.1<- left_join(CARI.2021.storms.1, airtempmean, by = "DateTime")

names(CARI.2021.storms.1)[names(CARI.2021.storms.1) == ''] <- 'x'

CARI.2021.per.storm.1 <- CARI.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

temp <- CARI.2021.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(airtemp_100.1000cm_mean), list(temp = mean), na.rm = TRUE) # finding the mean temperature for each storm event 

CARI.2021.per.storm.1$temp <- temp$temp

CARI.2021 <- CARI_storms
CARI.2021 <- CARI.2021[,-c(1,10)]
CARI.2021$DateTime <- as.POSIXct(CARI.2021$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
CARI.2021 <- left_join(CARI.2021, POKE_RainGauge_2021, by = "DateTime")
CARI.2021 <- left_join(CARI.2021, airtempmean, by = "DateTime")
CARI.2021$week <- rollapplyr(CARI.2021$inst_rainfall_mm, 10080, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2021$month <- rollapplyr(CARI.2021$inst_rainfall_mm, 40320, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2021$ThreeMonth <- rollapplyr(CARI.2021$inst_rainfall_mm, 120960, sum, na.rm = TRUE, fill = NA, partial = TRUE)
CARI.2021$temp.week <- rollapplyr(CARI.2021$airtemp_100.1000cm_mean, 10080, mean, na.rm = TRUE, fill = NA, partial = TRUE)

CARI.2021.1 <- left_join(CARI.2021.storms.1, CARI.2021, by = "DateTime") # week month and 3 month precip totals 

CARI.2021.per.storm.2 <- CARI.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
CARI.2021.per.storm.3 <- CARI.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
CARI.2021.per.storm.4 <- CARI.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
CARI.2021.per.storm.5 <- CARI.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(temp.week), list(temp.week = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 

HI.mean.precip.cari.NO3 <- subset(HI.mean.precip.response, year == "2021" & site.ID == "CARI" & response == "NO3")
HI.mean.precip.cari.fDOM <- subset(HI.mean.precip.response, year == "2021" & site.ID == "CARI" & response == "fDOM")
HI.mean.precip.cari.SPC <- subset(HI.mean.precip.response, year == "2021" & site.ID == "CARI" & response == "SPC")
HI.mean.precip.cari.turb <- subset(HI.mean.precip.response, year == "2021" & site.ID == "CARI" & response == "turb")

HI.cari.no3.2021 <- left_join(HI.mean.precip.cari.NO3, CARI.2021.per.storm.1, by = "storm.num")
HI.cari.no3.2021 <- left_join(HI.cari.no3.2021, CARI.2021.per.storm.2, by = "storm.num")
HI.cari.no3.2021 <- left_join(HI.cari.no3.2021, CARI.2021.per.storm.3, by = "storm.num")
HI.cari.no3.2021 <- left_join(HI.cari.no3.2021, CARI.2021.per.storm.4, by = "storm.num")
HI.cari.no3.2021 <- left_join(HI.cari.no3.2021, CARI.2021.per.storm.5, by = "storm.num")

cari.lm.no3 <- lm(HI.cari.no3.2021$HI ~ HI.cari.no3.2021$precip) # model one with just total precip
cari.lm.no3.2 <- lm(HI.cari.no3.2021$HI ~ HI.cari.no3.2021$precip.week) # model one with just total precip
cari.lm.no3.3 <- lm(HI.cari.no3.2021$HI ~ HI.cari.no3.2021$precip.month) # model one with just total precip
cari.lm.no3.4 <- lm(HI.cari.no3.2021$HI ~ HI.cari.no3.2021$ThreeMonth) # model one with just total precip

cari.formula <- y ~ x

sa <- HI.cari.no3.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sb <- HI.cari.no3.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sc <- HI.cari.no3.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sd <- HI.cari.no3.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 


HI.cari.fDOM.2021 <- left_join(HI.mean.precip.cari.fDOM, CARI.2021.per.storm.1, by = "storm.num")
HI.cari.fDOM.2021 <- left_join(HI.cari.fDOM.2021, CARI.2021.per.storm.2, by = "storm.num")
HI.cari.fDOM.2021 <- left_join(HI.cari.fDOM.2021, CARI.2021.per.storm.3, by = "storm.num")
HI.cari.fDOM.2021 <- left_join(HI.cari.fDOM.2021, CARI.2021.per.storm.4, by = "storm.num")
HI.cari.fDOM.2021 <- left_join(HI.cari.fDOM.2021, CARI.2021.per.storm.5, by = "storm.num")

cari.lm.fDOM <- lm(HI.cari.fDOM.2021$HI ~ HI.cari.fDOM.2021$precip) # model one with just total precip
cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2021$HI ~ HI.cari.fDOM.2021$precip.week) # model one with just total precip
cari.lm.fDOM.3 <- lm(HI.cari.fDOM.2021$HI ~ HI.cari.fDOM.2021$precip.month) # model one with just total precip
cari.lm.fDOM.4 <- lm(HI.cari.fDOM.2021$HI ~ HI.cari.fDOM.2021$ThreeMonth) # model one with just total precip

se <- HI.cari.fDOM.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sf <- HI.cari.fDOM.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model

sg <- HI.cari.fDOM.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model

sh <- HI.cari.fDOM.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.cari.SPC.2021 <- left_join(HI.mean.precip.cari.SPC, CARI.2021.per.storm.1, by = "storm.num")
HI.cari.SPC.2021 <- left_join(HI.cari.SPC.2021, CARI.2021.per.storm.2, by = "storm.num")
HI.cari.SPC.2021 <- left_join(HI.cari.SPC.2021, CARI.2021.per.storm.3, by = "storm.num")
HI.cari.SPC.2021 <- left_join(HI.cari.SPC.2021, CARI.2021.per.storm.4, by = "storm.num")
HI.cari.SPC.2021 <- left_join(HI.cari.SPC.2021, CARI.2021.per.storm.5, by = "storm.num")

cari.lm.SPC <- lm(HI.cari.SPC.2021$HI ~ HI.cari.SPC.2021$precip) # model one with just total precip
cari.lm.SPC.2 <- lm(HI.cari.SPC.2021$HI ~ HI.cari.SPC.2021$precip.week) # model one with just total precip
cari.lm.SPC.3 <- lm(HI.cari.SPC.2021$HI ~ HI.cari.SPC.2021$precip.month) # model one with just total precip
cari.lm.SPC.4 <- lm(HI.cari.SPC.2021$HI ~ HI.cari.SPC.2021$ThreeMonth) # model one with just total precip

si <- HI.cari.SPC.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sj <- HI.cari.SPC.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

sk <- HI.cari.SPC.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sl <- HI.cari.SPC.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.cari.turb.2021 <- left_join(HI.mean.precip.cari.turb, CARI.2021.per.storm.1, by = "storm.num")
HI.cari.turb.2021 <- left_join(HI.cari.turb.2021, CARI.2021.per.storm.2, by = "storm.num")
HI.cari.turb.2021 <- left_join(HI.cari.turb.2021, CARI.2021.per.storm.3, by = "storm.num")
HI.cari.turb.2021 <- left_join(HI.cari.turb.2021, CARI.2021.per.storm.4, by = "storm.num")
HI.cari.turb.2021 <- left_join(HI.cari.turb.2021, CARI.2021.per.storm.5, by = "storm.num")

cari.lm.turb <- lm(HI.cari.turb.2021$HI ~ HI.cari.turb.2021$precip) # model one with just total precip
cari.lm.turb.2 <- lm(HI.cari.turb.2021$HI ~ HI.cari.turb.2021$precip.week) # model one with just total precip
cari.lm.turb.3 <- lm(HI.cari.turb.2021$HI ~ HI.cari.turb.2021$precip.month) # model one with just total precip
cari.lm.turb.4 <- lm(HI.cari.turb.2021$HI ~ HI.cari.turb.2021$ThreeMonth) # model one with just total precip

sm <- HI.cari.turb.2021 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sn <- HI.cari.turb.2021 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") # plot model 

so <- HI.cari.turb.2021 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") # plot model 

sp <- HI.cari.turb.2021 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Three-month Precip") +
  ylab("HI-Solute Storage") # plot model 

#CARI.2019.storms.1 <- na.omit(CARI.2019.storms.1)

sum.time <- CARI.2021.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.cari.no3.2.2021 <- left_join(sum.time, HI.cari.no3.2021, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.no3.2.2021$TOTAL.TIME <- as.numeric(HI.cari.no3.2.2021$TOTAL.TIME)
HI.cari.no3.2.2021$Intensity <- HI.cari.no3.2.2021$precip/HI.cari.no3.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.no3.2 <- lm(HI.cari.no3.2.2021$HI ~ HI.cari.no3.2.2021$precip + HI.cari.no3.2.2021$Intensity) # model one with total precip and intensity 

sq <- HI.cari.no3.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.fDOM.2.2021 <- left_join(HI.cari.fDOM.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.fDOM.2.2021$TOTAL.TIME <- as.numeric(HI.cari.fDOM.2.2021$TOTAL.TIME)
HI.cari.fDOM.2.2021$Intensity <- HI.cari.fDOM.2.2021$precip/HI.cari.fDOM.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.fDOM.2 <- lm(HI.cari.fDOM.2.2021$HI ~ HI.cari.fDOM.2.2021$precip + HI.cari.fDOM.2.2021$Intensity) # model one with total precip and intensity 

sr <- HI.cari.fDOM.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.SPC.2.2021 <- left_join(HI.cari.SPC.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.SPC.2.2021$TOTAL.TIME <- as.numeric(HI.cari.SPC.2.2021$TOTAL.TIME)
HI.cari.SPC.2.2021$Intensity <- HI.cari.SPC.2.2021$precip/HI.cari.SPC.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.SPC.2 <- lm(HI.cari.SPC.2.2021$HI ~ HI.cari.SPC.2.2021$precip + HI.cari.SPC.2.2021$Intensity) # model one with total precip and intensity 

ss <- HI.cari.SPC.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.turb.2.2021 <- left_join(HI.cari.turb.2021, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.cari.turb.2.2021$TOTAL.TIME <- as.numeric(HI.cari.turb.2.2021$TOTAL.TIME)
HI.cari.turb.2.2021$Intensity <- HI.cari.turb.2.2021$precip/HI.cari.turb.2.2021$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

cari.lm.turb.2 <- lm(HI.cari.turb.2.2021$HI ~ HI.cari.turb.2.2021$precip + HI.cari.turb.2.2021$Intensity) # model one with total precip and intensity 

st <- HI.cari.turb.2.2021 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year #
CARI.2021.1$day <- julian(CARI.2021.1$DateTime, origin = as.POSIXct('2021-01-01', tz = 'America/Anchorage')) # making a fractional day column 
CARI.2021.1$day <- as.numeric(CARI.2021.1$day)

CARI.2021.per.storm.5 <- CARI.2021.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(day), list(doy = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 
HI.cari.no3.2.2021 <- left_join(HI.cari.no3.2.2021, CARI.2021.per.storm.5, by = "storm.num")
cari.lm.no3.5 <- lm(HI.cari.no3.2.2021$HI ~ HI.cari.no3.2.2021$doy)

su <- HI.cari.no3.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI NO3") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.fDOM.2.2021 <- left_join(HI.cari.fDOM.2.2021, CARI.2021.per.storm.5, by = "storm.num")
cari.lm.fDOM.5 <- lm(HI.cari.fDOM.2.2021$HI ~ HI.cari.fDOM.2.2021$doy)

sv <- HI.cari.fDOM.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI fDOM") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.SPC.2.2021 <- left_join(HI.cari.SPC.2.2021, CARI.2021.per.storm.5, by = "storm.num")
cari.lm.SPC.5 <- lm(HI.cari.SPC.2.2021$HI ~ HI.cari.SPC.2.2021$doy)

sw <- HI.cari.SPC.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI SPC") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.cari.turb.2.2021 <- left_join(HI.cari.turb.2.2021, CARI.2021.per.storm.5, by = "storm.num")
cari.lm.turb.5 <- lm(HI.cari.turb.2.2021$HI ~ HI.cari.turb.2.2021$doy)

sx <- HI.cari.turb.2.2021 %>%
  ggplot(aes(x=doy, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = cari.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("CARI turb") +
  xlab("Day of year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#plot_grid(sa,sb,sc,sd,se,sf,sg,sh,si,sj,sk,sl,sm,sn,so,sp,sq,sr,ss,st,su,sv,sw,sx,
#          ncol = 4)

HI.cari.2021 <- rbind(HI.cari.no3.2.2021, HI.cari.fDOM.2.2021, HI.cari.SPC.2.2021, HI.cari.turb.2.2021) # merging all responses together 
HI.cari.2021$burn <- "burned" # adding a burn column
HI.cari.2021$pf <- "medium" # adding a pf column

write.csv(HI.cari.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.cari.2021.csv")

HI.cari.2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2021/HI.cari.2021.csv")
HI.cari.2021 <- HI.cari.2021[,-1]
HI.frch.2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2021/HI.frch.2021.csv")
HI.frch.2021 <- HI.frch.2021[,-1]
HI.moos.2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2021/HI.moos.2021.csv")
HI.moos.2021 <- HI.moos.2021[,-1]
HI.poke.2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2021/HI.poke.2021.csv")
HI.poke.2021 <- HI.poke.2021[,-1]
HI.strt.2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2021/HI.strt.2021.csv")
HI.strt.2021 <- HI.strt.2021[,-1]

HI.2021 <- rbind(HI.moos.2021, HI.frch.2021, HI.poke.2021, HI.vaul.2021, HI.strt.2021, HI.cari.2021) # bind all 2019 together
write.csv(HI.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2021.csv")

HI_moos_2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.moos.2021.csv")
HI_poke_2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.poke.2021.csv")
HI_strt_2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.strt.2021.csv")
HI_vaul_2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/2021/HI.vaul.2021.csv")
HI_frch_2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.frch.2021.csv")
HI_cari_2021 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.cari.2021.csv")
HI_cari_2021 <- HI_cari_2021[, c(1, 4, 5, 2, 6, 7,8,9,10,11,12,13,3,14,15,16,17)]

HI.2021 <- rbind(HI_moos_2021, HI_frch_2021, HI_poke_2021, HI_vaul_2021, HI_strt_2021, HI_cari_2021) # bind all 2019 together
write.csv(HI.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2021.csv")

# add time since peak  Q in chena #
HI.2021 <- read_csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2021.csv")
HI.2021$date <- as.Date(HI.2021$doy, origin = "2021-01-01")
origin_date <- as.Date("2021-05-12")
HI.2021$TimeSinceChena <- julian(HI.2021$date, origin_date)

write.csv(HI.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2021.csv")





################# combining data sets #######################
# combining years
HI.2019 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.2019.csv")
HI.2019 <- HI.2019[,-c(1:2)]
HI.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.2020.csv")
HI.2020 <- HI.2020[,-1]

HI.2019.2020 <- rbind(HI.2019, HI.2020)
write.csv(HI.2019.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2019.2020.csv")
HI.2019.2020$year <- as.character(HI.2019.2020$year)
HI.2019.2020 %>%
  ggplot(aes(x=TimeSinceChena, 
             y=HI,
             shape = site.ID)) +
  geom_point(aes(color = as.factor(year))) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE) +
  facet_wrap(~response) +
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Time since snowmelt") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 
# plot HI against antecedent conditions (week, intensity, month etc with burn and unburned catchments
HI.2019.1 <- HI.2019
HI.2019.1$burn <- as.factor(HI.2019.1$burn)

FRCH.fDOM <- subset(HI.mean, site.ID == "FRCH" & response == "fDOM")

HI.2019.1$burn <- as.character(HI.2019.1$burn)
HI.all$year <- as.character(HI.all$year)

alla <- HI.all %>% filter(response == "NO3") %>% 
  ggplot(aes(x = precip.week, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allb <- HI.all %>% filter(response == "fDOM") %>% 
  ggplot(aes(x = precip.week, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allc <- HI.all %>% filter(response == "SPC") %>% 
  ggplot(aes(x = precip.week, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

alld <- HI.all %>% filter(response == "turb") %>% 
  ggplot(aes(x = precip.week, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#precip month
alle <- HI.all %>% filter(response == "NO3") %>% 
  ggplot(aes(x = precip.month, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allf <- HI.all %>% filter(response == "fDOM") %>% 
  ggplot(aes(x = precip.month, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allg <- HI.all %>% filter(response == "SPC") %>% 
  ggplot(aes(x = precip.month, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allh <- HI.all %>% filter(response == "turb") %>% 
  ggplot(aes(x = precip.month, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# Intensity
alli <- HI.all %>% filter(response == "NO3") %>% 
  ggplot(aes(x = Intensity, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("NO3") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allj <- HI.all %>% filter(response == "fDOM") %>% 
  ggplot(aes(x = Intensity, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("fDOM") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allk <- HI.all %>% filter(response == "SPC") %>% 
  ggplot(aes(x = Intensity, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("SPC") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

alll <- HI.all %>% filter(response == "turb") %>% 
  ggplot(aes(x = Intensity, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year
allm <- HI.all %>% filter(response == "NO3") %>% 
  ggplot(aes(x = doy, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("NO3") +
  xlab("Day of Year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

alln <- HI.all %>% filter(response == "fDOM") %>% 
  ggplot(aes(x = doy, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("fDOM") +
  xlab("Day of Year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allo <- HI.all %>% filter(response == "SPC") %>% 
  ggplot(aes(x = doy, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("SPC") +
  xlab("Day of Year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

allp <- HI.all %>% filter(response == "turb") %>% 
  ggplot(aes(x = doy, 
             y = HI,
             color = burn,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  geom_hline(yintercept = 0, linetype = "dotted", size = 1) +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("turb") +
  xlab("Day of Year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

plot_grid(alla,allb,allc,alld,alle,allf,allg,allh,alli,allj,allk,alll,allm,alln,allo,allp,
          ncol = 4)
  
# permafrost #
pfa <- HI.all %>% filter(response == "NO3") %>% 
  ggplot(aes(x = precip.week, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("NO3") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfb <- HI.all %>% filter(response == "fDOM") %>% 
  ggplot(aes(x = precip.week, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("fDOM") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfc <- HI.all %>% filter(response == "SPC") %>% 
  ggplot(aes(x = precip.week, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("SPC") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfd <- HI.all %>% filter(response == "turb") %>% 
  ggplot(aes(x = precip.week, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

#precip month
pfe <- HI.all %>% filter(response == "NO3") %>% 
  ggplot(aes(x = precip.month, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("NO3") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pff <- HI.all %>% filter(response == "fDOM") %>% 
  ggplot(aes(x = precip.month, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("fDOM") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfg <- HI.all %>% filter(response == "SPC") %>% 
  ggplot(aes(x = precip.month, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("SPC") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfh <- HI.all %>% filter(response == "turb") %>% 
  ggplot(aes(x = precip.month, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("turb") +
  xlab("One-month Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# Intensity
pfi <- HI.all %>% filter(response == "NO3") %>% 
  ggplot(aes(x = Intensity, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("NO3") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfj <- HI.all %>% filter(response == "fDOM") %>% 
  ggplot(aes(x = Intensity, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("fDOM") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfk <- HI.all %>% filter(response == "SPC") %>% 
  ggplot(aes(x = Intensity, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("SPC") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfl <- HI.all %>% filter(response == "turb") %>% 
  ggplot(aes(x = Intensity, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("turb") +
  xlab("One-week Precip") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# day of year
pfm <- HI.all %>% filter(response == "NO3") %>% 
  ggplot(aes(x = doy, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("NO3") +
  xlab("Day of Year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfn <- HI.all %>% filter(response == "fDOM") %>% 
  ggplot(aes(x = doy, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("fDOM") +
  xlab("Day of Year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfo <- HI.all %>% filter(response == "SPC") %>% 
  ggplot(aes(x = doy, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("SPC") +
  xlab("Day of Year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

pfp <- HI.all %>% filter(response == "turb") %>% 
  ggplot(aes(x = doy, 
             y = HI,
             color = pf,
             shape = year)) +
  geom_point() +
  geom_smooth(method = "lm") +
  geom_hline(yintercept = 0, linetype = "dotted", size = 1) +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("turb") +
  xlab("Day of Year") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model

plot_grid(pfa,pfb,pfc,pfd,pfe,pff,pfg,pfh,pfi,pfj,pfk,pfl,pfm,pfn,pfo,pfp,
          ncol = 4)

########################### MOOS ###########################
HI.moos.2019 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.moos.2019.csv") # just mean values of HI 
names(HI.moos.2019)[names(HI.moos.2019) == 'HI'] <- 'HI.median'
HI.moos.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.moos.2020.csv")# just mean values of HI 
names(HI.moos.2020)[names(HI.moos.2020) == 'HI'] <- 'HI.median'

MOOS.HI.df.2019 <- read.csv("Output_from_analysis/HI_plots/2019/MOOS/MOOS.HI.df.csv") # has 2% intervals to generate error bars
MOOS.HI.df.2020 <- read.csv("Output_from_analysis/HI_plots/2020/MOOS/MOOS.HI.df.csv") # has 2% intervals to generate error bars

moos.2019 <- left_join(HI.moos.2019, MOOS.HI.df.2019, by = c("storm.num", "response", "site.ID")) # joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars

moos.2020 <- left_join(HI.moos.2020, MOOS.HI.df.2020, by = c("storm.num", "response", "site.ID"))# joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars

HI.moos.2019.2020 <- rbind(moos.2019, moos.2020) # joining 2019 and 2020 data 
HI.moos.2019.2020$year <- as.character(HI.moos.2019.2020$year) # making year a character so it wont recognize it as a continuous variable

write.csv(HI.moos.2019.2020, "~/Documents/Storms/Output_from_analysis/HI.MOOS.csv")

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}

moos.formula <- y ~ x

a <- HI.moos.2019.2020 %>% 
  ggplot(aes(x = precip,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("MOOS Storm-Precip") +
  xlab("Storm-Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

moos.storm.precip <- a + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2)

b <- HI.moos.2019.2020 %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = moos.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("Medium PF") +
  xlab("One-Week Precip") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

moos.week.precip <- b + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2)

c <- HI.moos.2019.2020 %>% 
  ggplot(aes(x = precip.month,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = moos.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Month Precip") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

moos.month.precip <- c + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2)

d <- HI.moos.2019.2020 %>% 
  ggplot(aes(x = ThreeMonth,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = moos.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("MOOS Three-Month Precip") +
  xlab("Three-Month Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

moos.3month.precip <- d + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2)

e <- HI.moos.2019.2020 %>% 
  ggplot(aes(x = Intensity,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = moos.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("MOOS Storm Intensity") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

moos.intensity.precip <- e + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2)

f <- HI.moos.2019.2020 %>% 
  ggplot(aes(x = doy,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = moos.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("doy") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

moos.doy.precip <- f + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2)
plot_grid(moos.storm.precip, moos.week.precip, moos.month.precip,
          moos.3month.precip, moos.intensity.precip, moos.doy.precip,
          ncol = 3)


####################### FRCH #################################
HI.frch.2019 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.frch.2019.csv") # just mean values of HI 
names(HI.frch.2019)[names(HI.frch.2019) == 'HI'] <- 'HI.median'
HI.frch.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.frch.2020.csv")# just mean values of HI 
names(HI.frch.2020)[names(HI.frch.2020) == 'HI'] <- 'HI.median'

FRCH.HI.df.2019 <- read.csv("Output_from_analysis/HI_plots/2019/FRCH/FRCH.HI.doy.df.csv") # has 2% intervals to generate error bars
FRCH.HI.df.2020 <- read.csv("Output_from_analysis/HI_plots/2020/FRCH/FRCH.HI.doy.df.csv") # has 2% intervals to generate error bars

frch.2019 <- left_join(HI.frch.2019, FRCH.HI.df.2019, by = c("storm.num", "response", "site.ID")) # joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars

frch.2020 <- left_join(HI.frch.2020, FRCH.HI.df.2020, by = c("storm.num", "response", "site.ID"))# joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars

HI.frch.2019.2020 <- rbind(frch.2019, frch.2020) # joining 2019 and 2020 data 
HI.frch.2019.2020$year <- as.character(HI.frch.2019.2020$year) # making year a character so it wont recognize it as a continuous variable

write.csv(HI.frch.2019.2020, "~/Documents/Storms/Output_from_analysis/07_Models/HI.FRCH.csv")

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}

frch.formula <- y ~ x

a <- HI.frch.2019.2020 %>% 
  ggplot(aes(x = precip,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("FRCH Storm-Precip") +
  xlab("Storm-Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

frch.storm.precip <- a + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

b <- HI.frch.2019.2020 %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = frch.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("FRCH One-Week Precip") +
  xlab("One-Week Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

frch.week.precip <- b + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

c <- HI.frch.2019.2020 %>% 
  ggplot(aes(x = precip.month,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = frch.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("FRCH One-Month Precip") +
  xlab("One-Month Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

frch.month.precip <- c + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

d <- HI.frch.2019.2020 %>% 
  ggplot(aes(x = ThreeMonth,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = frch.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("FRCH Three-Month Precip") +
  xlab("Three-Month Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

frch.3month.precip <- d + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

e <- HI.frch.2019.2020 %>% 
  ggplot(aes(x = Intensity,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = moos.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("FRCH Storm Intensity") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

frch.intensity.precip <- e + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

f <- HI.frch.2019.2020 %>% 
  ggplot(aes(x = doy.x,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = frch.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("FRCH Day of Year") +
  xlab("doy") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

frch.doy.precip <- f + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 
plot_grid(frch.storm.precip, frch.week.precip, frch.month.precip,
          frch.3month.precip, frch.intensity.precip, frch.doy.precip,
          ncol = 3)

####################### VAUL #################################
HI.vaul.2019 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.vaul.2019.csv") # just mean values of HI 
names(HI.vaul.2019)[names(HI.vaul.2019) == 'HI'] <- 'HI.median'
HI.vaul.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.vaul.2020.csv")# just mean values of HI 
names(HI.vaul.2020)[names(HI.vaul.2020) == 'HI'] <- 'HI.median'

VAUL.HI.df.2019 <- read.csv("Output_from_analysis/HI_plots/2019/VAUL/VAUL.HI.doy.df.csv") # has 2% intervals to generate error bars
VAUL.HI.df.2020 <- read.csv("Output_from_analysis/HI_plots/2020/VAUL/VAUL.HI.doy.df.csv") # has 2% intervals to generate error bars

vaul.2019 <- left_join(HI.vaul.2019, VAUL.HI.df.2019, by = c("storm.num", "response", "site.ID")) # joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars

vaul.2020 <- left_join(HI.vaul.2020, VAUL.HI.df.2020, by = c("storm.num", "response", "site.ID"))# joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars

HI.vaul.2019.2020 <- rbind(vaul.2019, vaul.2020) # joining 2019 and 2020 data 
HI.vaul.2019.2020$year <- as.character(HI.vaul.2019.2020$year) # making year a character so it wont recognize it as a continuous variable

write.csv(HI.vaul.2019.2020, "~/Documents/Storms/Output_from_analysis/07_Models/HI.VAUL.csv")

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}

vaul.formula <- y ~ x

a <- HI.vaul.2019.2020 %>% 
  ggplot(aes(x = precip,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("VAUL Storm-Precip") +
  xlab("Storm-Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

vaul.storm.precip <- a + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

b <- HI.vaul.2019.2020 %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = vaul.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("High PF") +
  xlab("One-Week Precip") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

vaul.week.precip <- b + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

c <- HI.vaul.2019.2020 %>% 
  ggplot(aes(x = precip.month,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = vaul.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Month Precip") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

vaul.month.precip <- c + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

d <- HI.vaul.2019.2020 %>% 
  ggplot(aes(x = ThreeMonth,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = vaul.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("VAUL Three-Month Precip") +
  xlab("Three-Month Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

vaul.3month.precip <- d + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

e <- HI.vaul.2019.2020 %>% 
  ggplot(aes(x = Intensity,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = vaul.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("VAUL Storm Intensity") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

vaul.intensity.precip <- e + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

f <- HI.vaul.2019.2020 %>% 
  ggplot(aes(x = doy.x,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = vaul.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("doy") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

vaul.doy.precip <- f + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 
plot_grid(vaul.storm.precip, vaul.week.precip, vaul.month.precip,
          vaul.3month.precip, vaul.intensity.precip, vaul.doy.precip,
          ncol = 3)

####################### STRT #################################
HI.strt.2019 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.strt.2019.csv") # just mean values of HI 
names(HI.strt.2019)[names(HI.strt.2019) == 'HI'] <- 'HI.median'
HI.strt.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.strt.2020.csv")# just mean values of HI 
names(HI.strt.2020)[names(HI.strt.2020) == 'HI'] <- 'HI.median'

STRT.HI.df.2019 <- read.csv("Output_from_analysis/HI_plots/2019/STRT/STRT.HI.df.csv") # has 2% intervals to generate error bars
STRT.HI.df.2020 <- read.csv("Output_from_analysis/HI_plots/2020/STRT/STRT.HI.df.csv") # has 2% intervals to generate error bars

strt.2019 <- left_join(HI.strt.2019, STRT.HI.df.2019, by = c("storm.num", "response", "site.ID")) # joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars

strt.2020 <- left_join(HI.strt.2020, STRT.HI.df.2020, by = c("storm.num", "response", "site.ID"))# joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars

HI.strt.2019.2020 <- rbind(strt.2019, strt.2020) # joining 2019 and 2020 data 
HI.strt.2019.2020$year <- as.character(HI.strt.2019.2020$year) # making year a character so it wont recognize it as a continuous variable

write.csv(HI.strt.2019.2020, "~/Documents/Storms/Output_from_analysis/07_Models/HI.STRT.csv")

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}

strt.formula <- y ~ x

a <- HI.strt.2019.2020 %>% 
  ggplot(aes(x = precip,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("STRT Storm-Precip") +
  xlab("Storm-Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

strt.storm.precip <- a + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

b <- HI.strt.2019.2020 %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = strt.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("STRT One-Week Precip") +
  xlab("One-Week Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

strt.week.precip <- b + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

c <- HI.strt.2019.2020 %>% 
  ggplot(aes(x = precip.month,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = strt.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("STRT One-Month Precip") +
  xlab("One-Month Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

strt.month.precip <- c + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

d <- HI.strt.2019.2020 %>% 
  ggplot(aes(x = ThreeMonth,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = strt.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("STRT Three-Month Precip") +
  xlab("Three-Month Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

strt.3month.precip <- d + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

e <- HI.strt.2019.2020 %>% 
  ggplot(aes(x = Intensity,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = strt.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("STRT Storm Intensity") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

strt.intensity.precip <- e + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

f <- HI.strt.2019.2020 %>% 
  ggplot(aes(x = doy,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = strt.formula,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("STRT Day of Year") +
  xlab("doy") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

strt.doy.precip <- f + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 
plot_grid(strt.storm.precip, strt.week.precip, strt.month.precip,
          strt.3month.precip, strt.intensity.precip, strt.doy.precip,
          ncol = 3)

################ POKE ###############################
HI.poke.2019 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.poke.2019.csv") # just mean values of HI 
names(HI.poke.2019)[names(HI.poke.2019) == 'HI'] <- 'HI.median'
HI.poke.2020 <- read.csv("Output_from_analysis/06_HI_fire_permafrost_script/HI.poke.2020.csv")# just mean values of HI 
names(HI.poke.2020)[names(HI.poke.2020) == 'HI'] <- 'HI.median'

POKE.HI.df.2019 <- read.csv("Output_from_analysis/HI_plots/2019/POKE/POKE.HI.df.csv") # has 2% intervals to generate error bars
POKE.HI.df.2020 <- read.csv("Output_from_analysis/HI_plots/2020/POKE/POKE.HI.df.csv") # has 2% intervals to generate error bars

poke.2019 <- left_join(HI.poke.2019, POKE.HI.df.2019, by = c("storm.num", "response", "site.ID")) # joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars
poke.2019 <- poke.2019[,-24]
poke.2020 <- left_join(HI.poke.2020, POKE.HI.df.2020, by = c("storm.num", "response", "site.ID"))# joining 2% inervals with the storm characteristics (Intensity) and antecedent conditions (one week, one month etc.) to generate error bars
names(poke.2020)[names(poke.2020) == 'doy'] <- 'doy.x'
HI.poke.2019.2020 <- rbind(poke.2019, poke.2020) # joining 2019 and 2020 data 
HI.poke.2019.2020$year <- as.character(HI.poke.2019.2020$year) # making year a character so it wont recognize it as a continuous variable

write.csv(HI.poke.2019.2020, "~/Documents/Storms/Output_from_analysis/07_Models/HI.POKE.csv")

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}


a <- HI.poke.2019.2020 %>% 
  ggplot(aes(x = precip,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("POKE Storm-Precip") +
  xlab("Storm-Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

poke.storm.precip <- a + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 
  

b <- HI.poke.2019.2020 %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("Low PF") +
  xlab("One-Week Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

poke.week.precip <- b + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

c <- HI.poke.2019.2020 %>% 
  ggplot(aes(x = precip.month,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("POKE One-Month Precip") +
  xlab("") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

poke.month.precip <- c + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

d <- HI.poke.2019.2020 %>% 
  ggplot(aes(x = ThreeMonth,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("POKE Three-Month Precip") +
  xlab("Three-Month Precip") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

poke.3month.precip <- d + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

e <- HI.poke.2019.2020 %>% 
  ggplot(aes(x = Intensity,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("POKE Storm Intensity") +
  xlab("Intensity") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

poke.intensity.precip <- e + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) 

f <- HI.poke.2019.2020 %>% 
  ggplot(aes(x = doy.x,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("doy") +
  ylab("HI-Solute Storage") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() +
  facet_wrap(~response)

poke.doy.precip <- f + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width = 0.2, size=1) + 
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2)




# AGU plot #
HI.moos.2019.2020.fdom <- HI.moos.2019.2020 %>% filter(response == "fDOM")
HI.frch.2019.2020.fdom <- HI.frch.2019.2020 %>% filter(response == "fDOM")
HI.poke.2019.2020.fdom <- HI.poke.2019.2020 %>% filter(response == "fDOM")
HI.strt.2019.2020.fdom <- HI.strt.2019.2020 %>% filter(response == "fDOM")
HI.vaul.2019.2020.fdom <- HI.vaul.2019.2020 %>% filter(response == "fDOM")

HI.moos.2019.2020.fdom <- HI.moos.2019.2020 %>% filter(response == "NO3")
HI.frch.2019.2020.fdom <- HI.frch.2019.2020 %>% filter(response == "NO3")
HI.poke.2019.2020.fdom <- HI.poke.2019.2020 %>% filter(response == "NO3")
HI.strt.2019.2020.fdom <- HI.strt.2019.2020 %>% filter(response == "NO3")
HI.vaul.2019.2020.fdom <- HI.vaul.2019.2020 %>% filter(response == "NO3")

a <- HI.frch.2019.2020.fdom %>% 
  ggplot(aes(x = precip.month,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Month Precip") +
  ylab("HI") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

frch.precip.month.fdom <- a + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

a <- HI.frch.2019.2020.no3 %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Week Precip") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

frch.precip.week.no3 <- a + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

b <- HI.moos.2019.2020.fDOM %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Week Precip") +
  ylab("HI") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

moos.precip.week.fDOM <- b + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

b <- HI.moos.2019.2020.no3 %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Week Precip") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

moos.precip.week.no3 <- b + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

c <- HI.poke.2019.2020.fdom %>% 
  ggplot(aes(x = doy.x,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("Day of Year") +
  ylab("HI") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

poke.doy.fdom <- c + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

d <- HI.poke.2019.2020.no3 %>% 
  ggplot(aes(x = precip.month,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Month Precip") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

poke.precip.month <- d + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

e <- HI.strt.2019.2020.fdom %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Week Precip") +
  ylab("HI") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

strt.precip.week.fdom <- e + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

e <- HI.strt.2019.2020.no3 %>% 
  ggplot(aes(x = precip.week,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("One-Week Precip") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

strt.precip.week.no3 <- e + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

f <- HI.vaul.2019.2020.fdom %>% 
  ggplot(aes(x = doy.x,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("Day of Year") +
  ylab("HI") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

vaul.doy.fdom <- f + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 

f <- HI.vaul.2019.2020.no3 %>% 
  ggplot(aes(x = doy.x,
             y = HI)) +
  geom_point(alpha = 0.00001) +
  geom_smooth(method = "lm", formula= y~x, na.rm = TRUE, fullrange = TRUE, aes(group = 1)) +
  ylim(-1,1) + 
  ggtitle("") +
  xlab("Day of Year") +
  ylab("") + 
  geom_hline(yintercept = 0, linetype = "dotted", col = 'red') +
  theme_classic() 

vaul.doy.no3 <- f + 
  stat_summary(fun.data = median_cl_boot, geom = "errorbar",
               aes(color = year), width  = 0.2, size = 1) + 
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) +
  stat_summary(fun.y = median, geom = "point", 
               aes(color = year), size = 2) +
  scale_colour_manual(values = wes_palette(n=2, name="Royal1")) 




ggarrange(frch.precip.month.fdom, frch.precip.week.no3, 
          moos.precip.week.fDOM, moos.precip.week.no3,
          poke.doy.fdom, poke.precip.month,
          strt.precip.week.fdom, strt.precip.week.no3,
          vaul.doy.fdom, vaul.doy.no3,
          ncol = 2, nrow = 5,
          common.legend = TRUE, legend = "bottom")

# removing columns that are unneeded to match all together 
#HI.frch.2019.2020 <- HI.frch.2019.2020[,-c(25:26)]
#HI.poke.2019.2020 <- HI.frch.2019.2020[,-25]
#HI.vaul.2019.2020 <- HI.vaul.2019.2020[,-c(25:26)]

#names(HI.moos.2019.2020)[names(HI.moos.2019.2020) == 'doy'] <- 'doy.x'
 
#HI.2019.2020 <- rbind(HI.vaul.2019.2020, HI.frch.2019.2020, HI.moos.2019.2020, HI.strt.2019.2020, HI.poke.2019.2020)

#write.csv(HI.2019.2020, "~/Documents/Storms/Output_from_analysis/07_Models/HI.2019.2020.csv")

################# 2019 and 2020  chem ################
# when i import from my local machine it gets rid of nitrate for some reason

VAUL_chem_2019 <- read_csv("Q_Chem/VAUL/VAUL_chem_2019.csv")
VAUL <- VAUL_chem_2019
VAUL <- VAUL[,-1]
chem_2019 <- rbind(FRCH, MOOS, POKE, STRT,VAUL)

names(chem_2019) <- c("Site", "DateTime", "MeanDischarge", "day", "fDOM", "NO3", "SPC", "Turb")
chem_2019 <- chem_2019[,-4]
chem_2019$year <- "2019"
chem_2019[chem_2019$Site==1:15687, "Site"] <- "French"

write.csv(chem_2019, "~/Documents/Storms/Q_Chem/DOD.2019.mean.csv")
chem_2019 <- read_csv("Q_Chem/DOD.2019.mean.csv")

FRCH_chem_2020 <- read_csv("Q_Chem/FRCH/FRCH_chem_2020.csv")
MOOS_chem_2020 <- read_csv("Q_Chem/MOOS/MOOS_chem_2020.csv")
MOOS_chem_2020 <- MOOS_chem_2020[,-c(2,6)]
POKE_chem_2020 <- read_csv("Q_Chem/POKE/POKE_chem_2020.csv")
names(POKE_chem_2020)[names(POKE_chem_2020) == 'fDOM.RFU'] <- 'fDOM.QSU'

STRT_chem_2020 <- read_csv("Q_Chem/STRT/STRT_chem_2020.csv")
VAUL_chem_2020 <- read_csv("Q_Chem/VAUL/VAUL_chem_2020.csv")

which(VAUL_chem_2020$fDOM.QSU > 1000)
which(VAUL_chem_2020$Turbidity.FNU < 0)


VAUL_chem_2020 <- VAUL_chem_2020[-c(5307,5308), ]

chem_2020 <- rbind(FRCH_chem_2020, MOOS_chem_2020, POKE_chem_2020, STRT_chem_2020, VAUL_chem_2020)
chem_2020 <- chem_2020[,-1]
chem_2020$year <- "2020"
names(chem_2020) <- c("Site", "DateTime", "MeanDischarge", "fDOM", "NO3", "SPC", "Turb", "year")

chem_2019_2020 <- rbind(chem_2019, chem_2020)

Q_2019 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2019/Q_2019.csv")
Q_2020 <- read_csv("~/Documents/DoD_Discharge/Predicted_Discharge/2020/Q_2020.csv")
Q_2019$year <- "2019"
Q_2020$year <- "2020"

Q_2019_2020 <- rbind(Q_2019, Q_2020)

no3 <- ggplot(data = chem_2019_2020, aes(x = Site, y = NO3, fill = as.factor(year))) +
  geom_violin() + 
  xlab("") +
  ylab("Nitrate (µM)") +
  theme_classic() +
  scale_fill_manual(values=wes_palette(n=2, name="Royal1")) +
  labs(fill = "Year") + 
  theme(text = element_text(size = 15)) 

fDOM <- ggplot(data = chem_2019_2020, aes(x = Site, y = fDOM, fill = as.factor(year))) +
  geom_violin() + 
  xlab("") +
  ylab("fDOM (QSU)") +
  theme_classic() +
  scale_fill_manual(values=wes_palette(n=2, name="Royal1")) +
  labs(fill = "Year") + 
  theme(text = element_text(size = 15)) 
fDOM

SPC <- ggplot(data = chem_2019_2020, aes(x = Site, y = SPC, fill = as.factor(year))) +
  geom_violin() + 
  xlab("") +
  ylab("SPC (µScm)") +
  theme_classic() +
  scale_fill_manual(values=wes_palette(n=2, name="Royal1")) +
  labs(fill = "Year") + 
  theme(text = element_text(size = 15)) 

SPC
options(scipen = 999)
turb <- ggplot(data = chem_2019_2020, aes(x = Site, y = Turb, fill = as.factor(year))) +
  geom_violin() + 
  xlab("") +
  ylab("Turbidity (FNU)") +
  theme_classic() +
  scale_fill_manual(values=wes_palette(n=2, name="Royal1")) +
  labs(fill = "Year") + 
  theme(text = element_text(size = 15)) +
  scale_y_continuous(trans='log10', labels = scales::label_number(accuracy = 1))

turb

Q <- ggplot(data = Q_2019_2020, aes(x = Site, y = MeanDischarge, fill = as.factor(year))) +
  geom_violin() + 
  xlab("") +
  ylab("Discharge (L/s)") +
  theme_classic() +
  scale_fill_manual(values=wes_palette(n=2, name="Royal1")) +
  labs(fill = "Year") + 
  theme(text = element_text(size = 15)) +
  scale_y_continuous(trans='log10')
Q

ggarrange(Q, no3,
          fDOM, SPC, 
          turb, NA,
          ncol = 2, nrow = 3,
          common.legend = TRUE, legend = "bottom")



##############################################################################################################
##############################################################################################################
##############################################################################################################

#########################################################################################################
########################################### FI ##########################################################
#########################################################################################################
# Step 1) Load in the storm files from script 01_storm delineation
# Step 2) normalize discharge and concentration for each solute
# Step 3) Run FI function 
# Step 4) Run Q, solute file in FI function and cehck to see which ones run properly
# Step 5) plot against HI

########################################## 2018 ##########################################################

# load storm data to R #

### Q dat ###
storm_file_list_beta <- list.files(path="~/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI/", 
                                   recursive=F, 
                                   pattern=".csv", 
                                   full.names=TRUE)

storm_list_beta<-do.call("list", lapply(storm_file_list_beta, 
                                        read.csv, 
                                        stringsAsFactors=FALSE, 
                                        header=T, row.names=1))

storm_file_list_beta = sub("~/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta

for(i in 1:length(storm_list_beta)){
  storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(storm_list_beta[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} # changing character format into datetime 


#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list_beta = storm_list_beta[c(1:65)] #65
FRCH_storm_list_beta = storm_list_beta[c(66:140)] #75
MOOS_storm_list_beta = storm_list_beta[c(141:220)] #80

CARI_Q_storm_list_beta = CARI_storm_list_beta[c(grep("Q", names(CARI_storm_list_beta)))]
FRCH_Q_storm_list_beta = FRCH_storm_list_beta[c(grep("Q", names(FRCH_storm_list_beta)))]
MOOS_Q_storm_list_beta = MOOS_storm_list_beta[c(grep("Q", names(MOOS_storm_list_beta)))]

# normalize Q data 

# FRCH
for(i in 1:length(FRCH_Q_storm_list_beta)){
  FRCH_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_Q_storm_list_beta[[i]][["datavalue"]]-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
# MOOS
for(i in 1:length(MOOS_Q_storm_list_beta)){
  MOOS_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_Q_storm_list_beta[[i]][["datavalue"]]-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}


### solute data with bursts ###
FRCH_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2018/FRCH_NO3_storm_list.RData")
FRCH_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2018/FRCH_fDOM_storm_list.RData")
FRCH_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2018/FRCH_SpCond_storm_list.RData")
FRCH_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2018/FRCH_turb_storm_list.RData")

MOOS_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2018/MOOS_NO3_storm_list.RData")
MOOS_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2018/MOOS_fDOM_storm_list.RData")
MOOS_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2018/MOOS_SpCond_storm_list.RData")
MOOS_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2018/MOOS_turb_storm_list.RData")

# normalize solute data #

### remove burst-complied data ###

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["datavalue"]] = FRCH_NO3_storm_list[[i]][["nitrateuM"]]
  FRCH_NO3_storm_list[[i]][["nitrateuM"]] = NULL
  FRCH_NO3_storm_list[[i]][["site.ID"]] = NULL
}

for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue"]] = FRCH_fDOM_storm_list[[i]][["fDOMQSU"]]
  FRCH_fDOM_storm_list[[i]][["fDOMQSU"]] = NULL
}

for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["datavalue"]] = FRCH_SpCond_storm_list[[i]][["SpConduScm"]]
  FRCH_SpCond_storm_list[[i]][["SpConduScm"]] = NULL
}

for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue"]] = FRCH_turb_storm_list[[i]][["TurbidityFNU"]]
  FRCH_turb_storm_list[[i]][["TurbidityFNU"]] = NULL
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]][["datavalue"]] = MOOS_NO3_storm_list[[i]][["nitrateuM"]]
  MOOS_NO3_storm_list[[i]][["nitrateuM"]] = NULL
  MOOS_NO3_storm_list[[i]][["site.ID"]] = NULL
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue"]] = MOOS_fDOM_storm_list[[i]][["fDOMQSU"]]
  MOOS_fDOM_storm_list[[i]][["fDOMQSU"]] = NULL
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]][["datavalue"]] = MOOS_SpCond_storm_list[[i]][["SpConduScm"]]
  MOOS_SpCond_storm_list[[i]][["SpConduScm"]] = NULL
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue"]] = MOOS_turb_storm_list[[i]][["TurbidityFNU"]]
  MOOS_turb_storm_list[[i]][["TurbidityFNU"]] = NULL
}


### normalize burst data ###

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_NO3_storm_list[[i]][["datavalue"]]-min(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(FRCH_fDOM_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_fDOM_storm_list[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(FRCH_SpCond_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_SpCond_storm_list[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue"]] = as.numeric(FRCH_turb_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 

for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_turb_storm_list[[i]][["datavalue"]]-min(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_NO3_storm_list[[i]][["datavalue"]]-min(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(MOOS_fDOM_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_fDOM_storm_list[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(MOOS_SpCond_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_SpCond_storm_list[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue"]] = as.numeric(MOOS_turb_storm_list[[i]][["datavalue"]])
} 

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_turb_storm_list[[i]][["datavalue"]]-min(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

#fxn: calculate FI by difference and bootstrap CIs #

FI_diff = function(dat_Q, dat_response) {
  FI_dat = rbind(dat_response[as.POSIXct(dat_response$valuedatetime) == min(as.POSIXct(dat_response$valuedatetime)),], 
                 dat_response[as.POSIXct(dat_response$valuedatetime) == as.POSIXct(dat_Q$valuedatetime[dat_Q$datavalue.norm == max(dat_Q$datavalue.norm)]),])
  
  FI_dat$valuedatetime = as.character(as.POSIXct(FI_dat$valuedatetime))
  
  dat_Q$valuedatetime = as.character(as.POSIXct(dat_Q$valuedatetime))
  
  FI_dat = left_join(FI_dat, 
                     subset(dat_Q, select=c("valuedatetime", "datavalue.norm")),
                     by="valuedatetime")
  
  names(FI_dat) = c("valuedatetime", "datavalue", "datavalue.norm", "Q")
  
  FI_dat$datavalue.norm = as.numeric(FI_dat$datavalue.norm)
  FI_dat$Q = as.numeric(FI_dat$Q)
  
  FI = mean(FI_dat$datavalue.norm[FI_dat$valuedatetime == max(FI_dat$valuedatetime)]) - mean(FI_dat$datavalue.norm[FI_dat$valuedatetime == min(FI_dat$valuedatetime)])
  
  meanDiff = function(data, indices) { 
    d <- data[indices,] # allows boot to select sample
    m1 = mean(d$datavalue.norm[d$valuedatetime == max(d$valuedatetime)])
    m2 = mean(d$datavalue.norm[d$valuedatetime == min(d$valuedatetime)])
    m = m1 - m2
    return(m)
  }
  
  FI_boot = boot(FI_dat, meanDiff, R = 10000, strata = as.factor(FI_dat[,1]))
  FI_bootCI = boot.ci(FI_boot, type="bca")
  
  FI_bootCI = data.frame(cbind(FI_boot$t0, FI_bootCI[["bca"]][4], FI_bootCI[["bca"]][5]))
  names(FI_bootCI) = c("FI", "lower", "upper")
  
  FI_results = list(FI_dat, FI_bootCI)
  
  return(FI_results)
}

# calculate FI by difference and bootstrap CIs #

# FRCH # 
# NO3
FRCH_storm1_06_21_NO3_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm1_06_21_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm1_06_21_NO3`)
FRCH_storm2a_06_29_NO3_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2a_06_29_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2a_06_29_NO3`)
#FRCH_storm2b_07_04_NO3_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2b_07_04_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2b_07_04_NO3`)
FRCH_storm3_07_10_NO3_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm3_07_10_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm3_07_10_NO3`)
FRCH_storm4a_07_15_NO3_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm4a_07_15_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm4a_07_15_NO3`)
FRCH_storm4b_07_16_NO3_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm4b_07_16_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm4b_07_16_NO3`)
FRCH_storm5_08_04_NO3_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm5_08_04_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm5_08_04_NO3`)

#fDOM
FRCH_storm1_06_21_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm1_06_21_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm1_06_21_fDOM`)
#FRCH_storm2a_06_29_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2a_06_29_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2a_06_29_fDOM`)
#FRCH_storm2b_07_04_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2b_07_04_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2b_07_04_fDOM`)
#FRCH_storm3_07_10_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm3_07_10_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm3_07_10_fDOM`)
#FRCH_storm4a_07_15_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm4a_07_15_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm4a_07_15_fDOM`)
#FRCH_storm4b_07_16_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm4b_07_16_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm4b_07_16_fDOM`)
FRCH_storm5_08_04_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm5_08_04_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm5_08_04_fDOM`)
FRCH_storm6_08_13_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm6_08_13_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm6_08_13_fDOM`)
FRCH_storm7_08_23_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm7_08_23_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm7_08_23_fDOM`)
#FRCH_storm8a_08_26_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8a_08_26_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8a_08_26_fDOM`)
FRCH_storm8b_08_27_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8b_08_27_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8b_08_27_fDOM`)
FRCH_storm9_08_29_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm9_08_29_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm9_08_29_fDOM`)
FRCH_storm10_09_01_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm10_09_01_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm10_09_01_fDOM`)
FRCH_storm11a_09_22_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11a_09_22_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11a_09_22_fDOM`)
FRCH_storm11b_09_24_fDOM_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11b_09_24_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11b_09_24_fDOM`)

#SPC
FRCH_storm1_06_21_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm1_06_21_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm1_06_21_SPC`)
#FRCH_storm2a_06_29_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2a_06_29_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm2a_06_29_SPC`)
#FRCH_storm2b_07_04_SPC_FI = FI_diff()
#FRCH_storm3_07_10_SPC_FI = FI_diff()
#FRCH_storm4a_07_15_SPC_FI = FI_diff()
#FRCH_storm4b_07_16_SPC_FI = FI_diff()
FRCH_storm5_08_04_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm5_08_04_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm5_08_04_SPC`)
FRCH_storm6_08_13_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm6_08_13_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm6_08_13_SPC`)
FRCH_storm7_08_23_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm7_08_23_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm7_08_23_SPC`)
#FRCH_storm8a_08_26_SPC_FI = FI_diff()
FRCH_storm8b_08_27_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8b_08_27_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8b_08_27_SPC`) # 0.0277777777777762
FRCH_storm9_08_29_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm9_08_29_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm9_08_29_SPC`)
FRCH_storm10_09_01_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm10_09_01_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm10_09_01_SPC`)
#FRCH_storm11a_09_22_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11a_09_22_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11a_09_22_SPC`)
FRCH_storm11b_09_24_SPC_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11b_09_24_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11b_09_24_SPC`)

#turb
FRCH_storm1_06_21_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm1_06_21_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm1_06_21_Turb`)
#FRCH_storm2a_06_29_turb_FI = FI_diff()
##FRCH_storm2b_07_04_turb_FI = FI_diff()
#FRCH_storm3_07_10_turb_FI = FI_diff()
#FRCH_storm4a_07_15_turb_FI = FI_diff()
#FRCH_storm4b_07_16_turb_FI = FI_diff()
FRCH_storm5_08_04_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm5_08_04_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm5_08_04_Turb`)
FRCH_storm6_08_13_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm6_08_13_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm6_08_13_Turb`)
FRCH_storm7_08_23_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm7_08_23_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm7_08_23_Turb`)
FRCH_storm8a_08_26_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8a_08_26_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8a_08_26_Turb`)
#FRCH_storm8b_08_27_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8b_08_27_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm8b_08_27_Turb`)
FRCH_storm9_08_29_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm9_08_29_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm9_08_29_Turb`)
FRCH_storm10_09_01_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm10_09_01_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm10_09_01_Turb`)
FRCH_storm11a_09_22_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11a_09_22_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11a_09_22_Turb`)
FRCH_storm11b_09_24_turb_FI = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11b_09_24_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//FRCH_storm11b_09_24_Turb`)


# MOOS # 
# NO3
MOOS_storm1_06_21_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm1_06_21_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm1_06_21_NO3`)
#MOOS_storm2a_06_29_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2a_06_29_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2a_06_29_NO3`)
#MOOS_storm2b_07_01_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2b_07_01_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2b_07_01_NO3`)
#MOOS_storm2c_07_04_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2c_07_04_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2c_07_04_NO3`)
MOOS_storm3_07_09_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm3_07_09_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm3_07_09_NO3`)
MOOS_storm4_07_15_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm4_07_15_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm4_07_15_NO3`)
MOOS_storm5_08_04_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm5_08_04_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm5_08_04_NO3`)
MOOS_storm6_08_13_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm6_08_13_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm6_08_13_NO3`)
MOOS_storm7_08_23_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm7_08_23_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm7_08_23_NO3`)
MOOS_storm8a_08_26_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8a_08_26_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8a_08_26_NO3`)
MOOS_storm8b_08_27_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8b_08_27_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8b_08_27_NO3`)
MOOS_storm9_08_29_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm9_08_29_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm9_08_29_NO3`)
MOOS_storm10_09_01_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm10_09_01_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm10_09_01_NO3`)
MOOS_storm11a_09_22_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11a_09_22_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11a_09_22_NO3`)
MOOS_storm11b_09_23_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11b_09_23_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11b_09_23_NO3`)
MOOS_storm12_09_24_NO3_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm12_09_24_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm12_09_24_NO3`)

#fDOM
MOOS_storm1_06_21_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm1_06_21_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm1_06_21_fDOM`)
#MOOS_storm2a_06_29_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2a_06_29_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2a_06_29_fDOM`)
#MOOS_storm2b_07_01_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2b_07_01_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2b_07_01_fDOM`)
#MOOS_storm2c_07_04_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2c_07_04_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm2c_07_04_fDOM`)
#MOOS_storm3_07_09_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm3_07_09_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm3_07_09_fDOM`)
#MOOS_storm4_07_15_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm4_07_15_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm4_07_15_fDOM`)
MOOS_storm5_08_04_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm5_08_04_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm5_08_04_fDOM`) # 0.254818972259281
MOOS_storm6_08_13_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm6_08_13_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm6_08_13_fDOM`) # 0.139685321981553
MOOS_storm7_08_23_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm7_08_23_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm7_08_23_fDOM`) # 0.150231221097363
#MOOS_storm8a_08_26_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8a_08_26_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8a_08_26_fDOM`)
MOOS_storm8b_08_27_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8b_08_27_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8b_08_27_fDOM`) # 0.206574024585783
#MOOS_storm9_08_29_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm9_08_29_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm9_08_29_fDOM`)
#MOOS_storm10_09_01_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm10_09_01_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm10_09_01_fDOM`)
MOOS_stor11a_09_22_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11a_09_22_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11a_09_22_fDOM`) # 0.569246097641979
MOOS_storm11b_09_23_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11b_09_23_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11b_09_23_fDOM`) # 0.346520146520147
MOOS_storm12_09_24_fDOM_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm12_09_24_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm12_09_24_fDOM`)

#SPC
MOOS_storm1_06_21_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm1_06_21_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm1_06_21_SPC`)
#MOOS_storm2a_06_29_SPC_FI
#MOOS_storm2b_07_01_SPC_FI 
#MOOS_storm2c_07_04_SPC_FI
#MOOS_storm3_07_09_SPC_FI
MOOS_storm4_07_15_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm4_07_15_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm4_07_15_SPC`)
MOOS_storm5_08_04_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm5_08_04_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm5_08_04_SPC`)
MOOS_storm6_08_13_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm6_08_13_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm6_08_13_SPC`)
MOOS_storm7_08_23_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm7_08_23_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm7_08_23_SPC`)
MOOS_storm8a_08_26_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8a_08_26_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8a_08_26_SPC`)
MOOS_storm8b_08_27_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8b_08_27_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8b_08_27_SPC`)
MOOS_storm9_08_29_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm9_08_29_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm9_08_29_SPC`) # 0.00893854748603373
MOOS_storm10_09_01_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm10_09_01_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm10_09_01_SPC`)
MOOS_stor11a_09_22_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11a_09_22_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11a_09_22_SPC`)
MOOS_storm11b_09_23_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11b_09_23_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11b_09_23_SPC`)
MOOS_storm12_09_24_SPC_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm12_09_24_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm12_09_24_SPC`) # 0.00101214574898778
 
#turb
MOOS_storm1_06_21_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm1_06_21_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm1_06_21_Turb`)
MOOS_storm2a_06_29_turb_FI = 
MOOS_storm2b_07_01_turb_FI 
MOOS_storm2c_07_04_turb_FI
#MOOS_storm3_07_09_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm3_07_09_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm3_07_09_Turb`)
#MOOS_storm4_07_15_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm4_07_15_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm4_07_15_Turb`)
MOOS_storm5_08_04_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm5_08_04_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm5_08_04_Turb`) #0.330552981155391
MOOS_storm6_08_13_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm6_08_13_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm6_08_13_Turb`) # 0.354272517321016
MOOS_storm7_08_23_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm7_08_23_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm7_08_23_Turb`) # 0.45563465879493
MOOS_storm8a_08_26_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8a_08_26_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8a_08_26_Turb`) # 0.451545433418545
MOOS_storm8b_08_27_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8b_08_27_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm8b_08_27_Turb`) # 0.0596426084938501
MOOS_storm9_08_29_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm9_08_29_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm9_08_29_Turb`) # 0.216361788617886
MOOS_storm10_09_01_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm10_09_01_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm10_09_01_Turb`) # 0.21969732984708 
MOOS_stor11a_09_22_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11a_09_22_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11a_09_22_Turb`) # 0.395529380270379
MOOS_storm11b_09_23_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11b_09_23_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm11b_09_23_Turb`) # 0.0449070631970259
MOOS_storm12_09_24_turb_FI = FI_diff(MOOS_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm12_09_24_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//MOOS_storm12_09_24_Turb`) # 0.0935303526097228

# CARI # 
# NO3
#CARI_storm1_06_10_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm1_06_10_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm1_06_10_NO3`)
#CARI_storm2_06_21_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm2_06_21_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm2_06_21_NO3`)
#CARI_storm3_06_29_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm3_06_29_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm3_06_29_NO3`)
#CARI_storm4a_06_30_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4a_06_30_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4a_06_30_NO3`)
#CARI_storm4b_07_01_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4b_07_01_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4b_07_01_NO3`)
#CARI_storm5a_08_04_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5a_08_04_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5a_08_04_NO3`)
#CARI_storm5b_08_05_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5b_08_05_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5b_08_05_NO3`)
CARI_storm5c_08_06_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5c_08_06_Q`,CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5c_08_06_NO3`) #0.0465116279069774
#CARI_storm6_08_13_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm6_08_13_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm6_08_13_NO3`)
#CARI_storm7_08_21_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm7_08_21_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm7_08_21_NO3`)
#CARI_storm8_08_24_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm8_08_24_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm8_08_24_NO3`)
#CARI_storm9_08_26_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm9_08_26_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm9_08_26_NO3`)
#CARI_storm10_08_30_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm10_08_30_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm10_08_30_NO3`)
#CARI_storm11_09_02_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm11_09_02_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm11_09_02_NO3`)
#CARI_storm12a_09_20_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12a_09_20_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12a_09_20_NO3`)
#CARI_storm12b_09_25_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12b_09_25_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12b_09_25_NO3`)

# fDOM
#CARI_storm1_06_10_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm1_06_10_Q`,CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm1_06_10_fDOM`) 
CARI_storm2_06_21_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm2_06_21_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm2_06_21_fDOM`) # 0.453265044814341
CARI_storm3_06_29_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm3_06_29_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm3_06_29_fDOM`) #0.654370489174017
#CARI_storm4a_06_30_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4a_06_30_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4a_06_30_fDOM`) 
#CARI_storm4b_07_01_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4b_07_01_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4b_07_01_fDOM`) 
CARI_storm5a_08_04_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5a_08_04_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5a_08_04_fDOM`) #0.161242603550296
CARI_storm5b_08_05_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5b_08_05_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5b_08_05_fDOM`) #0.572166514737162
CARI_storm5c_08_06_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5c_08_06_Q`,  CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5c_08_06_fDOM`) #0.316719453242207
CARI_storm6_08_13_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm6_08_13_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm6_08_13_fDOM`) #0.777721416252409
#CARI_storm7_08_21_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm7_08_21_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm7_08_21_fDOM`) w is infinite
CARI_storm8_08_24_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm8_08_24_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm8_08_24_fDOM`) #0.608794197642793
CARI_storm9_08_26_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm9_08_26_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm9_08_26_fDOM`) #0.884684684684685
CARI_storm10_08_30_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm10_08_30_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm10_08_30_fDOM`) # 0.650042782055983
CARI_storm11_09_02_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm11_09_02_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm11_09_02_fDOM`) #0.814095449500555
#CARI_storm12a_09_20_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12a_09_20_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12a_09_20_fDOM`) # missing value where TRUE/FALSE needed
CARI_storm12b_09_25_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12b_09_25_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12b_09_25_fDOM`) #0.0677162175799779


# SPC
#CARI_storm1_06_10_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm1_06_10_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm1_06_10_SPC`)
CARI_storm2_06_21_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm2_06_21_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm2_06_21_SPC`) # 0.24927536231884
##CARI_storm3_06_29_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm3_06_29_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm3_06_29_SPC`) # w is inifinite
#CARI_storm4a_06_30_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4a_06_30_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4a_06_30_SPC`) #w is inifinite
#CARI_storm4b_07_01_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4b_07_01_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4b_07_01_SPC`)#w is inifinite
#CARI_storm5a_08_04_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5a_08_04_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5a_08_04_SPC`)# w is infnite
#CARI_storm5b_08_05_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5b_08_05_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5b_08_05_SPC`) # w is infinite
#CARI_storm5c_08_06_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5c_08_06_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5c_08_06_SPC`)#w is inifinite
#CARI_storm6_08_13_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm6_08_13_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm6_08_13_SPC`)#w is inifinite
#CARI_storm7_08_21_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm7_08_21_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm7_08_21_SPC`)#w is inifinite
#CARI_storm8_08_24_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm8_08_24_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm8_08_24_SPC`)#w is inifinite
#CARI_storm9_08_26_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm9_08_26_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm9_08_26_SPC`)#w is inifinite
#CARI_storm10_08_30_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm10_08_30_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm10_08_30_SPC`)#w is inifinite
#CARI_storm11_09_02_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm11_09_02_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm11_09_02_SPC`)#w is inifinite
#CARI_storm12a_09_20_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12a_09_20_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12a_09_20_SPC`) # missing values 
CARI_storm12b_09_25_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12b_09_25_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12b_09_25_SPC`) # 0.058107696988135

# turb
CARI_storm1_06_10_SP_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm1_06_10_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm1_06_10_Turb`) #0.27755905511811
#CARI_storm2_06_21_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm2_06_21_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm2_06_21_Turb`)
CARI_storm3_06_29_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm3_06_29_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm3_06_29_Turb`)#0.778284671532847
CARI_storm4a_06_30_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4a_06_30_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4a_06_30_Turb`) # 0.0558476295886368
CARI_storm4b_07_01_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4b_07_01_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm4b_07_01_Turb`) #0.390557939914163
CARI_storm5a_08_04_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5a_08_04_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5a_08_04_Turb`)#0.689542483660131
CARI_storm5b_08_05_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5b_08_05_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5b_08_05_Turb`) #0.702678571428571
CARI_storm5c_08_06_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5c_08_06_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm5c_08_06_Turb`) #0.528497409326425
CARI_storm6_08_13_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm6_08_13_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm6_08_13_Turb`) #0.315496098104794
CARI_storm7_08_21_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm7_08_21_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm7_08_21_Turb`)#0.308176100628931
CARI_storm8_08_24_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm8_08_24_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm8_08_24_Turb`) # 0.725738396624473
CARI_storm9_08_26_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm9_08_26_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm9_08_26_Turb`) # 0.431818181818182
CARI_storm10_08_30_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm10_08_30_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm10_08_30_Turb`) #0.0079810604885815
CARI_storm11_09_02_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm11_09_02_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm11_09_02_Turb`) #0.011472275334608
#CARI_storm12a_09_20_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12a_09_20_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12a_09_20_Turb`)
CARI_storm12b_09_25_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12b_09_25_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//CARI_storm12b_09_25_Turb`) # 0.0937499999999999


# gather results and save #

FI_results = rbind(
  c("FRCH_storm1_06_21_NO3_FI",FRCH_storm1_06_21_NO3_FI[[2]]),
    c("FRCH_storm2a_06_29_NO3_FI",FRCH_storm2a_06_29_NO3_FI[[2]]),
  c("FRCH_storm2b_07_01_NO3_FI",NA, NA, NA),
  c("FRCH_storm2c_07_04_NO3_FI",NA, NA, NA),
    c("FRCH_storm3_07_10_NO3_FI",FRCH_storm3_07_10_NO3_FI[[2]]),
    c("FRCH_storm4a_07_15_NO3_FI",FRCH_storm4a_07_15_NO3_FI[[2]]),
    c("FRCH_storm4b_07_16_NO3_FI",FRCH_storm4b_07_16_NO3_FI[[2]]),
    c("FRCH_storm5_08_04_NO3_FI",FRCH_storm5_08_04_NO3_FI[[2]]),
  c("FRCH_storm6_08_13_NO3_FI",NA, NA, NA),
  c("FRCH_storm7_08_23_NO3_FI",NA, NA, NA),
  c("FRCH_storm8b_08_27_NO3_FI",NA, NA, NA),
  c("FRCH_storm9_08_29_NO3_FI",NA, NA, NA),
  c("FRCH_storm10_09_01_NO3_FI",NA, NA, NA),
  c("FRCH_storm11a_09_22_NO3_FI",NA, NA, NA),
  c("FRCH_storm11b_09_24_NO3_FI",NA, NA, NA),
  
  c("FRCH_storm1_06_21_fDOM_FI",FRCH_storm1_06_21_fDOM_FI[[2]]),
  c("FRCH_storm2a_06_29_fDOM_FI",NA, NA, NA),
  c("FRCH_storm2b_07_01_fDOM_FI",NA, NA, NA),
  c("FRCH_storm2c_07_04_fDOM_FI",NA, NA, NA),
  c("FRCH_storm3_07_10_fDOM_FI",NA, NA, NA),
  c("FRCH_storm4a_07_15_fDOM_FI",NA, NA, NA),
  c("FRCH_storm4b_07_16_fDOM_FI",NA, NA, NA),
    c("FRCH_storm5_08_04_fDOM_FI",FRCH_storm5_08_04_fDOM_FI[[2]]),
    c("FRCH_storm6_08_13_fDOM_FI",FRCH_storm6_08_13_fDOM_FI[[2]]),
    c("FRCH_storm7_08_23_fDOM_FI",FRCH_storm7_08_23_fDOM_FI[[2]]),
  c("FRCH_storm8a_08_26_fDOM_FI",NA, NA, NA),
    c("FRCH_storm8b_08_27_fDOM_FI",FRCH_storm8b_08_27_fDOM_FI[[2]]),
    c("FRCH_storm9_08_29_fDOM_FI",FRCH_storm9_08_29_fDOM_FI[[2]]),
    c("FRCH_storm10_09_01_fDOM_FI",FRCH_storm10_09_01_fDOM_FI[[2]]),
    c("FRCH_storm11a_09_22_fDOM_FI",FRCH_storm11a_09_22_fDOM_FI[[2]]),
    c("FRCH_storm11b_09_24_fDOM_FI",FRCH_storm11b_09_24_fDOM_FI[[2]]),
  
  c("FRCH_storm1_06_21_SPC_FI",FRCH_storm1_06_21_SPC_FI[[2]]),
  c("FRCH_storm2a_06_29_SPC_FI",NA, NA, NA),
  c("FRCH_storm2b_07_01_SPC_FI",NA, NA, NA),
  c("FRCH_storm2c_07_04_SPC_FI",NA, NA, NA),
  c("FRCH_storm3_07_10_SPC_FI",NA, NA, NA),
  c("FRCH_storm4a_07_15_SPC_FI",NA, NA, NA),
  c("FRCH_storm4b_07_16_SPC_FI",NA, NA, NA),
  c("FRCH_storm5_08_04_SPC_FI",FRCH_storm5_08_04_SPC_FI[[2]]),
  c("FRCH_storm6_08_13_SPC_FI",FRCH_storm6_08_13_SPC_FI[[2]]),
  c("FRCH_storm7_08_23_SPC_FI",FRCH_storm7_08_23_SPC_FI[[2]]),
  c("FRCH_storm8a_08_26_SPC_FI",NA, NA, NA),
  c("FRCH_storm8b_08_27_SPC_FI",0.0277777777777762, NA, NA),
  c("FRCH_storm9_08_29_SPC_FI",FRCH_storm9_08_29_SPC_FI[[2]]),
  c("FRCH_storm10_09_01_SPC_FI",FRCH_storm10_09_01_SPC_FI[[2]]),
  c("FRCH_storm11b_09_24_SPC_FI",FRCH_storm11b_09_24_SPC_FI[[2]]),
  
  c("FRCH_storm1_06_21_turb_FI",FRCH_storm1_06_21_turb_FI[[2]]),
  c("FRCH_storm2a_06_29_turb_FI",NA, NA, NA),
  c("FRCH_storm2b_07_01_turb_FI",NA, NA, NA),
  c("FRCH_storm2c_07_04_turb_FI",NA, NA, NA),
  c("FRCH_storm3_07_10_turb_FI",NA, NA, NA),
  c("FRCH_storm4a_07_15_turb_FI",NA, NA, NA),
  c("FRCH_storm4b_07_16_turb_FI",NA, NA, NA),
  c("FRCH_storm5_08_04_turb_FI",FRCH_storm5_08_04_turb_FI[[2]]),
  c("FRCH_storm6_08_13_turb_FI",FRCH_storm6_08_13_turb_FI[[2]]),
  c("FRCH_storm7_08_23_turb_FI",FRCH_storm7_08_23_turb_FI[[2]]),
  c("FRCH_storm8a_08_26_turb_FI",NA, NA, NA),
  c("FRCH_storm8b_08_27_turb_FI",NA, NA, NA),
  c("FRCH_storm9_08_29_turb_FI",FRCH_storm9_08_29_turb_FI[[2]]),
  c("FRCH_storm10_09_01_turb_FI",FRCH_storm10_09_01_turb_FI[[2]]),
  c("FRCH_storm11a_09_22_turb_FI",FRCH_storm11a_09_22_turb_FI[[2]]),
  c("FRCH_storm11b_09_24_turb_FI",FRCH_storm11b_09_24_turb_FI[[2]]),
  c("MOOS_storm1_06_21_NO3_FI",MOOS_storm1_06_21_NO3_FI[[2]]),
  c("MOOS_storm2a_06_29_NO3_FI",NA, NA, NA),
  c("MOOS_storm2b_07_01_NO3_FI",NA, NA, NA),
  c("MOOS_storm2c_07_04_NO3_FI",NA, NA, NA),
  c("MOOS_storm3_07_09_NO3_FI",MOOS_storm3_07_09_NO3_FI[[2]]),
  c("MOOS_storm4_07_15_NO3_FI",MOOS_storm4_07_15_NO3_FI[[2]]),
  c("MOOS_storm5_08_04_NO3_FI",MOOS_storm5_08_04_NO3_FI[[2]]),
  c("MOOS_storm6_08_13_NO3_FI",MOOS_storm6_08_13_NO3_FI[[2]]),
  c("MOOS_storm7_08_23_NO3_FI",MOOS_storm7_08_23_NO3_FI[[2]]),
  c("MOOS_storm8a_08_26_NO3_FI",MOOS_storm8a_08_26_NO3_FI[[2]]),
  c("MOOS_storm8b_08_27_NO3_FI",MOOS_storm8b_08_27_NO3_FI[[2]]),
  c("MOOS_storm9_08_29_NO3_FI",MOOS_storm9_08_29_NO3_FI[[2]]),
  c("MOOS_storm10_09_01_NO3_FI",MOOS_storm10_09_01_NO3_FI[[2]]),
  c("MOOS_storm11a_09_22_NO3_FI",MOOS_storm11a_09_22_NO3_FI[[2]]),
  c("MOOS_storm11b_09_23_NO3_FI",MOOS_storm11b_09_23_NO3_FI[[2]]),
  c("MOOS_storm12_09_24_NO3_FI",MOOS_storm12_09_24_NO3_FI[[2]]),
  c("MOOS_storm1_06_21_fDOM_FI",MOOS_storm1_06_21_fDOM_FI[[2]]),
  c("MOOS_storm2a_06_29_fDOM_FI",NA, NA, NA),
  c("MOOS_storm2b_07_01_fDOM_FI",NA, NA, NA),
  c("MOOS_storm2c_07_04_fDOM_FI",NA, NA, NA),
  c("MOOS_storm3_07_09_fDOM_FI",NA, NA, NA),
  c("MOOS_storm4_07_15_fDOM_FI",NA, NA, NA),
  c("MOOS_storm5_08_04_fDOM_FI",0.254818972259281, NA,NA),
  c("MOOS_storm6_08_13_fDOM_FI",0.139685321981553, NA, NA),
  c("MOOS_storm7_08_23_fDOM_FI",0.150231221097363, NA, NA),
  c("MOOS_storm8a_08_26_fDOM_FI",NA,NA,NA),
  c("MOOS_storm8b_08_27_fDOM_FI",0.206574024585783, NA, NA),
  c("MOOS_storm9_08_29_fDOM_FI",NA,NA,NA),
  c("MOOS_storm10_09_01_fDOM_FI",NA,NA,NA),
  c("MOOS_storm11a_09_22_fDOM_FI",0.569246097641979, NA, NA),
  c("MOOS_storm11b_09_23_fDOM_FI",0.346520146520147, NA, NA),
  c("MOOS_storm12_09_24_fDOM_FI",NA,NA,NA),
  c("MOOS_storm1_06_21_SPC_FI", MOOS_storm1_06_21_SPC_FI[[2]]),
  c("MOOS_storm2a_06_29_SPC_FI",NA, NA, NA),
  c("MOOS_storm2b_07_01_SPC_FI",NA, NA, NA),
  c("MOOS_storm2c_07_04_SPC_FI",NA, NA, NA),
  c("MOOS_storm3_07_09_SPC_FI",NA, NA, NA),
  c("MOOS_storm4_07_15_SPC_FI",NA, NA, NA),
  c("MOOS_storm5_08_04_SPC_FI",NA, NA, NA),
  c("MOOS_storm6_08_13_SPC_FI",NA, NA, NA),
  c("MOOS_storm7_08_23_SPC_FI",NA, NA, NA),
  c("MOOS_storm8a_08_26_SPC_FI",NA,NA,NA),
  c("MOOS_storm8b_08_27_SPC_FI",NA, NA, NA),
  c("MOOS_storm9_08_29_SPC_FI", 0.00893854748603373, NA, NA),
  c("MOOS_storm10_09_01_SPC_FI",NA, NA, NA),
  c("MOOS_storm11a_09_22_SPC_FI",NA, NA, NA),
  c("MOOS_storm11b_09_23_SPC_FI",NA, NA, NA),
  c("MOOS_storm12_09_24_SPC_FI", 0.00101214574898778, NA, NA),
  c("MOOS_storm1_06_21_turb_FI",MOOS_storm1_06_21_NO3_FI[[2]]),
  c("MOOS_storm2a_06_29_turb_FI",NA, NA, NA),
  c("MOOS_storm2b_07_01_turb_FI",NA, NA, NA),
  c("MOOS_storm2c_07_04_turb_FI",NA, NA, NA),
  c("MOOS_storm3_07_09_turb_FI",NA, NA, NA),
  c("MOOS_storm4_07_15_turb_FI",NA, NA, NA),
  c("MOOS_storm5_08_04_turb_FI",0.330552981155391, NA, NA), 
  c("MOOS_storm6_08_13_turb_FI",0.354272517321016, NA, NA),
  c("MOOS_storm7_08_23_turb_FI",0.45563465879493, NA, NA),
  c("MOOS_storm8a_08_26_turb_FI", 0.451545433418545, NA, NA),
  c("MOOS_storm8b_08_27_turb_FI",0.0596426084938501, NA, NA),
  c("MOOS_storm9_08_29_turb_FI",0.216361788617886, NA, NA),
  c("MOOS_storm10_09_01_turb_FI",0.21969732984708 ,NA, NA),
  c("MOOS_storm11a_09_22_turb_FI",0.395529380270379, NA, NA),
  c("MOOS_storm11b_09_23_turb_FI", 0.0449070631970259, NA, NA),
  c("MOOS_storm12_09_24_turb_FI",0.0935303526097228, NA, NA),
  
  c("CARI_storm1_06_10_NO3_FI",NA, NA, NA),
  c("CARI_storm2_06_21_NO3_FI",NA, NA, NA),
  c("CARI_storm3_06_29_NO3_FI",NA, NA, NA),
  c("CARI_storm4a_06_30_NO3_FI",NA, NA, NA),
  c("CARI_storm4b_07_01_NO3_FI",NA, NA, NA),
  c("CARI_storm5a_08_04_NO3_FI",NA, NA, NA),
  c("CARI_storm5b_08_05_NO3_FI",NA, NA, NA),
  c("CARI_storm5c_08_06_NO3_FI",0.0465116279069774, NA, NA),
  c("CARI_storm6_08_13_NO3_FI",NA, NA, NA),
  c("CARI_storm7_08_21_NO3_FI",NA, NA, NA),
  c("CARI_storm8_08_24_NO3_FI",NA, NA, NA),
  c("CARI_storm9_08_26_NO3_FI",NA, NA, NA),
  c("CARI_storm10_08_30_NO3_FI",NA, NA, NA),
  c("CARI_storm11_09_02_NO3_FI",NA, NA, NA),
  c("CARI_storm12a_09_20_NO3_FI",NA, NA, NA),
  c("CARI_storm12b_09_25_NO3_FI",NA, NA, NA),
  
  c("CARI_storm1_06_10_fDOM_FI",0.247818910634285, NA, NA),
  c("CARI_storm2_06_21_fDOM_FI",0.453265044814341,NA,NA),
  c("CARI_storm3_06_29_fDOM_FI",0.654370489174017,NA,NA),
  c("CARI_storm4a_06_30_fDOM_FI",0.373843342959863,NA,NA),
  c("CARI_storm4b_07_01_fDOM_FI",0.420978398040234,NA,NA),
  c("CARI_storm5a_08_04_fDOM_FI",0.161242603550296,NA,NA),
  c("CARI_storm5b_08_05_fDOM_FI",0.572166514737162,NA,NA),
  c("CARI_storm5c_08_06_fDOM_FI",0.316719453242207,NA,NA),
  c("CARI_storm6_08_13_fDOM_FI",0.777721416252409,NA,NA),
  c("CARI_storm7_08_21_fDOM_FI",NA,NA,NA),
  c("CARI_storm8_08_24_fDOM_FI",0.608794197642793,NA,NA),
  c("CARI_storm9_08_26_fDOM_FI",0.884684684684685,NA,NA),
  c("CARI_storm10_08_30_fDOM_FI",0.650042782055983,NA,NA),
  c("CARI_storm11_09_02_fDOM_FI",0.814095449500555,NA,NA),
  c("CARI_storm12a_09_20_fDOM_FI",NA,NA,NA),
  c("CARI_storm12b_09_25_fDOM_FI",0.0677162175799779,NA,NA),
  
  c("CARI_storm1_06_10_SPC_FI",NA,NA,NA),
  c("CARI_storm2_06_21_SPC_FI",.24927536231884,NA,NA),
  c("CARI_storm3_06_29_SPC_FI",NA,NA,NA),
  c("CARI_storm4a_06_30_SPC_FI",NA,NA,NA),
  c("CARI_storm4b_07_01_SPC_FI",NA,NA,NA),
  c("CARI_storm5a_08_04_SPC_FI",NA,NA,NA),
  c("CARI_storm5b_08_05_SPC_FI",NA,NA,NA),
  c("CARI_storm5c_08_06_SPC_FI",NA,NA,NA),
  c("CARI_storm6_08_13_SPC_FI",NA,NA,NA),
  c("CARI_storm7_08_21_SPC_FI",NA,NA,NA),
  c("CARI_storm8_08_24_SPC_FI",NA,NA,NA),
  c("CARI_storm9_08_26_SPC_FI",NA,NA,NA),
  c("CARI_storm10_08_30_SPC_FI",NA,NA,NA),
  c("CARI_storm11_09_02_SPC_FI",NA,NA,NA),
  c("CARI_storm12a_09_20_SPC_FI",NA,NA,NA),
  c("CARI_storm12b_09_25_SPC_FI",0.0371479928100658,NA,NA),
  
  c("CARI_storm1_06_10_turb_FI",0.27755905511811,NA,NA),
  c("CARI_storm2_06_21_turb_FI",NA,NA,NA),
  c("CARI_storm3_06_29_turb_FI",0.778284671532847,NA,NA),
  c("CARI_storm4a_06_30_turb_FI", 0.0558476295886368,NA,NA),
  c("CARI_storm4b_07_01_turb_FI",0.390557939914163,NA,NA),
  c("CARI_storm5a_08_04_turb_FI",0.689542483660131,NA,NA),
  c("CARI_storm5b_08_05_turb_FI",0.702678571428571,NA,NA),
  c("CARI_storm5c_08_06_turb_FI",0.528497409326425,NA,NA),
  c("CARI_storm6_08_13_turb_FI",0.315496098104794,NA,NA),
  c("CARI_storm7_08_21_turb_FI",0.308176100628931,NA,NA),
  c("CARI_storm8_08_24_turb_FI",0.725738396624473,NA,NA),
  c("CARI_storm9_08_26_turb_FI",0.431818181818182,NA,NA),
  c("CARI_storm10_08_30_turb_FI",0.0079810604885815,NA,NA),
  c("CARI_storm11_09_02_turb_FI",0.011472275334608,NA,NA),
  c("CARI_storm12a_09_20_turb_FI",NA,NA,NA),
  c("CARI_storm12b_09_25_turb_FI",0.0937499999999999,NA,NA))
  


FI_results = as.data.frame(FI_results)

names(FI_results) = c("ID", "Flushing_index", "percCI_2.5", "percCI_97.5")

FI_results$ID = unlist(FI_results$ID)
FI_results$Flushing_index = round(as.numeric(as.character(FI_results$Flushing_index)), 4)
FI_results$`percCI_2.5` = round(as.numeric(as.character(FI_results$`percCI_2.5`)), 4)
FI_results$`percCI_97.5` = round(as.numeric(as.character(FI_results$`percCI_97.5`)), 4)

write.csv(FI_results, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/all.FI.diff.results_2018.csv")

  
# calculate 95% bootstrap around median of Hyst. Indicies for each site and storm #

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}

# FRCH #
FRCH.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2018/FRCH/FRCH.HI.df.csv")

storm.list = unique(FRCH.HI.df$storm.ID)
FRCH.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(FRCH.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
FRCH.HI.boot$storm.ID = storm.list

# MOOS #
MOOS.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2018/MOOS/MOOS.HI.df.csv")

storm.list = unique(MOOS.HI.df$storm.ID)
MOOS.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(MOOS.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
MOOS.HI.boot$storm.ID = storm.list

# CARI #
CARI.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2018/CARI/CARI.HI.df.csv")

storm.list = unique(CARI.HI.df$storm.ID)
CARI.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(CARI.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
CARI.HI.boot$storm.ID = storm.list


# join data #

FRCH.HI.boot$site.ID = "FRCH"
MOOS.HI.boot$site.ID = "MOOS"
CARI.HI.boot$site.ID = "CARI"


HI = rbind(FRCH.HI.boot, MOOS.HI.boot, CARI.HI.boot)

all.FI.diff.results = read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/all.FI.diff.results_2018.csv", header = T, row.names = 1)

FI = subset(all.FI.diff.results, select=c("Flushing_index", "percCI_2.5", "percCI_97.5", "ID"))
FI$ID = as.character(FI$ID)
FI = separate(FI, ID, into=c("site.ID", "storm.ID", "month", "day", "response_var", NA), sep = "_")
names(FI) = c("Flush_index", "FI_ymin", "FI_ymax","site.ID", "storm.ID", "month", "day", "response_var")

HI$site.ID=NULL
HI = separate(HI, storm.ID, into=c("site.ID", "storm.ID", "month", "day", "response_var"), sep = "_")
names(HI) = c("Hyst_index", "HI_ymin", "HI_ymax","site.ID", "storm.ID", "month", "day", "response_var")

HI_FI = left_join(HI, FI, by=c("site.ID", "storm.ID", "response_var"))
write.csv(HI_FI, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results.2018.csv")


# plot #

# NO3 #
HI_FI_NO3 = subset(HI_FI, response_var == "NO3")
HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS', 'CARI'))

HI_FI_NO3.p = 
  ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS', 'CARI'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

# SPC #
HI_FI_SPC = subset(HI_FI, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS', 'CARI'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p

# turb #
HI_FI_turb = subset(HI_FI, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS', 'CARI'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


grid.arrange(HI_FI_NO3.p,HI_FI_fDOM.p,HI_FI_SPC.p,HI_FI_turb.p)

########################################### 2019 ########################################################
# load storm data to R #

### Q dat ###
# FRCH #
FRCH_storm1_05_31_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm1_05_31_Q.csv", header=T, row.names = 1) 
FRCH_storm2_06_15_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm2_06_15_Q.csv", header=T, row.names = 1) 
FRCH_storm3_06_18_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm3_06_18_Q.csv", header=T, row.names = 1) 
FRCH_storm4_06_20_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm4_06_20_Q.csv", header=T, row.names = 1) 
FRCH_storm5_06_22_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm5_06_22_Q.csv", header=T, row.names = 1) 
FRCH_storm6_07_12_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm6_07_12_Q.csv", header=T, row.names = 1) 
FRCH_storm7_07_25_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm7_07_25_Q.csv", header=T, row.names = 1) 
FRCH_storm8_07_28_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm8_07_28_Q.csv", header=T, row.names = 1) 
FRCH_storm9a_07_29_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9a_07_29_Q.csv", header=T, row.names = 1) 
FRCH_storm9b_07_30_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm9b_07_30_Q.csv", header=T, row.names = 1) 
FRCH_storm10a_08_01_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10a_08_01_Q.csv", header=T, row.names = 1) 
FRCH_storm10b_08_02_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10b_08_02_Q.csv", header=T, row.names = 1) 
FRCH_storm10c_08_03_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm10c_08_03_Q.csv", header=T, row.names = 1) 
FRCH_storm11_08_05_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm11_08_05_Q.csv", header=T, row.names = 1) 
FRCH_storm12a_08_12_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12a_08_12_Q.csv", header=T, row.names = 1) 
FRCH_storm12b_08_14_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12b_08_14_Q.csv", header=T, row.names = 1) 
FRCH_storm12c_08_15_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12c_08_15_Q.csv", header=T, row.names = 1) 
FRCH_storm12d_08_21_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12d_08_21_Q.csv", header=T, row.names = 1) 
FRCH_storm12e_08_23_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm12e_08_23_Q.csv", header=T, row.names = 1) 
FRCH_storm13_09_20_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm13_09_20_Q.csv", header=T, row.names = 1) 
FRCH_storm14_10_01_Q = read.csv("~/Documents/Storms/Storm_Events/2019/FRCH/FRCH_storm14_10_01_Q.csv", header=T, row.names = 1) 

# MOOS #
MOOS_storm1_06_01_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm1_06_01_Q.csv", header=T, row.names = 1) 
MOOS_storm3_07_12_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm3_07_12_Q.csv", header=T, row.names = 1) 
MOOS_storm4_07_25_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm4_07_25_Q.csv", header=T, row.names = 1) 
MOOS_storm5_07_29_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm5_07_29_Q.csv", header=T, row.names = 1) 
MOOS_storm6a_08_01_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6a_08_01_Q.csv", header=T, row.names = 1) 
MOOS_storm6b_08_02_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6b_08_02_Q.csv", header=T, row.names = 1) 
MOOS_storm6c_08_03_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6c_08_03_Q.csv", header=T, row.names = 1) 
MOOS_storm6d_08_05_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm6d_08_05_Q.csv", header=T, row.names = 1) 
MOOS_storm7a_08_13_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7a_08_13_Q.csv", header=T, row.names = 1) 
MOOS_storm7b_08_14_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7b_08_14_Q.csv", header=T, row.names = 1) 
MOOS_storm7c_08_15_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm7c_08_15_Q.csv", header=T, row.names = 1) 
MOOS_storm8_09_21_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm8_09_21_Q.csv", header=T, row.names = 1) 
MOOS_storm9_10_02_Q = read.csv("~/Documents/Storms/Storm_Events/2019/MOOS/MOOS_storm9_10_02_Q.csv", header=T, row.names = 1) 

# POKE #
POKE_storm1_06_30_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm1_06_30_Q.csv", header=T, row.names = 1) 
POKE_storm2_07_12_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm2_07_12_Q.csv", header=T, row.names = 1) 
POKE_storm3_07_26_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm3_07_26_Q.csv", header=T, row.names = 1) 
POKE_storm4_07_31_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm4_07_31_Q.csv", header=T, row.names = 1) 
POKE_storm5a_08_02_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5a_08_02_Q.csv", header=T, row.names = 1) 
POKE_storm5b_08_03_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5b_08_03_Q.csv", header=T, row.names = 1) 
POKE_storm5c_08_05_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5c_08_05_Q.csv", header=T, row.names = 1) 
POKE_storm5d_08_10_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm5d_08_10_Q.csv", header=T, row.names = 1) 
POKE_storm6a_08_12_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6a_08_12_Q.csv", header=T, row.names = 1) 
POKE_storm6b_08_13_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm6b_08_13_Q.csv", header=T, row.names = 1) 
POKE_storm7_08_15_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm7_08_15_Q.csv", header=T, row.names = 1) 
POKE_storm8_09_29_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm8_09_29_Q.csv", header=T, row.names = 1) 
POKE_storm9_10_04_Q = read.csv("~/Documents/Storms/Storm_Events/2019/POKE/POKE_storm9_10_04_Q.csv", header=T, row.names = 1) 

# STRT #
STRT_storm1_05_31_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm1_05_31_Q.csv", header=T, row.names = 1) 
STRT_storm2_07_12_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm2_07_12_Q.csv", header=T, row.names = 1) 
STRT_storm3a_07_25_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3a_07_25_Q.csv", header=T, row.names = 1) 
STRT_storm3b_08_05_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3b_08_05_Q.csv", header=T, row.names = 1) 
STRT_storm3c_08_12_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm3c_08_12_Q.csv", header=T, row.names = 1) 
STRT_storm4_08_15_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm4_08_15_Q.csv", header=T, row.names = 1) 
STRT_storm5_08_20_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm5_08_20_Q.csv", header=T, row.names = 1) 
STRT_storm6_09_20_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm6_09_20_Q.csv", header=T, row.names = 1) 
STRT_storm7_10_01_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7_10_01_Q.csv", header=T, row.names = 1) 
STRT_storm7b_10_04_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7b_10_04_Q.csv", header=T, row.names = 1) 
STRT_storm7c_10_09_Q = read.csv("~/Documents/Storms/Storm_Events/2019/STRT/STRT_storm7c_10_09_Q.csv", header=T, row.names = 1) 

# VAUL #
VAUL_storm1_07_13_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm1_07_13_Q.csv", header=T, row.names = 1) 
VAUL_storm2_07_26_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm2_07_26_Q.csv", header=T, row.names = 1) 
VAUL_storm3_07_29_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm3_07_29_Q.csv", header=T, row.names = 1) 
VAUL_storm4a_08_02_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4a_08_02_Q.csv", header=T, row.names = 1) 
VAUL_storm4b_08_03_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4b_08_03_Q.csv", header=T, row.names = 1) 
VAUL_storm4c_08_05_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm4c_08_05_Q.csv", header=T, row.names = 1) 
VAUL_storm5_08_12_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm5_08_12_Q.csv", header=T, row.names = 1) 
VAUL_storm6_08_15_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm6_08_15_Q.csv", header=T, row.names = 1) 
VAUL_storm7_09_19_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm7_09_19_Q.csv", header=T, row.names = 1) 
VAUL_storm8a_09_29_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8a_09_29_Q.csv", header=T, row.names = 1) 
VAUL_storm8b_10_01_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8b_10_01_Q.csv", header=T, row.names = 1) 
VAUL_storm8c_10_04_Q = read.csv("~/Documents/Storms/Storm_Events/2019/VAUL/VAUL_storm8c_10_04_Q.csv", header=T, row.names = 1) 

### solute data with bursts ###
#NO3
FRCH_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/FRCH_NO3_storm_list.RData")
MOOS_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/MOOS_NO3_storm_list.RData")
POKE_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/POKE_NO3_storm_list.RData")
STRT_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/STRT_NO3_storm_list.RData")
VAUL_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/VAUL_NO3_storm_list.RData")

#fDOM
FRCH_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/FRCH_fDOM_storm_list.RData")
MOOS_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/MOOS_fDOM_storm_list.RData")
POKE_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/POKE_fDOM_storm_list.RData")
STRT_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/STRT_fDOM_storm_list.RData")
VAUL_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/VAUL_fDOM_storm_list.RData")

#SPC
FRCH_SPC_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/FRCH_SPC_storm_list.RData")
MOOS_SPC_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/MOOS_SPC_storm_list.RData")
POKE_SPC_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/POKE_SPC_storm_list.RData")
STRT_SPC_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/STRT_SPC_storm_list.RData")
VAUL_SPC_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/VAUL_SPC_storm_list.RData")

#turb
FRCH_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/FRCH_turb_storm_list.RData")
MOOS_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/MOOS_turb_storm_list.RData")
POKE_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/POKE_turb_storm_list.RData")
STRT_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/STRT_turb_storm_list.RData")
VAUL_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2019/VAUL_turb_storm_list.RData")

# normalize Q data #
# FRCH
FRCH_storm1_05_31_Q$datavalue.norm = 
  (FRCH_storm1_05_31_Q$datavalue - min(FRCH_storm1_05_31_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm1_05_31_Q$datavalue, na.rm=T) - min(FRCH_storm1_05_31_Q$datavalue, na.rm=T))
FRCH_storm2_06_15_Q$datavalue.norm = 
  (FRCH_storm2_06_15_Q$datavalue - min(FRCH_storm2_06_15_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm2_06_15_Q$datavalue, na.rm=T) - min(FRCH_storm2_06_15_Q$datavalue, na.rm=T))
FRCH_storm3_06_18_Q$datavalue.norm = 
  (FRCH_storm3_06_18_Q$datavalue - min(FRCH_storm3_06_18_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm3_06_18_Q$datavalue, na.rm=T) - min(FRCH_storm3_06_18_Q$datavalue, na.rm=T))
FRCH_storm4_06_20_Q$datavalue.norm = 
  (FRCH_storm4_06_20_Q$datavalue - min(FRCH_storm4_06_20_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm4_06_20_Q$datavalue, na.rm=T) - min(FRCH_storm4_06_20_Q$datavalue, na.rm=T))
FRCH_storm5_06_22_Q$datavalue.norm = 
  (FRCH_storm5_06_22_Q$datavalue - min(FRCH_storm5_06_22_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm5_06_22_Q$datavalue, na.rm=T) - min(FRCH_storm5_06_22_Q$datavalue, na.rm=T))
FRCH_storm6_07_12_Q$datavalue.norm = 
  (FRCH_storm6_07_12_Q$datavalue - min(FRCH_storm6_07_12_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm6_07_12_Q$datavalue, na.rm=T) - min(FRCH_storm6_07_12_Q$datavalue, na.rm=T))
FRCH_storm7_07_25_Q$datavalue.norm = 
  (FRCH_storm7_07_25_Q$datavalue - min(FRCH_storm7_07_25_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm7_07_25_Q$datavalue, na.rm=T) - min(FRCH_storm7_07_25_Q$datavalue, na.rm=T))
FRCH_storm8_07_28_Q$datavalue.norm = 
  (FRCH_storm8_07_28_Q$datavalue - min(FRCH_storm8_07_28_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm8_07_28_Q$datavalue, na.rm=T) - min(FRCH_storm8_07_28_Q$datavalue, na.rm=T))
FRCH_storm9a_07_29_Q$datavalue.norm = 
  (FRCH_storm9a_07_29_Q$datavalue - min(FRCH_storm9a_07_29_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm9a_07_29_Q$datavalue, na.rm=T) - min(FRCH_storm9a_07_29_Q$datavalue, na.rm=T))
FRCH_storm9b_07_30_Q$datavalue.norm = 
  (FRCH_storm9b_07_30_Q$datavalue - min(FRCH_storm9b_07_30_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm9b_07_30_Q$datavalue, na.rm=T) - min(FRCH_storm9b_07_30_Q$datavalue, na.rm=T))
FRCH_storm10a_08_01_Q$datavalue.norm = 
  (FRCH_storm10a_08_01_Q$datavalue - min(FRCH_storm10a_08_01_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm10a_08_01_Q$datavalue, na.rm=T) - min(FRCH_storm10a_08_01_Q$datavalue, na.rm=T))
FRCH_storm10b_08_02_Q$datavalue.norm = 
  (FRCH_storm10b_08_02_Q$datavalue - min(FRCH_storm10b_08_02_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm10b_08_02_Q$datavalue, na.rm=T) - min(FRCH_storm10b_08_02_Q$datavalue, na.rm=T))
FRCH_storm10c_08_03_Q$datavalue.norm = 
  (FRCH_storm10c_08_03_Q$datavalue - min(FRCH_storm10c_08_03_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm10c_08_03_Q$datavalue, na.rm=T) - min(FRCH_storm10c_08_03_Q$datavalue, na.rm=T))
FRCH_storm11_08_05_Q$datavalue.norm = 
  (FRCH_storm11_08_05_Q$datavalue - min(FRCH_storm11_08_05_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm11_08_05_Q$datavalue, na.rm=T) - min(FRCH_storm11_08_05_Q$datavalue, na.rm=T))
FRCH_storm12a_08_12_Q$datavalue.norm = 
  (FRCH_storm12a_08_12_Q$datavalue - min(FRCH_storm12a_08_12_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm12a_08_12_Q$datavalue, na.rm=T) - min(FRCH_storm12a_08_12_Q$datavalue, na.rm=T))
FRCH_storm12b_08_14_Q$datavalue.norm = 
  (FRCH_storm12b_08_14_Q$datavalue - min(FRCH_storm12b_08_14_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm12b_08_14_Q$datavalue, na.rm=T) - min(FRCH_storm12b_08_14_Q$datavalue, na.rm=T))
FRCH_storm12c_08_15_Q$datavalue.norm = 
  (FRCH_storm12c_08_15_Q$datavalue - min(FRCH_storm12c_08_15_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm12c_08_15_Q$datavalue, na.rm=T) - min(FRCH_storm12c_08_15_Q$datavalue, na.rm=T))
FRCH_storm12d_08_21_Q$datavalue.norm = 
  (FRCH_storm12d_08_21_Q$datavalue - min(FRCH_storm12d_08_21_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm12d_08_21_Q$datavalue, na.rm=T) - min(FRCH_storm12d_08_21_Q$datavalue, na.rm=T))
FRCH_storm12e_08_23_Q$datavalue.norm = 
  (FRCH_storm12e_08_23_Q$datavalue - min(FRCH_storm12e_08_23_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm12e_08_23_Q$datavalue, na.rm=T) - min(FRCH_storm12e_08_23_Q$datavalue, na.rm=T))
FRCH_storm13_09_20_Q$datavalue.norm = 
  (FRCH_storm13_09_20_Q$datavalue - min(FRCH_storm13_09_20_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm13_09_20_Q$datavalue, na.rm=T) - min(FRCH_storm13_09_20_Q$datavalue, na.rm=T))
FRCH_storm14_10_01_Q$datavalue.norm = 
  (FRCH_storm14_10_01_Q$datavalue - min(FRCH_storm14_10_01_Q$datavalue, na.rm=T)) / 
  (max(FRCH_storm14_10_01_Q$datavalue, na.rm=T) - min(FRCH_storm14_10_01_Q$datavalue, na.rm=T))

#MOOS
MOOS_storm1_06_01_Q$datavalue.norm = 
  (MOOS_storm1_06_01_Q$datavalue - min(MOOS_storm1_06_01_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm1_06_01_Q$datavalue, na.rm=T) - min(MOOS_storm1_06_01_Q$datavalue, na.rm=T))
MOOS_storm3_07_12_Q$datavalue.norm = 
  (MOOS_storm3_07_12_Q$datavalue - min(MOOS_storm3_07_12_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm3_07_12_Q$datavalue, na.rm=T) - min(MOOS_storm3_07_12_Q$datavalue, na.rm=T))
MOOS_storm4_07_25_Q$datavalue.norm = 
  (MOOS_storm4_07_25_Q$datavalue - min(MOOS_storm4_07_25_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm4_07_25_Q$datavalue, na.rm=T) - min(MOOS_storm4_07_25_Q$datavalue, na.rm=T))
MOOS_storm5_07_29_Q$datavalue.norm = 
  (MOOS_storm5_07_29_Q$datavalue - min(MOOS_storm5_07_29_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm5_07_29_Q$datavalue, na.rm=T) - min(MOOS_storm5_07_29_Q$datavalue, na.rm=T))
MOOS_storm6a_08_01_Q$datavalue.norm = 
  (MOOS_storm6a_08_01_Q$datavalue - min(MOOS_storm6a_08_01_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm6a_08_01_Q$datavalue, na.rm=T) - min(MOOS_storm6a_08_01_Q$datavalue, na.rm=T))
MOOS_storm6b_08_02_Q$datavalue.norm = 
  (MOOS_storm6b_08_02_Q$datavalue - min(MOOS_storm6b_08_02_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm6b_08_02_Q$datavalue, na.rm=T) - min(MOOS_storm6b_08_02_Q$datavalue, na.rm=T))
MOOS_storm6c_08_03_Q$datavalue.norm = 
  (MOOS_storm6c_08_03_Q$datavalue - min(MOOS_storm6c_08_03_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm6c_08_03_Q$datavalue, na.rm=T) - min(MOOS_storm6c_08_03_Q$datavalue, na.rm=T))
MOOS_storm6d_08_05_Q$datavalue.norm = 
  (MOOS_storm6d_08_05_Q$datavalue - min(MOOS_storm6d_08_05_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm6d_08_05_Q$datavalue, na.rm=T) - min(MOOS_storm6d_08_05_Q$datavalue, na.rm=T))
MOOS_storm7a_08_13_Q$datavalue.norm = 
  (MOOS_storm7a_08_13_Q$datavalue - min(MOOS_storm7a_08_13_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm7a_08_13_Q$datavalue, na.rm=T) - min(MOOS_storm7a_08_13_Q$datavalue, na.rm=T))
MOOS_storm7b_08_14_Q$datavalue.norm = 
  (MOOS_storm7b_08_14_Q$datavalue - min(MOOS_storm7b_08_14_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm7b_08_14_Q$datavalue, na.rm=T) - min(MOOS_storm7b_08_14_Q$datavalue, na.rm=T))
MOOS_storm7c_08_15_Q$datavalue.norm = 
  (MOOS_storm7c_08_15_Q$datavalue - min(MOOS_storm7c_08_15_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm7c_08_15_Q$datavalue, na.rm=T) - min(MOOS_storm7c_08_15_Q$datavalue, na.rm=T))
MOOS_storm8_09_21_Q$datavalue.norm = 
  (MOOS_storm8_09_21_Q$datavalue - min(MOOS_storm8_09_21_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm8_09_21_Q$datavalue, na.rm=T) - min(MOOS_storm8_09_21_Q$datavalue, na.rm=T))
MOOS_storm9_10_02_Q$datavalue.norm = 
  (MOOS_storm9_10_02_Q$datavalue - min(MOOS_storm9_10_02_Q$datavalue, na.rm=T)) / 
  (max(MOOS_storm9_10_02_Q$datavalue, na.rm=T) - min(MOOS_storm9_10_02_Q$datavalue, na.rm=T))

#POKE
POKE_storm1_06_30_Q$datavalue.norm = 
  (POKE_storm1_06_30_Q$datavalue - min(POKE_storm1_06_30_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm1_06_30_Q$datavalue, na.rm=T) - min(POKE_storm1_06_30_Q$datavalue, na.rm=T))
POKE_storm2_07_12_Q$datavalue.norm = 
  (POKE_storm2_07_12_Q$datavalue - min(POKE_storm2_07_12_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm2_07_12_Q$datavalue, na.rm=T) - min(POKE_storm2_07_12_Q$datavalue, na.rm=T))
POKE_storm3_07_26_Q$datavalue.norm = 
  (POKE_storm3_07_26_Q$datavalue - min(POKE_storm3_07_26_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm3_07_26_Q$datavalue, na.rm=T) - min(POKE_storm3_07_26_Q$datavalue, na.rm=T))
POKE_storm4_07_31_Q$datavalue.norm = 
  (POKE_storm4_07_31_Q$datavalue - min(POKE_storm4_07_31_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm4_07_31_Q$datavalue, na.rm=T) - min(POKE_storm4_07_31_Q$datavalue, na.rm=T))
POKE_storm5a_08_02_Q$datavalue.norm = 
  (POKE_storm5a_08_02_Q$datavalue - min(POKE_storm5a_08_02_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm5a_08_02_Q$datavalue, na.rm=T) - min(POKE_storm5a_08_02_Q$datavalue, na.rm=T))
POKE_storm5b_08_03_Q$datavalue.norm = 
  (POKE_storm5b_08_03_Q$datavalue - min(POKE_storm5b_08_03_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm5b_08_03_Q$datavalue, na.rm=T) - min(POKE_storm5b_08_03_Q$datavalue, na.rm=T))
POKE_storm5c_08_05_Q$datavalue.norm = 
  (POKE_storm5c_08_05_Q$datavalue - min(POKE_storm5c_08_05_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm5c_08_05_Q$datavalue, na.rm=T) - min(POKE_storm5c_08_05_Q$datavalue, na.rm=T))
POKE_storm5d_08_10_Q$datavalue.norm = 
  (POKE_storm5d_08_10_Q$datavalue - min(POKE_storm5d_08_10_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm5d_08_10_Q$datavalue, na.rm=T) - min(POKE_storm5d_08_10_Q$datavalue, na.rm=T))
POKE_storm6a_08_12_Q$datavalue.norm = 
  (POKE_storm6a_08_12_Q$datavalue - min(POKE_storm6a_08_12_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm6a_08_12_Q$datavalue, na.rm=T) - min(POKE_storm6a_08_12_Q$datavalue, na.rm=T))
#POKE_storm6b_08_13_Q$datavalue.norm = 
 ## (POKE_storm6b_08_13_Q$datavalue - min(POKE_storm6b_08_13_Q$datavalue, na.rm=T)) / 
  #(max(POKE_storm6b_08_13_Q$datavalue, na.rm=T) - min(POKE_storm6b_08_13_Q$datavalue, na.rm=T))
POKE_storm7_08_15_Q$datavalue.norm = 
  (POKE_storm7_08_15_Q$datavalue - min(POKE_storm7_08_15_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm7_08_15_Q$datavalue, na.rm=T) - min(POKE_storm7_08_15_Q$datavalue, na.rm=T))
POKE_storm8_09_29_Q$datavalue.norm = 
  (POKE_storm8_09_29_Q$datavalue - min(POKE_storm8_09_29_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm8_09_29_Q$datavalue, na.rm=T) - min(POKE_storm8_09_29_Q$datavalue, na.rm=T))
POKE_storm9_10_04_Q$datavalue.norm = 
  (POKE_storm9_10_04_Q$datavalue - min(POKE_storm9_10_04_Q$datavalue, na.rm=T)) / 
  (max(POKE_storm9_10_04_Q$datavalue, na.rm=T) - min(POKE_storm9_10_04_Q$datavalue, na.rm=T))

#STRT
STRT_storm1_05_31_Q$datavalue.norm = 
  (STRT_storm1_05_31_Q$datavalue - min(STRT_storm1_05_31_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm1_05_31_Q$datavalue, na.rm=T) - min(STRT_storm1_05_31_Q$datavalue, na.rm=T))
STRT_storm2_07_12_Q$datavalue.norm = 
  (STRT_storm2_07_12_Q$datavalue - min(STRT_storm2_07_12_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm2_07_12_Q$datavalue, na.rm=T) - min(STRT_storm2_07_12_Q$datavalue, na.rm=T))
STRT_storm3a_07_25_Q$datavalue.norm = 
  (STRT_storm3a_07_25_Q$datavalue - min(STRT_storm3a_07_25_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm3a_07_25_Q$datavalue, na.rm=T) - min(STRT_storm3a_07_25_Q$datavalue, na.rm=T))
STRT_storm3b_08_05_Q$datavalue.norm = 
  (STRT_storm3b_08_05_Q$datavalue - min(STRT_storm3b_08_05_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm3b_08_05_Q$datavalue, na.rm=T) - min(STRT_storm3b_08_05_Q$datavalue, na.rm=T))
STRT_storm3c_08_12_Q$datavalue.norm = 
  (STRT_storm3c_08_12_Q$datavalue - min(STRT_storm3c_08_12_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm3c_08_12_Q$datavalue, na.rm=T) - min(STRT_storm3c_08_12_Q$datavalue, na.rm=T))
STRT_storm4_08_15_Q$datavalue.norm = 
  (STRT_storm4_08_15_Q$datavalue - min(STRT_storm4_08_15_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm4_08_15_Q$datavalue, na.rm=T) - min(STRT_storm4_08_15_Q$datavalue, na.rm=T))
STRT_storm5_08_20_Q$datavalue.norm = 
  (STRT_storm5_08_20_Q$datavalue - min(STRT_storm5_08_20_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm5_08_20_Q$datavalue, na.rm=T) - min(STRT_storm5_08_20_Q$datavalue, na.rm=T))
STRT_storm6_09_20_Q$datavalue.norm = 
  (STRT_storm6_09_20_Q$datavalue - min(STRT_storm6_09_20_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm6_09_20_Q$datavalue, na.rm=T) - min(STRT_storm6_09_20_Q$datavalue, na.rm=T))
STRT_storm7_10_01_Q$datavalue.norm = 
  (STRT_storm7_10_01_Q$datavalue - min(STRT_storm7_10_01_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm7_10_01_Q$datavalue, na.rm=T) - min(STRT_storm7_10_01_Q$datavalue, na.rm=T))
STRT_storm7b_10_04_Q$datavalue.norm = 
  (STRT_storm7b_10_04_Q$datavalue - min(STRT_storm7b_10_04_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm7b_10_04_Q$datavalue, na.rm=T) - min(STRT_storm7b_10_04_Q$datavalue, na.rm=T))
STRT_storm7c_10_09_Q$datavalue.norm = 
  (STRT_storm7c_10_09_Q$datavalue - min(STRT_storm7c_10_09_Q$datavalue, na.rm=T)) / 
  (max(STRT_storm7c_10_09_Q$datavalue, na.rm=T) - min(STRT_storm7c_10_09_Q$datavalue, na.rm=T))

#VAUL
VAUL_storm1_07_13_Q$datavalue.norm = 
  (VAUL_storm1_07_13_Q$datavalue - min(VAUL_storm1_07_13_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm1_07_13_Q$datavalue, na.rm=T) - min(VAUL_storm1_07_13_Q$datavalue, na.rm=T))
VAUL_storm2_07_26_Q$datavalue.norm = 
  (VAUL_storm2_07_26_Q$datavalue - min(VAUL_storm2_07_26_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm2_07_26_Q$datavalue, na.rm=T) - min(VAUL_storm2_07_26_Q$datavalue, na.rm=T))
VAUL_storm3_07_29_Q$datavalue.norm = 
  (VAUL_storm3_07_29_Q$datavalue - min(VAUL_storm3_07_29_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm3_07_29_Q$datavalue, na.rm=T) - min(VAUL_storm3_07_29_Q$datavalue, na.rm=T))
VAUL_storm4a_08_02_Q$datavalue.norm = 
  (VAUL_storm4a_08_02_Q$datavalue - min(VAUL_storm4a_08_02_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm4a_08_02_Q$datavalue, na.rm=T) - min(VAUL_storm4a_08_02_Q$datavalue, na.rm=T))
VAUL_storm4b_08_03_Q$datavalue.norm = 
  (VAUL_storm4b_08_03_Q$datavalue - min(VAUL_storm4b_08_03_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm4b_08_03_Q$datavalue, na.rm=T) - min(VAUL_storm4b_08_03_Q$datavalue, na.rm=T))
VAUL_storm4c_08_05_Q$datavalue.norm = 
  (VAUL_storm4c_08_05_Q$datavalue - min(VAUL_storm4c_08_05_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm4c_08_05_Q$datavalue, na.rm=T) - min(VAUL_storm4c_08_05_Q$datavalue, na.rm=T))
VAUL_storm5_08_12_Q$datavalue.norm = 
  (VAUL_storm5_08_12_Q$datavalue - min(VAUL_storm5_08_12_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm5_08_12_Q$datavalue, na.rm=T) - min(VAUL_storm5_08_12_Q$datavalue, na.rm=T))
VAUL_storm6_08_15_Q$datavalue.norm = 
  (VAUL_storm6_08_15_Q$datavalue - min(VAUL_storm6_08_15_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm6_08_15_Q$datavalue, na.rm=T) - min(VAUL_storm6_08_15_Q$datavalue, na.rm=T))
VAUL_storm7_09_19_Q$datavalue.norm = 
  (VAUL_storm7_09_19_Q$datavalue - min(VAUL_storm7_09_19_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm7_09_19_Q$datavalue, na.rm=T) - min(VAUL_storm7_09_19_Q$datavalue, na.rm=T))
VAUL_storm8a_09_29_Q$datavalue.norm = 
  (VAUL_storm8a_09_29_Q$datavalue - min(VAUL_storm8a_09_29_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm8a_09_29_Q$datavalue, na.rm=T) - min(VAUL_storm8a_09_29_Q$datavalue, na.rm=T))
VAUL_storm8b_10_01_Q$datavalue.norm = 
  (VAUL_storm8b_10_01_Q$datavalue - min(VAUL_storm8b_10_01_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm8b_10_01_Q$datavalue, na.rm=T) - min(VAUL_storm8b_10_01_Q$datavalue, na.rm=T))
VAUL_storm8c_10_04_Q$datavalue.norm = 
  (VAUL_storm8c_10_04_Q$datavalue - min(VAUL_storm8c_10_04_Q$datavalue, na.rm=T)) / 
  (max(VAUL_storm8c_10_04_Q$datavalue, na.rm=T) - min(VAUL_storm8c_10_04_Q$datavalue, na.rm=T))

# normalize solute data #

### remove burst-complied data ###

#NO3
for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["datavalue"]] = FRCH_NO3_storm_list[[i]][["nitrateuM"]]
  FRCH_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]][["datavalue"]] = MOOS_NO3_storm_list[[i]][["nitrateuM"]]
  MOOS_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]][["datavalue"]] = POKE_NO3_storm_list[[i]][["nitrateuM"]]
  POKE_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]][["datavalue"]] = STRT_NO3_storm_list[[i]][["nitrateuM"]]
  STRT_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]][["datavalue"]] = VAUL_NO3_storm_list[[i]][["nitrateuM"]]
  VAUL_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue"]] = FRCH_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  FRCH_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  FRCH_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue"]] = MOOS_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  MOOS_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  MOOS_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]][["datavalue"]] = POKE_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  POKE_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  POKE_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["datavalue"]] = STRT_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  STRT_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  STRT_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["datavalue"]] = VAUL_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  VAUL_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  VAUL_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

#SPC
for(i in 1:length(FRCH_SPC_storm_list)){
  FRCH_SPC_storm_list[[i]][["datavalue"]] = FRCH_SPC_storm_list[[i]][["SpCond.µS.cm"]]
  FRCH_SPC_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  FRCH_SPC_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_SPC_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(MOOS_SPC_storm_list)){
  MOOS_SPC_storm_list[[i]][["datavalue"]] = MOOS_SPC_storm_list[[i]][["SpCond.µS.cm"]]
  MOOS_SPC_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  MOOS_SPC_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_SPC_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(POKE_SPC_storm_list)){
  POKE_SPC_storm_list[[i]][["datavalue"]] = POKE_SPC_storm_list[[i]][["SpCond.µS.cm"]]
  POKE_SPC_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  POKE_SPC_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_SPC_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(STRT_SPC_storm_list)){
  STRT_SPC_storm_list[[i]][["datavalue"]] = STRT_SPC_storm_list[[i]][["SpCond.µS.cm"]]
  STRT_SPC_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  STRT_SPC_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_SPC_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(VAUL_SPC_storm_list)){
  VAUL_SPC_storm_list[[i]][["datavalue"]] = VAUL_SPC_storm_list[[i]][["SpCond.µS.cm"]]
  VAUL_SPC_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  VAUL_SPC_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_SPC_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

#turb
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue"]] = FRCH_turb_storm_list[[i]][["Turbidity.FNU"]]
  FRCH_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  FRCH_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue"]] = MOOS_turb_storm_list[[i]][["Turbidity.FNU"]]
  MOOS_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  MOOS_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]][["datavalue"]] = POKE_turb_storm_list[[i]][["Turbidity.FNU"]]
  POKE_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  POKE_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["datavalue"]] = STRT_turb_storm_list[[i]][["Turbidity.FNU"]]
  STRT_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  STRT_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["datavalue"]] = VAUL_turb_storm_list[[i]][["Turbidity.FNU"]]
  VAUL_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  VAUL_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

### normalize burst data ###

#NO3
for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_NO3_storm_list[[i]][["datavalue"]]-min(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_NO3_storm_list[[i]][["datavalue"]]-min(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_NO3_storm_list[[i]][["datavalue"]]-min(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_NO3_storm_list[[i]][["datavalue"]]-min(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_NO3_storm_list[[i]][["datavalue"]]-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}


#fDOM
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_fDOM_storm_list[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_fDOM_storm_list[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_fDOM_storm_list[[i]][["datavalue"]]-min(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_fDOM_storm_list[[i]][["datavalue"]]-min(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_fDOM_storm_list[[i]][["datavalue"]]-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

#SPC
for(i in 1:length(FRCH_SPC_storm_list)){
  FRCH_SPC_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_SPC_storm_list[[i]][["datavalue"]]-min(FRCH_SPC_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_SPC_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_SPC_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_SPC_storm_list)){
  MOOS_SPC_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_SPC_storm_list[[i]][["datavalue"]]-min(MOOS_SPC_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_SPC_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_SPC_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_SPC_storm_list)){
  POKE_SPC_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_SPC_storm_list[[i]][["datavalue"]]-min(POKE_SPC_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_SPC_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_SPC_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_SPC_storm_list)){
  STRT_SPC_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_SPC_storm_list[[i]][["datavalue"]]-min(STRT_SPC_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_SPC_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_SPC_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_SPC_storm_list)){
  VAUL_SPC_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_SPC_storm_list[[i]][["datavalue"]]-min(VAUL_SPC_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_SPC_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_SPC_storm_list[[i]][["datavalue"]], na.rm=T))
}

#turb
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_turb_storm_list[[i]][["datavalue"]]-min(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_turb_storm_list[[i]][["datavalue"]]-min(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_turb_storm_list[[i]][["datavalue"]]-min(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_turb_storm_list[[i]][["datavalue"]]-min(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_turb_storm_list[[i]][["datavalue"]]-min(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

# fxn: calculate FI by difference and bootstrap CIs #

FI_diff = function(dat_Q, dat_response) {
  FI_dat = rbind(dat_response[as.POSIXct(dat_response$valuedatetime) == min(as.POSIXct(dat_response$valuedatetime)),], 
                 dat_response[as.POSIXct(dat_response$valuedatetime) == as.POSIXct(dat_Q$valuedatetime[dat_Q$datavalue.norm == max(dat_Q$datavalue.norm)]),])
  
  FI_dat$valuedatetime = as.character(as.POSIXct(FI_dat$valuedatetime))
  
  dat_Q$valuedatetime = as.character(as.POSIXct(dat_Q$valuedatetime))
  
  FI_dat = left_join(FI_dat, 
                     subset(dat_Q, select=c("valuedatetime", "datavalue.norm")),
                     by="valuedatetime")
  
  names(FI_dat) = c("valuedatetime", "datavalue", "datavalue.norm", "Q")
  
  FI_dat$datavalue.norm = as.numeric(FI_dat$datavalue.norm)
  FI_dat$Q = as.numeric(FI_dat$Q)
  
  FI = mean(FI_dat$datavalue.norm[FI_dat$valuedatetime == max(FI_dat$valuedatetime)]) - mean(FI_dat$datavalue.norm[FI_dat$valuedatetime == min(FI_dat$valuedatetime)])
  
  meanDiff = function(data, indices) { 
    d <- data[indices,] # allows boot to select sample
    m1 = mean(d$datavalue.norm[d$valuedatetime == max(d$valuedatetime)])
    m2 = mean(d$datavalue.norm[d$valuedatetime == min(d$valuedatetime)])
    m = m1 - m2
    return(m)
  }
  
  FI_boot = boot(FI_dat, meanDiff, R = 10000, strata = as.factor(FI_dat[,1]))
  FI_bootCI = boot.ci(FI_boot, type="bca")
  
  FI_bootCI = data.frame(cbind(FI_boot$t0, FI_bootCI[["bca"]][4], FI_bootCI[["bca"]][5]))
  names(FI_bootCI) = c("FI", "lower", "upper")
  
  FI_results = list(FI_dat, FI_bootCI)
  
  return(FI_results)
}
FRCH_storm1_05_31_NO3_test = FI_diff(FRCH_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_05_31_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_05_31_NO3`)

# calculate FI by difference and bootstrap CIs #
# FRCH # 
#NO3 #
FRCH_storm1_05_31_NO3_FI = FI_diff(FRCH_storm1_05_31_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_05_31_NO3`)
FRCH_storm2_06_15_NO3_FI = FI_diff(FRCH_storm2_06_15_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_15_NO3`)
FRCH_storm3_06_18_NO3_FI = FI_diff(FRCH_storm3_06_18_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_06_18_NO3`)
FRCH_storm4_06_20_NO3_FI = FI_diff(FRCH_storm4_06_20_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_06_20_NO3`)
FRCH_storm5_06_22_NO3_FI =  FI_diff(FRCH_storm5_06_22_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_06_22_NO3`)
FRCH_storm6_07_12_NO3_FI = FI_diff(FRCH_storm6_07_12_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_12_NO3`)
FRCH_storm7_07_25_NO3_FI = FI_diff(FRCH_storm7_07_25_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_25_NO3`)
#FRCH_storm8_07_28_NO3_FI = FI_diff(FRCH_storm8_07_28_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_28_NO3`)
FRCH_storm9a_07_29_NO3_FI = FI_diff(FRCH_storm9a_07_29_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_07_29_NO3`)
FRCH_storm9b_07_30_NO3_FI = FI_diff(FRCH_storm9b_07_30_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_07_30_NO3`)
FRCH_storm10a_08_01_NO3_FI =FI_diff(FRCH_storm10a_08_01_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_01_NO3`)
FRCH_storm10b_08_02_NO3_FI = FI_diff(FRCH_storm10b_08_02_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_02_NO3`)
#FRCH_storm10c_08_03_NO3_FI = FI_diff(FRCH_storm10c_08_03_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10c_08_03_NO3`)
FRCH_storm11_08_05_NO3_FI = FI_diff(FRCH_storm11_08_05_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_05_NO3`)
FRCH_storm12a_08_12_NO3_FI =  FI_diff(FRCH_storm12a_08_12_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12a_08_12_NO3`)
FRCH_storm12b_08_14_NO3_FI = FI_diff(FRCH_storm12b_08_14_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12b_08_14_NO3`)
FRCH_storm12c_08_15_NO3_FI =  FI_diff(FRCH_storm12c_08_15_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12c_08_15_NO3`)
FRCH_storm12d_08_21_NO3_FI = FI_diff(FRCH_storm12d_08_21_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12d_08_21_NO3`)
FRCH_storm12e_08_23_NO3_FI = FI_diff(FRCH_storm12e_08_23_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12e_08_23_NO3`)
FRCH_storm13_09_20_NO3_FI = FI_diff(FRCH_storm13_09_20_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_20_NO3`)
FRCH_storm14_10_01_NO3_FI =FI_diff(FRCH_storm14_10_01_Q, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm14_10_01_NO3`)
  
#fDOM #
FRCH_storm1_05_31_fDOM_FI = FI_diff(FRCH_storm1_05_31_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_05_31_fDOM`)
FRCH_storm2_06_15_fDOM_FI = FI_diff(FRCH_storm2_06_15_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_15_fDOM`)
FRCH_storm3_06_18_fDOM_FI = FI_diff(FRCH_storm3_06_18_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_06_18_fDOM`)
FRCH_storm4_06_20_fDOM_FI = FI_diff(FRCH_storm4_06_20_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_06_20_fDOM`)
FRCH_storm5_06_22_fDOM_FI =  FI_diff(FRCH_storm5_06_22_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_06_22_fDOM`)
#FRCH_storm6_07_12_fDOM_FI = FI_diff(FRCH_storm6_07_12_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_12_fDOM`)
FRCH_storm7_07_25_fDOM_FI = FI_diff(FRCH_storm7_07_25_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_25_fDOM`)
#FRCH_storm8_07_28_fDOM_FI = FI_diff(FRCH_storm8_07_28_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_28_fDOM`)
FRCH_storm9a_07_29_fDOM_FI = FI_diff(FRCH_storm9a_07_29_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_07_29_fDOM`)
FRCH_storm9b_07_30_fDOM_FI = FI_diff(FRCH_storm9b_07_30_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_07_30_fDOM`)
FRCH_storm10a_08_01_fDOM_FI =FI_diff(FRCH_storm10a_08_01_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_01_fDOM`)
FRCH_storm10b_08_02_fDOM_FI = FI_diff(FRCH_storm10b_08_02_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_02_fDOM`)
FRCH_storm10c_08_03_fDOM_FI = FI_diff(FRCH_storm10c_08_03_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10c_08_03_fDOM`)
FRCH_storm11_08_05_fDOM_FI = FI_diff(FRCH_storm11_08_05_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_05_fDOM`)
FRCH_storm12a_08_12_fDOM_FI =  FI_diff(FRCH_storm12a_08_12_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12a_08_12_fDOM`)
FRCH_storm12b_08_14_fDOM_FI = FI_diff(FRCH_storm12b_08_14_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12b_08_14_fDOM`)
FRCH_storm12c_08_15_fDOM_FI =  FI_diff(FRCH_storm12c_08_15_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12c_08_15_fDOM`)
FRCH_storm12d_08_21_fDOM_FI = FI_diff(FRCH_storm12d_08_21_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12d_08_21_fDOM`)
FRCH_storm12e_08_23_fDOM_FI = FI_diff(FRCH_storm12e_08_23_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12e_08_23_fDOM`)
#FRCH_storm13_09_20_fDOM_FI = FI_diff(FRCH_storm13_09_20_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_20_fDOM`)
FRCH_storm14_10_01_fDOM_FI =FI_diff(FRCH_storm14_10_01_Q, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm14_10_01_fDOM`)

# SPC #
FRCH_storm1_05_31_SPC_FI = FI_diff(FRCH_storm1_05_31_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_05_31_SPC`)
FRCH_storm2_06_15_SPC_FI = FI_diff(FRCH_storm2_06_15_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_15_SPC`)
FRCH_storm3_06_18_SPC_FI = FI_diff(FRCH_storm3_06_18_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_06_18_SPC`)
FRCH_storm4_06_20_SPC_FI = FI_diff(FRCH_storm4_06_20_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_06_20_SPC`)
FRCH_storm5_06_22_SPC_FI =  FI_diff(FRCH_storm5_06_22_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_06_22_SPC`)
#FRCH_storm6_07_12_SPC_FI = FI_diff(FRCH_storm6_07_12_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_12_SPC`)
FRCH_storm7_07_25_SPC_FI = FI_diff(FRCH_storm7_07_25_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_25_SPC`)
#FRCH_storm8_07_28_SPC_FI = FI_diff(FRCH_storm8_07_28_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_28_SPC`)
FRCH_storm9a_07_29_SPC_FI = FI_diff(FRCH_storm9a_07_29_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_07_29_SPC`)
FRCH_storm9b_07_30_SPC_FI = FI_diff(FRCH_storm9b_07_30_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_07_30_SPC`)
FRCH_storm10a_08_01_SPC_FI =FI_diff(FRCH_storm10a_08_01_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_01_SPC`)
FRCH_storm10b_08_02_SPC_FI = FI_diff(FRCH_storm10b_08_02_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_02_SPC`)
FRCH_storm10c_08_03_SPC_FI = FI_diff(FRCH_storm10c_08_03_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10c_08_03_SPC`)
FRCH_storm11_08_05_SPC_FI = FI_diff(FRCH_storm11_08_05_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_05_SPC`)
FRCH_storm12a_08_12_SPC_FI =  FI_diff(FRCH_storm12a_08_12_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12a_08_12_SPC`)
FRCH_storm12b_08_14_SPC_FI = FI_diff(FRCH_storm12b_08_14_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12b_08_14_SPC`)
FRCH_storm12c_08_15_SPC_FI =  FI_diff(FRCH_storm12c_08_15_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12c_08_15_SPC`)
FRCH_storm12d_08_21_SPC_FI = FI_diff(FRCH_storm12d_08_21_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12d_08_21_SPC`)
FRCH_storm12e_08_23_SPC_FI = FI_diff(FRCH_storm12e_08_23_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12e_08_23_SPC`)
#FRCH_storm13_09_20_SPC_FI = FI_diff(FRCH_storm13_09_20_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_20_SPC`)
FRCH_storm14_10_01_SPC_FI =FI_diff(FRCH_storm14_10_01_Q, FRCH_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm14_10_01_SPC`)

# turb #
FRCH_storm1_05_31_turb_FI = FI_diff(FRCH_storm1_05_31_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_05_31_Turb`)
FRCH_storm2_06_15_turb_FI = FI_diff(FRCH_storm2_06_15_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_15_Turb`)
FRCH_storm3_06_18_turb_FI = FI_diff(FRCH_storm3_06_18_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_06_18_Turb`)
FRCH_storm4_06_20_turb_FI = FI_diff(FRCH_storm4_06_20_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_06_20_Turb`)
FRCH_storm5_06_22_turb_FI =  FI_diff(FRCH_storm5_06_22_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_06_22_Turb`)
#FRCH_storm6_07_12_turb_FI = FI_diff(FRCH_storm6_07_12_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_12_Turb`)
FRCH_storm7_07_25_turb_FI = FI_diff(FRCH_storm7_07_25_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_25_Turb`)
#FRCH_storm8_07_28_turb_FI = FI_diff(FRCH_storm8_07_28_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_28_Turb`)
FRCH_storm9a_07_29_turb_FI = FI_diff(FRCH_storm9a_07_29_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_07_29_Turb`)
FRCH_storm9b_07_30_turb_FI = FI_diff(FRCH_storm9b_07_30_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_07_30_Turb`)
FRCH_storm10a_08_01_turb_FI =FI_diff(FRCH_storm10a_08_01_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_01_Turb`)
FRCH_storm10b_08_02_turb_FI = FI_diff(FRCH_storm10b_08_02_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_02_Turb`)
FRCH_storm10c_08_03_turb_FI = FI_diff(FRCH_storm10c_08_03_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10c_08_03_Turb`)
FRCH_storm11_08_05_turb_FI = FI_diff(FRCH_storm11_08_05_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_05_Turb`)
FRCH_storm12a_08_12_turb_FI =  FI_diff(FRCH_storm12a_08_12_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12a_08_12_Turb`)
FRCH_storm12b_08_14_turb_FI = FI_diff(FRCH_storm12b_08_14_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12b_08_14_Turb`)
FRCH_storm12c_08_15_turb_FI =  FI_diff(FRCH_storm12c_08_15_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12c_08_15_Turb`)
FRCH_storm12d_08_21_turb_FI = FI_diff(FRCH_storm12d_08_21_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12d_08_21_Turb`)
FRCH_storm12e_08_23_turb_FI = FI_diff(FRCH_storm12e_08_23_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12e_08_23_Turb`)
#FRCH_storm13_09_20_turb_FI = FI_diff(FRCH_storm13_09_20_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_20_Turb`)
FRCH_storm14_10_01_turb_FI =FI_diff(FRCH_storm14_10_01_Q, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm14_10_01_Turb`)

# MOOS # 
#NO3 #
MOOS_storm1_06_01_NO3_FI = FI_diff(MOOS_storm1_06_01_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_01_NO3`)
MOOS_storm3_07_12_NO3_FI = FI_diff(MOOS_storm3_07_12_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_12_NO3`)
#MOOS_storm4_07_25_NO3_FI= FI_diff(MOOS_storm4_07_25_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_25_NO3`)
MOOS_storm5_07_29_NO3_FI= FI_diff(MOOS_storm5_07_29_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_29_NO3`)
MOOS_storm6a_08_01_NO3_FI= FI_diff(MOOS_storm6a_08_01_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_NO3`)
#MOOS_storm6b_08_02_NO3_FI= FI_diff(MOOS_storm6b_08_02_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_NO3`)
#MOOS_storm6c_08_03_NO3_FI= FI_diff(MOOS_storm6c_08_03_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6c_08_03_NO3`)
MOOS_storm7a_08_13_NO3_FI= FI_diff(MOOS_storm7a_08_13_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_13_NO3`)
MOOS_storm7b_08_14_NO3_FI= FI_diff(MOOS_storm7b_08_14_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_14_NO3`)
MOOS_storm7c_08_15_NO3_FI= FI_diff(MOOS_storm7c_08_15_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7c_08_15_NO3`)
MOOS_storm8_09_21_NO3_FI= FI_diff(MOOS_storm8_09_21_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_21_NO3`)
MOOS_storm9_10_02_NO3_FI= FI_diff(MOOS_storm9_10_02_Q, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_10_02_NO3`)

#fDOM #
MOOS_storm1_06_01_fDOM_FI = FI_diff(MOOS_storm1_06_01_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_01_fDOM`)
#MOOS_storm3_07_12_fDOM_FI = FI_diff(MOOS_storm3_07_12_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_12_fDOM`)
#MOOS_storm4_07_25_fDOM_FI= FI_diff(MOOS_storm4_07_25_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_25_fDOM`)
#MOOS_storm5_07_29_fDOM_FI= FI_diff(MOOS_storm5_07_29_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_29_fDOM`)
MOOS_storm6a_08_01_fDOM_FI= FI_diff(MOOS_storm6a_08_01_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_fDOM`)
#MOOS_storm6b_08_02_fDOM_FI= FI_diff(MOOS_storm6b_08_02_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_fDOM`)
MOOS_storm6c_08_03_fDOM_FI= FI_diff(MOOS_storm6c_08_03_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6c_08_03_fDOM`)
MOOS_storm7a_08_13_fDOM_FI= FI_diff(MOOS_storm7a_08_13_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_13_fDOM`)
MOOS_storm7b_08_14_fDOM_FI= FI_diff(MOOS_storm7b_08_14_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_14_fDOM`)
MOOS_storm7c_08_15_fDOM_FI= FI_diff(MOOS_storm7c_08_15_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7c_08_15_fDOM`)
#MOOS_storm8_09_21_fDOM_FI= FI_diff(MOOS_storm8_09_21_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_21_fDOM`)
#MOOS_storm9_10_02_fDOM_FI= FI_diff(MOOS_storm9_10_02_Q, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_10_02_fDOM`)

#SPC #
MOOS_storm1_06_01_SPC_FI = FI_diff(MOOS_storm1_06_01_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_01_SPC`)
#MOOS_storm3_07_12_SPC_FI = FI_diff(MOOS_storm3_07_12_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_12_SPC`)
#MOOS_storm4_07_25_SPC_FI= FI_diff(MOOS_storm4_07_25_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_25_SPC`)
#MOOS_storm5_07_29_SPC_FI= FI_diff(MOOS_storm5_07_29_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_29_SPC`)
MOOS_storm6a_08_01_SPC_FI= FI_diff(MOOS_storm6a_08_01_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_SPC`)
#MOOS_storm6b_08_02_SPC_FI= FI_diff(MOOS_storm6b_08_02_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_SPC`)
MOOS_storm6c_08_03_SPC_FI= FI_diff(MOOS_storm6c_08_03_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6c_08_03_SPC`)
MOOS_storm7a_08_13_SPC_FI= FI_diff(MOOS_storm7a_08_13_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_13_SPC`)
MOOS_storm7b_08_14_SPC_FI= FI_diff(MOOS_storm7b_08_14_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_14_SPC`)
MOOS_storm7c_08_15_SPC_FI= FI_diff(MOOS_storm7c_08_15_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7c_08_15_SPC`)
#MOOS_storm8_09_21_SPC_FI= FI_diff(MOOS_storm8_09_21_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_21_SPC`)
#MOOS_storm9_10_02_SPC_FI= FI_diff(MOOS_storm9_10_02_Q, MOOS_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_10_02_SPC`)

# turb #
MOOS_storm1_06_01_turb_FI = FI_diff(MOOS_storm1_06_01_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_01_Turb`)
#MOOS_storm3_07_12_turb_FI = FI_diff(MOOS_storm3_07_12_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_12_Turb`) # empty 
#MOOS_storm4_07_25_turb_FI= FI_diff(MOOS_storm4_07_25_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_25_Turb`)
#MOOS_storm5_07_29_turb_FI= FI_diff(MOOS_storm5_07_29_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_29_Turb`)
MOOS_storm6a_08_01_turb_FI= FI_diff(MOOS_storm6a_08_01_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_Turb`)
#MOOS_storm6b_08_02_turb_FI= FI_diff(MOOS_storm6b_08_02_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_Turb`)
MOOS_storm6c_08_03_turb_FI= FI_diff(MOOS_storm6c_08_03_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6c_08_03_Turb`)
MOOS_storm7a_08_13_turb_FI= FI_diff(MOOS_storm7a_08_13_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_13_Turb`)
MOOS_storm7b_08_14_turb_FI= FI_diff(MOOS_storm7b_08_14_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_14_Turb`)
MOOS_storm7c_08_15_turb_FI= FI_diff(MOOS_storm7c_08_15_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7c_08_15_Turb`)
#MOOS_storm8_09_21_turb_FI= FI_diff(MOOS_storm8_09_21_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_21_Turb`)
#MOOS_storm9_10_02_turb_FI= FI_diff(MOOS_storm9_10_02_Q, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_10_02_Turb`)

# POKE # 
#NO3 #
POKE_storm1_06_30_NO3_FI = FI_diff(POKE_storm1_06_30_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_30_NO3`)
POKE_storm2_07_12_NO3_FI = FI_diff(POKE_storm2_07_12_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_07_12_NO3`) 
POKE_storm3_07_26_NO3_FI = FI_diff(POKE_storm3_07_26_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_07_26_NO3`) # all values are the same 0.5564
POKE_storm4_07_31_NO3_FI = FI_diff(POKE_storm4_07_31_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_31_NO3`)# all values are the same  0.60909
POKE_storm5a_08_02_NO3_FI = FI_diff(POKE_storm5a_08_02_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5a_08_02_NO3`)# all values are the same  0.357142
POKE_storm5b_08_03_NO3_FI = FI_diff(POKE_storm5b_08_03_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5b_08_03_NO3`)# all values are the same  0.1878755
#POKE_storm5c_08_05_NO3_FI = FI_diff(POKE_storm5c_08_05_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5c_08_05_NO3`) # didnt work 
POKE_storm5d_08_10_NO3_FI = FI_diff(POKE_storm5d_08_10_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5d_08_10_NO3`)# all values are the same 0.06321839
#POKE_storm6a_08_12_NO3_FI = FI_diff(POKE_storm6a_08_12_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6a_08_12_NO3`) # didnt work 
#POKE_storm6b_08_13_NO3_FI = FI_diff(POKE_storm6b_08_13_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6b_08_13_NO3`) # didnt work 
#POKE_storm7_08_15_NO3_FI = FI_diff(POKE_storm7_08_15_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_08_15_NO3`) # didnt work 
POKE_storm8_09_29_NO3_FI = FI_diff(POKE_storm8_09_29_Q, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_09_29_NO3`)
#POKE_storm9_10_04_NO3_FI = FI_diff(POKE_storm9_10_04_Q,POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_10_04_NO3`) # didnt work 

#fDOM #
POKE_storm1_06_30_fDOM_FI = FI_diff(POKE_storm1_06_30_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_30_fDOM`)
POKE_storm2_07_12_fDOM_FI = FI_diff(POKE_storm2_07_12_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_07_12_fDOM`) 
POKE_storm3_07_26_fDOM_FI = FI_diff(POKE_storm3_07_26_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_07_26_fDOM`) 
POKE_storm4_07_31_fDOM_FI = FI_diff(POKE_storm4_07_31_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_31_fDOM`)
POKE_storm5a_08_02_fDOM_FI = FI_diff(POKE_storm5a_08_02_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5a_08_02_fDOM`)
POKE_storm5b_08_03_fDOM_FI = FI_diff(POKE_storm5b_08_03_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5b_08_03_fDOM`)
POKE_storm5c_08_05_fDOM_FI = FI_diff(POKE_storm5c_08_05_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5c_08_05_fDOM`) 
POKE_storm5d_08_10_fDOM_FI = FI_diff(POKE_storm5d_08_10_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5d_08_10_fDOM`)
POKE_storm6a_08_12_fDOM_FI = FI_diff(POKE_storm6a_08_12_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6a_08_12_fDOM`) 
#POKE_storm6b_08_13_fDOM_FI = FI_diff(POKE_storm6b_08_13_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6b_08_13_fDOM`) # didnt work 
POKE_storm7_08_15_fDOM_FI = FI_diff(POKE_storm7_08_15_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_08_15_fDOM`)
POKE_storm8_09_29_fDOM_FI = FI_diff(POKE_storm8_09_29_Q, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_09_29_fDOM`)
#POKE_storm9_10_04_fDOM_FI = FI_diff(POKE_storm9_10_04_Q,POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_10_04_fDOM`) # didnt work 

#SPC #
POKE_storm1_06_30_SPC_FI = FI_diff(POKE_storm1_06_30_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_30_SPC`)
POKE_storm2_07_12_SPC_FI = FI_diff(POKE_storm2_07_12_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_07_12_SPC`) 
POKE_storm3_07_26_SPC_FI = FI_diff(POKE_storm3_07_26_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_07_26_SPC`) 
POKE_storm4_07_31_SPC_FI = FI_diff(POKE_storm4_07_31_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_31_SPC`)
POKE_storm5a_08_02_SPC_FI = FI_diff(POKE_storm5a_08_02_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5a_08_02_SPC`)
POKE_storm5b_08_03_SPC_FI = FI_diff(POKE_storm5b_08_03_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5b_08_03_SPC`)
POKE_storm5c_08_05_SPC_FI = FI_diff(POKE_storm5c_08_05_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5c_08_05_SPC`) 
POKE_storm5d_08_10_SPC_FI = FI_diff(POKE_storm5d_08_10_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5d_08_10_SPC`)
POKE_storm6a_08_12_SPC_FI = FI_diff(POKE_storm6a_08_12_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6a_08_12_SPC`) 
#POKE_storm6b_08_13_SPC_FI = FI_diff(POKE_storm6b_08_13_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6b_08_13_SPC`) # didnt work 
POKE_storm7_08_15_SPC_FI = FI_diff(POKE_storm7_08_15_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_08_15_SPC`)
POKE_storm8_09_29_SPC_FI = FI_diff(POKE_storm8_09_29_Q, POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_09_29_SPC`)
#POKE_storm9_10_04_SPC_FI = FI_diff(POKE_storm9_10_04_Q,POKE_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_10_04_SPC`) # didnt work 

#turb #
POKE_storm1_06_30_turb_FI = FI_diff(POKE_storm1_06_30_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_30_Turb`)
POKE_storm2_07_12_turb_FI = FI_diff(POKE_storm2_07_12_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_07_12_Turb`) 
POKE_storm3_07_26_turb_FI = FI_diff(POKE_storm3_07_26_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_07_26_Turb`) 
POKE_storm4_07_31_turb_FI = FI_diff(POKE_storm4_07_31_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_31_Turb`)
POKE_storm5a_08_02_turb_FI = FI_diff(POKE_storm5a_08_02_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5a_08_02_Turb`)
POKE_storm5b_08_03_turb_FI = FI_diff(POKE_storm5b_08_03_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5b_08_03_Turb`)
POKE_storm5c_08_05_turb_FI = FI_diff(POKE_storm5c_08_05_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5c_08_05_Turb`) 
POKE_storm5d_08_10_turb_FI = FI_diff(POKE_storm5d_08_10_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5d_08_10_Turb`)
POKE_storm6a_08_12_turb_FI = FI_diff(POKE_storm6a_08_12_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6a_08_12_Turb`) 
#POKE_storm6b_08_13_turb_FI = FI_diff(POKE_storm6b_08_13_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6b_08_13_Turb`) # didnt work 
POKE_storm7_08_15_turb_FI = FI_diff(POKE_storm7_08_15_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_08_15_Turb`)
POKE_storm8_09_29_turb_FI = FI_diff(POKE_storm8_09_29_Q, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_09_29_Turb`)
#POKE_storm9_10_04_turb_FI = FI_diff(POKE_storm9_10_04_Q,POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_10_04_Turb`) # didnt work 

# STRT # 
#NO3 #
STRT_storm1_05_31_NO3_FI = FI_diff(STRT_storm1_05_31_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1_05_31_NO3`)
STRT_storm2_07_12_NO3_FI = FI_diff(STRT_storm2_07_12_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_12_NO3`)
#STRT_storm3a_07_25_NO3_FI = FI_diff(STRT_storm3a_07_25_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3a_07_25_NO3`) # didnt work 
#STRT_storm3b_08_05_NO3_FI = FI_diff(STRT_storm3b_08_05_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3b_08_05_NO3`) # didnt work 
STRT_storm3c_08_12_NO3_FI = FI_diff(STRT_storm3c_08_12_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3c_08_12_NO3`)
#STRT_storm4_08_15_NO3_FI = FI_diff(STRT_storm4_08_15_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4_08_15_NO3`) # didnt work 
#STRT_storm5_08_20_NO3_FI = FI_diff(STRT_storm5_08_20_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_20_NO3`) # didnt work 
STRT_storm6_09_20_NO3_FI = FI_diff(STRT_storm6_09_20_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_09_20_NO3`)
STRT_storm7_10_01_NO3_FI = FI_diff(STRT_storm7_10_01_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7_10_01_NO3`)
STRT_storm7b_10_04_NO3_FI = FI_diff(STRT_storm7b_10_04_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_10_04_NO3`)
STRT_storm7c_10_09_NO3_FI = FI_diff(STRT_storm7c_10_09_Q, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7c_10_09_NO3`)


# fDOM #
#STRT_storm1_05_31_fDOM_FI = FI_diff(STRT_storm1_05_31_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1_05_31_fDOM`) # didnt work 
STRT_storm2_07_12_fDOM_FI = FI_diff(STRT_storm2_07_12_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_12_fDOM`)
STRT_storm3a_07_25_fDOM_FI = FI_diff(STRT_storm3a_07_25_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3a_07_25_fDOM`)
STRT_storm3b_08_05_fDOM_FI = FI_diff(STRT_storm3b_08_05_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3b_08_05_fDOM`)
STRT_storm3c_08_12_fDOM_FI = FI_diff(STRT_storm3c_08_12_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3c_08_12_fDOM`)
STRT_storm4_08_15_fDOM_FI = FI_diff(STRT_storm4_08_15_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4_08_15_fDOM`)
STRT_storm5_08_20_fDOM_FI = FI_diff(STRT_storm5_08_20_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_20_fDOM`)
#STRT_storm6_09_20_fDOM_FI = FI_diff(STRT_storm6_09_20_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_09_20_fDOM`) # didnt work 
#STRT_storm7_10_01_fDOM_FI = FI_diff(STRT_storm7_10_01_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7_10_01_fDOM`) # didnt work 
STRT_storm7b_10_04_fDOM_FI = FI_diff(STRT_storm7b_10_04_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_10_04_fDOM`)
#STRT_storm7c_10_09_fDOM_FI = FI_diff(STRT_storm7c_10_09_Q, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7c_10_09_fDOM`) # didnt work 

# SPC #
#STRT_storm1_05_31_SPC_FI = FI_diff(STRT_storm1_05_31_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1_05_31_SPC`) # didnt work 
STRT_storm2_07_12_SPC_FI = FI_diff(STRT_storm2_07_12_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_12_SPC`)
STRT_storm3a_07_25_SPC_FI = FI_diff(STRT_storm3a_07_25_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3a_07_25_SPC`)
STRT_storm3b_08_05_SPC_FI = FI_diff(STRT_storm3b_08_05_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3b_08_05_SPC`)
STRT_storm3c_08_12_SPC_FI = FI_diff(STRT_storm3c_08_12_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3c_08_12_SPC`)
STRT_storm4_08_15_SPC_FI = FI_diff(STRT_storm4_08_15_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4_08_15_SPC`)
STRT_storm5_08_20_SPC_FI = FI_diff(STRT_storm5_08_20_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_20_SPC`)
#STRT_storm6_09_20_SPC_FI = FI_diff(STRT_storm6_09_20_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_09_20_SPC`) # didnt work 
#STRT_storm7_10_01_SPC_FI = FI_diff(STRT_storm7_10_01_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7_10_01_SPC`) # didnt work 
STRT_storm7b_10_04_SPC_FI = FI_diff(STRT_storm7b_10_04_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_10_04_SPC`)
#STRT_storm7c_10_09_SPC_FI = FI_diff(STRT_storm7c_10_09_Q, STRT_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7c_10_09_SPC`) # didnt work 

# Turb #
#STRT_storm1_05_31_turb_FI = FI_diff(STRT_storm1_05_31_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1_05_31_Turb`) # didnt work 
STRT_storm2_07_12_turb_FI = FI_diff(STRT_storm2_07_12_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_12_Turb`)
STRT_storm3a_07_25_turb_FI = FI_diff(STRT_storm3a_07_25_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3a_07_25_Turb`)
STRT_storm3b_08_05_turb_FI = FI_diff(STRT_storm3b_08_05_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3b_08_05_Turb`)
STRT_storm3c_08_12_turb_FI = FI_diff(STRT_storm3c_08_12_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3c_08_12_Turb`)
STRT_storm4_08_15_turb_FI = FI_diff(STRT_storm4_08_15_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4_08_15_Turb`)
STRT_storm5_08_20_turb_FI = FI_diff(STRT_storm5_08_20_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_20_Turb`)
#STRT_storm6_09_20_turb_FI = FI_diff(STRT_storm6_09_20_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_09_20_Turb`) # didnt work 
#STRT_storm7_10_01_turb_FI = FI_diff(STRT_storm7_10_01_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7_10_01_Turb`) # didnt work 
STRT_storm7b_10_04_turb_FI = FI_diff(STRT_storm7b_10_04_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_10_04_Turb`)
#STRT_storm7c_10_09_turb_FI = FI_diff(STRT_storm7c_10_09_Q, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7c_10_09_Turb`) # didnt work 

# VAUL # 
#NO3 #
VAUL_storm1_07_13_NO3_FI = FI_diff(VAUL_storm1_07_13_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1_07_13_NO3`)
VAUL_storm2_07_26_NO3_FI = FI_diff(VAUL_storm2_07_26_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_07_26_NO3`)
VAUL_storm3_07_29_NO3_FI = FI_diff(VAUL_storm3_07_29_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_29_NO3`)
VAUL_storm4a_08_02_NO3_FI = FI_diff(VAUL_storm4a_08_02_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_02_NO3`)
VAUL_storm4b_08_03_NO3_FI = FI_diff(VAUL_storm4b_08_03_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_03_NO3`)
VAUL_storm4c_08_05_NO3_FI = FI_diff(VAUL_storm4c_08_05_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4c_08_05_NO3`)
VAUL_storm5_08_12_NO3_FI = FI_diff(VAUL_storm5_08_12_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_08_12_NO3`)
VAUL_storm6_08_15_NO3_FI = FI_diff(VAUL_storm6_08_15_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6_08_15_NO3`)
VAUL_storm7_09_19_NO3_FI = FI_diff(VAUL_storm7_09_19_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_09_19_NO3`)
VAUL_storm8a_09_29_NO3_FI = FI_diff(VAUL_storm8a_09_29_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8a_09_29_NO3`)
#VAUL_storm8b_10_01_NO3_FI = FI_diff(VAUL_storm8b_10_01_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8b_10_01_NO3`) # didnt work 
#VAUL_storm8c_10_04_NO3_FI = FI_diff(VAUL_storm8c_10_04_Q, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8c_10_04_NO3`) # didnt work 

#fDOM #
VAUL_storm1_07_13_fDOM_FI = FI_diff(VAUL_storm1_07_13_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1_07_13_fDOM`)
VAUL_storm2_07_26_fDOM_FI = FI_diff(VAUL_storm2_07_26_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_07_26_fDOM`)
VAUL_storm3_07_29_fDOM_FI = FI_diff(VAUL_storm3_07_29_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_29_fDOM`)
VAUL_storm4a_08_02_fDOM_FI = FI_diff(VAUL_storm4a_08_02_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_02_fDOM`)
VAUL_storm4b_08_03_fDOM_FI = FI_diff(VAUL_storm4b_08_03_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_03_fDOM`)
VAUL_storm4c_08_05_fDOM_FI = FI_diff(VAUL_storm4c_08_05_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4c_08_05_fDOM`)
#VAUL_storm5_08_12_fDOM_FI = FI_diff(VAUL_storm5_08_12_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_08_12_fDOM`)# didnt work 
#VAUL_storm6_08_15_fDOM_FI = FI_diff(VAUL_storm6_08_15_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6_08_15_fDOM`)# didnt work 
#VAUL_storm7_09_19_fDOM_FI = FI_diff(VAUL_storm7_09_19_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_09_19_fDOM`)# didnt work 
#VAUL_storm8a_09_29_fDOM_FI = FI_diff(VAUL_storm8a_09_29_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8a_09_29_fDOM`)# didnt work 
#VAUL_storm8b_10_01_fDOM_FI = FI_diff(VAUL_storm8b_10_01_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8b_10_01_fDOM`) # didnt work 
#VAUL_storm8c_10_04_fDOM_FI = FI_diff(VAUL_storm8c_10_04_Q, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8c_10_04_fDOM`) # didnt work 

#SPC #
VAUL_storm1_07_13_SPC_FI = FI_diff(VAUL_storm1_07_13_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1_07_13_SPC`)
VAUL_storm2_07_26_SPC_FI = FI_diff(VAUL_storm2_07_26_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_07_26_SPC`)
VAUL_storm3_07_29_SPC_FI = FI_diff(VAUL_storm3_07_29_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_29_SPC`)
VAUL_storm4a_08_02_SPC_FI = FI_diff(VAUL_storm4a_08_02_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_02_SPC`)
VAUL_storm4b_08_03_SPC_FI = FI_diff(VAUL_storm4b_08_03_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_03_SPC`)
VAUL_storm4c_08_05_SPC_FI = FI_diff(VAUL_storm4c_08_05_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4c_08_05_SPC`)
#VAUL_storm5_08_12_SPC_FI = FI_diff(VAUL_storm5_08_12_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_08_12_SPC`)# didnt work 
#VAUL_storm6_08_15_SPC_FI = FI_diff(VAUL_storm6_08_15_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6_08_15_SPC`)# didnt work 
#VAUL_storm7_09_19_SPC_FI = FI_diff(VAUL_storm7_09_19_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_09_19_SPC`)# didnt work 
#VAUL_storm8a_09_29_SPC_FI = FI_diff(VAUL_storm8a_09_29_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8a_09_29_SPC`)# didnt work 
#VAUL_storm8b_10_01_SPC_FI = FI_diff(VAUL_storm8b_10_01_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8b_10_01_SPC`) # didnt work 
#VAUL_storm8c_10_04_SPC_FI = FI_diff(VAUL_storm8c_10_04_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8c_10_04_SPC`) # didnt work 

#turb #
VAUL_storm1_07_13_turb_FI = FI_diff(VAUL_storm1_07_13_Q, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1_07_13_turb`)
VAUL_storm2_07_26_turb_FI = FI_diff(VAUL_storm2_07_26_Q, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_07_26_turb`)
VAUL_storm3_07_29_turb_FI = FI_diff(VAUL_storm3_07_29_Q, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_29_turb`)
VAUL_storm4a_08_02_turb_FI = FI_diff(VAUL_storm4a_08_02_Q, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_02_turb`)
VAUL_storm4b_08_03_turb_FI = FI_diff(VAUL_storm4b_08_03_Q, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_03_turb`)
VAUL_storm4c_08_05_turb_FI = FI_diff(VAUL_storm4c_08_05_Q, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4c_08_05_turb`)
#VAUL_storm5_08_12_SPC_FI = FI_diff(VAUL_storm5_08_12_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_08_12_SPC`)# didnt work 
#VAUL_storm6_08_15_SPC_FI = FI_diff(VAUL_storm6_08_15_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6_08_15_SPC`)# didnt work 
#VAUL_storm7_09_19_SPC_FI = FI_diff(VAUL_storm7_09_19_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_09_19_SPC`)# didnt work 
#VAUL_storm8a_09_29_SPC_FI = FI_diff(VAUL_storm8a_09_29_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8a_09_29_SPC`)# didnt work 
#VAUL_storm8b_10_01_SPC_FI = FI_diff(VAUL_storm8b_10_01_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8b_10_01_SPC`) # didnt work 
#VAUL_storm8c_10_04_SPC_FI = FI_diff(VAUL_storm8c_10_04_Q, VAUL_SPC_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8c_10_04_SPC`) # didnt work 

# CARI # 
#NO3 #
#CARI_storm1_05_08_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_08_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_08_NO3`) # w is infinite
#CARI_storm2_06_30_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_30_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_30_NO3`)# w is infinite
#CARI_storm3_07_12_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_07_12_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_07_12_NO3`)# w is infinite
#CARI_storm4_07_26_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_26_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_26_NO3`) # empty
#CARI_storm5_07_31_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_31_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_31_NO3`)# w is infinite
CARI_storm6a_08_02_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6a_08_02_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6a_08_02_NO3`) # 0.566666666666667
#CARI_storm6b_08_03_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6b_08_03_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6b_08_03_NO3`)# w is infinite
#CARI_storm6c_08_05_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6c_08_05_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6c_08_05_NO3`)# w is infinite
#CARI_storm6d_08_10_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6d_08_10_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6d_08_10_NO3`)# w is infinite
#CARI_storm7a_08_13_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7a_08_13_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7a_08_13_NO3`)# w is infinite
#CARI_storm7b_08_13_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7b_08_13_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7b_08_13_NO3`)# w is infinite
#CARI_storm8_08_16_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_16_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_16_NO3`)# w is infinite

#fDOM #
CARI_storm1_05_08_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_08_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_08_fDOM`) #0.694059200993583
CARI_storm2_06_30_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_30_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_30_fDOM`) # 0.992816091954023
CARI_storm3_07_12_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_07_12_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_07_12_fDOM`) #0.72083879423329
CARI_storm4_07_26_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_26_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_26_fDOM`) #0.358464012866908
CARI_storm5_07_31_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_31_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_31_fDOM`)#0.367280606717227
CARI_storm6a_08_02_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6a_08_02_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6a_08_02_fDOM`) #00.586084770935679
CARI_storm6b_08_03_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6b_08_03_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6b_08_03_fDOM`) # 0.14290473017988
CARI_storm6c_08_05_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6c_08_05_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6c_08_05_fDOM`) #0.0903590157321501
CARI_storm6d_08_10_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6d_08_10_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6d_08_10_fDOM`) # 0.450790861159929
CARI_storm7a_08_13_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7a_08_13_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7a_08_13_fDOM`) #0.965415019762846
CARI_storm7b_08_13_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7b_08_13_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7b_08_13_fDOM`) # 0.0436741515878206
CARI_storm8_08_16_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_16_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_16_fDOM`) # 0.902075075775239


#CARI_storm1_05_08_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_08_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_08_SPC`)# w is infinite
#CARI_storm2_06_30_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_30_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_30_SPC`)# w is infinite
#CARI_storm3_07_12_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_07_12_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_07_12_SPC`)# w is infinite
#CARI_storm4_07_26_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_26_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_26_SPC`)# w is infinite
#CARI_storm5_07_31_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_31_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_31_SPC`)# w is infinite
#CARI_storm6a_08_02_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6a_08_02_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6a_08_02_SPC`)# w is infinite
#CARI_storm6b_08_03_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6b_08_03_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6b_08_03_SPC`)# w is infinite
#CARI_storm6c_08_05_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6c_08_05_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6c_08_05_SPC`)# w is infinite
#CARI_storm6d_08_10_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6d_08_10_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6d_08_10_SPC`)# w is infinite
#CARI_storm7a_08_13_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7a_08_13_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7a_08_13_SPC`)# w is infinite
#CARI_storm7b_08_13_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7b_08_13_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7b_08_13_SPC`)# w is infinite
#CARI_storm8_08_16_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_16_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_16_SPC`)# w is infinite


# turb #
CARI_storm1_05_08_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_08_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_08_Turb`) #0.428325292901447
#CARI_storm2_06_30_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_30_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_30_Turb`)# w is infinite
CARI_storm3_07_12_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_07_12_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_07_12_Turb`) #0.174224343675418
#CARI_storm4_07_26_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_26_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_26_Turb`)# empty
CARI_storm5_07_31_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_31_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_31_Turb`) #0.636363636363636
CARI_storm6a_08_02_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6a_08_02_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6a_08_02_Turb`) #0.0814886983632112
#CARI_storm6b_08_03_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6b_08_03_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6b_08_03_Turb`) ## w is infinite
CARI_storm6c_08_05_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6c_08_05_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6c_08_05_Turb`)#0.164294954721863
CARI_storm6d_08_10_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6d_08_10_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6d_08_10_Turb`) #0.497340425531915
CARI_storm7a_08_13_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7a_08_13_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7a_08_13_Turb`) #0.203671830177854
CARI_storm7b_08_13_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7b_08_13_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7b_08_13_Turb`) #0.42369962108164
CARI_storm8_08_16_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_16_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_16_Turb`) #0.0444750114626318



# gather results and save ##

FI_results = rbind(
  c("FRCH_storm1_05_31_NO3_FI",FRCH_storm1_05_31_NO3_FI[[2]]),
  c("FRCH_storm2_06_15_NO3_FI",FRCH_storm2_06_15_NO3_FI[[2]]),
  c("FRCH_storm3_06_18_NO3_FI",FRCH_storm3_06_18_NO3_FI[[2]]),
  c("FRCH_storm4_06_20_NO3_FI",FRCH_storm4_06_20_NO3_FI[[2]]),
  c("FRCH_storm5_06_22_NO3_FI",FRCH_storm5_06_22_NO3_FI[[2]]),
  c("FRCH_storm6_07_12_NO3_FI",FRCH_storm6_07_12_NO3_FI[[2]]),
  c("FRCH_storm7_07_25_NO3_FI",FRCH_storm7_07_25_NO3_FI[[2]]),
  c("FRCH_storm8_07_28_NO3_FI",NA, NA, NA),
  c("FRCH_storm9a_07_29_NO3_FI",FRCH_storm9a_07_29_NO3_FI[[2]]),
  c("FRCH_storm9b_07_30_NO3_FI",FRCH_storm9b_07_30_NO3_FI[[2]]),
  c("FRCH_storm10a_08_01_NO3_FI",FRCH_storm10a_08_01_NO3_FI[[2]]),
  c("FRCH_storm10b_08_02_NO3_FI",FRCH_storm10b_08_02_NO3_FI[[2]]),
  c("FRCH_storm11_08_05_NO3_FI",FRCH_storm11_08_05_NO3_FI[[2]]),
  c("FRCH_storm12a_08_12_NO3_FI",FRCH_storm12a_08_12_NO3_FI[[2]]),
  c("FRCH_storm12b_08_14_NO3_FI",FRCH_storm12b_08_14_NO3_FI[[2]]),
  c("FRCH_storm12c_08_15_NO3_FI",FRCH_storm12c_08_15_NO3_FI[[2]]),
  c("FRCH_storm12d_08_21_NO3_FI",FRCH_storm12d_08_21_NO3_FI[[2]]),
  c("FRCH_storm12e_08_23_NO3_FI",FRCH_storm12e_08_23_NO3_FI[[2]]),
  c("FRCH_storm13_09_20_NO3_FI",FRCH_storm13_09_20_NO3_FI[[2]]),
  c("FRCH_storm14_10_01_NO3_FI",FRCH_storm14_10_01_NO3_FI[[2]]),
  
  c("FRCH_storm1_05_31_fDOM_FI",FRCH_storm1_05_31_fDOM_FI[[2]]),
  c("FRCH_storm2_06_15_fDOM_FI",FRCH_storm2_06_15_fDOM_FI[[2]]),
  c("FRCH_storm3_06_18_fDOM_FI",FRCH_storm3_06_18_fDOM_FI[[2]]),
  c("FRCH_storm4_06_20_fDOM_FI",FRCH_storm4_06_20_fDOM_FI[[2]]),
  c("FRCH_storm5_06_22_fDOM_FI",FRCH_storm5_06_22_fDOM_FI[[2]]),
  c("FRCH_storm6_07_12_fDOM_FI", NA, NA, NA),
  c("FRCH_storm7_07_25_fDOM_FI",FRCH_storm7_07_25_fDOM_FI[[2]]),
  c("FRCH_storm8_07_28_fDOM_FI", NA, NA, NA),
  c("FRCH_storm9a_07_29_fDOM_FI",FRCH_storm9a_07_29_fDOM_FI[[2]]),
  c("FRCH_storm9b_07_30_fDOM_FI",FRCH_storm9b_07_30_fDOM_FI[[2]]),
  c("FRCH_storm10a_08_01_fDOM_FI",FRCH_storm10a_08_01_fDOM_FI[[2]]),
  c("FRCH_storm10b_08_02_fDOM_FI",FRCH_storm10b_08_02_fDOM_FI[[2]]),
  c("FRCH_storm11_08_05_fDOM_FI",FRCH_storm11_08_05_fDOM_FI[[2]]),
  c("FRCH_storm12a_08_12_fDOM_FI",FRCH_storm12a_08_12_fDOM_FI[[2]]),
  c("FRCH_storm12b_08_14_fDOM_FI",FRCH_storm12b_08_14_fDOM_FI[[2]]),
  c("FRCH_storm12c_08_15_fDOM_FI",FRCH_storm12c_08_15_fDOM_FI[[2]]),
  c("FRCH_storm12d_08_21_fDOM_FI",FRCH_storm12d_08_21_fDOM_FI[[2]]),
  c("FRCH_storm12e_08_23_fDOM_FI",FRCH_storm12e_08_23_fDOM_FI[[2]]),
  c("FRCH_storm13_09_20_fDOM_FI",NA, NA, NA),
  c("FRCH_storm14_10_01_NO3_FI",FRCH_storm14_10_01_NO3_FI[[2]]),
  
  c("FRCH_storm1_05_31_SPC_FI",FRCH_storm1_05_31_SPC_FI[[2]]),
  c("FRCH_storm2_06_15_SPC_FI",FRCH_storm2_06_15_SPC_FI[[2]]),
  c("FRCH_storm3_06_18_SPC_FI",FRCH_storm3_06_18_SPC_FI[[2]]),
  c("FRCH_storm4_06_20_SPC_FI",FRCH_storm4_06_20_SPC_FI[[2]]),
  c("FRCH_storm5_06_22_SPC_FI",FRCH_storm5_06_22_SPC_FI[[2]]),
  c("FRCH_storm6_07_12_SPC_FI", NA, NA, NA),
  c("FRCH_storm7_07_25_SPC_FI",FRCH_storm7_07_25_SPC_FI[[2]]),
  c("FRCH_storm8_07_28_SPC_FI", NA, NA, NA),
  c("FRCH_storm9a_07_29_SPC_FI",FRCH_storm9a_07_29_SPC_FI[[2]]),
  c("FRCH_storm9b_07_30_SPC_FI",FRCH_storm9b_07_30_SPC_FI[[2]]),
  c("FRCH_storm10a_08_01_SPC_FI",FRCH_storm10a_08_01_SPC_FI[[2]]),
  c("FRCH_storm10b_08_02_SPC_FI",FRCH_storm10b_08_02_SPC_FI[[2]]),
  c("FRCH_storm11_08_05_SPC_FI",FRCH_storm11_08_05_SPC_FI[[2]]),
  c("FRCH_storm12a_08_12_SPC_FI",FRCH_storm12a_08_12_SPC_FI[[2]]),
  c("FRCH_storm12b_08_14_SPC_FI",FRCH_storm12b_08_14_SPC_FI[[2]]),
  c("FRCH_storm12c_08_15_SPC_FI",FRCH_storm12c_08_15_SPC_FI[[2]]),
  c("FRCH_storm12d_08_21_SPC_FI",FRCH_storm12d_08_21_SPC_FI[[2]]),
  c("FRCH_storm12e_08_23_SPC_FI",FRCH_storm12e_08_23_SPC_FI[[2]]),
  c("FRCH_storm13_09_20_SPC_FI",NA, NA, NA),
  c("FRCH_storm14_10_01_NO3_FI",FRCH_storm14_10_01_NO3_FI[[2]]),
  
  c("FRCH_storm1_05_31_turb_FI",FRCH_storm1_05_31_turb_FI[[2]]),
  c("FRCH_storm2_06_15_turb_FI",FRCH_storm2_06_15_turb_FI[[2]]),
  c("FRCH_storm3_06_18_turb_FI",FRCH_storm3_06_18_turb_FI[[2]]),
  c("FRCH_storm4_06_20_turb_FI",FRCH_storm4_06_20_turb_FI[[2]]),
  c("FRCH_storm5_06_22_turb_FI",FRCH_storm5_06_22_turb_FI[[2]]),
  c("FRCH_storm6_07_12_turb_FI", NA, NA, NA),
  c("FRCH_storm7_07_25_turb_FI",FRCH_storm7_07_25_turb_FI[[2]]),
  c("FRCH_storm8_07_28_turb_FI", NA, NA, NA),
  c("FRCH_storm9a_07_29_turb_FI",FRCH_storm9a_07_29_turb_FI[[2]]),
  c("FRCH_storm9b_07_30_turb_FI",FRCH_storm9b_07_30_turb_FI[[2]]),
  c("FRCH_storm10a_08_01_turb_FI",FRCH_storm10a_08_01_turb_FI[[2]]),
  c("FRCH_storm10b_08_02_turb_FI",FRCH_storm10b_08_02_turb_FI[[2]]),
  c("FRCH_storm11_08_05_turb_FI",FRCH_storm11_08_05_turb_FI[[2]]),
  c("FRCH_storm12a_08_12_turb_FI",FRCH_storm12a_08_12_turb_FI[[2]]),
  c("FRCH_storm12b_08_14_turb_FI",FRCH_storm12b_08_14_turb_FI[[2]]),
  c("FRCH_storm12c_08_15_turb_FI",FRCH_storm12c_08_15_turb_FI[[2]]),
  c("FRCH_storm12d_08_21_turb_FI",FRCH_storm12d_08_21_turb_FI[[2]]),
  c("FRCH_storm12e_08_23_turb_FI",FRCH_storm12e_08_23_turb_FI[[2]]),
  c("FRCH_storm13_09_20_turb_FI",NA, NA, NA),
  c("FRCH_storm14_10_01_NO3_FI",FRCH_storm14_10_01_NO3_FI[[2]]),
  
  c("MOOS_storm1_06_01_NO3_FI",MOOS_storm1_06_01_NO3_FI[[2]]),
  c("MOOS_storm3_07_12_NO3_FI",MOOS_storm3_07_12_NO3_FI[[2]]),
  c("MOOS_storm4_07_25_NO3_FI",NA, NA, NA),
  c("MOOS_storm5_07_29_NO3_FI",MOOS_storm5_07_29_NO3_FI[[2]]),
  c("MOOS_storm6a_08_01_NO3_FI",MOOS_storm6a_08_01_NO3_FI[[2]]),
  c("MOOS_storm6b_08_02_NO3_FI",NA, NA, NA),
  c("MOOS_storm6c_08_03_NO3_FI",NA, NA, NA),
  c("MOOS_storm7a_08_13_NO3_FI",MOOS_storm7a_08_13_NO3_FI[[2]]),
  c("MOOS_storm7b_08_14_NO3_FI",MOOS_storm7b_08_14_NO3_FI[[2]]),
  c("MOOS_storm7c_08_15_NO3_FI",MOOS_storm7c_08_15_NO3_FI[[2]]),
  c("MOOS_storm8_09_21_NO3_FI",MOOS_storm8_09_21_NO3_FI[[2]]),
  c("MOOS_storm9_10_02_NO3_FI",MOOS_storm9_10_02_NO3_FI[[2]]),
  
  c("MOOS_storm1_06_01_fDOM_FI",MOOS_storm1_06_01_fDOM_FI[[2]]),
  c("MOOS_storm3_07_12_fDOM_FI",NA, NA, NA),
  c("MOOS_storm4_07_25_fDOM_FI",NA, NA, NA),
  c("MOOS_storm5_07_29_fDOM_FI",NA, NA, NA),
  c("MOOS_storm6a_08_01_fDOM_FI",MOOS_storm6a_08_01_fDOM_FI[[2]]),
  c("MOOS_storm6b_08_02_fDOM_FI",NA, NA, NA),
  c("MOOS_storm6c_08_03_fDOM_FI",MOOS_storm6c_08_03_fDOM_FI[[2]]),
  c("MOOS_storm7a_08_13_fDOM_FI",MOOS_storm7a_08_13_fDOM_FI[[2]]),
  c("MOOS_storm7b_08_14_fDOM_FI",MOOS_storm7b_08_14_fDOM_FI[[2]]),
  c("MOOS_storm7c_08_15_fDOM_FI",MOOS_storm7c_08_15_fDOM_FI[[2]]),
  c("MOOS_storm8_09_21_fDOM_FI",NA, NA, NA),
  c("MOOS_storm9_10_02_fDOM_FI",NA, NA, NA),
  
  c("MOOS_storm1_06_01_SPC_FI",MOOS_storm1_06_01_SPC_FI[[2]]),
  c("MOOS_storm3_07_12_SPC_FI",NA, NA, NA),
  c("MOOS_storm4_07_25_SPC_FI",NA, NA, NA),
  c("MOOS_storm5_07_29_SPC_FI",NA, NA, NA),
  c("MOOS_storm6a_08_01_SPC_FI",MOOS_storm6a_08_01_SPC_FI[[2]]),
  c("MOOS_storm6b_08_02_SPC_FI",NA, NA, NA),
  c("MOOS_storm6c_08_03_SPC_FI",MOOS_storm6c_08_03_SPC_FI[[2]]),
  c("MOOS_storm7a_08_13_SPC_FI",MOOS_storm7a_08_13_SPC_FI[[2]]),
  c("MOOS_storm7b_08_14_SPC_FI",MOOS_storm7b_08_14_SPC_FI[[2]]),
  c("MOOS_storm7c_08_15_SPC_FI",MOOS_storm7c_08_15_SPC_FI[[2]]),
  c("MOOS_storm8_09_21_SPC_FI",NA, NA, NA),
  c("MOOS_storm9_10_02_SPC_FI",NA, NA, NA),
  
  c("MOOS_storm1_06_01_turb_FI",MOOS_storm1_06_01_turb_FI[[2]]),
  c("MOOS_storm3_07_12_turb_FI",NA, NA, NA),
  c("MOOS_storm4_07_25_turb_FI",NA, NA, NA),
  c("MOOS_storm5_07_29_turb_FI",NA, NA, NA),
  c("MOOS_storm6a_08_01_turb_FI",MOOS_storm6a_08_01_turb_FI[[2]]),
  c("MOOS_storm6b_08_02_turb_FI",NA, NA, NA),
  c("MOOS_storm6c_08_03_turb_FI",MOOS_storm6c_08_03_turb_FI[[2]]),
  c("MOOS_storm7a_08_13_turb_FI",MOOS_storm7a_08_13_turb_FI[[2]]),
  c("MOOS_storm7b_08_14_turb_FI",MOOS_storm7b_08_14_turb_FI[[2]]),
  c("MOOS_storm7c_08_15_turb_FI",MOOS_storm7c_08_15_turb_FI[[2]]),
  c("MOOS_storm8_09_21_turb_FI",NA, NA, NA),
  c("MOOS_storm9_10_02_turb_FI",NA, NA, NA),
  
  c("POKE_storm1_06_30_NO3_FI",POKE_storm1_06_30_NO3_FI[[2]]),
  c("POKE_storm2_07_12_NO3_FI",POKE_storm2_07_12_NO3_FI[[2]]),
  c("POKE_storm3_07_26_NO3_FI",0.556451612903223, NA, NA),
  c("POKE_storm4_07_31_NO3_FI",0.609090909090907, NA, NA),
  c("POKE_storm5a_08_02_NO3_FI",0.357142857142857, NA, NA),
  c("POKE_storm5b_08_03_NO3_FI",0.187875574407918, NA ,NA),
  c("POKE_storm5c_08_05_NO3_FI",NA, NA, NA),
  c("POKE_storm5d_08_10_NO3_FI",0.0632183908045973, NA, NA),
  c("POKE_storm6a_08_12_NO3_FI",NA, NA, NA),
  c("POKE_storm6b_08_13_NO3_FI",NA, NA, NA),
  c("POKE_storm7_08_15_NO3_FI",NA, NA, NA),
  c("POKE_storm8_09_29_NO3_FI",POKE_storm8_09_29_NO3_FI[[2]]),
  c("POKE_storm9_10_04_NO3_FI",NA, NA, NA),
  
  c("POKE_storm1_06_30_fDOM_FI",POKE_storm1_06_30_fDOM_FI[[2]]),
  c("POKE_storm2_07_12_fDOM_FI",POKE_storm2_07_12_fDOM_FI[[2]]),
  c("POKE_storm3_07_26_fDOM_FI",POKE_storm3_07_26_fDOM_FI[[2]]),
  c("POKE_storm4_07_31_fDOM_FI",POKE_storm4_07_31_fDOM_FI[[2]]),
  c("POKE_storm5a_08_02_fDOM_FI",POKE_storm5a_08_02_fDOM_FI[[2]]),
  c("POKE_storm5b_08_03_fDOM_FI",POKE_storm5b_08_03_fDOM_FI[[2]]),
  c("POKE_storm5c_08_05_fDOM_FI",POKE_storm5c_08_05_fDOM_FI[[2]]),
  c("POKE_storm5d_08_10_fDOM_FI",POKE_storm5d_08_10_fDOM_FI[[2]]),
  c("POKE_storm6a_08_12_fDOM_FI",POKE_storm6a_08_12_fDOM_FI[[2]]),
  c("POKE_storm6a_08_12_fDOM_FI",NA, NA, NA),
  c("POKE_storm7_08_15_fDOM_FI",POKE_storm7_08_15_fDOM_FI[[2]]),
  c("POKE_storm8_09_29_fDOM_FI",POKE_storm8_09_29_fDOM_FI[[2]]),
  c("POKE_storm9_10_04_fDOM_FI", NA, NA, NA),
  
  c("POKE_storm1_06_30_SPC_FI",POKE_storm1_06_30_SPC_FI[[2]]),
  c("POKE_storm2_07_12_SPC_FI",POKE_storm2_07_12_SPC_FI[[2]]),
  c("POKE_storm3_07_26_SPC_FI",POKE_storm3_07_26_SPC_FI[[2]]),
  c("POKE_storm4_07_31_SPC_FI",POKE_storm4_07_31_SPC_FI[[2]]),
  c("POKE_storm5a_08_02_SPC_FI",POKE_storm5a_08_02_SPC_FI[[2]]),
  c("POKE_storm5b_08_03_SPC_FI",POKE_storm5b_08_03_SPC_FI[[2]]),
  c("POKE_storm5c_08_05_SPC_FI",POKE_storm5c_08_05_SPC_FI[[2]]),
  c("POKE_storm5d_08_10_SPC_FI",POKE_storm5d_08_10_SPC_FI[[2]]),
  c("POKE_storm6a_08_12_SPC_FI",POKE_storm6a_08_12_SPC_FI[[2]]),
  c("POKE_storm6a_08_12_SPC_FI",NA, NA, NA),
  c("POKE_storm7_08_15_SPC_FI",POKE_storm7_08_15_SPC_FI[[2]]),
  c("POKE_storm8_09_29_SPC_FI",POKE_storm8_09_29_SPC_FI[[2]]),
  c("POKE_storm9_10_04_SPC_FI", NA, NA, NA),
  
  c("POKE_storm1_06_30_turb_FI",POKE_storm1_06_30_turb_FI[[2]]),
  c("POKE_storm2_07_12_turb_FI",POKE_storm2_07_12_turb_FI[[2]]),
  c("POKE_storm3_07_26_turb_FI",POKE_storm3_07_26_turb_FI[[2]]),
  c("POKE_storm4_07_31_turb_FI",POKE_storm4_07_31_turb_FI[[2]]),
  c("POKE_storm5a_08_02_turb_FI",POKE_storm5a_08_02_turb_FI[[2]]),
  c("POKE_storm5b_08_03_turb_FI",POKE_storm5b_08_03_turb_FI[[2]]),
  c("POKE_storm5c_08_05_turb_FI",POKE_storm5c_08_05_turb_FI[[2]]),
  c("POKE_storm5d_08_10_turb_FI",POKE_storm5d_08_10_turb_FI[[2]]),
  c("POKE_storm6a_08_12_turb_FI",POKE_storm6a_08_12_turb_FI[[2]]),
  c("POKE_storm6a_08_12_turb_FI",NA, NA, NA),
  c("POKE_storm7_08_15_turb_FI",POKE_storm7_08_15_turb_FI[[2]]),
  c("POKE_storm8_09_29_turb_FI",POKE_storm8_09_29_turb_FI[[2]]),
  c("POKE_storm9_10_04_turb_FI", NA, NA, NA),
  
  c("STRT_storm1_05_31_NO3_FI",STRT_storm1_05_31_NO3_FI[[2]]),
  c("STRT_storm2_07_12_NO3_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm3a_07_25_NO3_FI",NA,NA,NA),
  c("STRT_storm3b_08_05_NO3_FI",NA, NA, NA),
  c("STRT_storm3c_08_12_NO3_FI",STRT_storm3c_08_12_NO3_FI[[2]]),
  c("STRT_storm4_08_15_NO3_FI",NA, NA, NA),
  c("STRT_storm5_08_20_NO3_FI",NA, NA, NA),
  c("STRT_storm6_09_20_NO3_FI",STRT_storm6_09_20_NO3_FI[[2]]),
  c("STRT_storm7_10_01_NO3_FI",STRT_storm7_10_01_NO3_FI[[2]]),
  c("STRT_storm7b_10_04_NO3_FI",STRT_storm7b_10_04_NO3_FI[[2]]),
  c("STRT_storm7c_10_09_NO3_FI",STRT_storm7c_10_09_NO3_FI[[2]]),
  
  c("STRT_storm1_05_31_fDOM_FI",NA, NA, NA),
  c("STRT_storm2_07_12_fDOM_FI",STRT_storm2_07_12_fDOM_FI[[2]]),
  c("STRT_storm3a_07_25_fDOM_FI",STRT_storm3a_07_25_fDOM_FI[[2]]),
  c("STRT_storm3b_08_05_fDOM_FI",STRT_storm3b_08_05_fDOM_FI[[2]]),
  c("STRT_storm3c_08_12_fDOM_FI",STRT_storm3c_08_12_fDOM_FI[[2]]),
  c("STRT_storm4_08_15_fDOM_FI",STRT_storm4_08_15_fDOM_FI[[2]]),
  c("STRT_storm5_08_20_fDOM_FI",STRT_storm5_08_20_fDOM_FI[[2]]),
  c("STRT_storm6_09_20_fDOM_FI",NA, NA, NA),
  c("STRT_storm7_10_01_fDOM_FI",NA, NA, NA),
  c("STRT_storm7b_10_04_fDOM_FI",STRT_storm7b_10_04_fDOM_FI[[2]]),
  c("STRT_storm7c_10_09_fDOM_FI",NA, NA, NA),
  
  c("STRT_storm1_05_31_SPC_FI",NA, NA, NA),
  c("STRT_storm2_07_12_SPC_FI",STRT_storm2_07_12_SPC_FI[[2]]),
  c("STRT_storm3a_07_25_SPC_FI",STRT_storm3a_07_25_SPC_FI[[2]]),
  c("STRT_storm3b_08_05_SPC_FI",STRT_storm3b_08_05_SPC_FI[[2]]),
  c("STRT_storm3c_08_12_SPC_FI",STRT_storm3c_08_12_SPC_FI[[2]]),
  c("STRT_storm4_08_15_SPC_FI",STRT_storm4_08_15_SPC_FI[[2]]),
  c("STRT_storm5_08_20_SPC_FI",STRT_storm5_08_20_SPC_FI[[2]]),
  c("STRT_storm6_09_20_SPC_FI",NA, NA, NA),
  c("STRT_storm7_10_01_SPC_FI",NA, NA, NA),
  c("STRT_storm7b_10_04_SPC_FI",STRT_storm7b_10_04_SPC_FI[[2]]),
  c("STRT_storm7c_10_09_SPC_FI",NA, NA, NA),
  
  c("STRT_storm1_05_31_turb_FI",NA, NA, NA),
  c("STRT_storm2_07_12_turb_FI",STRT_storm2_07_12_turb_FI[[2]]),
  c("STRT_storm3a_07_25_turb_FI",STRT_storm3a_07_25_turb_FI[[2]]),
  c("STRT_storm3b_08_05_turb_FI",STRT_storm3b_08_05_turb_FI[[2]]),
  c("STRT_storm3c_08_12_turb_FI",STRT_storm3c_08_12_turb_FI[[2]]),
  c("STRT_storm4_08_15_turb_FI",STRT_storm4_08_15_turb_FI[[2]]),
  c("STRT_storm5_08_20_turb_FI",STRT_storm5_08_20_SPC_FI[[2]]),
  c("STRT_storm6_09_20_turb_FI",NA, NA, NA),
  c("STRT_storm7_10_01_turb_FI",NA, NA, NA),
  c("STRT_storm7b_10_04_turb_FI",STRT_storm7b_10_04_turb_FI[[2]]),
  c("STRT_storm7c_10_09_turb_FI",NA, NA, NA),
  
  c("VAUL_storm1_07_13_NO3_FI",VAUL_storm1_07_13_NO3_FI[[2]]),
  c("VAUL_storm2_07_26_NO3_FI",VAUL_storm2_07_26_NO3_FI[[2]]),
  c("VAUL_storm3_07_29_NO3_FI",VAUL_storm3_07_29_NO3_FI[[2]]),
  c("VAUL_storm4a_08_02_NO3_FI",VAUL_storm4a_08_02_NO3_FI[[2]]),
  c("VAUL_storm4b_08_03_NO3_FI",VAUL_storm4b_08_03_NO3_FI[[2]]),
  c("VAUL_storm4c_08_05_NO3_FI",VAUL_storm4c_08_05_NO3_FI[[2]]),
  c("VAUL_storm5_08_12_NO3_FI",VAUL_storm5_08_12_NO3_FI[[2]]),
  c("VAUL_storm6_08_15_NO3_FI",VAUL_storm6_08_15_NO3_FI[[2]]),
  c("VAUL_storm7_09_19_NO3_FI",VAUL_storm7_09_19_NO3_FI[[2]]),
  c("VAUL_storm8a_09_29_NO3_FI",VAUL_storm8a_09_29_NO3_FI[[2]]),
  c("VAUL_storm8b_10_01_NO3_FI",NA, NA, NA),
  c("VAUL_storm8c_10_04_NO3_FI",NA, NA, NA),
  
  c("VAUL_storm1_07_13_fDOM_FI",VAUL_storm1_07_13_fDOM_FI[[2]]),
  c("VAUL_storm2_07_26_fDOM_FI",VAUL_storm2_07_26_fDOM_FI[[2]]),
  c("VAUL_storm3_07_29_fDOM_FI",VAUL_storm3_07_29_fDOM_FI[[2]]),
  c("VAUL_storm4a_08_02_fDOM_FI",VAUL_storm4a_08_02_fDOM_FI[[2]]),
  c("VAUL_storm4b_08_03_fDOM_FI",VAUL_storm4b_08_03_fDOM_FI[[2]]),
  c("VAUL_storm4c_08_05_fDOM_FI",VAUL_storm4c_08_05_fDOM_FI[[2]]),
  c("VAUL_storm5_08_12_fDOM_FI",NA, NA, NA),
  c("VAUL_storm6_08_15_fDOM_FI",NA, NA, NA),
  c("VAUL_storm7_09_19_fDOM_FI",NA, NA, NA),
  c("VAUL_storm8a_09_29_NO3_FI",NA, NA, NA),
  c("VAUL_storm8b_10_01_NO3_FI",NA, NA, NA),
  c("VAUL_storm8c_10_04_NO3_FI",NA, NA, NA),
  
  c("VAUL_storm1_07_13_SPC_FI",VAUL_storm1_07_13_SPC_FI[[2]]),
  c("VAUL_storm2_07_26_SPC_FI",VAUL_storm2_07_26_SPC_FI[[2]]),
  c("VAUL_storm3_07_29_SPC_FI",VAUL_storm3_07_29_SPC_FI[[2]]),
  c("VAUL_storm4a_08_02_SPC_FI",VAUL_storm4a_08_02_SPC_FI[[2]]),
  c("VAUL_storm4b_08_03_SPC_FI",VAUL_storm4b_08_03_SPC_FI[[2]]),
  c("VAUL_storm4c_08_05_SPC_FI",VAUL_storm4c_08_05_SPC_FI[[2]]),
  c("VAUL_storm5_08_12_SPC_FI",NA, NA, NA),
  c("VAUL_storm6_08_15_SPC_FI",NA, NA, NA),
  c("VAUL_storm7_09_19_SPC_FI",NA, NA, NA),
  c("VAUL_storm8a_09_29_NO3_FI",NA, NA, NA),
  c("VAUL_storm8b_10_01_NO3_FI",NA, NA, NA),
  c("VAUL_storm8c_10_04_NO3_FI",NA, NA, NA),
  
  c("VAUL_storm1_07_13_turb_FI",VAUL_storm1_07_13_turb_FI[[2]]),
  c("VAUL_storm2_07_26_turb_FI",VAUL_storm2_07_26_turb_FI[[2]]),
  c("VAUL_storm3_07_29_turb_FI",VAUL_storm3_07_29_turb_FI[[2]]),
  c("VAUL_storm4a_08_02_turb_FI",VAUL_storm4a_08_02_turb_FI[[2]]),
  c("VAUL_storm4b_08_03_turb_FI",VAUL_storm4b_08_03_turb_FI[[2]]),
  c("VAUL_storm4c_08_05_turb_FI",VAUL_storm4c_08_05_turb_FI[[2]]),
  c("VAUL_storm5_08_12_turb_FI",NA, NA, NA),
  c("VAUL_storm6_08_15_turb_FI",NA, NA, NA),
  c("VAUL_storm7_09_19_turb_FI",NA, NA, NA),
  c("VAUL_storm8a_09_29_NO3_FI",NA, NA, NA),
  c("VAUL_storm8b_10_01_NO3_FI",NA, NA, NA),
  c("VAUL_storm8c_10_04_NO3_FI",NA, NA, NA),
  
  c("CARI_storm1_05_08_NO3_FI",NA, NA, NA),
  c("CARI_storm2_06_30_NO3_FI",NA, NA, NA),
  c("CARI_storm3_07_12_NO3_FI",NA,NA,NA),
  c("CARI_storm4_07_26_NO3_FI",NA, NA, NA),
  c("CARI_storm5_07_31_NO3_FI",NA,NA,NA),
  c("CARI_storm6a_08_02_NO3_FI",0.566666666666667,NA,NA),
  c("CARI_storm6b_08_03_NO3_FI",NA, NA, NA),
  c("CARI_storm6c_08_05_NO3_FI",NA,NA,NA),
  c("CARI_storm6d_08_10_NO3_FI",NA,NA,NA),
  c("CARI_storm7a_08_13_NO3_FI",NA,NA,NA),
  c("CARI_storm7b_08_13_NO3_FI",NA,NA,NA),
  c("CARI_storm8_08_16_NO3_FI",NA,NA,NA),
  
  c("CARI_storm1_05_08_fDOM_FI",0.694059200993583, NA,NA),
  c("CARI_storm2_06_30_fDOM_FI",0.992816091954023, NA, NA),
  c("CARI_storm3_07_12_fDOM_FI",0.72083879423329,NA,NA),
  c("CARI_storm4_07_26_fDOM_FI",0.358464012866908,NA,NA),
  c("CARI_storm5_07_31_fDOM_FI",0.367280606717227,NA,NA),
  c("CARI_storm6a_08_02_fDOM_FI",0.586084770935679,NA,NA),
  c("CARI_storm6b_08_03_fDOM_FI",0.14290473017988,NA,NA),
  c("CARI_storm6c_08_05_fDOM_FI",0.0903590157321501,NA,NA),
  c("CARI_storm6d_08_10_fDOM_FI",0.450790861159929,NA,NA),
  c("CARI_storm7a_08_13_fDOM_FI",0.965415019762846,NA,NA),
  c("CARI_storm7b_08_13_fDOM_FI",0.0436741515878206,NA,NA),
  c("CARI_storm8_08_16_fDOM_FI",0.902075075775239,NA,NA),
  
  c("CARI_storm1_05_08_SPC_FI",NA, NA, NA),
  c("CARI_storm2_06_30_SPC_FI",NA, NA, NA),
  c("CARI_storm3_07_12_SPC_FI",NA,NA,NA),
  c("CARI_storm4_07_26_SPC_FI",NA,NA,NA),
  c("CARI_storm5_07_31_SPC_FI",NA,NA,NA),
  c("CARI_storm6a_08_02_SPC_FI",NA,NA,NA),
  c("CARI_storm6b_08_03_SPC_FI",NA,NA,NA),
  c("CARI_storm6c_08_05_SPC_FI",NA,NA,NA),
  c("CARI_storm6d_08_10_SPC_FI",NA,NA,NA),
  c("CARI_storm7a_08_13_SPC_FI",NA,NA,NA),
  c("CARI_storm7b_08_13_SPC_FI",NA,NA,NA),
  c("CARI_storm8_08_16_SPC_FI",NA,NA,NA),
  
  c("CARI_storm1_05_08_turb_FI",0.428325292901447, NA, NA),
  c("CARI_storm2_06_30_turb_FI",NA, NA, NA),
  c("CARI_storm3_07_12_turb_FI",0.174224343675418,NA,NA),
  c("CARI_storm4_07_26_turb_FI",NA,NA,NA),
  c("CARI_storm5_07_31_turb_FI",636363636363636,NA,NA),
  c("CARI_storm6a_08_02_turb_FI",0.0814886983632112,NA,NA),
  c("CARI_storm6b_08_03_turb_FI",NA,NA,NA),
  c("CARI_storm6c_08_05_turb_FI",0.164294954721863,NA,NA),
  c("CARI_storm6d_08_10_turb_FI",0.497340425531915,NA,NA),
  c("CARI_storm7a_08_13_turb_FI",0.203671830177854,NA,NA),
  c("CARI_storm7b_08_13_turb_FI",0.42369962108164,NA,NA),
  c("CARI_storm8_08_16_turb_FI",0.0444750114626318,NA,NA))
  
 
  
FI_results = as.data.frame(FI_results)

names(FI_results) = c("ID", "Flushing_index", "percCI_2.5", "percCI_97.5")

FI_results$ID = unlist(FI_results$ID)
FI_results$Flushing_index = round(as.numeric(as.character(FI_results$Flushing_index)), 4)
FI_results$`percCI_2.5` = round(as.numeric(as.character(FI_results$`percCI_2.5`)), 4)
FI_results$`percCI_97.5` = round(as.numeric(as.character(FI_results$`percCI_97.5`)), 4)

write.csv(FI_results, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/all.FI.diff.results_2019.csv")

# calculate 95% bootstrap around median of Hyst. Indicies for each site and storm #

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}

# FRCH #
FRCH.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/FRCH/FRCH.HI.df.csv")

storm.list = unique(FRCH.HI.df$storm.ID)
FRCH.HI.boot <- do.call(rbind.data.frame,
                      lapply(storm.list, function(i){
                        dat = subset(FRCH.HI.df, storm.ID == i)
                        median_cl_boot(dat$HI)
                      }))
FRCH.HI.boot$storm.ID = storm.list

# MOOS #
MOOS.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/MOOS/MOOS.HI.df.csv")

storm.list = unique(MOOS.HI.df$storm.ID)
MOOS.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(MOOS.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
MOOS.HI.boot$storm.ID = storm.list

# POKE #
POKE.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/POKE/POKE.HI.df.csv")

storm.list = unique(POKE.HI.df$storm.ID)
POKE.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(POKE.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
POKE.HI.boot$storm.ID = storm.list

# STRT #
STRT.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/STRT/STRT.HI.df.csv")

storm.list = unique(STRT.HI.df$storm.ID)
STRT.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(STRT.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
STRT.HI.boot$storm.ID = storm.list

# VAUL #
VAUL.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/VAUL/VAUL.HI.df.csv")

storm.list = unique(VAUL.HI.df$storm.ID)
VAUL.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(VAUL.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
VAUL.HI.boot$storm.ID = storm.list

# CARI #
CARI.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2019/CARI/CARI.HI.df.csv")

storm.list = unique(CARI.HI.df$storm.ID)
CARI.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(CARI.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
CARI.HI.boot$storm.ID = storm.list


# join data #

FRCH.HI.boot$site.ID = "FRCH"
MOOS.HI.boot$site.ID = "MOOS"
POKE.HI.boot$site.ID = "POKE"
STRT.HI.boot$site.ID = "STRT"
VAUL.HI.boot$site.ID = "VAUL"
CARI.HI.boot$site.ID = "CARI"

HI = rbind(FRCH.HI.boot, MOOS.HI.boot, POKE.HI.boot, STRT.HI.boot, VAUL.HI.boot, CARI.HI.boot)

all.FI.diff.results = read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/all.FI.diff.results_2019.csv", header = T, row.names = 1)

FI = subset(all.FI.diff.results, select=c("Flushing_index", "percCI_2.5", "percCI_97.5", "ID"))
FI$ID = as.character(FI$ID)
FI = separate(FI, ID, into=c("site.ID", "storm.ID", "month", "day", "response_var", NA), sep = "_")
names(FI) = c("Flush_index", "FI_ymin", "FI_ymax","site.ID", "storm.ID", "month", "day", "response_var")

HI$site.ID=NULL
HI = separate(HI, storm.ID, into=c("site.ID", "storm.ID", "month", "day", "response_var"), sep = "_")
names(HI) = c("Hyst_index", "HI_ymin", "HI_ymax","site.ID", "storm.ID", "month", "day", "response_var")

HI_FI = left_join(HI, FI, by=c("site.ID", "storm.ID", "response_var"))
write.csv(HI_FI, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2019.csv")


# plot #

# NO3 #
HI_FI_NO3 = subset(HI_FI, response_var == "NO3")
HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_NO3.p = 
  ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

# SPC #
HI_FI_SPC = subset(HI_FI, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p

# turb #
HI_FI_turb = subset(HI_FI, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


grid.arrange(HI_FI_NO3.p,HI_FI_fDOM.p,HI_FI_SPC.p,HI_FI_turb.p)




########################################### 2020 ########################################################
# load storm data to R #

storm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI/", 
                                   recursive=F, 
                                   pattern=".csv", 
                                   full.names=TRUE)

storm_list <-do.call("list", lapply(storm_file_list, 
                                        read.csv, 
                                        stringsAsFactors=FALSE, 
                                        header=T, row.names=1))

storm_file_list = sub("~/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list, replacement = "")
storm_file_list = sub(".csv", storm_file_list, replacement = "")
names(storm_list) = storm_file_list

for(i in 1:length(storm_list)){
  storm_list[[i]][["valuedatetime"]] = as.POSIXct(storm_list[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} # changing character format into datetime 


#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list = storm_list[c(1:60)] #80
FRCH_storm_list = storm_list[c(61:150)] #75
MOOS_storm_list = storm_list[c(151:205)] #80
POKE_storm_list = storm_list[c(206:325)] #80
STRT_storm_list = storm_list[c(326:415)] #80
VAUL_storm_list = storm_list[c(416:500)] #80

CARI_Q_storm_list = CARI_storm_list[c(grep("Q", names(CARI_storm_list)))]
FRCH_Q_storm_list = FRCH_storm_list[c(grep("Q", names(FRCH_storm_list)))]
MOOS_Q_storm_list = MOOS_storm_list[c(grep("Q", names(MOOS_storm_list)))]
POKE_Q_storm_list = POKE_storm_list[c(grep("Q", names(POKE_storm_list)))]
STRT_Q_storm_list = STRT_storm_list[c(grep("Q", names(STRT_storm_list)))]
VAUL_Q_storm_list = VAUL_storm_list[c(grep("Q", names(VAUL_storm_list)))]

# normalize Q data 
# FRCH
for(i in 1:length(FRCH_Q_storm_list)){
  FRCH_Q_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_Q_storm_list[[i]][["datavalue"]]-min(FRCH_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_Q_storm_list)){
  MOOS_Q_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_Q_storm_list[[i]][["datavalue"]]-min(MOOS_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_Q_storm_list)){
  POKE_Q_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_Q_storm_list[[i]][["datavalue"]]-min(POKE_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_Q_storm_list)){
  STRT_Q_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_Q_storm_list[[i]][["datavalue"]]-min(STRT_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_Q_storm_list)){
  VAUL_Q_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_Q_storm_list[[i]][["datavalue"]]-min(VAUL_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

### solute data with bursts ###
FRCH_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/FRCH_NO3_storm_list.RData")
FRCH_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/FRCH_fDOM_storm_list.RData")
FRCH_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/FRCH_SPC_storm_list.RData")
FRCH_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/FRCH_turb_storm_list.RData")

MOOS_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/MOOS_NO3_storm_list.RData")
MOOS_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/MOOS_fDOM_storm_list.RData")
MOOS_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/MOOS_SPC_storm_list.RData")
MOOS_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/MOOS_turb_storm_list.RData")

POKE_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/POKE_NO3_storm_list.RData")
POKE_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/POKE_fDOM_storm_list.RData")
POKE_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/POKE_SPC_storm_list.RData")
POKE_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/POKE_turb_storm_list.RData")

STRT_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/STRT_NO3_storm_list.RData")
STRT_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/STRT_fDOM_storm_list.RData")
STRT_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/STRT_SPC_storm_list.RData")
STRT_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/STRT_turb_storm_list.RData")

VAUL_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/VAUL_NO3_storm_list.RData")
VAUL_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/VAUL_fDOM_storm_list.RData")
VAUL_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/VAUL_SPC_storm_list.RData")
VAUL_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2020/VAUL_turb_storm_list.RData")


# Normalize solute data # 

### remove burst-complied data ###

#NO3
for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["datavalue"]] = FRCH_NO3_storm_list[[i]][["nitrateuM"]]
  FRCH_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]][["datavalue"]] = MOOS_NO3_storm_list[[i]][["nitrateuM"]]
  MOOS_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]][["datavalue"]] = POKE_NO3_storm_list[[i]][["nitrateuM"]]
  POKE_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]][["datavalue"]] = STRT_NO3_storm_list[[i]][["nitrateuM"]]
  STRT_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]][["datavalue"]] = VAUL_NO3_storm_list[[i]][["nitrateuM"]]
  VAUL_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue"]] = FRCH_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  FRCH_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  FRCH_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue"]] = MOOS_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  MOOS_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  MOOS_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]][["datavalue"]] = POKE_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  POKE_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  POKE_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["datavalue"]] = STRT_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  STRT_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  STRT_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["datavalue"]] = VAUL_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  VAUL_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  VAUL_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["datavalue"]] = FRCH_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  FRCH_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  FRCH_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]][["datavalue"]] = MOOS_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  MOOS_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  MOOS_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]][["datavalue"]] = POKE_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  POKE_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  POKE_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]][["datavalue"]] = STRT_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  STRT_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  STRT_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]][["datavalue"]] = VAUL_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  VAUL_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  VAUL_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

#turb
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue"]] = FRCH_turb_storm_list[[i]][["Turbidity.FNU"]]
  FRCH_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  FRCH_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue"]] = MOOS_turb_storm_list[[i]][["Turbidity.FNU"]]
  MOOS_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  MOOS_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]][["datavalue"]] = POKE_turb_storm_list[[i]][["Turbidity.FNU"]]
  POKE_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  POKE_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["datavalue"]] = STRT_turb_storm_list[[i]][["Turbidity.FNU"]]
  STRT_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  STRT_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["datavalue"]] = VAUL_turb_storm_list[[i]][["Turbidity.FNU"]]
  VAUL_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  VAUL_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

### normalize burst data ###

#NO3
for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_NO3_storm_list[[i]][["datavalue"]]-min(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_NO3_storm_list[[i]][["datavalue"]]-min(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_NO3_storm_list[[i]][["datavalue"]]-min(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_NO3_storm_list[[i]][["datavalue"]]-min(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_NO3_storm_list[[i]][["datavalue"]]-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}


#fDOM
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_fDOM_storm_list[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_fDOM_storm_list[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_fDOM_storm_list[[i]][["datavalue"]]-min(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(STRT_fDOM_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_fDOM_storm_list[[i]][["datavalue"]]-min(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(VAUL_fDOM_storm_list[[i]][["datavalue"]])
} #

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_fDOM_storm_list[[i]][["datavalue"]]-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_SpCond_storm_list[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_SpCond_storm_list[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_SpCond_storm_list[[i]][["datavalue"]]-min(POKE_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(STRT_SpCond_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_SpCond_storm_list[[i]][["datavalue"]]-min(STRT_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(VAUL_SpCond_storm_list[[i]][["datavalue"]])
} #

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_SpCond_storm_list[[i]][["datavalue"]]-min(VAUL_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

#turb
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_turb_storm_list[[i]][["datavalue"]]-min(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_turb_storm_list[[i]][["datavalue"]]-min(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_turb_storm_list[[i]][["datavalue"]]-min(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["datavalue"]] = as.numeric(STRT_turb_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_turb_storm_list[[i]][["datavalue"]]-min(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["datavalue"]] = as.numeric(VAUL_turb_storm_list[[i]][["datavalue"]])
} #

for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_turb_storm_list[[i]][["datavalue"]]-min(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

# fxn: calculate FI by difference and bootstrap CIs #

FI_diff = function(dat_Q, dat_response) {
  FI_dat = rbind(dat_response[as.POSIXct(dat_response$valuedatetime) == min(as.POSIXct(dat_response$valuedatetime)),], 
                 dat_response[as.POSIXct(dat_response$valuedatetime) == as.POSIXct(dat_Q$valuedatetime[dat_Q$datavalue.norm == max(dat_Q$datavalue.norm)]),])
  
  FI_dat$valuedatetime = as.character(as.POSIXct(FI_dat$valuedatetime))
  
  dat_Q$valuedatetime = as.character(as.POSIXct(dat_Q$valuedatetime))
  
  FI_dat = left_join(FI_dat, 
                     subset(dat_Q, select=c("valuedatetime", "datavalue.norm")),
                     by="valuedatetime")
  
  names(FI_dat) = c("valuedatetime", "datavalue", "datavalue.norm", "Q")
  
  FI_dat$datavalue.norm = as.numeric(FI_dat$datavalue.norm)
  FI_dat$Q = as.numeric(FI_dat$Q)
  
  FI = mean(FI_dat$datavalue.norm[FI_dat$valuedatetime == max(FI_dat$valuedatetime)]) - mean(FI_dat$datavalue.norm[FI_dat$valuedatetime == min(FI_dat$valuedatetime)])
  
  meanDiff = function(data, indices) { 
    d <- data[indices,] # allows boot to select sample
    m1 = mean(d$datavalue.norm[d$valuedatetime == max(d$valuedatetime)])
    m2 = mean(d$datavalue.norm[d$valuedatetime == min(d$valuedatetime)])
    m = m1 - m2
    return(m)
  }
  
  FI_boot = boot(FI_dat, meanDiff, R = 10000, strata = as.factor(FI_dat[,1]))
  FI_bootCI = boot.ci(FI_boot, type="bca")
  
  FI_bootCI = data.frame(cbind(FI_boot$t0, FI_bootCI[["bca"]][4], FI_bootCI[["bca"]][5]))
  names(FI_bootCI) = c("FI", "lower", "upper")
  
  FI_results = list(FI_dat, FI_bootCI)
  
  return(FI_results)
}

# calculate FI by difference and bootstrap CIs #
# FRCH # 
#NO3 #
FRCH_storm1_06_13_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_06_13_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_06_13_NO3`)
FRCH_storm2_06_18_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_18_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_18_NO3`)
FRCH_storm3a_06_20_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3a_06_20_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3a_06_20_NO3`)
FRCH_storm3b_06_21_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3b_06_21_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3b_06_21_NO3`)
FRCH_storm3c_06_26_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3c_06_26_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3c_06_26_NO3`)
FRCH_storm4a_07_07_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4a_07_07_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4a_07_07_NO3`)
FRCH_storm4b_07_09_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4b_07_09_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4b_07_09_NO3`)
FRCH_storm5_07_15_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_07_15_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_07_15_NO3`)
FRCH_storm6_07_18_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_18_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_18_NO3`)
FRCH_storm7_07_20_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_20_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_20_NO3`)
FRCH_storm8_07_26_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_26_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_26_NO3`)
FRCH_storm9a_08_01_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_08_01_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_08_01_NO3`)
FRCH_storm9b_08_02_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_08_02_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_08_02_NO3`)
FRCH_storm10a_08_09_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_09_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_09_NO3`)
FRCH_storm10b_08_12_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_12_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_12_NO3`)
FRCH_storm11_08_20_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_20_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_20_NO3`)
FRCH_storm12_09_06_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12_09_06_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12_09_06_NO3`)
FRCH_storm13_09_09_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_09_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_09_NO3`)

#fDOM #
FRCH_storm1_06_13_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_06_13_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_06_13_fDOM`)
FRCH_storm2_06_18_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_18_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_18_fDOM`)
FRCH_storm3a_06_20_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3a_06_20_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3a_06_20_fDOM`)
FRCH_storm3b_06_21_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3b_06_21_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3b_06_21_fDOM`)
#FRCH_storm3c_06_26_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3c_06_26_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3c_06_26_fDOM`)
FRCH_storm4a_07_07_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4a_07_07_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4a_07_07_fDOM`)
FRCH_storm4b_07_09_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4b_07_09_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4b_07_09_fDOM`)
FRCH_storm5_07_15_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_07_15_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_07_15_fDOM`)
FRCH_storm6_07_18_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_18_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_18_fDOM`)
FRCH_storm7_07_20_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_20_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_20_fDOM`)
FRCH_storm8_07_26_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_26_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_26_fDOM`)
FRCH_storm9a_08_01_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_08_01_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_08_01_fDOM`)
FRCH_storm9b_08_02_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_08_02_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_08_02_fDOM`)
FRCH_storm10a_08_09_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_09_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_09_fDOM`)
FRCH_storm10b_08_12_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_12_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_12_fDOM`)
FRCH_storm11_08_20_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_20_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_20_fDOM`)
FRCH_storm12_09_06_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12_09_06_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12_09_06_fDOM`)
FRCH_storm13_09_09_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_09_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_09_fDOM`)
# SPC #
FRCH_storm1_06_13_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_06_13_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_06_13_SPC`)
FRCH_storm2_06_18_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_18_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_18_SPC`)
FRCH_storm3a_06_20_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3a_06_20_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3a_06_20_SPC`)
FRCH_storm3b_06_21_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3b_06_21_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3b_06_21_SPC`)
#FRCH_storm3c_06_26_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3c_06_26_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3c_06_26_SPC`) object length
FRCH_storm4a_07_07_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4a_07_07_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4a_07_07_SPC`)
FRCH_storm4b_07_09_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4b_07_09_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4b_07_09_SPC`)
#FRCH_storm5_07_15_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_07_15_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_07_15_SPC`)
FRCH_storm6_07_18_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_18_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_18_SPC`)
FRCH_storm7_07_20_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_20_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_20_SPC`)
FRCH_storm8_07_26_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_26_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_26_SPC`)
FRCH_storm9a_08_01_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_08_01_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_08_01_SPC`)
FRCH_storm9b_08_02_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_08_02_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_08_02_SPC`)
FRCH_storm10a_08_09_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_09_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_09_SPC`)
FRCH_storm10b_08_12_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_12_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_12_SPC`)
FRCH_storm11_08_20_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_20_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_20_SPC`)
FRCH_storm12_09_06_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12_09_06_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12_09_06_SPC`)
FRCH_storm13_09_09_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_09_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_09_SPC`)
# turb #
FRCH_storm1_06_13_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_06_13_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_06_13_Turb`)
FRCH_storm2_06_18_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_18_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_06_18_Turb`)
FRCH_storm3a_06_20_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3a_06_20_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3a_06_20_Turb`)
FRCH_storm3b_06_21_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3b_06_21_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3b_06_21_Turb`)
#FRCH_storm3c_06_26_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3c_06_26_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3c_06_26_Turb`) # length
FRCH_storm4a_07_07_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4a_07_07_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4a_07_07_Turb`)
FRCH_storm4b_07_09_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4b_07_09_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4b_07_09_Turb`)
FRCH_storm5_07_15_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_07_15_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5_07_15_Turb`)
FRCH_storm6_07_18_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_18_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6_07_18_Turb`)
FRCH_storm7_07_20_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_20_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_07_20_Turb`)
FRCH_storm8_07_26_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_26_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_07_26_Turb`)
FRCH_storm9a_08_01_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_08_01_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9a_08_01_Turb`)
FRCH_storm9b_08_02_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_08_02_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm9b_08_02_Turb`)
FRCH_storm10a_08_09_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_09_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10a_08_09_Turb`)
FRCH_storm10b_08_12_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_12_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm10b_08_12_Turb`)
FRCH_storm11_08_20_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_20_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm11_08_20_Turb`)
FRCH_storm12_09_06_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12_09_06_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm12_09_06_Turb`)
FRCH_storm13_09_09_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_09_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm13_09_09_Turb`)

# MOOS # 
#NO3 #
MOOS_storm1_06_20_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_20_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_20_NO3`)
MOOS_storm2_06_28_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_06_28_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_06_28_NO3`)
#MOOS_storm3_07_18_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_18_Q`,MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_18_NO3`)
MOOS_storm4_07_20_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_20_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_20_NO3`)
MOOS_storm5_07_26_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_26_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_26_NO3`)
MOOS_storm6a_08_01_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_NO3`)
MOOS_storm6b_08_02_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_NO3`)
MOOS_storm7a_08_09_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_09_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_09_NO3`)
MOOS_storm7b_08_12_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_12_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_12_NO3`)
MOOS_storm8_09_06_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_06_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_06_NO3`)
MOOS_storm9_09_09_NO3_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_09_09_Q`, MOOS_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_09_09_NO3`)
#fDOM #
#MOOS_storm1_06_20_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_20_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_20_fDOM`)
MOOS_storm2_06_28_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_06_28_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_06_28_fDOM`)
MOOS_storm3_07_18_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_18_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_18_fDOM`)
MOOS_storm4_07_20_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_20_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_20_fDOM`)
MOOS_storm5_07_26_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_26_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_26_fDOM`)
MOOS_storm6a_08_01_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_fDOM`)
MOOS_storm6b_08_02_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_fDOM`)
MOOS_storm7a_08_09_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_09_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_09_fDOM`)
MOOS_storm7b_08_12_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_12_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_12_fDOM`)
MOOS_storm8_09_06_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_06_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_06_fDOM`)
MOOS_storm9_09_09_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_09_09_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_09_09_fDOM`)

#SPC #
#MOOS_storm1_06_20_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_20_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_20_SPC`)
MOOS_storm2_06_28_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_06_28_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_06_28_SPC`)
MOOS_storm3_07_18_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_18_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_18_SPC`)
MOOS_storm4_07_20_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_20_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_20_SPC`)
MOOS_storm5_07_26_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_26_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_26_SPC`)
MOOS_storm6a_08_01_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_SPC`)
MOOS_storm6b_08_02_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_SPC`)
MOOS_storm7a_08_09_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_09_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_09_SPC`)
MOOS_storm7b_08_12_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_12_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_12_SPC`)
MOOS_storm8_09_06_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_06_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_06_SPC`)
MOOS_storm9_09_09_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_09_09_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_09_09_SPC`)
# turb #
#MOOS_storm1_06_20_turrb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_20_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_06_20_Turb`)
MOOS_storm2_06_28_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_06_28_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_06_28_Turb`)
MOOS_storm3_07_18_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_18_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3_07_18_Turb`)
MOOS_storm4_07_20_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_20_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4_07_20_Turb`)
MOOS_storm5_07_26_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_26_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5_07_26_Turb`)
MOOS_storm6a_08_01_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6a_08_01_Turb`)
MOOS_storm6b_08_02_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6b_08_02_Turb`)
MOOS_storm7a_08_09_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_09_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7a_08_09_Turb`)
MOOS_storm7b_08_12_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_12_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7b_08_12_Turb`)
MOOS_storm8_09_06_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_06_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm8_09_06_Turb`)
MOOS_storm9_09_09_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_09_09_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm9_09_09_Turb`)

# POKE # 
#NO3 #
POKE_storm1_06_09_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_09_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_09_NO3`)
#POKE_storm2_06_12_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_12_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_12_NO3`)
POKE_storm3_06_15_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_15_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_15_NO3`)
#POKE_storm4a_06_19_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4a_06_19_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4a_06_19_NO3`)
POKE_storm4b_06_20_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4b_06_20_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4b_06_20_NO3`)
POKE_storm4c_06_21_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4c_06_21_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4c_06_21_NO3`)
POKE_storm5_06_22_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_06_22_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_06_22_NO3`)
POKE_storm6_06_29_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_06_29_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_06_29_NO3`)
POKE_storm7_07_04_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_07_04_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_07_04_NO3`)
POKE_storm8_07_09_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_07_09_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_07_09_NO3`)
POKE_storm9_07_12_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_07_12_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_07_12_NO3`)
POKE_storm10_07_16_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm10_07_16_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm10_07_16_NO3`)
POKE_storm11_07_18_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm11_07_18_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm11_07_18_NO3`)
#POKE_storm12_07_20_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm12_07_20_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm12_07_20_NO3`)
POKE_storm13_07_24_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm13_07_24_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm13_07_24_NO3`)
#POKE_storm14_07_26_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm14_07_26_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm14_07_26_NO3`)
POKE_storm15_08_02_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm15_08_02_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm15_08_02_NO3`)
#POKE_storm16_08_12_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm16_08_12_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm16_08_12_NO3`)
#POKE_storm17_08_23_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm17_08_23_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm17_08_23_NO3`)
POKE_storm18_08_25_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm18_08_25_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm18_08_25_NO3`)
POKE_storm19_08_27_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm19_08_27_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm19_08_27_NO3`)
#POKE_storm20_09_01_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm20_09_01_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm20_09_01_NO3`)
POKE_storm21_09_03_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm21_09_03_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm21_09_03_NO3`)
POKE_storm22a_09_07_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm22a_09_07_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm22a_09_07_NO3`)

#fDOM #
POKE_storm1_06_09_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_09_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_09_fDOM`)
#POKE_storm2_06_12_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_12_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_12_fDOM`)
POKE_storm3_06_15_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_15_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_15_fDOM`)
#POKE_storm4a_06_19_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4a_06_19_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4a_06_19_fDOM`)
#POKE_storm4b_06_20_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4b_06_20_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4b_06_20_fDOM`)
POKE_storm4c_06_21_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4c_06_21_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4c_06_21_fDOM`)
#POKE_storm5_06_22_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_06_22_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_06_22_fDOM`)
POKE_storm6_06_29_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_06_29_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_06_29_fDOM`)
POKE_storm7_07_04_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_07_04_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_07_04_fDOM`)
POKE_storm8_07_09_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_07_09_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_07_09_fDOM`)
POKE_storm9_07_12_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_07_12_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_07_12_fDOM`)
POKE_storm10_07_16_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm10_07_16_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm10_07_16_fDOM`)
POKE_storm11_07_18_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm11_07_18_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm11_07_18_fDOM`)
#POKE_storm12_07_20_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm12_07_20_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm12_07_20_fDOM`)
POKE_storm13_07_24_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm13_07_24_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm13_07_24_fDOM`)
#POKE_storm14_07_26_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm14_07_26_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm14_07_26_fDOM`)
POKE_storm15_08_02_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm15_08_02_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm15_08_02_fDOM`)
#POKE_storm16_08_12_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm16_08_12_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm16_08_12_fDOM`)
#POKE_storm17_08_23_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm17_08_23_Q`, POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm17_08_23_Q`)
POKE_storm18_08_25_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm18_08_25_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm18_08_25_fDOM`)
POKE_storm19_08_27_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm19_08_27_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm19_08_27_fDOM`)
#POKE_storm20_09_01_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm20_09_01_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm20_09_01_fDOM`)
POKE_storm21_09_03_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm21_09_03_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm21_09_03_fDOM`)
POKE_storm22a_09_07_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm22a_09_07_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm22a_09_07_fDOM`)
#SPC #
POKE_storm1_06_09_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_09_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_09_SPC`)
#POKE_storm2_06_12_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_12_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_12_SPC`) lentgth
POKE_storm3_06_15_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_15_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_15_SPC`)
POKE_storm4a_06_19_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4a_06_19_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4a_06_19_SPC`) #length
POKE_storm4b_06_20_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4b_06_20_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4b_06_20_SPC`) # length
POKE_storm4c_06_21_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4c_06_21_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4c_06_21_SPC`)
POKE_storm5_06_22_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_06_22_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_06_22_SPC`)# length
POKE_storm6_06_29_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_06_29_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_06_29_SPC`) # 0.181818181818178
POKE_storm7_07_04_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_07_04_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_07_04_SPC`)
POKE_storm8_07_09_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_07_09_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_07_09_SPC`)
POKE_storm9_07_12_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_07_12_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_07_12_SPC`)
POKE_storm10_07_16_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm10_07_16_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm10_07_16_SPC`)
POKE_storm11_07_18_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm11_07_18_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm11_07_18_SPC`)
POKE_storm12_07_20_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm12_07_20_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm12_07_20_SPC`) # length
POKE_storm13_07_24_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm13_07_24_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm13_07_24_SPC`)
POKE_storm14_07_26_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm14_07_26_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm14_07_26_SPC`)# length
POKE_storm15_08_02_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm15_08_02_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm15_08_02_SPC`)
POKE_storm16_08_12_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm16_08_12_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm16_08_12_SPC`) # length
POKE_storm17_08_23_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm17_08_23_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm17_08_23_SPC`)# length
POKE_storm18_08_25_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm18_08_25_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm18_08_25_SPC`)
POKE_storm19_08_27_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm19_08_27_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm19_08_27_SPC`)
POKE_storm20_09_01_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm20_09_01_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm20_09_01_SPC`) # length
POKE_storm21_09_03_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm21_09_03_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm21_09_03_SPC`)
POKE_storm22a_09_07_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm22a_09_07_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm22a_09_07_SPC`)
#turb #
POKE_storm1_06_09_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_09_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_06_09_turb`)
POKE_storm2_06_12_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_12_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_12_turb`) # length
POKE_storm3_06_15_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_15_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_15_turb`)
POKE_storm4a_06_19_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4a_06_19_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4a_06_19_turb`) # length
POKE_storm4b_06_20_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4b_06_20_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4b_06_20_turb`) # length
POKE_storm4c_06_21_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4c_06_21_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4c_06_21_turb`)
POKE_storm5_06_22_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_06_22_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_06_22_turb`) # length
POKE_storm6_06_29_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_06_29_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_06_29_turb`)
POKE_storm7_07_04_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_07_04_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7_07_04_turb`)
POKE_storm8_07_09_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_07_09_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm8_07_09_turb`)
POKE_storm9_07_12_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_07_12_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm9_07_12_turb`)
POKE_storm10_07_16_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm10_07_16_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm10_07_16_turb`)
POKE_storm11_07_18_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm11_07_18_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm11_07_18_turb`)
POKE_storm12_07_20_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm12_07_20_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm12_07_20_turb`) #length
POKE_storm13_07_24_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm13_07_24_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm13_07_24_turb`)
POKE_storm14_07_26_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm14_07_26_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm14_07_26_turb`)#length
POKE_storm15_08_02_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm15_08_02_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm15_08_02_turb`)
POKE_storm16_08_12_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm16_08_12_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm16_08_12_turb`)#length
POKE_storm17_08_23_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm17_08_23_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm17_08_23_turb`)#length
POKE_storm18_08_25_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm18_08_25_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm18_08_25_turb`)
POKE_storm19_08_27_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm19_08_27_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm19_08_27_turb`)
POKE_storm20_09_01_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm20_09_01_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm20_09_01_turb`)#length
POKE_storm21_09_03_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm21_09_03_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm21_09_03_turb`)
POKE_storm22a_09_07_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm22a_09_07_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm22a_09_07_turb`)

# STRT # 
#NO3 #
STRT_storm1a_06_18_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_06_18_Q`, STRT_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_06_18_NO3`) # missing value where TRUE/FALSE needed
#STRT_storm1b_06_20_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_06_20_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_06_20_NO3`)
#STRT_storm1c_06_21_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1c_06_21_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1c_06_21_NO3`)
#STRT_storm1d_06_23_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1d_06_23_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1d_06_23_NO3`)
#STRT_storm1e_06_24_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1e_06_24_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1e_06_24_NO3`)
STRT_storm2_07_09_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_09_Q`,STRT_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_09_NO3`)
STRT_storm3_07_20_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_07_20_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_07_20_NO3`)
STRT_storm4a_08_01_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4a_08_01_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4a_08_01_NO3`)
STRT_storm4b_08_03_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4b_08_03_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4b_08_03_NO3`)
STRT_storm5_08_09_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_09_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_09_NO3`)
STRT_storm6_08_12_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_08_12_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_08_12_NO3`)
STRT_storm7a_08_20_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7a_08_20_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7a_08_20_NO3`)
STRT_storm7b_08_21_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_08_21_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_08_21_NO3`)
STRT_storm8_08_28_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm8_08_28_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm8_08_28_NO3`)
STRT_storm9a_09_03_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9a_09_03_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9a_09_03_NO3`)
STRT_storm9b_09_06_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9b_09_06_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9b_09_06_NO3`)
STRT_storm9c_09_09_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9c_09_09_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9c_09_09_NO3`)
STRT_storm10_09_23_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm10_09_23_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm10_09_23_NO3`)

# fDOM #
#STRT_storm1a_06_18_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_06_18_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_06_18_fDOM`)
#STRT_storm1b_06_20_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_06_20_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_06_20_fDOM`)
#STRT_storm1c_06_21_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1c_06_21_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1c_06_21_fDOM`)
#STRT_storm1d_06_23_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1d_06_23_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1d_06_23_fDOM`)
#STRT_storm1e_06_24_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1e_06_24_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1e_06_24_fDOM`)
STRT_storm2_07_09_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_09_Q`, STRT_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_09_fDOM`)
STRT_storm3_07_20_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_07_20_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_07_20_fDOM`)
STRT_storm4a_08_01_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4a_08_01_Q`, STRT_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4a_08_01_fDOM`)
STRT_storm4b_08_03_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4b_08_03_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4b_08_03_fDOM`)
STRT_storm5_08_09_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_09_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_09_fDOM`)
STRT_storm6_08_12_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_08_12_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_08_12_fDOM`)
STRT_storm7a_08_20_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7a_08_20_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7a_08_20_fDOM`)
STRT_storm7b_08_21_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_08_21_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_08_21_fDOM`)
STRT_storm8_08_28_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm8_08_28_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm8_08_28_fDOM`)
STRT_storm9a_09_03_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9a_09_03_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9a_09_03_fDOM`)
STRT_storm9b_09_06_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9b_09_06_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9b_09_06_fDOM`)
STRT_storm9c_09_09_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9c_09_09_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9c_09_09_fDOM`)
STRT_storm10_09_23_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm10_09_23_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm10_09_23_fDOM`)
# SPC #
STRT_storm1a_06_18_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_06_18_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_06_18_SPC`)
STRT_storm1b_06_20_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_06_20_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_06_20_SPC`)
STRT_storm1c_06_21_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1c_06_21_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1c_06_21_SPC`)
STRT_storm1d_06_23_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1d_06_23_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1d_06_23_SPC`)
STRT_storm1e_06_24_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1e_06_24_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1e_06_24_SPC`)
STRT_storm2_07_09_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_09_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_09_SPC`)
STRT_storm3_07_20_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_07_20_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_07_20_SPC`)
STRT_storm4a_08_01_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4a_08_01_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4a_08_01_SPC`)
STRT_storm4b_08_03_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4b_08_03_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4b_08_03_SPC`)
STRT_storm5_08_09_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_09_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_09_SPC`)
STRT_storm6_08_12_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_08_12_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_08_12_SPC`)
STRT_storm7a_08_20_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7a_08_20_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7a_08_20_SPC`)
STRT_storm7b_08_21_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_08_21_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_08_21_SPC`)
STRT_storm8_08_28_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm8_08_28_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm8_08_28_SPC`)
STRT_storm9a_09_03_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9a_09_03_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9a_09_03_SPC`)
STRT_storm9b_09_06_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9b_09_06_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9b_09_06_SPC`)
STRT_storm9c_09_09_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9c_09_09_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9c_09_09_SPC`)
STRT_storm10_09_23_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm10_09_23_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm10_09_23_SPC`)
# Turb #
STRT_storm1a_06_18_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_06_18_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_06_18_Turb`)
STRT_storm1b_06_20_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_06_20_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_06_20_Turb`)
STRT_storm1c_06_21_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1c_06_21_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1c_06_21_Turb`)
STRT_storm1d_06_23_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1d_06_23_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1d_06_23_Turb`)
STRT_storm1e_06_24_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1e_06_24_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1e_06_24_Turb`)
STRT_storm2_07_09_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_09_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2_07_09_Turb`)
STRT_storm3_07_20_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_07_20_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_07_20_Turb`)
STRT_storm4a_08_01_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4a_08_01_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4a_08_01_Turb`)
STRT_storm4b_08_03_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4b_08_03_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm4b_08_03_Turb`)
STRT_storm5_08_09_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_09_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm5_08_09_Turb`)
STRT_storm6_08_12_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_08_12_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm6_08_12_Turb`)
STRT_storm7a_08_20_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7a_08_20_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7a_08_20_Turb`)
STRT_storm7b_08_21_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_08_21_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm7b_08_21_Turb`)
STRT_storm8_08_28_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm8_08_28_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm8_08_28_Turb`)
STRT_storm9a_09_03_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9a_09_03_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9a_09_03_Turb`)
STRT_storm9b_09_06_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9b_09_06_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9b_09_06_Turb`)
STRT_storm9c_09_09_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9c_09_09_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm9c_09_09_Turb`)
STRT_storm10_09_23_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm10_09_23_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm10_09_23_Turb`)

# VAUL # 
#NO3 #
VAUL_storm1a_06_19_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_06_19_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_06_19_NO3`)
VAUL_storm1b_06_20_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_06_20_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_06_20_NO3`)
VAUL_storm1c_06_22_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1c_06_22_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1c_06_22_NO3`)
#VAUL_storm2_06_28_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_06_28_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_06_28_NO3`)
VAUL_storm3_07_09_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_09_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_09_NO3`)
VAUL_storm4_07_12_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4_07_12_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4_07_12_NO3`)
VAUL_storm5_07_26_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_07_26_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_07_26_NO3`)
VAUL_storm6a_08_01_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6a_08_01_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6a_08_01_NO3`)
VAUL_storm6b_08_02_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6b_08_02_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6b_08_02_NO3`)
VAUL_storm7_08_08_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_08_08_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_08_08_NO3`)
#VAUL_storm8_08_11_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8_08_11_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8_08_11_NO3`)
VAUL_storm9_08_12_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm9_08_12_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm9_08_12_NO3`)
VAUL_storm10_08_25_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm10_08_25_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm10_08_25_NO3`)
VAUL_storm11_08_27_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm11_08_27_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm11_08_27_NO3`)
VAUL_storm12_09_01_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm12_09_01_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm12_09_01_NO3`)
VAUL_storm13_09_03_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm13_09_03_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm13_09_03_NO3`)
#VAUL_storm14_09_06_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm14_09_06_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm14_09_06_NO3`)

#fDOM #
VAUL_storm1a_06_19_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_06_19_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_06_19_fDOM`)
VAUL_storm1b_06_20_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_06_20_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_06_20_fDOM`)
#VAUL_storm1c_06_22_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1c_06_22_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1c_06_22_fDOM`) # empty
#VAUL_storm2_06_28_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_06_28_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_06_28_fDOM`)# empty
VAUL_storm3_07_09_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_09_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_09_fDOM`)
VAUL_storm4_07_12_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4_07_12_Q`,VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4_07_12_fDOM`)
VAUL_storm5_07_26_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_07_26_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_07_26_fDOM`)
VAUL_storm6a_08_01_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6a_08_01_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6a_08_01_fDOM`)
VAUL_storm6b_08_02_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6b_08_02_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6b_08_02_fDOM`)
VAUL_storm7_08_08_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_08_08_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_08_08_fDOM`)
#VAUL_storm8_08_11_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8_08_11_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8_08_11_fDOM`) # length
VAUL_storm9_08_12_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm9_08_12_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm9_08_12_fDOM`)
VAUL_storm10_08_25_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm10_08_25_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm10_08_25_fDOM`)
VAUL_storm11_08_27_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm11_08_27_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm11_08_27_fDOM`)
VAUL_storm12_09_01_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm12_09_01_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm12_09_01_fDOM`)
#VAUL_storm13_09_03_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm13_09_03_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm13_09_03_fDOM`)
VAUL_storm14_09_06_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm14_09_06_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm14_09_06_fDOM`)# length
#SPC #
VAUL_storm1a_06_19_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_06_19_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_06_19_SPC`)
VAUL_storm1b_06_20_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_06_20_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_06_20_SPC`)
#VAUL_storm1c_06_22_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1c_06_22_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1c_06_22_SPC`) #empty
#VAUL_storm2_06_28_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_06_28_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_06_28_SPC`) # empty
VAUL_storm3_07_09_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_09_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_09_SPC`)
VAUL_storm4_07_12_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4_07_12_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4_07_12_SPC`)
VAUL_storm5_07_26_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_07_26_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_07_26_SPC`)
VAUL_storm6a_08_01_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6a_08_01_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6a_08_01_SPC`)
VAUL_storm6b_08_02_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6b_08_02_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6b_08_02_SPC`)
VAUL_storm7_08_08_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_08_08_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_08_08_SPC`) #0.791117618350415
#VAUL_storm8_08_11_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8_08_11_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8_08_11_SPC`) # length
VAUL_storm9_08_12_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm9_08_12_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm9_08_12_SPC`)
VAUL_storm10_08_25_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm10_08_25_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm10_08_25_SPC`)
#VAUL_storm11_08_27_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm11_08_27_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm11_08_27_SPC`)
VAUL_storm12_09_01_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm12_09_01_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm12_09_01_SPC`)
VAUL_storm13_09_03_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm13_09_03_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm13_09_03_SPC`)
#VAUL_storm14_09_06_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm14_09_06_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm14_09_06_SPC`) #length

#turb #
VAUL_storm1a_06_19_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_06_19_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_06_19_Turb`)
VAUL_storm1b_06_20_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_06_20_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_06_20_Turb`)
#VAUL_storm1c_06_22_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1c_06_22_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1c_06_22_Turb`)
#VAUL_storm2_06_28_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_06_28_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_06_28_Turb`)
VAUL_storm3_07_09_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_09_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_07_09_Turb`)
VAUL_storm4_07_12_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4_07_12_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4_07_12_Turb`)
VAUL_storm5_07_26_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_07_26_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5_07_26_Turb`)
VAUL_storm6a_08_01_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6a_08_01_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6a_08_01_Turb`)
VAUL_storm6b_08_02_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6b_08_02_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm6b_08_02_Turb`)
VAUL_storm7_08_08_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_08_08_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm7_08_08_Turb`)
#VAUL_storm8_08_11_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8_08_11_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm8_08_11_Turb`) # length
VAUL_storm9_08_12_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm9_08_12_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm9_08_12_Turb`)
VAUL_storm10_08_25_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm10_08_25_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm10_08_25_Turb`)
VAUL_storm11_08_27_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm11_08_27_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm11_08_27_Turb`)
VAUL_storm12_09_01_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm12_09_01_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm12_09_01_Turb`)
VAUL_storm13_09_03_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm13_09_03_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm13_09_03_Turb`)
#VAUL_storm14_09_06_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm14_09_06_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm14_09_06_Turb`) # length

# CARI # 
# NO3 #
#CARI_storm1_06_15_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_06_15_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_06_15_NO3`) # empty
#CARI_storm2a_06_19_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2a_06_19_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2a_06_19_NO3`) # w is infinite
#CARI_storm2b_06_20_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2b_06_20_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2b_06_20_NO3`)# w is infinite
CARI_storm2c_06_21_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2c_06_21_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2c_06_21_NO3`) #0.0270270270270265
#CARI_storm3_06_23_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_23_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_23_NO3`)
#CARI_storm4_07_09_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_09_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_09_NO3`)# w is infinite
#CARI_storm5_07_13_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_13_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_13_NO3`)# w is infinite
#CARI_storm6_07_24_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_07_24_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_07_24_NO3`)# w is infinite
#CARI_storm7_07_27_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_07_27_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_07_27_NO3`)# w is infinite
#CARI_storm8a_08_02_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8a_08_02_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8a_08_02_NO3`)# w is infinite
#CARI_storm8b_08_03_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8b_08_03_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8b_08_03_NO3`)# w is infinite
#CARI_storm9_09_07_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_09_07_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_09_07_NO3`)# w is infinite


# fDOM #
#CARI_storm1_06_15_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_06_15_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_06_15_fDOM`)
CARI_storm2a_06_19_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2a_06_19_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2a_06_19_fDOM`)#0.569285283474065
CARI_storm2b_06_20_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2b_06_20_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2b_06_20_fDOM`) #0.517439556084027
#CARI_storm2c_06_21_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2c_06_21_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2c_06_21_fDOM`)
#CARI_storm3_06_23_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_23_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_23_fDOM`)
CARI_storm4_07_09_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_09_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_09_fDOM`) # 0.808900523560209
CARI_storm5_07_13_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_13_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_13_fDOM`) # 0.73235166738848
CARI_storm6_07_24_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_07_24_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_07_24_fDOM`) # 0.769557307459066
CARI_storm7_07_27_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_07_27_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_07_27_fDOM`) # 0.239651162790698
CARI_storm8a_08_02_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8a_08_02_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8a_08_02_fDOM`) # 0.386284419658418
#CARI_storm8b_08_03_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8b_08_03_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8b_08_03_fDOM`)
CARI_storm9_09_07_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_09_07_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_09_07_fDOM`) # 0.82413967611336

# SPC #
#CARI_storm1_06_15_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_06_15_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_06_15_SPC`) # empty
CARI_storm2a_06_19_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2a_06_19_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2a_06_19_SPC`) # w is infinite
CARI_storm2b_06_20_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2b_06_20_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2b_06_20_SPC`) # w is infinite
CARI_storm2c_06_21_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2c_06_21_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2c_06_21_SPC`) # 0.0986984815618218
CARI_storm3_06_23_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_23_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_23_SPC`) # missing value where TRUE/FALSE needed
CARI_storm4_07_09_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_09_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_09_SPC`)# w is infinite
CARI_storm5_07_13_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_13_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_13_SPC`)# w is infinite
CARI_storm6_07_24_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_07_24_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_07_24_SPC`)# w is infinite
CARI_storm7_07_27_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_07_27_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_07_27_SPC`)# w is infinite
CARI_storm8a_08_02_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8a_08_02_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8a_08_02_SPC`)# w is infinite
#CARI_storm8b_08_03_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8b_08_03_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8b_08_03_SPC`)
CARI_storm9_09_07_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_09_07_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_09_07_SPC`)# w is infinite



# turb #
#CARI_storm1_06_15_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_06_15_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_06_15_Turb`) # empty
CARI_storm2a_06_19_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2a_06_19_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2a_06_19_Turb`) #0.775252525252525
CARI_storm2b_06_20_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2b_06_20_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2b_06_20_Turb`) #0.462225274725275
#CARI_storm2c_06_21_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2c_06_21_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2c_06_21_Turb`) # w is infinite
#CARI_storm3_06_23_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_23_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_23_Turb`) # missing value where T/F needed
CARI_storm4_07_09_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_09_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_09_Turb`) #0.0216606498194948
CARI_storm5_07_13_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_13_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_13_Turb`) # 0.843853820598007
CARI_storm6_07_24_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_07_24_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_07_24_Turb`) #0.453608247422681
#CARI_storm7_07_27_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_07_27_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_07_27_Turb`)
CARI_storm8a_08_02_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8a_08_02_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8a_08_02_Turb`) # 0.569053708439898
#CARI_storm8b_08_03_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8b_08_03_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8b_08_03_Turb`) # missing value where TRUE/FALSE needed
CARI_storm9_09_07_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_09_07_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_09_07_Turb`) # 0.213592233009709


# gather results and save ##

FI_results = rbind(
  c("FRCH_storm1_06_13_NO3_FI",FRCH_storm1_06_13_NO3_FI[[2]]),
  c("FRCH_storm2_06_18_NO3_FI",FRCH_storm2_06_18_NO3_FI[[2]]),
  c("FRCH_storm3a_06_20_NO3_FI",FRCH_storm3a_06_20_NO3_FI[[2]]),
  c("FRCH_storm3b_06_21_NO3_FI",FRCH_storm3b_06_21_NO3_FI[[2]]),
  c("FRCH_storm3c_06_26_NO3_FI",FRCH_storm3c_06_26_NO3_FI[[2]]),
  c("FRCH_storm4a_07_07_NO3_FI",FRCH_storm4a_07_07_NO3_FI[[2]]),
  c("FRCH_storm4b_07_09_NO3_FI",FRCH_storm4b_07_09_NO3_FI[[2]]),
  c("FRCH_storm5_07_15_NO3_FI",FRCH_storm5_07_15_NO3_FI[[2]]),
  c("FRCH_storm6_07_18_NO3_FI",FRCH_storm6_07_18_NO3_FI[[2]]),
  c("FRCH_storm7_07_20_NO3_FI",FRCH_storm7_07_20_NO3_FI[[2]]),
  c("FRCH_storm8_07_26_NO3_FI",FRCH_storm8_07_26_NO3_FI[[2]]),
  c("FRCH_storm9a_08_01_NO3_FI",FRCH_storm9a_08_01_NO3_FI[[2]]),
  c("FRCH_storm9b_08_02_NO3_FI",FRCH_storm9b_08_02_NO3_FI[[2]]),
  c("FRCH_storm10a_08_09_NO3_FI",FRCH_storm10a_08_09_NO3_FI[[2]]),
  c("FRCH_storm10b_08_12_NO3_FI",FRCH_storm10b_08_12_NO3_FI[[2]]),
  c("FRCH_storm11_08_20_NO3_FI",FRCH_storm11_08_20_NO3_FI[[2]]),
  c("FRCH_storm12_09_06_NO3_FI",FRCH_storm12_09_06_NO3_FI[[2]]),
  c("FRCH_storm13_09_09_NO3_FI",FRCH_storm13_09_09_NO3_FI[[2]]),
  
  c("FRCH_storm1_06_13_fDOM_FI",FRCH_storm1_06_13_fDOM_FI[[2]]),
  c("FRCH_storm2_06_18_fDOM_FI",FRCH_storm2_06_18_fDOM_FI[[2]]),
  c("FRCH_storm3a_06_20_fDOM_FI",FRCH_storm3a_06_20_fDOM_FI[[2]]),
  c("FRCH_storm3b_06_21_fDOM_FI",FRCH_storm3b_06_21_fDOM_FI[[2]]),
  c("FRCH_storm3c_06_26_fDOM_FI", NA, NA, NA),
  c("FRCH_storm4a_07_07_fDOM_FI",FRCH_storm4a_07_07_fDOM_FI[[2]]),
  c("FRCH_storm4b_07_09_fDOM_FI", FRCH_storm4b_07_09_fDOM_FI[[2]]),
  c("FRCH_storm5_07_15_fDOM_FI",FRCH_storm5_07_15_fDOM_FI[[2]]),
  c("FRCH_storm6_07_18_fDOM_FI", FRCH_storm6_07_18_fDOM_FI[[2]]),
  c("FRCH_storm7_07_20_fDOM_FI",FRCH_storm7_07_20_fDOM_FI[[2]]),
  c("FRCH_storm8_07_26_fDOM_FI",FRCH_storm8_07_26_fDOM_FI[[2]]),
  c("FRCH_storm9a_08_01_fDOM_FI",FRCH_storm9a_08_01_fDOM_FI[[2]]),
  c("FRCH_storm9b_08_02_fDOM_FI",FRCH_storm9b_08_02_fDOM_FI[[2]]),
  c("FRCH_storm10a_08_09_fDOM_FI",FRCH_storm10a_08_09_fDOM_FI[[2]]),
  c("FRCH_storm10b_08_12_fDOM_FI",FRCH_storm10b_08_12_fDOM_FI[[2]]),
  c("FRCH_storm11_08_20_fDOM_FI",FRCH_storm11_08_20_fDOM_FI[[2]]),
  c("FRCH_storm12_09_06_fDOM_FI",FRCH_storm12_09_06_fDOM_FI[[2]]),
  c("FRCH_storm13_09_09_fDOM_FI",FRCH_storm13_09_09_fDOM_FI[[2]]),
  
  c("FRCH_storm1_06_13_SPC_FI",FRCH_storm1_06_13_SPC_FI[[2]]),
  c("FRCH_storm2_06_18_SPC_FI",FRCH_storm2_06_18_SPC_FI[[2]]),
  c("FRCH_storm3a_06_20_SPC_FI",FRCH_storm3a_06_20_SPC_FI[[2]]),
  c("FRCH_storm3b_06_21_SPC_FI",FRCH_storm3b_06_21_SPC_FI[[2]]),
  c("FRCH_storm3c_06_26_SPC_FI",NA,NA,NA),
  c("FRCH_storm4a_07_07_SPC_FI",FRCH_storm4a_07_07_SPC_FI[[2]]),
  c("FRCH_storm4b_07_09_SPC_FI",FRCH_storm4b_07_09_SPC_FI[[2]]),
  c("FRCH_storm5_07_15_SPC_FI",NA,NA,NA),
  c("FRCH_storm6_07_18_SPC_FI",FRCH_storm6_07_18_SPC_FI[[2]]),
  c("FRCH_storm7_07_20_SPC_FI",FRCH_storm7_07_20_SPC_FI[[2]]),
  c("FRCH_storm8_07_26_SPC_FI",FRCH_storm8_07_26_SPC_FI[[2]]),
  c("FRCH_storm9a_08_01_SPC_FI",FRCH_storm9a_08_01_SPC_FI[[2]]),
  c("FRCH_storm9b_08_02_SPC_FI",FRCH_storm9b_08_02_SPC_FI[[2]]),
  c("FRCH_storm10a_08_09_SPC_FI",FRCH_storm10a_08_09_SPC_FI[[2]]),
  c("FRCH_storm10b_08_12_SPC_FI",FRCH_storm10b_08_12_SPC_FI[[2]]),
  c("FRCH_storm11_08_20_SPC_FI",FRCH_storm11_08_20_SPC_FI[[2]]),
  c("FRCH_storm12_09_06_SPC_FI",FRCH_storm12_09_06_SPC_FI[[2]]),
  c("FRCH_storm13_09_09_SPC_FI",FRCH_storm13_09_09_SPC_FI[[2]]),
  
  c("FRCH_storm1_06_13_turb_FI",FRCH_storm1_06_13_turb_FI[[2]]),
  c("FRCH_storm2_06_18_turb_FI",FRCH_storm2_06_18_turb_FI[[2]]),
  c("FRCH_storm3a_06_20_turb_FI",FRCH_storm3a_06_20_turb_FI[[2]]),
  c("FRCH_storm3b_06_21_turb_FI",FRCH_storm3b_06_21_turb_FI[[2]]),
  c("FRCH_storm3c_06_26_turb_FI",NA, NA, NA),
  c("FRCH_storm4a_07_07_turb_FI",FRCH_storm4a_07_07_turb_FI[[2]]),
  c("FRCH_storm4b_07_09_turb_FI",FRCH_storm4b_07_09_turb_FI[[2]]),
  c("FRCH_storm5_07_15_turb_FI",FRCH_storm5_07_15_turb_FI[[2]]),
  c("FRCH_storm6_07_18_turb_FI",FRCH_storm6_07_18_turb_FI[[2]]),
  c("FRCH_storm7_07_20_turb_FI",FRCH_storm7_07_20_turb_FI[[2]]),
  c("FRCH_storm8_07_26_turb_FI",FRCH_storm8_07_26_turb_FI[[2]]),
  c("FRCH_storm9a_08_01_turb_FI",FRCH_storm9a_08_01_turb_FI[[2]]),
  c("FRCH_storm9b_08_02_turb_FI",FRCH_storm9b_08_02_turb_FI[[2]]),
  c("FRCH_storm10a_08_09_turb_FI",FRCH_storm10a_08_09_turb_FI[[2]]),
  c("FRCH_storm10b_08_12_turb_FI",FRCH_storm10b_08_12_turb_FI[[2]]),
  c("FRCH_storm11_08_20_turb_FI",FRCH_storm11_08_20_turb_FI[[2]]),
  c("FRCH_storm12_09_06_turb_FI",FRCH_storm12_09_06_turb_FI[[2]]),
  c("FRCH_storm13_09_09_turb_FI",FRCH_storm13_09_09_turb_FI[[2]]),
  
  c("MOOS_storm1_06_20_NO3_FI",MOOS_storm1_06_20_NO3_FI[[2]]),
  c("MOOS_storm2_06_28_NO3_FI",MOOS_storm2_06_28_NO3_FI[[2]]),
  c("MOOS_storm3_07_18_NO3_FI",NA, NA, NA),
  c("MOOS_storm4_07_20_NO3_FI",MOOS_storm4_07_20_NO3_FI[[2]]),
  c("MOOS_storm5_07_26_NO3_FI",MOOS_storm5_07_26_NO3_FI[[2]]),
  c("MOOS_storm6a_08_01_NO3_FI",MOOS_storm6a_08_01_NO3_FI[[2]]),
  c("MOOS_storm6b_08_02_NO3_FI",MOOS_storm6b_08_02_NO3_FI[[2]]),
  c("MOOS_storm7a_08_09_NO3_FI",MOOS_storm7a_08_09_NO3_FI[[2]]),
  c("MOOS_storm7b_08_12_NO3_FI",MOOS_storm7b_08_12_NO3_FI[[2]]),
  c("MOOS_storm8_09_06_NO3_FI",MOOS_storm8_09_06_NO3_FI[[2]]),
  c("MOOS_storm9_09_09_NO3_FI",MOOS_storm9_09_09_NO3_FI[[2]]),
  
  c("MOOS_storm1_06_20_fDOM_FI",NA, NA, NA),
  c("MOOS_storm2_06_28_fDOM_FI",MOOS_storm2_06_28_fDOM_FI[[2]]),
  c("MOOS_storm3_07_18_fDOM_FI",MOOS_storm3_07_18_fDOM_FI[[2]]),
  c("MOOS_storm4_07_20_fDOM_FI",MOOS_storm4_07_20_fDOM_FI[[2]]),
  c("MOOS_storm5_07_26_fDOM_FI",MOOS_storm5_07_26_fDOM_FI[[2]]),
  c("MOOS_storm6a_08_01_fDOM_FI",MOOS_storm6a_08_01_fDOM_FI[[2]]),
  c("MOOS_storm6b_08_02_fDOM_FI",MOOS_storm6b_08_02_fDOM_FI[[2]]),
  c("MOOS_storm7a_08_09_fDOM_FI",MOOS_storm7a_08_09_fDOM_FI[[2]]),
  c("MOOS_storm7b_08_12_fDOM_FI",MOOS_storm7b_08_12_fDOM_FI[[2]]),
  c("MOOS_storm8_09_06_fDOM_FI",MOOS_storm8_09_06_fDOM_FI[[2]]),
  c("MOOS_storm9_09_09_fDOM_FI",MOOS_storm9_09_09_fDOM_FI[[2]]),
  
  c("MOOS_storm1_06_20_SPC_FI",NA,NA,NA),
  c("MOOS_storm2_06_28_SPC_FI",MOOS_storm2_06_28_SPC_FI[[2]]),
  c("MOOS_storm3_07_18_SPC_FI",MOOS_storm3_07_18_SPC_FI[[2]]),
  c("MOOS_storm4_07_20_SPC_FI",MOOS_storm4_07_20_SPC_FI[[2]]),
  c("MOOS_storm5_07_26_SPC_FI",MOOS_storm5_07_26_SPC_FI[[2]]),
  c("MOOS_storm6a_08_01_SPC_FI",MOOS_storm6a_08_01_SPC_FI[[2]]),
  c("MOOS_storm6b_08_02_SPC_FI",MOOS_storm6b_08_02_SPC_FI[[2]]),
  c("MOOS_storm7a_08_09_SPC_FI",MOOS_storm7a_08_09_SPC_FI[[2]]),
  c("MOOS_storm7b_08_12_SPC_FI",MOOS_storm7b_08_12_SPC_FI[[2]]),
  c("MOOS_storm8_09_06_SPC_FI",MOOS_storm8_09_06_SPC_FI[[2]]),
  c("MOOS_storm9_09_09_SPC_FI",MOOS_storm9_09_09_SPC_FI[[2]]),
  
  c("MOOS_storm1_06_20_turb_FI",NA,NA,NA),
  c("MOOS_storm2_06_28_turb_FI",MOOS_storm2_06_28_turb_FI[[2]]),
  c("MOOS_storm3_07_18_turb_FI",MOOS_storm3_07_18_turb_FI[[2]]),
  c("MOOS_storm4_07_20_turb_FI",MOOS_storm4_07_20_turb_FI[[2]]),
  c("MOOS_storm5_07_26_turb_FI",MOOS_storm5_07_26_turb_FI[[2]]),
  c("MOOS_storm6a_08_01_turb_FI",MOOS_storm6a_08_01_turb_FI[[2]]),
  c("MOOS_storm6b_08_02_turb_FI",MOOS_storm6b_08_02_turb_FI[[2]]),
  c("MOOS_storm7a_08_09_turb_FI",MOOS_storm7a_08_09_turb_FI[[2]]),
  c("MOOS_storm7b_08_12_turb_FI",MOOS_storm7b_08_12_turb_FI[[2]]),
  c("MOOS_storm8_09_06_turb_FI",MOOS_storm8_09_06_turb_FI[[2]]),
  c("MOOS_storm9_09_09_turb_FI",MOOS_storm9_09_09_turb_FI[[2]]),
  
  c("POKE_storm1_06_09_NO3_FI",POKE_storm1_06_09_NO3_FI[[2]]),
  c("POKE_storm2_06_12_NO3_FI",NA,NA,NA),
  c("POKE_storm3_06_15_NO3_FI",POKE_storm3_06_15_NO3_FI[[2]]),
  c("POKE_storm4a_06_19_NO3_FI",NA,NA,NA),
  c("POKE_storm4b_06_20_NO3_FI",POKE_storm4b_06_20_NO3_FI[[2]]),
  c("POKE_storm4c_06_21_NO3_FI",POKE_storm4c_06_21_NO3_FI[[2]]),
  c("POKE_storm5_06_22_NO3_FI",POKE_storm5_06_22_NO3_FI[[2]]),
  c("POKE_storm6_06_29_NO3_FI",POKE_storm6_06_29_NO3_FI[[2]]),
  c("POKE_storm7_07_04_NO3_FI",POKE_storm7_07_04_NO3_FI[[2]]),
  c("POKE_storm8_07_09_NO3_FI",POKE_storm8_07_09_NO3_FI[[2]]),
  c("POKE_storm9_07_12_NO3_FI",POKE_storm9_07_12_NO3_FI[[2]]),
  c("POKE_storm10_07_16_NO3_FI",POKE_storm10_07_16_NO3_FI[[2]]),
  c("POKE_storm11_07_18_NO3_FI",POKE_storm11_07_18_NO3_FI[[2]]),
  c("POKE_storm12_07_20_NO3_FI",NA,NA,NA),
  c("POKE_storm13_07_24_NO3_FI",POKE_storm13_07_24_NO3_FI[[2]]),
  c("POKE_storm14_07_26_NO3_FI",NA,NA,NA),
  c("POKE_storm15_08_02_NO3_FI",POKE_storm15_08_02_NO3_FI[[2]]),
  c("POKE_storm16_08_12_NO3_FI",NA,NA,NA),
  c("POKE_storm17_08_23_NO3_FI",NA,NA,NA),
  c("POKE_storm18_08_25_NO3_FI",POKE_storm18_08_25_NO3_FI[[2]]),
  c("POKE_storm19_08_27_NO3_FI",POKE_storm19_08_27_NO3_FI[[2]]),
  c("POKE_storm20_09_01_NO3_FI",NA,NA,NA),
  c("POKE_storm21_09_03_NO3_FI",POKE_storm21_09_03_NO3_FI[[2]]),
  c("POKE_storm22a_09_07_NO3_FI",POKE_storm22a_09_07_NO3_FI[[2]]),
  
  c("POKE_storm1_06_09_fDOM_FI",POKE_storm1_06_09_fDOM_FI[[2]]),
  c("POKE_storm2_06_12_fDOM_FI",NA,NA,NA),
  c("POKE_storm3_06_15_fDOM_FI",POKE_storm3_06_15_fDOM_FI[[2]]),
  c("POKE_storm4a_06_19_fDOM_FI",NA,NA,NA),
  c("POKE_storm4b_06_20_fDOM_FI",NA,NA,NA),
  c("POKE_storm4c_06_21_fDOM_FI",POKE_storm4c_06_21_fDOM_FI[[2]]),
  c("POKE_storm5_06_22_fDOM_FI",NA,NA,NA),
  c("POKE_storm6_06_29_fDOM_FI",POKE_storm6_06_29_fDOM_FI[[2]]),
  c("POKE_storm7_07_04_fDOM_FI",POKE_storm7_07_04_fDOM_FI[[2]]),
  c("POKE_storm8_07_09_fDOM_FI",POKE_storm8_07_09_fDOM_FI[[2]]),
  c("POKE_storm9_07_12_fDOM_FI",POKE_storm9_07_12_fDOM_FI[[2]]),
  c("POKE_storm10_07_16_fDOM_FI",POKE_storm10_07_16_fDOM_FI[[2]]),
  c("POKE_storm11_07_18_fDOM_FI",POKE_storm11_07_18_fDOM_FI[[2]]),
  c("POKE_storm12_07_20_fDOM_FI",NA,NA,NA),
  c("POKE_storm13_07_24_fDOM_FI",POKE_storm13_07_24_fDOM_FI[[2]]),
  c("POKE_storm14_07_26_fDOM_FI",NA,NA,NA),
  c("POKE_storm15_08_02_fDOM_FI",POKE_storm15_08_02_fDOM_FI[[2]]),
  c("POKE_storm16_08_12_fDOM_FI",NA,NA,NA),
  c("POKE_storm17_08_23_fDOM_FI",NA,NA,NA),
  c("POKE_storm18_08_25_fDOM_FI",POKE_storm18_08_25_fDOM_FI[[2]]),
  c("POKE_storm19_08_27_fDOM_FI",POKE_storm19_08_27_fDOM_FI[[2]]),
  c("POKE_storm20_09_01_fDOM_FI",NA,NA,NA),
  c("POKE_storm21_09_03_fDOM_FI",POKE_storm21_09_03_fDOM_FI[[2]]),
  c("POKE_storm22a_09_07_fDOM_FI",POKE_storm22a_09_07_fDOM_FI[[2]]),
  
  c("POKE_storm1_06_09_SPC_FI",POKE_storm1_06_09_SPC_FI[[2]]),
  c("POKE_storm2_06_12_SPC_FI",NA,NA,NA),
  c("POKE_storm3_06_15_SPC_FI",NA,NA,NA),
  c("POKE_storm4a_06_19_SPC_FI",NA,NA,NA),
  c("POKE_storm4b_06_20_SPC_FI",POKE_storm4b_06_20_SPC_FI[[2]]),
  c("POKE_storm4c_06_21_SPC_FI",POKE_storm4c_06_21_SPC_FI[[2]]),
  c("POKE_storm5_06_22_SPC_FI",NA,NA,NA),
  c("POKE_storm6_06_29_SPC_FI",.181818181818,NA,NA),
  c("POKE_storm7_07_04_SPC_FI",POKE_storm7_07_04_SPC_FI[[2]]),
  c("POKE_storm8_07_09_SPC_FI",POKE_storm8_07_09_SPC_FI[[2]]),
  c("POKE_storm9_07_12_SPC_FI",POKE_storm9_07_12_SPC_FI[[2]]),
  c("POKE_storm10_07_16_SPC_FI",POKE_storm10_07_16_SPC_FI[[2]]),
  c("POKE_storm11_07_18_SPC_FI",POKE_storm11_07_18_SPC_FI[[2]]),
  c("POKE_storm12_07_20_SPC_FI",NA,NA,NA),
  c("POKE_storm13_07_24_SPC_FI",POKE_storm13_07_24_SPC_FI[[2]]),
  c("POKE_storm14_07_26_SPC_FI",NA,NA,NA),
  c("POKE_storm15_08_02_SPC_FI",POKE_storm15_08_02_SPC_FI[[2]]),
  c("POKE_storm16_08_12_SPC_FI",NA,NA,NA),
  c("POKE_storm17_08_23_SPC_FI",NA,NA,NA),
  c("POKE_storm18_08_25_SPC_FI",POKE_storm18_08_25_SPC_FI[[2]]),
  c("POKE_storm19_08_27_SPC_FI",POKE_storm19_08_27_SPC_FI[[2]]),
  c("POKE_storm20_09_01_SPC_FI",NA,NA,NA),
  c("POKE_storm21_09_03_SPC_FI",POKE_storm21_09_03_SPC_FI[[2]]),
  c("POKE_storm22a_09_07_SPC_FI",POKE_storm22a_09_07_SPC_FI[[2]]),
  
  c("POKE_storm1_06_09_turb_FI",POKE_storm1_06_09_turb_FI[[2]]),
  c("POKE_storm2_06_12_turb_FI",NA,NA,NA),
  c("POKE_storm3_06_15_turb_FI",POKE_storm3_06_15_turb_FI[[2]]),
  c("POKE_storm4a_06_19_turb_FI",NA,NA,NA),
  c("POKE_storm4b_06_20_turb_FI",NA,NA,NA),
  c("POKE_storm4c_06_21_turb_FI",POKE_storm4c_06_21_turb_FI[[2]]),
  c("POKE_storm5_06_22_turb_FI",NA,NA,NA),
  c("POKE_storm6_06_29_turb_FI",POKE_storm6_06_29_turb_FI[[2]]),
  c("POKE_storm7_07_04_turb_FI",POKE_storm7_07_04_turb_FI[[2]]),
  c("POKE_storm8_07_09_turb_FI",POKE_storm8_07_09_turb_FI[[2]]),
  c("POKE_storm9_07_12_turb_FI",POKE_storm9_07_12_turb_FI[[2]]),
  c("POKE_storm10_07_16_turb_FI",POKE_storm10_07_16_turb_FI[[2]]),
  c("POKE_storm11_07_18_turb_FI",POKE_storm11_07_18_turb_FI[[2]]),
  c("POKE_storm12_07_20_turb_FI",NA,NA,NA),
  c("POKE_storm13_07_24_turb_FI",POKE_storm13_07_24_turb_FI[[2]]),
  c("POKE_storm14_07_26_turb_FI",NA,NA,NA),
  c("POKE_storm15_08_02_turb_FI",POKE_storm15_08_02_turb_FI[[2]]),
  c("POKE_storm16_08_12_turb_FI",NA,NA,NA),
  c("POKE_storm17_08_23_turb_FI",NA,NA,NA),
  c("POKE_storm18_08_25_turb_FI",POKE_storm18_08_25_turb_FI[[2]]),
  c("POKE_storm19_08_27_turb_FI",POKE_storm19_08_27_turb_FI[[2]]),
  c("POKE_storm20_09_01_turb_FI",NA,NA,NA),
  c("POKE_storm21_09_03_turb_FI",POKE_storm21_09_03_turb_FI[[2]]),
  c("POKE_storm22a_09_07_turb_FI",POKE_storm22a_09_07_turb_FI[[2]]),
  
  
  c("STRT_storm1a_06_18_NO3_FI",NA,NA,NA),
  c("STRT_storm1b_06_20_NO3_FI",NA,NA,NA),
  c("STRT_storm1c_06_21_NO3_FI",NA,NA,NA),
  c("STRT_storm1d_06_23_NO3_FI",NA,NA,NA),
  c("STRT_storm1e_06_24_NO3_FI",NA,NA,NA),
  c("STRT_storm2_07_09_NO3_FI",NA,NA,NA),
  c("STRT_storm3_07_20_NO3_FI",NA,NA,NA),
  c("STRT_storm4a_08_01_NO3_FI",NA,NA,NA),
  c("STRT_storm4b_08_03_NO3_FI",NA,NA,NA),
  c("STRT_storm5_08_09_NO3_FI",NA,NA,NA),
  c("STRT_storm6_08_12_NO3_FI",NA,NA,NA),
  c("STRT_storm7a_08_20_NO3_FI",NA,NA,NA),
  c("STRT_storm7b_08_21_NO3_FI",NA,NA,NA),
  c("STRT_storm8_08_28_NO3_FI",NA,NA,NA),
  c("STRT_storm9a_09_03_NO3_FI",NA,NA,NA),
  c("STRT_storm9b_09_06_NO3_FI",NA,NA,NA),
  c("STRT_storm9c_09_09_NO3_FI",NA,NA,NA),
  c("STRT_storm10_09_23_NO3_FI",NA,NA,NA),
  
  c("STRT_storm1a_06_18_fDOM_FI",NA,NA,NA),
  c("STRT_storm1b_06_20_fDOM_FI",NA,NA,NA),
  c("STRT_storm1c_06_21_fDOM_FI",NA,NA,NA),
  c("STRT_storm1d_06_23_fDOM_FI",NA,NA,NA),
  c("STRT_storm1e_06_24_fDOM_FI",NA,NA,NA),
  c("STRT_storm2_07_09_fDOM_FI",NA,NA,NA),
  c("STRT_storm3_07_20_fDOM_FI",NA,NA,NA),
  c("STRT_storm4a_08_01_fDOM_FI",NA,NA,NA),
  c("STRT_storm4b_08_03_fDOM_FI",NA,NA,NA),
  c("STRT_storm5_08_09_fDOM_FI",NA,NA,NA),
  c("STRT_storm6_08_12_fDOM_FI",NA,NA,NA),
  c("STRT_storm7a_08_20_fDOM_FI",NA,NA,NA),
  c("STRT_storm7b_08_21_fDOM_FI",NA,NA,NA),
  c("STRT_storm8_08_28_fDOM_FI",NA,NA,NA),
  c("STRT_storm9a_09_03_fDOM_FI",NA,NA,NA),
  c("STRT_storm9b_09_06_fDOM_FI",NA,NA,NA),
  c("STRT_storm9c_09_09_fDOM_FI",NA,NA,NA),
  c("STRT_storm10_09_23_fDOM_FI",NA,NA,NA),
  
  c("STRT_storm1a_06_18_SPC_FI",NA,NA,NA),
  c("STRT_storm1b_06_20_SPC_FI",NA,NA,NA),
  c("STRT_storm1c_06_21_SPC_FI",NA,NA,NA),
  c("STRT_storm1d_06_23_SPC_FI",NA,NA,NA),
  c("STRT_storm1e_06_24_SPC_FI",NA,NA,NA),
  c("STRT_storm2_07_09_SPC_FI",NA,NA,NA),
  c("STRT_storm3_07_20_SPC_FI",NA,NA,NA),
  c("STRT_storm4a_08_01_SPC_FI",NA,NA,NA),
  c("STRT_storm4b_08_03_SPC_FI",NA,NA,NA),
  c("STRT_storm5_08_09_SPC_FI",NA,NA,NA),
  c("STRT_storm6_08_12_SPC_FI",NA,NA,NA),
  c("STRT_storm7a_08_20_SPC_FI",NA,NA,NA),
  c("STRT_storm7b_08_21_SPC_FI",NA,NA,NA),
  c("STRT_storm8_08_28_SPC_FI",NA,NA,NA),
  c("STRT_storm9a_09_03_SPC_FI",NA,NA,NA),
  c("STRT_storm9b_09_06_SPC_FI",NA,NA,NA),
  c("STRT_storm9c_09_09_SPC_FI",NA,NA,NA),
  c("STRT_storm10_09_23_SPC_FI",NA,NA,NA),
  
  c("STRT_storm1a_06_18_turb_FI",NA,NA,NA),
  c("STRT_storm1b_06_20_turb_FI",NA,NA,NA),
  c("STRT_storm1c_06_21_turb_FI",NA,NA,NA),
  c("STRT_storm1d_06_23_turb_FI",NA,NA,NA),
  c("STRT_storm1e_06_24_turb_FI",NA,NA,NA),
  c("STRT_storm2_07_09_turb_FI",NA,NA,NA),
  c("STRT_storm3_07_20_turb_FI",NA,NA,NA),
  c("STRT_storm4a_08_01_turb_FI",NA,NA,NA),
  c("STRT_storm4b_08_03_turb_FI",NA,NA,NA),
  c("STRT_storm5_08_09_turb_FI",NA,NA,NA),
  c("STRT_storm6_08_12_turb_FI",NA,NA,NA),
  c("STRT_storm7a_08_20_turb_FI",NA,NA,NA),
  c("STRT_storm7b_08_21_turb_FI",NA,NA,NA),
  c("STRT_storm8_08_28_turb_FI",NA,NA,NA),
  c("STRT_storm9a_09_03_turb_FI",NA,NA,NA),
  c("STRT_storm9b_09_06_turb_FI",NA,NA,NA),
  c("STRT_storm9c_09_09_turb_FI",NA,NA,NA),
  c("STRT_storm10_09_23_turb_FI",NA,NA,NA),
  
  c("VAUL_storm1a_06_19_NO3_FI",VAUL_storm1a_06_19_NO3_FI[[2]]),
  c("VAUL_storm1b_06_20_NO3_FI",VAUL_storm1b_06_20_NO3_FI[[2]]),
  c("VAUL_storm1c_06_22_NO3_FI",VAUL_storm1c_06_22_NO3_FI[[2]]),
  c("VAUL_storm2_06_28_NO3_FI",NA, NA, NA),
  c("VAUL_storm3_07_09_NO3_FI",VAUL_storm3_07_09_NO3_FI[[2]]),
  c("VAUL_storm4_07_12_NO3_FI",VAUL_storm4_07_12_NO3_FI[[2]]),
  c("VAUL_storm5_07_26_NO3_FI",VAUL_storm5_07_26_NO3_FI[[2]]),
  c("VAUL_storm6a_08_01_NO3_FI",VAUL_storm6a_08_01_NO3_FI[[2]]),
  c("VAUL_storm6b_08_02_NO3_FI",VAUL_storm6b_08_02_NO3_FI[[2]]),
  c("VAUL_storm7_08_08_NO3_FI",VAUL_storm7_08_08_NO3_FI[[2]]),
  c("VAUL_storm8_08_11_NO3_FI",NA, NA, NA),
  c("VAUL_storm9_08_12_NO3_FI",VAUL_storm9_08_12_NO3_FI[[2]]),
  c("VAUL_storm10_08_25_NO3_FI",VAUL_storm10_08_25_NO3_FI[[2]]),
  c("VAUL_storm11_08_27_NO3_FI",VAUL_storm11_08_27_NO3_FI[[2]]),
  c("VAUL_storm12_09_01_NO3_FI",VAUL_storm12_09_01_NO3_FI[[2]]),
  c("VAUL_storm13_09_03_NO3_FI",VAUL_storm13_09_03_NO3_FI[[2]]),
  c("VAUL_storm14_09_06_NO3_FI",NA, NA, NA),
  
  c("VAUL_storm1a_06_19_fDOM_FI",VAUL_storm1a_06_19_fDOM_FI[[2]]),
  c("VAUL_storm1b_06_20_fDOM_FI",VAUL_storm1b_06_20_fDOM_FI[[2]]),
  c("VAUL_storm1c_06_22_fDOM_FI",NA,NA,NA),
  c("VAUL_storm2_06_28_fDOM_FI",NA,NA,NA),
  c("VAUL_storm3_07_09_fDOM_FI",VAUL_storm3_07_09_fDOM_FI[[2]]),
  c("VAUL_storm4_07_12_fDOM_FI",VAUL_storm4_07_12_fDOM_FI[[2]]),
  c("VAUL_storm5_07_26_fDOM_FI",VAUL_storm5_07_26_fDOM_FI[[2]]),
  c("VAUL_storm6a_08_01_fDOM_FI",VAUL_storm6a_08_01_fDOM_FI[[2]]),
  c("VAUL_storm6b_08_02_fDOM_FI",VAUL_storm6b_08_02_fDOM_FI[[2]]),
  c("VAUL_storm7_08_08_fDOM_FI",VAUL_storm7_08_08_fDOM_FI[[2]]),
  c("VAUL_storm8_08_11_fDOM_FI",NA,NA,NA),
  c("VAUL_storm9_08_12_fDOM_FI",VAUL_storm9_08_12_fDOM_FI[[2]]),
  c("VAUL_storm10_08_25_fDOM_FI",VAUL_storm10_08_25_fDOM_FI[[2]]),
  c("VAUL_storm11_08_27_fDOM_FI",VAUL_storm11_08_27_fDOM_FI[[2]]),
  c("VAUL_storm12_09_01_fDOM_FI",VAUL_storm12_09_01_fDOM_FI[[2]]),
  c("VAUL_storm13_09_03_fDOM_FI",NA,NA,NA),
  c("VAUL_storm14_09_06_fDOM_FI",VAUL_storm14_09_06_fDOM_FI[[2]]),
  
  c("VAUL_storm1a_06_19_SPC_FI",VAUL_storm1a_06_19_SPC_FI[[2]]),
  c("VAUL_storm1b_06_20_SPC_FI",VAUL_storm1b_06_20_SPC_FI[[2]]),
  c("VAUL_storm1c_06_22_SPC_FI",NA,NA,NA),
  c("VAUL_storm2_06_28_SPC_FI",NA,NA,NA),
  c("VAUL_storm3_07_09_SPC_FI",VAUL_storm3_07_09_SPC_FI[[2]]),
  c("VAUL_storm4_07_12_SPC_FI",VAUL_storm4_07_12_SPC_FI[[2]]),
  c("VAUL_storm5_07_26_SPC_FI",VAUL_storm5_07_26_SPC_FI[[2]]),
  c("VAUL_storm6a_08_01_SPC_FI",VAUL_storm6a_08_01_SPC_FI[[2]]),
  c("VAUL_storm6b_08_02_SPC_FI",VAUL_storm6b_08_02_SPC_FI[[2]]),
  c("VAUL_storm7_08_08_SPC_FI",0.791117618350415,0,0),
  c("VAUL_storm8_08_11_SPC_FI",NA,NA,NA),
  c("VAUL_storm9_08_12_SPC_FI",VAUL_storm9_08_12_SPC_FI[[2]]),
  c("VAUL_storm10_08_25_SPC_FI",VAUL_storm10_08_25_SPC_FI[[2]]),
  c("VAUL_storm11_08_27_SPC_FI",NA,NA,NA),
  c("VAUL_storm12_09_01_SPC_FI",VAUL_storm12_09_01_SPC_FI[[2]]),
  c("VAUL_storm13_09_03_SPC_FI",VAUL_storm13_09_03_SPC_FI[[2]]),
  c("VAUL_storm14_09_06_SPC_FI",NA,NA,NA),
  
  c("VAUL_storm1a_06_19_turb_FI",VAUL_storm1a_06_19_turb_FI[[2]]),
  c("VAUL_storm1b_06_20_turb_FI",VAUL_storm1b_06_20_turb_FI[[2]]),
  c("VAUL_storm1c_06_22_turb_FI",NA,NA,NA),
  c("VAUL_storm2_06_28_turb_FI",NA,NA,NA),
  c("VAUL_storm3_07_09_turb_FI",VAUL_storm3_07_09_turb_FI[[2]]),
  c("VAUL_storm4_07_12_turb_FI",VAUL_storm4_07_12_turb_FI[[2]]),
  c("VAUL_storm5_07_26_turb_FI",VAUL_storm5_07_26_turb_FI[[2]]),
  c("VAUL_storm6a_08_01_turb_FI",VAUL_storm6a_08_01_turb_FI[[2]]),
  c("VAUL_storm6b_08_02_turb_FI",VAUL_storm6b_08_02_turb_FI[[2]]),
  c("VAUL_storm7_08_08_turb_FI",VAUL_storm7_08_08_turb_FI[[2]]),
  c("VAUL_storm8_08_11_turb_FI",NA,NA,NA),
  c("VAUL_storm9_08_12_turb_FI",VAUL_storm9_08_12_turb_FI[[2]]),
  c("VAUL_storm10_08_25_turb_FI",VAUL_storm10_08_25_turb_FI[[2]]),
  c("VAUL_storm11_08_27_turb_FI",VAUL_storm11_08_27_turb_FI[[2]]),
  c("VAUL_storm12_09_01_turb_FI",VAUL_storm12_09_01_turb_FI[[2]]),
  c("VAUL_storm13_09_03_turb_FI",VAUL_storm13_09_03_turb_FI[[2]]),
  c("VAUL_storm14_09_06_turb_FI",NA,NA,NA),
  
  c("CARI_storm1_06_15_NO3_FI",NA, NA, NA),
  c("CARI_storm2a_06_19_NO3_FI",NA, NA, NA),
  c("CARI_storm2b_06_20_NO3_FI",NA, NA, NA),
  c("CARI_storm2c_06_21_NO3_FI",0.0270270270270265, NA, NA),
  c("CARI_storm3_06_23_NO3_FI",NA, NA, NA),
  c("CARI_storm4_07_09_NO3_FI",NA, NA, NA),
  c("CARI_storm5_07_13_NO3_FI",NA, NA, NA),
  c("CARI_storm6_07_24_NO3_FI",NA, NA, NA),
  c("CARI_storm7_07_27_NO3_FI",NA, NA, NA),
  c("CARI_storm8a_08_02_NO3_FI",NA, NA, NA),
  c("CARI_storm8b_08_03_NO3_FI",NA, NA, NA),
  c("CARI_storm9_09_07_NO3_FI",NA, NA, NA),
  
  c("CARI_storm1_06_15_fDOM_FI",NA, NA, NA),
  c("CARI_storm2a_06_19_fDOM_FI",0.569285283474065,0,0),
  c("CARI_storm2b_06_20_fDOM_FI",0.517439556084027,0,0),
  c("CARI_storm2c_06_21_fDOM_FI",NA, NA, NA),
  c("CARI_storm3_06_23_fDOM_FI",NA,NA,NA),
  c("CARI_storm4_07_09_fDOM_FI",0.808900523560209,0,0),
  c("CARI_storm5_07_13_fDOM_FI",0.73235166738848,0,0),
  c("CARI_storm6_07_24_fDOM_FI",0.769557307459066,0,0),
  c("CARI_storm7_07_27_fDOM_FI",0.239651162790698,0,0),
  c("CARI_storm8a_08_02_fDOM_FI",0.386284419658418,0,0),
  c("CARI_storm8b_08_03_fDOM_FI",NA, NA, NA),
  c("CARI_storm9_09_07_fDOM_FI",0.82413967611336,0,0),
  
  c("CARI_storm1_06_15_SPC_FI",NA, NA, NA),
  c("CARI_storm2a_06_19_SPC_FI",NA,NA,NA),
  c("CARI_storm2b_06_20_SPC_FI",NA, NA, NA),
  c("CARI_storm2c_06_21_SPC_FI",0.0986984815618218, NA, NA),
  c("CARI_storm3_06_23_SPC_FI",NA, NA, NA),
  c("CARI_storm4_07_09_SPC_FI",NA, NA, NA),
  c("CARI_storm5_07_13_SPC_FI",NA, NA, NA),
  c("CARI_storm6_07_24_SPC_FI",NA, NA, NA),
  c("CARI_storm7_07_27_SPC_FI",NA, NA, NA),
  c("CARI_storm8a_08_02_SPC_FI",NA, NA, NA),
  c("CARI_storm8b_08_03_SPC_FI",NA, NA, NA),
  c("CARI_storm9_09_07_SPC_FI",NA, NA, NA),
  
  c("CARI_storm1_06_15_turb_FI",NA, NA, NA),
  c("CARI_storm2a_06_19_turb_FI",0.775252525252525,NA,NA),
  c("CARI_storm2b_06_20_turb_FI",0.462225274725275, NA, NA),
  c("CARI_storm2c_06_21_turb_FI",NA, NA, NA),
  c("CARI_storm3_06_23_turb_FI",NA, NA, NA),
  c("CARI_storm4_07_09_turb_FI",0.0216606498194948, NA,NA),
  c("CARI_storm5_07_13_turb_FI",0.843853820598007,NA,NA),
  c("CARI_storm6_07_24_turb_FI",0.453608247422681,NA,NA),
  c("CARI_storm7_07_27_turb_FI",NA,NA,NA),
  c("CARI_storm8a_08_02_turb_FI",0.569053708439898,NA,NA),
  c("CARI_storm8b_08_03_turb_FI",NA, NA, NA),
  c("CARI_storm9_09_07_turb_FI",0.213592233009709,NA,NA))

  
  

FI_results = rbind(
  c("FRCH_storm1_06_13_NO3_FI",FRCH_storm1_06_13_NO3_FI[[2]]),
  c("FRCH_storm2_06_18_NO3_FI",FRCH_storm2_06_18_NO3_FI[[2]]),
  c("FRCH_storm3a_06_20_NO3_FI",FRCH_storm3a_06_20_NO3_FI[[2]]),
  c("FRCH_storm3b_06_21_NO3_FI",FRCH_storm3b_06_21_NO3_FI[[2]]),
  c("FRCH_storm3c_06_26_NO3_FI",FRCH_storm3c_06_26_NO3_FI[[2]]),
  c("FRCH_storm4a_07_07_NO3_FI",FRCH_storm4a_07_07_NO3_FI[[2]]),
  c("FRCH_storm4b_07_09_NO3_FI",FRCH_storm4b_07_09_NO3_FI[[2]]),
  c("FRCH_storm5_07_15_NO3_FI",FRCH_storm5_07_15_NO3_FI[[2]]),
  c("FRCH_storm6_07_18_NO3_FI",FRCH_storm6_07_18_NO3_FI[[2]]),
  c("FRCH_storm7_07_20_NO3_FI",FRCH_storm7_07_20_NO3_FI[[2]]),
  c("FRCH_storm8_07_26_NO3_FI",FRCH_storm8_07_26_NO3_FI[[2]]),
  c("FRCH_storm9a_08_01_NO3_FI",FRCH_storm9a_08_01_NO3_FI[[2]]),
  c("FRCH_storm9b_08_02_NO3_FI",FRCH_storm9b_08_02_NO3_FI[[2]]),
  c("FRCH_storm10a_08_09_NO3_FI",FRCH_storm10a_08_09_NO3_FI[[2]]),
  c("FRCH_storm10b_08_12_NO3_FI",FRCH_storm10b_08_12_NO3_FI[[2]]),
  c("FRCH_storm11_08_20_NO3_FI",FRCH_storm11_08_20_NO3_FI[[2]]),
  c("FRCH_storm12_09_06_NO3_FI",FRCH_storm12_09_06_NO3_FI[[2]]),
  c("FRCH_storm13_09_09_NO3_FI",FRCH_storm13_09_09_NO3_FI[[2]]),
  
  c("FRCH_storm1_06_13_fDOM_FI",FRCH_storm1_06_13_fDOM_FI[[2]]),
  c("FRCH_storm2_06_18_fDOM_FI",FRCH_storm2_06_18_fDOM_FI[[2]]),
  c("FRCH_storm3a_06_20_fDOM_FI",FRCH_storm3a_06_20_fDOM_FI[[2]]),
  c("FRCH_storm3b_06_21_fDOM_FI",FRCH_storm3b_06_21_fDOM_FI[[2]]),
  c("FRCH_storm3c_06_26_fDOM_FI", NA, NA, NA),
  c("FRCH_storm4a_07_07_fDOM_FI",FRCH_storm4a_07_07_fDOM_FI[[2]]),
  c("FRCH_storm4b_07_09_fDOM_FI", FRCH_storm4b_07_09_fDOM_FI[[2]]),
  c("FRCH_storm5_07_15_fDOM_FI",FRCH_storm5_07_15_fDOM_FI[[2]]),
  c("FRCH_storm6_07_18_fDOM_FI", FRCH_storm6_07_18_fDOM_FI[[2]]),
  c("FRCH_storm7_07_20_fDOM_FI",FRCH_storm7_07_20_fDOM_FI[[2]]),
  c("FRCH_storm8_07_26_fDOM_FI",FRCH_storm8_07_26_fDOM_FI[[2]]),
  c("FRCH_storm9a_08_01_fDOM_FI",FRCH_storm9a_08_01_fDOM_FI[[2]]),
  c("FRCH_storm9b_08_02_fDOM_FI",FRCH_storm9b_08_02_fDOM_FI[[2]]),
  c("FRCH_storm10a_08_09_fDOM_FI",FRCH_storm10a_08_09_fDOM_FI[[2]]),
  c("FRCH_storm10b_08_12_fDOM_FI",FRCH_storm10b_08_12_fDOM_FI[[2]]),
  c("FRCH_storm11_08_20_fDOM_FI",FRCH_storm11_08_20_fDOM_FI[[2]]),
  c("FRCH_storm12_09_06_fDOM_FI",FRCH_storm12_09_06_fDOM_FI[[2]]),
  c("FRCH_storm13_09_09_fDOM_FI",FRCH_storm13_09_09_fDOM_FI[[2]]),
  
  c("FRCH_storm1_06_13_SPC_FI",FRCH_storm1_06_13_SPC_FI[[2]]),
  c("FRCH_storm2_06_18_SPC_FI",FRCH_storm2_06_18_SPC_FI[[2]]),
  c("FRCH_storm3a_06_20_SPC_FI",FRCH_storm3a_06_20_SPC_FI[[2]]),
  c("FRCH_storm3b_06_21_SPC_FI",FRCH_storm3b_06_21_SPC_FI[[2]]),
  c("FRCH_storm3c_06_26_SPC_FI",NA,NA,NA),
  c("FRCH_storm4a_07_07_SPC_FI",FRCH_storm4a_07_07_SPC_FI[[2]]),
  c("FRCH_storm4b_07_09_SPC_FI",FRCH_storm4b_07_09_SPC_FI[[2]]),
  c("FRCH_storm5_07_15_SPC_FI",NA,NA,NA),
  c("FRCH_storm6_07_18_SPC_FI",FRCH_storm6_07_18_SPC_FI[[2]]),
  c("FRCH_storm7_07_20_SPC_FI",FRCH_storm7_07_20_SPC_FI[[2]]),
  c("FRCH_storm8_07_26_SPC_FI",FRCH_storm8_07_26_SPC_FI[[2]]),
  c("FRCH_storm9a_08_01_SPC_FI",FRCH_storm9a_08_01_SPC_FI[[2]]),
  c("FRCH_storm9b_08_02_SPC_FI",FRCH_storm9b_08_02_SPC_FI[[2]]),
  c("FRCH_storm10a_08_09_SPC_FI",FRCH_storm10a_08_09_SPC_FI[[2]]),
  c("FRCH_storm10b_08_12_SPC_FI",FRCH_storm10b_08_12_SPC_FI[[2]]),
  c("FRCH_storm11_08_20_SPC_FI",FRCH_storm11_08_20_SPC_FI[[2]]),
  c("FRCH_storm12_09_06_SPC_FI",FRCH_storm12_09_06_SPC_FI[[2]]),
  c("FRCH_storm13_09_09_SPC_FI",FRCH_storm13_09_09_SPC_FI[[2]]),
  
  c("FRCH_storm1_06_13_turb_FI",FRCH_storm1_06_13_turb_FI[[2]]),
  c("FRCH_storm2_06_18_turb_FI",FRCH_storm2_06_18_turb_FI[[2]]),
  c("FRCH_storm3a_06_20_turb_FI",FRCH_storm3a_06_20_turb_FI[[2]]),
  c("FRCH_storm3b_06_21_turb_FI",FRCH_storm3b_06_21_turb_FI[[2]]),
  c("FRCH_storm3c_06_26_turb_FI",NA, NA, NA),
  c("FRCH_storm4a_07_07_turb_FI",FRCH_storm4a_07_07_turb_FI[[2]]),
  c("FRCH_storm4b_07_09_turb_FI",FRCH_storm4b_07_09_turb_FI[[2]]),
  c("FRCH_storm5_07_15_turb_FI",FRCH_storm5_07_15_turb_FI[[2]]),
  c("FRCH_storm6_07_18_turb_FI",FRCH_storm6_07_18_turb_FI[[2]]),
  c("FRCH_storm7_07_20_turb_FI",FRCH_storm7_07_20_turb_FI[[2]]),
  c("FRCH_storm8_07_26_turb_FI",FRCH_storm8_07_26_turb_FI[[2]]),
  c("FRCH_storm9a_08_01_turb_FI",FRCH_storm9a_08_01_turb_FI[[2]]),
  c("FRCH_storm9b_08_02_turb_FI",FRCH_storm9b_08_02_turb_FI[[2]]),
  c("FRCH_storm10a_08_09_turb_FI",FRCH_storm10a_08_09_turb_FI[[2]]),
  c("FRCH_storm10b_08_12_turb_FI",FRCH_storm10b_08_12_turb_FI[[2]]),
  c("FRCH_storm11_08_20_turb_FI",FRCH_storm11_08_20_turb_FI[[2]]),
  c("FRCH_storm12_09_06_turb_FI",FRCH_storm12_09_06_turb_FI[[2]]),
  c("FRCH_storm13_09_09_turb_FI",FRCH_storm13_09_09_turb_FI[[2]]),
  
  c("MOOS_storm1_06_20_NO3_FI",MOOS_storm1_06_20_NO3_FI[[2]]),
  c("MOOS_storm2_06_28_NO3_FI",MOOS_storm2_06_28_NO3_FI[[2]]),
  c("MOOS_storm3_07_18_NO3_FI",NA, NA, NA),
  c("MOOS_storm4_07_20_NO3_FI",MOOS_storm4_07_20_NO3_FI[[2]]),
  c("MOOS_storm5_07_26_NO3_FI",MOOS_storm5_07_26_NO3_FI[[2]]),
  c("MOOS_storm6a_08_01_NO3_FI",MOOS_storm6a_08_01_NO3_FI[[2]]),
  c("MOOS_storm6b_08_02_NO3_FI",MOOS_storm6b_08_02_NO3_FI[[2]]),
  c("MOOS_storm7a_08_09_NO3_FI",MOOS_storm7a_08_09_NO3_FI[[2]]),
  c("MOOS_storm7b_08_12_NO3_FI",MOOS_storm7b_08_12_NO3_FI[[2]]),
  c("MOOS_storm8_09_06_NO3_FI",MOOS_storm8_09_06_NO3_FI[[2]]),
  c("MOOS_storm9_09_09_NO3_FI",MOOS_storm9_09_09_NO3_FI[[2]]),
  
  c("MOOS_storm1_06_20_fDOM_FI",NA, NA, NA),
  c("MOOS_storm2_06_28_fDOM_FI",MOOS_storm2_06_28_fDOM_FI[[2]]),
  c("MOOS_storm3_07_18_fDOM_FI",MOOS_storm3_07_18_fDOM_FI[[2]]),
  c("MOOS_storm4_07_20_fDOM_FI",MOOS_storm4_07_20_fDOM_FI[[2]]),
  c("MOOS_storm5_07_26_fDOM_FI",MOOS_storm5_07_26_fDOM_FI[[2]]),
  c("MOOS_storm6a_08_01_fDOM_FI",MOOS_storm6a_08_01_fDOM_FI[[2]]),
  c("MOOS_storm6b_08_02_fDOM_FI",MOOS_storm6b_08_02_fDOM_FI[[2]]),
  c("MOOS_storm7a_08_09_fDOM_FI",MOOS_storm7a_08_09_fDOM_FI[[2]]),
  c("MOOS_storm7b_08_12_fDOM_FI",MOOS_storm7b_08_12_fDOM_FI[[2]]),
  c("MOOS_storm8_09_06_fDOM_FI",MOOS_storm8_09_06_fDOM_FI[[2]]),
  c("MOOS_storm9_09_09_fDOM_FI",MOOS_storm9_09_09_fDOM_FI[[2]]),
  
  c("MOOS_storm1_06_20_SPC_FI",NA,NA,NA),
  c("MOOS_storm2_06_28_SPC_FI",MOOS_storm2_06_28_SPC_FI[[2]]),
  c("MOOS_storm3_07_18_SPC_FI",MOOS_storm3_07_18_SPC_FI[[2]]),
  c("MOOS_storm4_07_20_SPC_FI",MOOS_storm4_07_20_SPC_FI[[2]]),
  c("MOOS_storm5_07_26_SPC_FI",MOOS_storm5_07_26_SPC_FI[[2]]),
  c("MOOS_storm6a_08_01_SPC_FI",MOOS_storm6a_08_01_SPC_FI[[2]]),
  c("MOOS_storm6b_08_02_SPC_FI",MOOS_storm6b_08_02_SPC_FI[[2]]),
  c("MOOS_storm7a_08_09_SPC_FI",MOOS_storm7a_08_09_SPC_FI[[2]]),
  c("MOOS_storm7b_08_12_SPC_FI",MOOS_storm7b_08_12_SPC_FI[[2]]),
  c("MOOS_storm8_09_06_SPC_FI",MOOS_storm8_09_06_SPC_FI[[2]]),
  c("MOOS_storm9_09_09_SPC_FI",MOOS_storm9_09_09_SPC_FI[[2]]),
  
  c("MOOS_storm1_06_20_turb_FI",NA,NA,NA),
  c("MOOS_storm2_06_28_turb_FI",MOOS_storm2_06_28_turb_FI[[2]]),
  c("MOOS_storm3_07_18_turb_FI",MOOS_storm3_07_18_turb_FI[[2]]),
  c("MOOS_storm4_07_20_turb_FI",MOOS_storm4_07_20_turb_FI[[2]]),
  c("MOOS_storm5_07_26_turb_FI",MOOS_storm5_07_26_turb_FI[[2]]),
  c("MOOS_storm6a_08_01_turb_FI",MOOS_storm6a_08_01_turb_FI[[2]]),
  c("MOOS_storm6b_08_02_turb_FI",MOOS_storm6b_08_02_turb_FI[[2]]),
  c("MOOS_storm7a_08_09_turb_FI",MOOS_storm7a_08_09_turb_FI[[2]]),
  c("MOOS_storm7b_08_12_turb_FI",MOOS_storm7b_08_12_turb_FI[[2]]),
  c("MOOS_storm8_09_06_turb_FI",MOOS_storm8_09_06_turb_FI[[2]]),
  c("MOOS_storm9_09_09_turb_FI",MOOS_storm9_09_09_turb_FI[[2]]),
  
  c("POKE_storm1_06_09_NO3_FI",POKE_storm1_06_09_NO3_FI[[2]]),
  c("POKE_storm2_06_12_NO3_FI",NA,NA,NA),
  c("POKE_storm3_06_15_NO3_FI",POKE_storm3_06_15_NO3_FI[[2]]),
  c("POKE_storm4a_06_19_NO3_FI",NA,NA,NA),
  c("POKE_storm4b_06_20_NO3_FI",POKE_storm4b_06_20_NO3_FI[[2]]),
  c("POKE_storm4c_06_21_NO3_FI",POKE_storm4c_06_21_NO3_FI[[2]]),
  c("POKE_storm5_06_22_NO3_FI",POKE_storm5_06_22_NO3_FI[[2]]),
  c("POKE_storm6_06_29_NO3_FI",POKE_storm6_06_29_NO3_FI[[2]]),
  c("POKE_storm7_07_04_NO3_FI",POKE_storm7_07_04_NO3_FI[[2]]),
  c("POKE_storm8_07_09_NO3_FI",POKE_storm8_07_09_NO3_FI[[2]]),
  c("POKE_storm9_07_12_NO3_FI",POKE_storm9_07_12_NO3_FI[[2]]),
  c("POKE_storm10_07_16_NO3_FI",POKE_storm10_07_16_NO3_FI[[2]]),
  c("POKE_storm11_07_18_NO3_FI",POKE_storm11_07_18_NO3_FI[[2]]),
  c("POKE_storm12_07_20_NO3_FI",NA,NA,NA),
  c("POKE_storm13_07_24_NO3_FI",POKE_storm13_07_24_NO3_FI[[2]]),
  c("POKE_storm14_07_26_NO3_FI",NA,NA,NA),
  c("POKE_storm15_08_02_NO3_FI",POKE_storm15_08_02_NO3_FI[[2]]),
  c("POKE_storm16_08_12_NO3_FI",NA,NA,NA),
  c("POKE_storm17_08_23_NO3_FI",NA,NA,NA),
  c("POKE_storm18_08_25_NO3_FI",POKE_storm18_08_25_NO3_FI[[2]]),
  c("POKE_storm19_08_27_NO3_FI",POKE_storm19_08_27_NO3_FI[[2]]),
  c("POKE_storm20_09_01_NO3_FI",NA,NA,NA),
  c("POKE_storm21_09_03_NO3_FI",POKE_storm21_09_03_NO3_FI[[2]]),
  c("POKE_storm22a_09_07_NO3_FI",POKE_storm22a_09_07_NO3_FI[[2]]),
  
  c("POKE_storm1_06_09_fDOM_FI",POKE_storm1_06_09_fDOM_FI[[2]]),
  c("POKE_storm2_06_12_fDOM_FI",NA,NA,NA),
  c("POKE_storm3_06_15_fDOM_FI",POKE_storm3_06_15_fDOM_FI[[2]]),
  c("POKE_storm4a_06_19_fDOM_FI",NA,NA,NA),
  c("POKE_storm4b_06_20_fDOM_FI",NA,NA,NA),
  c("POKE_storm4c_06_21_fDOM_FI",POKE_storm4c_06_21_fDOM_FI[[2]]),
  c("POKE_storm5_06_22_fDOM_FI",NA,NA,NA),
  c("POKE_storm6_06_29_fDOM_FI",POKE_storm6_06_29_fDOM_FI[[2]]),
  c("POKE_storm7_07_04_fDOM_FI",POKE_storm7_07_04_fDOM_FI[[2]]),
  c("POKE_storm8_07_09_fDOM_FI",POKE_storm8_07_09_fDOM_FI[[2]]),
  c("POKE_storm9_07_12_fDOM_FI",POKE_storm9_07_12_fDOM_FI[[2]]),
  c("POKE_storm10_07_16_fDOM_FI",POKE_storm10_07_16_fDOM_FI[[2]]),
  c("POKE_storm11_07_18_fDOM_FI",POKE_storm11_07_18_fDOM_FI[[2]]),
  c("POKE_storm12_07_20_fDOM_FI",NA,NA,NA),
  c("POKE_storm13_07_24_fDOM_FI",POKE_storm13_07_24_fDOM_FI[[2]]),
  c("POKE_storm14_07_26_fDOM_FI",NA,NA,NA),
  c("POKE_storm15_08_02_fDOM_FI",POKE_storm15_08_02_fDOM_FI[[2]]),
  c("POKE_storm16_08_12_fDOM_FI",NA,NA,NA),
  c("POKE_storm17_08_23_fDOM_FI",NA,NA,NA),
  c("POKE_storm18_08_25_fDOM_FI",POKE_storm18_08_25_fDOM_FI[[2]]),
  c("POKE_storm19_08_27_fDOM_FI",POKE_storm19_08_27_fDOM_FI[[2]]),
  c("POKE_storm20_09_01_fDOM_FI",NA,NA,NA),
  c("POKE_storm21_09_03_fDOM_FI",POKE_storm21_09_03_fDOM_FI[[2]]),
  c("POKE_storm22a_09_07_fDOM_FI",POKE_storm22a_09_07_fDOM_FI[[2]]),
  
  c("POKE_storm1_06_09_SPC_FI",POKE_storm1_06_09_SPC_FI[[2]]),
  c("POKE_storm2_06_12_SPC_FI",NA,NA,NA),
  c("POKE_storm3_06_15_SPC_FI",NA,NA,NA),
  c("POKE_storm4a_06_19_SPC_FI",NA,NA,NA),
  c("POKE_storm4b_06_20_SPC_FI",POKE_storm4b_06_20_SPC_FI[[2]]),
  c("POKE_storm4c_06_21_SPC_FI",POKE_storm4c_06_21_SPC_FI[[2]]),
  c("POKE_storm5_06_22_SPC_FI",NA,NA,NA),
  c("POKE_storm6_06_29_SPC_FI",.181818181818,0,0),
  c("POKE_storm7_07_04_SPC_FI",POKE_storm7_07_04_SPC_FI[[2]]),
  c("POKE_storm8_07_09_SPC_FI",POKE_storm8_07_09_SPC_FI[[2]]),
  c("POKE_storm9_07_12_SPC_FI",POKE_storm9_07_12_SPC_FI[[2]]),
  c("POKE_storm10_07_16_SPC_FI",POKE_storm10_07_16_SPC_FI[[2]]),
  c("POKE_storm11_07_18_SPC_FI",POKE_storm11_07_18_SPC_FI[[2]]),
  c("POKE_storm12_07_20_SPC_FI",NA,NA,NA),
  c("POKE_storm13_07_24_SPC_FI",POKE_storm13_07_24_SPC_FI[[2]]),
  c("POKE_storm14_07_26_SPC_FI",NA,NA,NA),
  c("POKE_storm15_08_02_SPC_FI",POKE_storm15_08_02_SPC_FI[[2]]),
  c("POKE_storm16_08_12_SPC_FI",NA,NA,NA),
  c("POKE_storm17_08_23_SPC_FI",NA,NA,NA),
  c("POKE_storm18_08_25_SPC_FI",POKE_storm18_08_25_SPC_FI[[2]]),
  c("POKE_storm19_08_27_SPC_FI",POKE_storm19_08_27_SPC_FI[[2]]),
  c("POKE_storm20_09_01_SPC_FI",NA,NA,NA),
  c("POKE_storm21_09_03_SPC_FI",POKE_storm21_09_03_SPC_FI[[2]]),
  c("POKE_storm22a_09_07_SPC_FI",POKE_storm22a_09_07_SPC_FI[[2]]),
  
  c("POKE_storm1_06_09_turb_FI",POKE_storm1_06_09_turb_FI[[2]]),
  c("POKE_storm2_06_12_turb_FI",NA,NA,NA),
  c("POKE_storm3_06_15_turb_FI",POKE_storm3_06_15_turb_FI[[2]]),
  c("POKE_storm4a_06_19_turb_FI",NA,NA,NA),
  c("POKE_storm4b_06_20_turb_FI",NA,NA,NA),
  c("POKE_storm4c_06_21_turb_FI",POKE_storm4c_06_21_turb_FI[[2]]),
  c("POKE_storm5_06_22_turb_FI",NA,NA,NA),
  c("POKE_storm6_06_29_turb_FI",POKE_storm6_06_29_turb_FI[[2]]),
  c("POKE_storm7_07_04_turb_FI",POKE_storm7_07_04_turb_FI[[2]]),
  c("POKE_storm8_07_09_turb_FI",POKE_storm8_07_09_turb_FI[[2]]),
  c("POKE_storm9_07_12_turb_FI",POKE_storm9_07_12_turb_FI[[2]]),
  c("POKE_storm10_07_16_turb_FI",POKE_storm10_07_16_turb_FI[[2]]),
  c("POKE_storm11_07_18_turb_FI",POKE_storm11_07_18_turb_FI[[2]]),
  c("POKE_storm12_07_20_turb_FI",NA,NA,NA),
  c("POKE_storm13_07_24_turb_FI",POKE_storm13_07_24_turb_FI[[2]]),
  c("POKE_storm14_07_26_turb_FI",NA,NA,NA),
  c("POKE_storm15_08_02_turb_FI",POKE_storm15_08_02_turb_FI[[2]]),
  c("POKE_storm16_08_12_turb_FI",NA,NA,NA),
  c("POKE_storm17_08_23_turb_FI",NA,NA,NA),
  c("POKE_storm18_08_25_turb_FI",POKE_storm18_08_25_turb_FI[[2]]),
  c("POKE_storm19_08_27_turb_FI",POKE_storm19_08_27_turb_FI[[2]]),
  c("POKE_storm20_09_01_turb_FI",NA,NA,NA),
  c("POKE_storm21_09_03_turb_FI",POKE_storm21_09_03_turb_FI[[2]]),
  c("POKE_storm22a_09_07_turb_FI",POKE_storm22a_09_07_turb_FI[[2]]),
  
  
  c("STRT_storm1a_06_18_NO3_FI",STRT_storm1_05_31_NO3_FI[[2]]),
  c("STRT_storm1b_06_20_NO3_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1c_06_21_NO3_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1d_06_23_NO3_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1e_06_24_NO3_FI",STRT_storm3c_08_12_NO3_FI[[2]]),
  c("STRT_storm2_07_09_NO3_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm3_07_20_NO3_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm4a_08_01_NO3_FI",STRT_storm6_09_20_NO3_FI[[2]]),
  c("STRT_storm4b_08_03_NO3_FI",STRT_storm7_10_01_NO3_FI[[2]]),
  c("STRT_storm5_08_09_NO3_FI",STRT_storm7b_10_04_NO3_FI[[2]]),
  c("STRT_storm6_08_12_NO3_FI",STRT_storm7c_10_09_NO3_FI[[2]]),
  c("STRT_storm7a_08_20_NO3_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm7b_08_21_NO3_FI",STRT_storm2_07_12_fDOM_FI[[2]]),
  c("STRT_storm8_08_28_NO3_FI",STRT_storm3a_07_25_fDOM_FI[[2]]),
  c("STRT_storm9a_09_03_NO3_FI",STRT_storm3b_08_05_fDOM_FI[[2]]),
  c("STRT_storm9b_09_06_NO3_FI",STRT_storm3c_08_12_fDOM_FI[[2]]),
  c("STRT_storm9c_09_09_NO3_FI",STRT_storm4_08_15_fDOM_FI[[2]]),
  c("STRT_storm10_09_23_NO3_FI",STRT_storm5_08_20_fDOM_FI[[2]]),
  
  c("STRT_storm1a_06_18_fDOM_FI",STRT_storm1_05_31_NO3_FI[[2]]),
  c("STRT_storm1b_06_20_fDOM_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1c_06_21_fDOM_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1d_06_23_fDOM_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1e_06_24_fDOM_FI",STRT_storm3c_08_12_NO3_FI[[2]]),
  c("STRT_storm2_07_09_fDOM_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm3_07_20_fDOM_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm4a_08_01_fDOM_FI",STRT_storm6_09_20_NO3_FI[[2]]),
  c("STRT_storm4b_08_03_fDOM_FI",STRT_storm7_10_01_NO3_FI[[2]]),
  c("STRT_storm5_08_09_fDOM_FI",STRT_storm7b_10_04_NO3_FI[[2]]),
  c("STRT_storm6_08_12_fDOM_FI",STRT_storm7c_10_09_NO3_FI[[2]]),
  c("STRT_storm7a_08_20_fDOM_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm7b_08_21_fDOM_FI",STRT_storm2_07_12_fDOM_FI[[2]]),
  c("STRT_storm8_08_28_fDOM_FI",STRT_storm3a_07_25_fDOM_FI[[2]]),
  c("STRT_storm9a_09_03_fDOM_FI",STRT_storm3b_08_05_fDOM_FI[[2]]),
  c("STRT_storm9b_09_06_fDOM_FI",STRT_storm3c_08_12_fDOM_FI[[2]]),
  c("STRT_storm9c_09_09_fDOM_FI",STRT_storm4_08_15_fDOM_FI[[2]]),
  c("STRT_storm10_09_23_fDOM_FI",STRT_storm5_08_20_fDOM_FI[[2]]),
  
  c("STRT_storm1a_06_18_SPC_FI",STRT_storm1_05_31_NO3_FI[[2]]),
  c("STRT_storm1b_06_20_SPC_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1c_06_21_SPC_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1d_06_23_SPC_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1e_06_24_SPC_FI",STRT_storm3c_08_12_NO3_FI[[2]]),
  c("STRT_storm2_07_09_SPC_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm3_07_20_SPC_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm4a_08_01_SPC_FI",STRT_storm6_09_20_NO3_FI[[2]]),
  c("STRT_storm4b_08_03_SPC_FI",STRT_storm7_10_01_NO3_FI[[2]]),
  c("STRT_storm5_08_09_SPC_FI",STRT_storm7b_10_04_NO3_FI[[2]]),
  c("STRT_storm6_08_12_SPC_FI",STRT_storm7c_10_09_NO3_FI[[2]]),
  c("STRT_storm7a_08_20_SPC_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm7b_08_21_SPC_FI",STRT_storm2_07_12_fDOM_FI[[2]]),
  c("STRT_storm8_08_28_SPC_FI",STRT_storm3a_07_25_fDOM_FI[[2]]),
  c("STRT_storm9a_09_03_SPC_FI",STRT_storm3b_08_05_fDOM_FI[[2]]),
  c("STRT_storm9b_09_06_SPC_FI",STRT_storm3c_08_12_fDOM_FI[[2]]),
  c("STRT_storm9c_09_09_SPC_FI",STRT_storm4_08_15_fDOM_FI[[2]]),
  c("STRT_storm10_09_23_SPC_FI",STRT_storm5_08_20_fDOM_FI[[2]]),
  
  c("STRT_storm1a_06_18_turb_FI",STRT_storm1_05_31_NO3_FI[[2]]),
  c("STRT_storm1b_06_20_turb_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1c_06_21_turb_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1d_06_23_turb_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm1e_06_24_turb_FI",STRT_storm3c_08_12_NO3_FI[[2]]),
  c("STRT_storm2_07_09_turb_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm3_07_20_turb_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm4a_08_01_turb_FI",STRT_storm6_09_20_NO3_FI[[2]]),
  c("STRT_storm4b_08_03_turb_FI",STRT_storm7_10_01_NO3_FI[[2]]),
  c("STRT_storm5_08_09_turb_FI",STRT_storm7b_10_04_NO3_FI[[2]]),
  c("STRT_storm6_08_12_turb_FI",STRT_storm7c_10_09_NO3_FI[[2]]),
  c("STRT_storm7a_08_20_turb_FI",STRT_storm2_07_12_NO3_FI[[2]]),
  c("STRT_storm7b_08_21_turb_FI",STRT_storm2_07_12_fDOM_FI[[2]]),
  c("STRT_storm8_08_28_turb_FI",STRT_storm3a_07_25_fDOM_FI[[2]]),
  c("STRT_storm9a_09_03_turb_FI",STRT_storm3b_08_05_fDOM_FI[[2]]),
  c("STRT_storm9b_09_06_turb_FI",STRT_storm3c_08_12_fDOM_FI[[2]]),
  c("STRT_storm9c_09_09_turb_FI",STRT_storm4_08_15_fDOM_FI[[2]]),
  c("STRT_storm10_09_23_turb_FI",STRT_storm5_08_20_fDOM_FI[[2]]),
  
  c("VAUL_storm1a_06_19_NO3_FI",VAUL_storm1a_06_19_NO3_FI[[2]]),
  c("VAUL_storm1b_06_20_NO3_FI",VAUL_storm1b_06_20_NO3_FI[[2]]),
  c("VAUL_storm1c_06_22_NO3_FI",VAUL_storm1c_06_22_NO3_FI[[2]]),
  c("VAUL_storm2_06_28_NO3_FI",NA, NA, NA),
  c("VAUL_storm3_07_09_NO3_FI",VAUL_storm3_07_09_NO3_FI[[2]]),
  c("VAUL_storm4_07_12_NO3_FI",VAUL_storm4_07_12_NO3_FI[[2]]),
  c("VAUL_storm5_07_26_NO3_FI",VAUL_storm5_07_26_NO3_FI[[2]]),
  c("VAUL_storm6a_08_01_NO3_FI",VAUL_storm6a_08_01_NO3_FI[[2]]),
  c("VAUL_storm6b_08_02_NO3_FI",VAUL_storm6b_08_02_NO3_FI[[2]]),
  c("VAUL_storm7_08_08_NO3_FI",VAUL_storm7_08_08_NO3_FI[[2]]),
  c("VAUL_storm8_08_11_NO3_FI",NA, NA, NA),
  c("VAUL_storm9_08_12_NO3_FI",VAUL_storm9_08_12_NO3_FI[[2]]),
  c("VAUL_storm10_08_25_NO3_FI",VAUL_storm10_08_25_NO3_FI[[2]]),
  c("VAUL_storm11_08_27_NO3_FI",VAUL_storm11_08_27_NO3_FI[[2]]),
  c("VAUL_storm12_09_01_NO3_FI",VAUL_storm12_09_01_NO3_FI[[2]]),
  c("VAUL_storm13_09_03_NO3_FI",VAUL_storm13_09_03_NO3_FI[[2]]),
  c("VAUL_storm14_09_06_NO3_FI",NA, NA, NA),
  
  c("VAUL_storm1a_06_19_fDOM_FI",VAUL_storm1a_06_19_fDOM_FI[[2]]),
  c("VAUL_storm1b_06_20_fDOM_FI",VAUL_storm1b_06_20_fDOM_FI[[2]]),
  c("VAUL_storm1c_06_22_fDOM_FI",NA,NA,NA),
  c("VAUL_storm2_06_28_fDOM_FI",NA,NA,NA),
  c("VAUL_storm3_07_09_fDOM_FI",VAUL_storm3_07_09_fDOM_FI[[2]]),
  c("VAUL_storm4_07_12_fDOM_FI",VAUL_storm4_07_12_fDOM_FI[[2]]),
  c("VAUL_storm5_07_26_fDOM_FI",VAUL_storm5_07_26_fDOM_FI[[2]]),
  c("VAUL_storm6a_08_01_fDOM_FI",VAUL_storm6a_08_01_fDOM_FI[[2]]),
  c("VAUL_storm6b_08_02_fDOM_FI",VAUL_storm6b_08_02_fDOM_FI[[2]]),
  c("VAUL_storm7_08_08_fDOM_FI",VAUL_storm7_08_08_fDOM_FI[[2]]),
  c("VAUL_storm8_08_11_fDOM_FI",NA,NA,NA),
  c("VAUL_storm9_08_12_fDOM_FI",VAUL_storm9_08_12_fDOM_FI[[2]]),
  c("VAUL_storm10_08_25_fDOM_FI",VAUL_storm10_08_25_fDOM_FI[[2]]),
  c("VAUL_storm11_08_27_fDOM_FI",VAUL_storm11_08_27_fDOM_FI[[2]]),
  c("VAUL_storm12_09_01_fDOM_FI",VAUL_storm12_09_01_fDOM_FI[[2]]),
  c("VAUL_storm13_09_03_fDOM_FI",NA,NA,NA),
  c("VAUL_storm14_09_06_fDOM_FI",VAUL_storm14_09_06_fDOM_FI[[2]]),
  
  c("VAUL_storm1a_06_19_SPC_FI",VAUL_storm1a_06_19_SPC_FI[[2]]),
  c("VAUL_storm1b_06_20_SPC_FI",VAUL_storm1b_06_20_SPC_FI[[2]]),
  c("VAUL_storm1c_06_22_SPC_FI",NA,NA,NA),
  c("VAUL_storm2_06_28_SPC_FI",NA,NA,NA),
  c("VAUL_storm3_07_09_SPC_FI",VAUL_storm3_07_09_SPC_FI[[2]]),
  c("VAUL_storm4_07_12_SPC_FI",VAUL_storm4_07_12_SPC_FI[[2]]),
  c("VAUL_storm5_07_26_SPC_FI",VAUL_storm5_07_26_SPC_FI[[2]]),
  c("VAUL_storm6a_08_01_SPC_FI",VAUL_storm6a_08_01_SPC_FI[[2]]),
  c("VAUL_storm6b_08_02_SPC_FI",VAUL_storm6b_08_02_SPC_FI[[2]]),
  c("VAUL_storm7_08_08_SPC_FI",0.791117618350415,0,0),
  c("VAUL_storm8_08_11_SPC_FI",NA,NA,NA),
  c("VAUL_storm9_08_12_SPC_FI",VAUL_storm9_08_12_SPC_FI[[2]]),
  c("VAUL_storm10_08_25_SPC_FI",VAUL_storm10_08_25_SPC_FI[[2]]),
  c("VAUL_storm11_08_27_SPC_FI",NA,NA,NA),
  c("VAUL_storm12_09_01_SPC_FI",VAUL_storm12_09_01_SPC_FI[[2]]),
  c("VAUL_storm13_09_03_SPC_FI",VAUL_storm13_09_03_SPC_FI[[2]]),
  c("VAUL_storm14_09_06_SPC_FI",NA,NA,NA),
  
  c("VAUL_storm1a_06_19_turb_FI",VAUL_storm1a_06_19_turb_FI[[2]]),
  c("VAUL_storm1b_06_20_turb_FI",VAUL_storm1b_06_20_turb_FI[[2]]),
  c("VAUL_storm1c_06_22_turb_FI",NA,NA,NA),
  c("VAUL_storm2_06_28_turb_FI",NA,NA,NA),
  c("VAUL_storm3_07_09_turb_FI",VAUL_storm3_07_09_turb_FI[[2]]),
  c("VAUL_storm4_07_12_turb_FI",VAUL_storm4_07_12_turb_FI[[2]]),
  c("VAUL_storm5_07_26_turb_FI",VAUL_storm5_07_26_turb_FI[[2]]),
  c("VAUL_storm6a_08_01_turb_FI",VAUL_storm6a_08_01_turb_FI[[2]]),
  c("VAUL_storm6b_08_02_turb_FI",VAUL_storm6b_08_02_turb_FI[[2]]),
  c("VAUL_storm7_08_08_turb_FI",VAUL_storm7_08_08_turb_FI[[2]]),
  c("VAUL_storm8_08_11_turb_FI",NA,NA,NA),
  c("VAUL_storm9_08_12_turb_FI",VAUL_storm9_08_12_turb_FI[[2]]),
  c("VAUL_storm10_08_25_turb_FI",VAUL_storm10_08_25_turb_FI[[2]]),
  c("VAUL_storm11_08_27_turb_FI",VAUL_storm11_08_27_turb_FI[[2]]),
  c("VAUL_storm12_09_01_turb_FI",VAUL_storm12_09_01_turb_FI[[2]]),
  c("VAUL_storm13_09_03_turb_FI",VAUL_storm13_09_03_turb_FI[[2]]),
  c("VAUL_storm14_09_06_turb_FI",NA,NA,NA),
  
  c("CARI_storm1_06_15_NO3_FI",NA, NA, NA),
  c("CARI_storm2a_06_19_NO3_FI",NA, NA, NA),
  c("CARI_storm2b_06_20_NO3_FI",NA, NA, NA),
  c("CARI_storm2c_06_21_NO3_FI",NA, NA, NA),
  c("CARI_storm3_06_23_NO3_FI",NA, NA, NA),
  c("CARI_storm4_07_09_NO3_FI",NA, NA, NA),
  c("CARI_storm5_07_13_NO3_FI",NA, NA, NA),
  c("CARI_storm6_07_24_NO3_FI",NA, NA, NA),
  c("CARI_storm7_07_27_NO3_FI",NA, NA, NA),
  c("CARI_storm8a_08_02_NO3_FI",NA, NA, NA),
  c("CARI_storm8b_08_03_NO3_FI",NA, NA, NA),
  c("CARI_storm9_09_07_NO3_FI",NA, NA, NA),
  
  c("CARI_storm1_06_15_fDOM_FI",NA, NA, NA),
  c("CARI_storm2a_06_19_fDOM_FI",0.565511538750658,0,0),
  c("CARI_storm2b_06_20_fDOM_FI",0.452654516640253,0,0),
  c("CARI_storm2c_06_21_fDOM_FI",NA, NA, NA),
  c("CARI_storm3_06_23_fDOM_FI",NA,NA,NA),
  c("CARI_storm4_07_09_fDOM_FI",0.345221510169964,0,0),
  c("CARI_storm5_07_13_fDOM_FI",0.450704225352113,0,0),
  c("CARI_storm6_07_24_fDOM_FI",0.380103694102398,0,0),
  c("CARI_storm7_07_27_fDOM_FI",0.22313885299672,0,0),
  c("CARI_storm8a_08_02_fDOM_FI",0.359982638888889,0,0),
  c("CARI_storm8b_08_03_fDOM_FI",NA, NA, NA),
  c("CARI_storm9_09_07_fDOM_FI",0.671793599603076,0,0),
  
  c("CARI_storm1_06_15_SPC_FI",NA, NA, NA),
  c("CARI_storm2a_06_19_SPC_FI",CARI_storm2a_06_19_SPC_FI[[2]]),
  c("CARI_storm2b_06_20_SPC_FI",NA, NA, NA),
  c("CARI_storm2c_06_21_SPC_FI",NA, NA, NA),
  c("CARI_storm3_06_23_SPC_FI",VAUL_storm3_07_09_NO3_FI[[2]]),
  c("CARI_storm4_07_09_SPC_FI",CARI_storm4_07_09_SPC_FI[[2]]),
  c("CARI_storm5_07_13_SPC_FI",CARI_storm5_07_13_SPC_FI[[2]]),
  c("CARI_storm6_07_24_SPC_FI",CARI_storm6_07_24_SPC_FI[[2]]),
  c("CARI_storm7_07_27_SPC_FI",CARI_storm7_07_27_SPC_FI[[2]]),
  c("CARI_storm8a_08_02_SPC_FI",CARI_storm8a_08_02_SPC_FI[[2]]),
  c("CARI_storm8b_08_03_SPC_FI",NA, NA, NA),
  c("CARI_storm9_09_07_SPC_FI",CARI_storm9_09_07_SPC_FI[[2]]),
  
  c("CARI_storm1_06_15_turb_FI",NA, NA, NA),
  c("CARI_storm2a_06_19_turb_FI",CARI_storm2a_06_19_turb_FI[[2]]),
  c("CARI_storm2b_06_20_turb_FI",NA, NA, NA),
  c("CARI_storm2c_06_21_turb_FI",NA, NA, NA),
  c("CARI_storm3_06_23_turb_FI",NA, NA, NA),
  c("CARI_storm4_07_09_turb_FI",CARI_storm4_07_09_turb_FI[[2]]),
  c("CARI_storm5_07_13_turb_FI",CARI_storm5_07_13_turb_FI[[2]]),
  c("CARI_storm6_07_24_turb_FI",CARI_storm6_07_24_turb_FI[[2]]),
  c("CARI_storm7_07_27_turb_FI",CARI_storm7_07_27_turb_FI[[2]]),
  c("CARI_storm8a_08_02_turb_FI",CARI_storm8a_08_02_turb_FI[[2]]),
  c("CARI_storm8b_08_03_turb_FI",NA, NA, NA),
  c("CARI_storm9_09_07_turb_FI",CARI_storm9_09_07_turb_FI[[2]]))

FI_results = as.data.frame(FI_results)

names(FI_results) = c("ID", "Flushing_index", "percCI_2.5", "percCI_97.5")

FI_results$ID = unlist(FI_results$ID)
FI_results$Flushing_index = round(as.numeric(as.character(FI_results$Flushing_index)), 4)
FI_results$`percCI_2.5` = round(as.numeric(as.character(FI_results$`percCI_2.5`)), 4)
FI_results$`percCI_97.5` = round(as.numeric(as.character(FI_results$`percCI_97.5`)), 4)

write.csv(FI_results, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/all.FI.diff.results_2020.csv")

# calculate 95% bootstrap around median of Hyst. Indicies for each site and storm #

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}

# FRCH #
FRCH.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/FRCH/FRCH.HI.df.csv")

storm.list = unique(FRCH.HI.df$storm.ID)
FRCH.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(FRCH.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
FRCH.HI.boot$storm.ID = storm.list

# MOOS #
MOOS.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/MOOS/MOOS.HI.df.csv")

storm.list = unique(MOOS.HI.df$storm.ID)
MOOS.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(MOOS.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
MOOS.HI.boot$storm.ID = storm.list

# POKE #
POKE.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/POKE/POKE.HI.df.csv")

storm.list = unique(POKE.HI.df$storm.ID)
POKE.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(POKE.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
POKE.HI.boot$storm.ID = storm.list

# STRT #
STRT.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/STRT/STRT.HI.df.csv")

storm.list = unique(STRT.HI.df$storm.ID)
STRT.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(STRT.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
STRT.HI.boot$storm.ID = storm.list

# VAUL #
VAUL.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/VAUL/VAUL.HI.df.csv")

storm.list = unique(VAUL.HI.df$storm.ID)
VAUL.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(VAUL.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
VAUL.HI.boot$storm.ID = storm.list

# CARI #
CARI.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2020/CARI/CARI.HI.df.csv")

storm.list = unique(CARI.HI.df$storm.ID)
CARI.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(CARI.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
CARI.HI.boot$storm.ID = storm.list


# join data #

FRCH.HI.boot$site.ID = "FRCH"
MOOS.HI.boot$site.ID = "MOOS"
POKE.HI.boot$site.ID = "POKE"
STRT.HI.boot$site.ID = "STRT"
VAUL.HI.boot$site.ID = "VAUL"
CARI.HI.boot$site.ID = "CARI"

HI = rbind(FRCH.HI.boot, MOOS.HI.boot, POKE.HI.boot, STRT.HI.boot, VAUL.HI.boot, CARI.HI.boot)

all.FI.diff.results = read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/all.FI.diff.results_2020.csv", header = T, row.names = 1)

FI = subset(all.FI.diff.results, select=c("Flushing_index", "percCI_2.5", "percCI_97.5", "ID"))
FI$ID = as.character(FI$ID)
FI = separate(FI, ID, into=c("site.ID", "storm.ID", "month", "day", "response_var", NA), sep = "_")
names(FI) = c("Flush_index", "FI_ymin", "FI_ymax","site.ID", "storm.ID", "month", "day", "response_var")

HI$site.ID=NULL
HI = separate(HI, storm.ID, into=c("site.ID", "storm.ID", "month", "day", "response_var"), sep = "_")
names(HI) = c("Hyst_index", "HI_ymin", "HI_ymax","site.ID", "storm.ID", "month", "day", "response_var")

HI_FI = left_join(HI, FI, by=c("site.ID", "storm.ID", "response_var"))
write.csv(HI_FI, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2020.csv")


# plot #

# NO3 #
HI_FI_NO3 = subset(HI_FI, response_var == "NO3")
HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL','CARI'))

HI_FI_NO3.p = 
  ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL','CARI'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

# SPC #
HI_FI_SPC = subset(HI_FI, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL','CARI'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p

# turb #
HI_FI_turb = subset(HI_FI, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL','CARI'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


grid.arrange(HI_FI_NO3.p,HI_FI_fDOM.p,HI_FI_SPC.p,HI_FI_turb.p)





########################################### 2021 ########################################################
# load storm data to R #

storm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI/", 
                              recursive=F, 
                              pattern=".csv", 
                              full.names=TRUE)

storm_list <-do.call("list", lapply(storm_file_list, 
                                    read.csv, 
                                    stringsAsFactors=FALSE, 
                                    header=T, row.names=1))

storm_file_list = sub("~/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list, replacement = "")
storm_file_list = sub(".csv", storm_file_list, replacement = "")
names(storm_list) = storm_file_list

 # changing character format into datetime 


#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list = storm_list[c(1:50)] #50
FRCH_storm_list = storm_list[c(51:100)] #55
MOOS_storm_list = storm_list[c(101:150)] #50
POKE_storm_list = storm_list[c(151:200)] #50
STRT_storm_list = storm_list[c(201:225)] #25
VAUL_storm_list = storm_list[c(226:265)] #40

for(i in 1:length(CARI_storm_list)){
  CARI_storm_list[[i]][["valuedatetime"]] = as.POSIXct(CARI_storm_list[[i]][["valuedatetime"]],
                                                  "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}

CARI_NO3_storm_list = CARI_storm_list[c(grep("NO3", names(CARI_storm_list)))]
CARI_fDOM_storm_list = CARI_storm_list[c(grep("fDOM", names(CARI_storm_list)))]
CARI_SpCond_storm_list = CARI_storm_list[c(grep("SPC", names(CARI_storm_list)))]
CARI_turb_storm_list = CARI_storm_list[c(grep("Turb", names(CARI_storm_list)))]


FRCH_Q_storm_list = FRCH_storm_list[c(grep("Q", names(FRCH_storm_list)))]

for(i in 1:length(FRCH_storm_list)){
  FRCH_storm_list[[i]][["valuedatetime"]] = as.POSIXct(FRCH_storm_list[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}

for(i in 1:length(MOOS_storm_list)){
  MOOS_storm_list[[i]][["valuedatetime"]] = as.POSIXct(MOOS_storm_list[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
MOOS_Q_storm_list = MOOS_storm_list[c(grep("Q", names(MOOS_storm_list)))]

for(i in 1:length(POKE_storm_list)){
  POKE_storm_list[[i]][["valuedatetime"]] = as.POSIXct(POKE_storm_list[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
POKE_Q_storm_list = POKE_storm_list[c(grep("Q", names(POKE_storm_list)))]
STRT_Q_storm_list = STRT_storm_list[c(grep("Q", names(STRT_storm_list)))]

for(i in 1:length(STRT_Q_storm_list)){
  STRT_Q_storm_list[[i]][["valuedatetime"]] = as.POSIXct(STRT_Q_storm_list[[i]][["valuedatetime"]],
                                                         "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}

for(i in 1:length(VAUL_storm_list)){
  VAUL_storm_list[[i]][["valuedatetime"]] = as.POSIXct(VAUL_storm_list[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
VAUL_Q_storm_list = VAUL_storm_list[c(grep("Q", names(VAUL_storm_list)))]

# normalize Q data 
# CARI
for(i in 1:length(CARI_Q_storm_list)){
  CARI_Q_storm_list[[i]][["datavalue.norm"]] = 
    (CARI_Q_storm_list[[i]][["datavalue"]]-min(CARI_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(CARI_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}
# FRCH
for(i in 1:length(FRCH_Q_storm_list)){
  FRCH_Q_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_Q_storm_list[[i]][["datavalue"]]-min(FRCH_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_Q_storm_list)){
  MOOS_Q_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_Q_storm_list[[i]][["datavalue"]]-min(MOOS_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_Q_storm_list)){
  POKE_Q_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_Q_storm_list[[i]][["datavalue"]]-min(POKE_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_Q_storm_list)){
  STRT_Q_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_Q_storm_list[[i]][["datavalue"]]-min(STRT_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_Q_storm_list)){
  VAUL_Q_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_Q_storm_list[[i]][["datavalue"]]-min(VAUL_Q_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_Q_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_Q_storm_list[[i]][["datavalue"]], na.rm=T))
}

### solute data with bursts ###
FRCH_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/FRCH_NO3_storm_list.RData")
FRCH_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/FRCH_fDOM_storm_list.RData")
FRCH_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/FRCH_SPC_storm_list.RData")
FRCH_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/FRCH_turb_storm_list.RData")

MOOS_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/MOOS_NO3_storm_list.RData")
MOOS_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/MOOS_fDOM_storm_list.RData")
MOOS_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/MOOS_SPC_storm_list.RData")
MOOS_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/MOOS_turb_storm_list.RData")

POKE_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/POKE_NO3_storm_list.RData")
POKE_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/POKE_fDOM_storm_list.RData")
POKE_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/POKE_SPC_storm_list.RData")
POKE_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/POKE_turb_storm_list.RData")

STRT_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/STRT_NO3_storm_list.RData")
STRT_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/STRT_fDOM_storm_list.RData")
STRT_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/STRT_SPC_storm_list.RData")
STRT_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/STRT_turb_storm_list.RData")

VAUL_NO3_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/VAUL_NO3_storm_list.RData")
VAUL_fDOM_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/VAUL_fDOM_storm_list.RData")
VAUL_SpCond_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/VAUL_SPC_storm_list.RData")
VAUL_turb_storm_list = readRDS("~/Documents/Storms/Storm_Events/WithBurst/2021/VAUL_turb_storm_list.RData")


# Normalize solute data # 

### remove burst-complied data ###

#NO3

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["datavalue"]] = FRCH_NO3_storm_list[[i]][["nitrateuM"]]
  FRCH_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]][["datavalue"]] = MOOS_NO3_storm_list[[i]][["nitrateuM"]]
  MOOS_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]][["datavalue"]] = POKE_NO3_storm_list[[i]][["nitrateuM"]]
  POKE_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]][["datavalue"]] = STRT_NO3_storm_list[[i]][["nitrateuM"]]
  STRT_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]][["datavalue"]] = VAUL_NO3_storm_list[[i]][["nitrateuM"]]
  VAUL_NO3_storm_list[[i]][["nitrateuM"]] = NULL
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue"]] = FRCH_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  FRCH_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  FRCH_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue"]] = MOOS_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  MOOS_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  MOOS_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]][["datavalue"]] = POKE_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  POKE_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  POKE_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["datavalue"]] = STRT_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  STRT_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  STRT_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["datavalue"]] = VAUL_fDOM_storm_list[[i]][["fDOM.QSU.mn"]]
  VAUL_fDOM_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_fDOM_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  VAUL_fDOM_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["datavalue"]] = FRCH_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  FRCH_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  FRCH_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]][["datavalue"]] = MOOS_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  MOOS_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  MOOS_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]][["datavalue"]] = POKE_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  POKE_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  POKE_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]][["datavalue"]] = STRT_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  STRT_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  STRT_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]][["datavalue"]] = VAUL_SpCond_storm_list[[i]][["SpCond.µS.cm"]]
  VAUL_SpCond_storm_list[[i]][["SpCond.µS.cm"]] = NULL
  VAUL_SpCond_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_SpCond_storm_list[[i]][["Turbidity.FNU"]] = NULL
}

#turb
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue"]] = FRCH_turb_storm_list[[i]][["Turbidity.FNU"]]
  FRCH_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  FRCH_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  FRCH_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue"]] = MOOS_turb_storm_list[[i]][["Turbidity.FNU"]]
  MOOS_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  MOOS_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  MOOS_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]][["datavalue"]] = POKE_turb_storm_list[[i]][["Turbidity.FNU"]]
  POKE_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  POKE_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  POKE_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["datavalue"]] = STRT_turb_storm_list[[i]][["Turbidity.FNU"]]
  STRT_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  STRT_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  STRT_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["datavalue"]] = VAUL_turb_storm_list[[i]][["Turbidity.FNU"]]
  VAUL_turb_storm_list[[i]][["Turbidity.FNU"]] = NULL
  VAUL_turb_storm_list[[i]][["fDOM.QSU.mn"]] = NULL
  VAUL_turb_storm_list[[i]][["SpCond.µS.cm"]] = NULL
}

### normalize burst data ###

#NO3
for(i in 1:length(CARI_NO3_storm_list)){
  CARI_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (CARI_NO3_storm_list[[i]][["datavalue"]]-min(CARI_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(CARI_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(FRCH_NO3_storm_list)){
  FRCH_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_NO3_storm_list[[i]][["datavalue"]]-min(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_NO3_storm_list)){
  MOOS_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_NO3_storm_list[[i]][["datavalue"]]-min(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_NO3_storm_list)){
  POKE_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_NO3_storm_list[[i]][["datavalue"]]-min(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_NO3_storm_list)){
  STRT_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_NO3_storm_list[[i]][["datavalue"]]-min(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_NO3_storm_list)){
  VAUL_NO3_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_NO3_storm_list[[i]][["datavalue"]]-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))
}


#fDOM
for(i in 1:length(CARI_fDOM_storm_list)){
  CARI_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (CARI_fDOM_storm_list[[i]][["datavalue"]]-min(CARI_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(CARI_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(FRCH_fDOM_storm_list[[i]][["datavalue"]])
} 
for(i in 1:length(FRCH_fDOM_storm_list)){
  FRCH_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_fDOM_storm_list[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(MOOS_fDOM_storm_list[[i]][["datavalue"]])
} 
for(i in 1:length(MOOS_fDOM_storm_list)){
  MOOS_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_fDOM_storm_list[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(POKE_fDOM_storm_list[[i]][["datavalue"]])
}
for(i in 1:length(POKE_fDOM_storm_list)){
  POKE_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_fDOM_storm_list[[i]][["datavalue"]]-min(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}


for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(STRT_fDOM_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(STRT_fDOM_storm_list)){
  STRT_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_fDOM_storm_list[[i]][["datavalue"]]-min(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["datavalue"]] = as.numeric(VAUL_fDOM_storm_list[[i]][["datavalue"]])
} 
for(i in 1:length(VAUL_fDOM_storm_list)){
  VAUL_fDOM_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_fDOM_storm_list[[i]][["datavalue"]]-min(VAUL_NO3_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_fDOM_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_fDOM_storm_list[[i]][["datavalue"]], na.rm=T))
}

#SPC
for(i in 1:length(CARI_SpCond_storm_list)){
  CARI_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (CARI_SpCond_storm_list[[i]][["datavalue"]]-min(CARI_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(CARI_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(FRCH_SpCond_storm_list[[i]][["datavalue"]])
} 
for(i in 1:length(FRCH_SpCond_storm_list)){
  FRCH_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_SpCond_storm_list[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(MOOS_SpCond_storm_list[[i]][["datavalue"]])
} 
for(i in 1:length(MOOS_SpCond_storm_list)){
  MOOS_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_SpCond_storm_list[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(POKE_SpCond_storm_list[[i]][["datavalue"]])
}
for(i in 1:length(POKE_SpCond_storm_list)){
  POKE_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_SpCond_storm_list[[i]][["datavalue"]]-min(POKE_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(STRT_SpCond_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(STRT_SpCond_storm_list)){
  STRT_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_SpCond_storm_list[[i]][["datavalue"]]-min(STRT_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]][["datavalue"]] = as.numeric(VAUL_SpCond_storm_list[[i]][["datavalue"]])
}
for(i in 1:length(VAUL_SpCond_storm_list)){
  VAUL_SpCond_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_SpCond_storm_list[[i]][["datavalue"]]-min(VAUL_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_SpCond_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_SpCond_storm_list[[i]][["datavalue"]], na.rm=T))
}

#turb
for(i in 1:length(CARI_turb_storm_list)){
  CARI_turb_storm_list[[i]][["datavalue.norm"]] = 
    (CARI_turb_storm_list[[i]][["datavalue"]]-min(CARI_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(CARI_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue"]] = as.numeric(FRCH_turb_storm_list[[i]][["datavalue"]])
}
for(i in 1:length(FRCH_turb_storm_list)){
  FRCH_turb_storm_list[[i]][["datavalue.norm"]] = 
    (FRCH_turb_storm_list[[i]][["datavalue"]]-min(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue"]] = as.numeric(MOOS_turb_storm_list[[i]][["datavalue"]])
}
for(i in 1:length(MOOS_turb_storm_list)){
  MOOS_turb_storm_list[[i]][["datavalue.norm"]] = 
    (MOOS_turb_storm_list[[i]][["datavalue"]]-min(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]][["datavalue"]] = as.numeric(POKE_turb_storm_list[[i]][["datavalue"]])
}
for(i in 1:length(POKE_turb_storm_list)){
  POKE_turb_storm_list[[i]][["datavalue.norm"]] = 
    (POKE_turb_storm_list[[i]][["datavalue"]]-min(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(POKE_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["datavalue"]] = as.numeric(STRT_turb_storm_list[[i]][["datavalue"]])
} # changing character format into numeric 


for(i in 1:length(STRT_turb_storm_list)){
  STRT_turb_storm_list[[i]][["datavalue.norm"]] = 
    (STRT_turb_storm_list[[i]][["datavalue"]]-min(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(STRT_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}
for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["datavalue"]] = as.numeric(VAUL_turb_storm_list[[i]][["datavalue"]])
}
for(i in 1:length(VAUL_turb_storm_list)){
  VAUL_turb_storm_list[[i]][["datavalue.norm"]] = 
    (VAUL_turb_storm_list[[i]][["datavalue"]]-min(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T)-min(VAUL_turb_storm_list[[i]][["datavalue"]], na.rm=T))
}

# fxn: calculate FI by difference and bootstrap CIs #

FI_diff = function(dat_Q, dat_response) {
  FI_dat = rbind(dat_response[as.POSIXct(dat_response$valuedatetime) == min(as.POSIXct(dat_response$valuedatetime)),], 
                 dat_response[as.POSIXct(dat_response$valuedatetime) == as.POSIXct(dat_Q$valuedatetime[dat_Q$datavalue.norm == max(dat_Q$datavalue.norm)]),])
  
  FI_dat$valuedatetime = as.character(as.POSIXct(FI_dat$valuedatetime))
  
  dat_Q$valuedatetime = as.character(as.POSIXct(dat_Q$valuedatetime))
  
  FI_dat = left_join(FI_dat, 
                     subset(dat_Q, select=c("valuedatetime", "datavalue.norm")),
                     by="valuedatetime")
  
  names(FI_dat) = c("valuedatetime", "datavalue", "datavalue.norm", "Q")
  
  FI_dat$datavalue.norm = as.numeric(FI_dat$datavalue.norm)
  FI_dat$Q = as.numeric(FI_dat$Q)
  
  FI = mean(FI_dat$datavalue.norm[FI_dat$valuedatetime == max(FI_dat$valuedatetime)]) - mean(FI_dat$datavalue.norm[FI_dat$valuedatetime == min(FI_dat$valuedatetime)])
  
  meanDiff = function(data, indices) { 
    d <- data[indices,] # allows boot to select sample
    m1 = mean(d$datavalue.norm[d$valuedatetime == max(d$valuedatetime)])
    m2 = mean(d$datavalue.norm[d$valuedatetime == min(d$valuedatetime)])
    m = m1 - m2
    return(m)
  }
  
  FI_boot = boot(FI_dat, meanDiff, R = 10000, strata = as.factor(FI_dat[,1]))
  FI_bootCI = boot.ci(FI_boot, type="bca")
  
  FI_bootCI = data.frame(cbind(FI_boot$t0, FI_bootCI[["bca"]][4], FI_bootCI[["bca"]][5]))
  names(FI_bootCI) = c("FI", "lower", "upper")
  
  FI_results = list(FI_dat, FI_bootCI)
  
  return(FI_results)
}

# calculate FI by difference and bootstrap CIs #
# FRCH # 
#NO3 #
#FRCH_storm1_07_23_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_07_23_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_07_23_NO3`) # empty
FRCH_storm2_07_27_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_07_27_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_07_27_NO3`) 
FRCH_storm3_08_05_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_08_05_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_08_05_NO3`)
FRCH_storm4_08_08_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_08_08_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_08_08_NO3`)
FRCH_storm5a_08_15_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5a_08_15_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5a_08_15_NO3`)
FRCH_storm5b_08_17_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5b_08_17_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5b_08_17_NO3`)
FRCH_storm6a_08_19_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6a_08_19_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6a_08_19_NO3`)
#FRCH_storm6b_08_20_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6b_08_20_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6b_08_20_NO3`) # length
FRCH_storm7_08_25_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_08_25_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_08_25_NO3`)
FRCH_storm8_08_27_NO3_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_08_27_Q`, FRCH_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_08_27_NO3`)

#fDOM #
#FRCH_storm1_07_23_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_07_23_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_07_23_fDOM`)
FRCH_storm2_07_27_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_07_27_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_07_27_fDOM`)
FRCH_storm3_08_05_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_08_05_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_08_05_fDOM`)
FRCH_storm4_08_08_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_08_08_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_08_08_fDOM`)
#FRCH_storm5a_08_15_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5a_08_15_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5a_08_15_fDOM`) # empty
#FRCH_storm5b_08_17_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5b_08_17_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5b_08_17_fDOM`) # empty
#FRCH_storm6a_08_19_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6a_08_19_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6a_08_19_fDOM`) # empty
#FRCH_storm6b_08_20_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6b_08_20_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6b_08_20_fDOM`) # empty
FRCH_storm7_08_25_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_08_25_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_08_25_fDOM`)
FRCH_storm8_08_27_fDOM_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_08_27_Q`, FRCH_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_08_27_fDOM`)
# SPC #
#FRCH_storm1_07_23_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_07_23_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_07_23_SPC`) # empty
FRCH_storm2_07_27_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_07_27_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_07_27_SPC`)
FRCH_storm3_08_05_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_08_05_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_08_05_SPC`)
FRCH_storm4_08_08_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_08_08_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_08_08_SPC`)
#FRCH_storm5a_08_15_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5a_08_15_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5a_08_15_SPC`)
#FRCH_storm5b_08_17_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5b_08_17_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5b_08_17_SPC`)
#FRCH_storm6a_08_19_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6a_08_19_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6a_08_19_SPC`)
#FRCH_storm6b_08_20_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6b_08_20_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6b_08_20_SPC`)
FRCH_storm7_08_25_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_08_25_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_08_25_SPC`)
FRCH_storm8_08_27_SPC_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_08_27_Q`, FRCH_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_08_27_SPC`)
#turb #
#FRCH_storm1_07_23_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_07_23_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm1_07_23_Turb`)
FRCH_storm2_07_27_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_07_27_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm2_07_27_Turb`)
FRCH_storm3_08_05_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_08_05_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm3_08_05_Turb`)
FRCH_storm4_08_08_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_08_08_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm4_08_08_Turb`)
#FRCH_storm5a_08_15_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5a_08_15_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5a_08_15_Turb`)
#FRCH_storm5b_08_17_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5b_08_17_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm5b_08_17_Turb`)
#FRCH_storm6a_08_19_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6a_08_19_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6a_08_19_Turb`)
#FRCH_storm6b_08_20_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6b_08_20_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm6b_08_20_Turb`)
FRCH_storm7_08_25_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_08_25_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm7_08_25_Turb`)
FRCH_storm8_08_27_turb_FI = FI_diff(FRCH_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_08_27_Q`, FRCH_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//FRCH_storm8_08_27_Turb`)

# MOOS # 
#fDOM #
#MOOS_storm1_07_23_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_07_23_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_07_23_fDOM`) # length 
MOOS_storm2_07_27_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_07_27_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_07_27_fDOM`)
MOOS_storm3a_08_06_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3a_08_06_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3a_08_06_fDOM`)
MOOS_storm3b_08_08_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3b_08_08_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3b_08_08_fDOM`)
MOOS_storm4a_08_15_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4a_08_15_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4a_08_15_fDOM`)
MOOS_storm4b_08_17_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4b_08_17_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4b_08_17_fDOM`)
MOOS_storm5a_08_19_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5a_08_19_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5a_08_19_fDOM`)
MOOS_storm5b_08_21_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5b_08_21_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5b_08_21_fDOM`)
MOOS_storm6_08_25_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6_08_25_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6_08_25_fDOM`)
MOOS_storm7_08_27_fDOM_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7_08_27_Q`, MOOS_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7_08_27_fDOM`)

#SPC #
#MOOS_storm1_07_23_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_07_23_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_07_23_SPC`) # w is infinite
#MOOS_storm2_07_27_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_07_27_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_07_27_SPC`) # w is infinite
#MOOS_storm3a_08_06_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3a_08_06_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3a_08_06_SPC`)# w is infinite
MOOS_storm3b_08_08_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3b_08_08_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3b_08_08_SPC`)
MOOS_storm4a_08_15_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4a_08_15_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4a_08_15_SPC`)
MOOS_storm4b_08_17_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4b_08_17_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4b_08_17_SPC`)
MOOS_storm5a_08_19_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5a_08_19_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5a_08_19_SPC`)
MOOS_storm5b_08_21_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5b_08_21_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5b_08_21_SPC`)
MOOS_storm6_08_25_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6_08_25_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6_08_25_SPC`) # extreme order stats 
MOOS_storm7_08_27_SPC_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7_08_27_Q`, MOOS_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7_08_27_SPC`)

# turb #
#MOOS_storm1_07_23_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_07_23_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm1_07_23_Turb`) # length
MOOS_storm2_07_27_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_07_27_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm2_07_27_Turb`)
MOOS_storm3a_08_06_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3a_08_06_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3a_08_06_Turb`)
MOOS_storm3b_08_08_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3b_08_08_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm3b_08_08_Turb`)
MOOS_storm4a_08_15_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4a_08_15_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4a_08_15_Turb`)
MOOS_storm4b_08_17_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4b_08_17_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm4b_08_17_Turb`)
MOOS_storm5a_08_19_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5a_08_19_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5a_08_19_Turb`)
MOOS_storm5b_08_21_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5b_08_21_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm5b_08_21_Turb`)
MOOS_storm6_08_25_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6_08_25_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm6_08_25_Turb`)
MOOS_storm7_08_27_turb_FI = FI_diff(MOOS_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7_08_27_Q`, MOOS_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//MOOS_storm7_08_27_Turb`)


# POKE # 
#NO3 #
#POKE_storm1_05_16_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_05_16_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_05_16_NO3`) # empty
POKE_storm2_06_01_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_01_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_01_NO3`)
#POKE_storm3_06_19_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_19_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_19_NO3`) # returning -Inf
#POKE_storm4_07_23_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_23_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_23_NO3`) # returning -Inf
POKE_storm5_07_27_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_07_27_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_07_27_NO3`)
POKE_storm6_08_08_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_08_08_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_08_08_NO3`)
#POKE_storm7a_08_14_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7a_08_14_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7a_08_14_NO3`)
#POKE_storm7b_08_19_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7b_08_19_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7b_08_19_NO3`)
#POKE_storm7c_08_23_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7c_08_23_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7c_08_23_NO3`)
#POKE_storm7d_08_27_NO3_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7d_08_26_Q`, POKE_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7d_08_26_NO3`)

#fDOM #
#POKE_storm1_05_16_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_05_16_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_05_16_fDOM`)
#POKE_storm2_06_01_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_01_Q`,POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_01_fDOM`)
#POKE_storm3_06_19_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_19_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_19_fDOM`)
#POKE_stor4_07_23_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_23_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_23_fDOM`)
#POKE_storm5_07_27_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_07_27_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_07_27_fDOM`)
#POKE_storm6_08_08_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_08_08_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_08_08_fDOM`)
#POKE_storm7a_08_14_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7a_08_14_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7a_08_14_fDOM`)
#POKE_storm7b_08_19_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7b_08_19_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7b_08_19_fDOM`)
#POKE_storm7c_08_23_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7c_08_23_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7c_08_23_fDOM`)
#POKE_storm7d_08_27_fDOM_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7d_08_26_Q`, POKE_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7d_08_26_fDOM`)

#SPC #
#POKE_storm1_05_16_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_05_16_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_05_16_SPC`)
#POKE_storm2_06_01_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_01_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_01_SPC`)
#POKE_storm3_06_19_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_19_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_19_SPC`)
#POKE_storm4_07_23_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_23_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_23_SPC`)
#POKE_storm5_07_27_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_07_27_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_07_27_SPC`)
#POKE_storm6_08_08_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_08_08_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_08_08_SPC`)
#POKE_storm7a_08_14_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7a_08_14_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7a_08_14_SPC`)
#POKE_storm7b_08_19_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7b_08_19_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7b_08_19_SPC`)
#POKE_storm7c_08_23_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7c_08_23_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7c_08_23_SPC`)
#POKE_storm7d_08_27_SPC_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7d_08_26_Q`, POKE_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7d_08_26_SPC`)
#turb #
#POKE_storm1_05_16_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_05_16_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm1_05_16_Turb`)
#POKE_storm2_06_01_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_01_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm2_06_01_Turb`)
#POKE_storm3_06_19_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_19_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm3_06_19_Turb`)
#POKE_storm4_07_23_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_23_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm4_07_23_Turb`)
#POKE_storm5_07_27_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_07_27_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm5_07_27_Turb`)
#POKE_storm6_08_08_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_08_08_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6_08_08_Turb`)
#POKE_storm7a_08_14_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7a_08_14_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7a_08_14_Turb`)
#POKE_storm7b_08_19_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7b_08_19_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7b_08_19_Turb`)
#POKE_storm7c_08_23_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7c_08_23_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7c_08_23_Turb`)
#POKE_storm7d_08_27_turb_FI = FI_diff(POKE_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7d_08_26_Q`, POKE_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm7d_08_26_Turb`)

# STRT # 
#NO3 #
STRT_storm1a_08_15_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_08_15_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_08_15_NO3`)
STRT_storm1b_08_17_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_08_17_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_08_17_NO3`)
#STRT_storm2a_08_19_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2a_08_19_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2a_08_19_NO3`) # w is infinite
STRT_storm2b_08_20_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2b_08_20_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2b_08_20_NO3`)
STRT_storm3_08_25_NO3_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_08_25_Q`, STRT_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_08_25_NO3`)
# fDOM #
STRT_storm1a_08_15_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_08_15_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_08_15_fDOM`)
STRT_storm1b_08_17_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_08_17_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_08_17_fDOM`)
#STRT_storm2a_08_19_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2a_08_19_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2a_08_19_fDOM`)# w is infinite
STRT_storm2b_08_20_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2b_08_20_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2b_08_20_fDOM`)
STRT_storm3_08_25_fDOM_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_08_25_Q`, STRT_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_08_25_fDOM`)
# SPC #
STRT_storm1a_08_15_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_08_15_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_08_15_SPC`)
STRT_storm1b_08_17_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_08_17_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_08_17_SPC`)
#STRT_storm2a_08_19_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2a_08_19_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2a_08_19_SPC`)# w is infinite
STRT_storm2b_08_20_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2b_08_20_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2b_08_20_SPC`)
STRT_storm3_08_25_SPC_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_08_25_Q`, STRT_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_08_25_SPC`)
# Turb #
STRT_storm1a_08_15_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_08_15_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1a_08_15_Turb`)
STRT_storm1b_08_17_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_08_17_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm1b_08_17_Turb`)
#STRT_storm2a_08_19_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2a_08_19_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2a_08_19_Turb`)# w is infinite
STRT_storm2b_08_20_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2b_08_20_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm2b_08_20_Turb`)
STRT_storm3_08_25_turb_FI = FI_diff(STRT_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_08_25_Q`, STRT_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//STRT_storm3_08_25_Turb`)

# VAUL # 
#NO3 #
VAUL_storm1a_07_23_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_07_23_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_07_23_NO3`)
VAUL_storm1b_07_27_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_07_27_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_07_27_NO3`)
VAUL_storm2_08_05_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_08_05_Q`,VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_08_05_NO3`)
VAUL_storm3_08_08_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_08_08_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_08_08_NO3`)
VAUL_storm4a_08_15_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_15_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_15_NO3`)
#VAUL_storm4b_08_20_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_20_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_20_NO3`) # w is infinite
#VAUL_storm5a_08_23_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5a_08_23_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5a_08_23_NO3`)# w is infinite
#VAUL_storm5b_08_26_NO3_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5b_08_26_Q`, VAUL_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5b_08_26_NO3`)# w is infinite


#fDOM #
VAUL_storm1a_07_23_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_07_23_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_07_23_fDOM`)
#VAUL_storm1b_07_27_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_07_27_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_07_27_fDOM`) # length
#VAUL_storm2_08_05_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_08_05_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_08_05_fDOM`) # length 
VAUL_storm3_08_08_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_08_08_Q`,VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_08_08_fDOM`)
VAUL_storm4a_08_15_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_15_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_15_fDOM`)
VAUL_storm4b_08_20_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_20_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_20_fDOM`)
#VAUL_storm5a_08_23_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5a_08_23_Q`,VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5a_08_23_fDOM`) # length
VAUL_storm5b_08_26_fDOM_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5b_08_26_Q`, VAUL_fDOM_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5b_08_26_fDOM`)


#SPC #
VAUL_storm1a_07_23_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_07_23_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_07_23_SPC`)
#VAUL_storm1b_07_27_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_07_27_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_07_27_SPC`)
#VAUL_storm2_08_05_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_08_05_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_08_05_SPC`)
VAUL_storm3_08_08_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_08_08_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_08_08_SPC`)
VAUL_storm4a_08_15_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_15_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_15_SPC`)
VAUL_storm4b_08_20_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_20_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_20_SPC`)
#VAUL_storm5a_08_23_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5a_08_23_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5a_08_23_SPC`)
VAUL_storm5b_08_26_SPC_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5b_08_26_Q`, VAUL_SpCond_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5b_08_26_SPC`)
#turb #
VAUL_storm1a_07_23_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_07_23_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1a_07_23_Turb`)
#VAUL_storm1b_07_27_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_07_27_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm1b_07_27_Turb`)
#VAUL_storm2_08_05_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_08_05_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm2_08_05_Turb`)
VAUL_storm3_08_08_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_08_08_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm3_08_08_Turb`)
VAUL_storm4a_08_15_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_15_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4a_08_15_Turb`)
VAUL_storm4b_08_20_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_20_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm4b_08_20_Turb`)
#VAUL_storm5a_08_23_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5a_08_23_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5a_08_23_Turb`)
VAUL_storm5b_08_26_turb_FI = FI_diff(VAUL_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5b_08_26_Q`, VAUL_turb_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//VAUL_storm5b_08_26_Turb`)



# CARI # 
#NO3 #
CARI_NO3_storm_list <- lapply(CARI_NO3_storm_list, na.omit) # remove NAs
for(i in 1:length(CARI_Q_storm_list)){
  CARI_Q_storm_list[[i]][["valuedatetime"]] = round_date(CARI_Q_storm_list[[i]][["valuedatetime"]], "15 minutes"
                                                       )
}
CARI_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_Q` <- CARI_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_Q`[!duplicated(CARI_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_Q`$valuedatetime), ]
CARI_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_Q` <- CARI_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_Q`[!duplicated(CARI_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_Q`$valuedatetime), ]


CARI_storm1_05_16_NO3_FI = FI_diff(CARI_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_Q`, CARI_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_NO3`)
CARI_storm2_06_01_NO3_FI = FI_diff(CARI_Q_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_Q`, CARI_NO3_storm_list$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_NO3`)
#CARI_storm3_06_19_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_19_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_19_NO3`)
#CARI_storm4_07_24_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_24_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_24_NO3`)
#CARI_storm5_07_27_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_27_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_27_NO3`)
#CARI_storm6_08_08_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_08_08_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_08_08_NO3`)
#CARI_storm7_08_15_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_08_15_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_08_15_NO3`)
#CARI_storm8_08_20_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_20_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_20_NO3`)
#CARI_storm9_08_23_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_08_23_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_08_23_NO3`)
#CARI_storm10_08_27_NO3_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm10_08_27_Q`, CARI_NO3_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm10_08_27_NO3`)

# fDOM # 
CARI_storm1_05_16_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_fDOM`) # 0.161223889379229
CARI_storm2_06_01_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_fDOM`) #0.221786980041037
CARI_storm3_06_19_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_19_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_19_fDOM`) # 0.628463476070529
CARI_storm4_07_24_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_24_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_24_fDOM`) # 0.34253149370126
CARI_storm5_07_27_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_27_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_27_fDOM`) # 0.779408107435961
#CARI_storm6_08_08_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_08_08_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_08_08_fDOM`)
#CARI_storm7_08_15_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_08_15_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_08_15_fDOM`)
CARI_storm8_08_20_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_20_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_20_fDOM`) # 0.145924728700069
#CARI_storm9_08_23_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_08_23_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_08_23_fDOM`)
CARI_storm10_08_27_fDOM_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm10_08_27_Q`, CARI_fDOM_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm10_08_27_fDOM`) # 0.149013815275002



# SPC # 
CARI_storm1_05_16_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_SPC`) # .0248635536688902
#CARI_storm2_06_01_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_SPC`)
#CARI_storm3_06_19_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_19_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_19_SPC`)
#CARI_storm4_07_24_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_24_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_24_SPC`)
#CARI_storm5_07_27_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_27_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_27_SPC`)
#CARI_storm6_08_08_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_08_08_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_08_08_SPC`)
#CARI_storm7_08_15_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_08_15_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_08_15_SPC`)
#CARI_storm8_08_20_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_20_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_20_SPC`)
CARI_storm9_08_23_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_08_23_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_08_23_SPC`)
CARI_storm10_08_27_SPC_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm10_08_27_Q`, CARI_SpCond_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm10_08_27_SPC`)

#turb #
CARI_storm1_05_16_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm1_05_16_Turb`) # 0.0229022566043041
#CARI_storm2_06_01_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm2_06_01_Turb`) 
CARI_storm3_06_19_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_19_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm3_06_19_Turb`) # 0.607263513513514
CARI_storm4_07_24_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_24_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm4_07_24_Turb`) # 0.784810126582278
CARI_storm5_07_27_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_27_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm5_07_27_Turb`) # 0.747685185185185
#CARI_storm6_08_08_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_08_08_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm6_08_08_Turb`)
#CARI_storm7_08_15_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_08_15_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm7_08_15_Turb`)
CARI_storm8_08_20_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_20_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm8_08_20_Turb`) # 0.0736842105263158
CARI_storm9_08_23_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_08_23_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm9_08_23_Turb`) # 0.0995575221238938
CARI_storm10_08_27_turb_FI = FI_diff(CARI_Q_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm10_08_27_Q`, CARI_turb_storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//CARI_storm10_08_27_Turb`) # 0.135593220338983




# gather results and save ##

FI_results = rbind(c("FRCH_storm1_07_23_NO3_FI",FRCH_storm1_07_23_NO3_FI[[2]]),
                   c("FRCH_storm7_08_25_NO3_FI",FRCH_storm7_08_25_NO3_FI[[2]]),
                   c("FRCH_storm7_08_25_fDOM_FI",FRCH_storm7_08_25_fDOM_FI[[2]]),
                   c("MOOS_storm3b_08_08_fDOM_FI",MOOS_storm3b_08_08_fDOM_FI[[2]]),
                   c("MOOS_storm7_08_27_fDOM_FI",MOOS_storm7_08_27_fDOM_FI[[2]]),
                   
                   c("POKE_storm2_06_01_NO3_FI",POKE_storm2_06_01_NO3_FI[[2]]),
                   c("POKE_storm3_06_19_NO3_FI",POKE_storm3_06_19_NO3_FI[[2]]),
                  
                  
                   c("POKE_storm6_08_08_NO3_FI",POKE_storm6_08_08_NO3_FI[[2]]),
                   
                   c("POKE_storm7b_08_19_NO3_FI",POKE_storm7b_08_19_NO3_FI[[2]]),
                   c("POKE_storm7c_08_23_NO3_FI",POKE_storm7c_08_23_NO3_FI[[2]]),
                   c("POKE_storm1_05_16_fDOM_FI",POKE_storm1_05_16_fDOM_FI[[2]]),
                   c("POKE_storm2_06_01_fDOM_FI",POKE_storm2_06_01_fDOM_FI[[2]]),
                   c("POKE_storm6_08_08_fDOM_FI",POKE_storm6_08_08_fDOM_FI[[2]]),
                   c("STRT_storm1a_08_15_NO3_FI",STRT_storm1a_08_15_NO3_FI[[2]]),
                   c("STRT_storm3_08_25_NO3_FI",STRT_storm3_08_25_NO3_FI[[2]]),
                   c("STRT_storm1a_08_15_fDOM_FI",STRT_storm1a_08_15_fDOM_FI[[2]]),
                   c("STRT_storm3_08_25_fDOM_FI",STRT_storm3_08_25_fDOM_FI[[2]]),
                   c("VAUL_storm3_08_08_NO3_FI",VAUL_storm3_08_08_NO3_FI[[2]]),
                   c("VAUL_storm4a_08_15_NO3_FI",VAUL_storm4a_08_15_NO3_FI[[2]]),
                   c("VAUL_storm3_08_08_fDOM_FI",VAUL_storm3_08_08_fDOM_FI[[2]]),
                   c("VAUL_storm4a_08_15_fDOM_FI",VAUL_storm4a_08_15_fDOM_FI[[2]]))


FI_results = rbind(
  c("FRCH_storm1_07_23_NO3_FI",-0.6313, -0.6534, -0.6088),
  c("FRCH_storm2_07_27_NO3_FI",FRCH_storm2_07_27_NO3_FI[[2]]),
  c("FRCH_storm3_08_05_NO3_FI",FRCH_storm3_08_05_NO3_FI[[2]]),
  c("FRCH_storm4_08_08_NO3_FI",FRCH_storm4_08_08_NO3_FI[[2]]),
  c("FRCH_storm5a_08_15_NO3_FI",FRCH_storm5a_08_15_NO3_FI[[2]]),
  c("FRCH_storm5b_08_17_NO3_FI",FRCH_storm5b_08_17_NO3_FI[[2]]),
  c("FRCH_storm6a_08_19_NO3_FI",FRCH_storm6a_08_19_NO3_FI[[2]]),
  c("FRCH_storm6b_08_20_NO3_FI",NA,NA,NA),
  c("FRCH_storm7_08_25_NO3_FI",FRCH_storm7_08_25_NO3_FI[[2]]),
  c("FRCH_storm8_08_27_NO3_FI",FRCH_storm8_08_27_NO3_FI[[2]]),
  
  c("FRCH_storm1_07_23_fDOM_FI",NA,NA,NA),
  c("FRCH_storm2_07_27_fDOM_FI",FRCH_storm2_07_27_fDOM_FI[[2]]),
  c("FRCH_storm3_08_05_fDOM_FI",FRCH_storm3_08_05_fDOM_FI[[2]]),
  c("FRCH_storm4_08_08_fDOM_FI",FRCH_storm4_08_08_fDOM_FI[[2]]),
  c("FRCH_storm5a_08_15_fDOM_FI", NA, NA, NA),
  c("FRCH_storm5b_08_17_fDOM_FI",NA,NA,NA),
  c("FRCH_storm6a_08_19_fDOM_FI",NA,NA,NA),
  c("FRCH_storm6b_08_20_fDOM_FI",NA,NA,NA),
  c("FRCH_storm7_08_25_fDOM_FI",FRCH_storm7_08_25_fDOM_FI[[2]]),
  c("FRCH_storm8_08_27_fDOM_FI",FRCH_storm8_08_27_fDOM_FI[[2]]),
 
  c("FRCH_storm1_07_23_SPC_FI",NA,NA,NA),
  c("FRCH_storm2_07_27_SPC_FI",FRCH_storm2_07_27_SPC_FI[[2]]),
  c("FRCH_storm3_08_05_SPC_FI",FRCH_storm3_08_05_SPC_FI[[2]]),
  c("FRCH_storm4_08_08_SPC_FI",FRCH_storm4_08_08_SPC_FI[[2]]),
  c("FRCH_storm5a_08_15_SPC_FI",NA,NA,NA),
  c("FRCH_storm5b_08_17_SPC_FI",NA,NA,NA),
  c("FRCH_storm6a_08_19_SPC_FI",NA,NA,NA),
  c("FRCH_storm6b_08_20_SPC_FI",NA,NA,NA),
  c("FRCH_storm7_08_25_SPC_FI",FRCH_storm7_08_25_SPC_FI[[2]]),
  c("FRCH_storm8_08_27_SPC_FI",FRCH_storm8_08_27_SPC_FI[[2]]),
  
  c("FRCH_storm1_07_23_turb_FI",NA,NA,NA),
  c("FRCH_storm2_07_27_turb_FI",FRCH_storm2_07_27_turb_FI[[2]]),
  c("FRCH_storm3_08_05_turb_FI",FRCH_storm3_08_05_turb_FI[[2]]),
  c("FRCH_storm4_08_08_turb_FI",FRCH_storm4_08_08_turb_FI[[2]]),
  c("FRCH_storm5a_08_15_turb_FI",NA,NA,NA),
  c("FRCH_storm5b_08_17_turb_FI",NA,NA,NA),
  c("FRCH_storm6a_08_19_turb_FI",NA,NA,NA),
  c("FRCH_storm6b_08_20_turb_FI",NA,NA,NA),
  c("FRCH_storm7_08_25_turb_FI",FRCH_storm7_08_25_turb_FI[[2]]),
  c("FRCH_storm8_08_27_turb_FI",FRCH_storm8_08_27_turb_FI[[2]]),
  
  c("MOOS_storm1_07_23_fDOM_FI",NA,NA,NA),
  c("MOOS_storm2_07_27_fDOM_FI",MOOS_storm2_07_27_fDOM_FI[[2]]),
  c("MOOS_storm3a_08_06_fDOM_FI",MOOS_storm3a_08_06_fDOM_FI[[2]]),
  c("MOOS_storm3b_08_08_fDOM_FI",MOOS_storm3b_08_08_fDOM_FI[[2]]),
  c("MOOS_storm4a_08_15_fDOM_FI",MOOS_storm4a_08_15_fDOM_FI[[2]]),
  c("MOOS_storm4b_08_17_fDOM_FI",MOOS_storm4b_08_17_fDOM_FI[[2]]),
  c("MOOS_storm5a_08_19_fDOM_FI",MOOS_storm5a_08_19_fDOM_FI[[2]]),
  c("MOOS_storm5b_08_21_fDOM_FI",MOOS_storm5b_08_21_fDOM_FI[[2]]),
  c("MOOS_storm6_08_25_fDOM_FI",MOOS_storm6_08_25_fDOM_FI[[2]]),
  c("MOOS_storm7_08_27_fDOM_FI",MOOS_storm7_08_27_fDOM_FI[[2]]),
  
  c("MOOS_storm1_07_23_SPC_FI",NA,NA,NA),
  c("MOOS_storm2_07_27_SPC_FI",NA,NA,NA),
  c("MOOS_storm3a_08_06_SPC_FI",NA,NA,NA),
  c("MOOS_storm3b_08_08_SPC_FI",MOOS_storm3b_08_08_SPC_FI[[2]]),
  c("MOOS_storm4a_08_15_SPC_FI",MOOS_storm4a_08_15_SPC_FI[[2]]),
  c("MOOS_storm4b_08_17_SPC_FI",MOOS_storm4b_08_17_SPC_FI[[2]]),
  c("MOOS_storm5a_08_19_SPC_FI",MOOS_storm5a_08_19_SPC_FI[[2]]),
  c("MOOS_storm5b_08_21_SPC_FI",MOOS_storm5b_08_21_SPC_FI[[2]]),
  c("MOOS_storm6_08_25_SPC_FI",MOOS_storm6_08_25_SPC_FI[[2]]),
  c("MOOS_storm7_08_27_SPC_FI",MOOS_storm7_08_27_SPC_FI[[2]]),
  
  c("MOOS_storm1_07_23_turb_FI",NA,NA,NA),
  c("MOOS_storm2_07_27_turb_FI",MOOS_storm2_07_27_turb_FI[[2]]),
  c("MOOS_storm3a_08_06_turb_FI",MOOS_storm3a_08_06_turb_FI[[2]]),
  c("MOOS_storm3b_08_08_turb_FI",MOOS_storm3b_08_08_turb_FI[[2]]),
  c("MOOS_storm4a_08_15_turb_FI",MOOS_storm4a_08_15_turb_FI[[2]]),
  c("MOOS_storm4b_08_17_turb_FI",MOOS_storm4b_08_17_turb_FI[[2]]),
  c("MOOS_storm5a_08_19_turb_FI",MOOS_storm5a_08_19_turb_FI[[2]]),
  c("MOOS_storm5b_08_21_turb_FI",MOOS_storm5b_08_21_turb_FI[[2]]),
  c("MOOS_storm6_08_25_turb_FI",MOOS_storm6_08_25_turb_FI[[2]]),
  c("MOOS_storm7_08_27_turb_FI",MOOS_storm7_08_27_turb_FI[[2]]),
  
  c("POKE_storm1_05_16_NO3_FI",NA,NA,NA),
  c("POKE_storm2_06_01_NO3_FI",POKE_storm2_06_01_NO3_FI[[2]]),
  c("POKE_storm3_06_19_NO3_FI",-0.8407,-0.8538, -0.827),
  c("POKE_storm4_07_23_NO3_FI",NA,NA,NA),
  c("POKE_storm5_07_27_NO3_FI",NA,NA,NA),
  c("POKE_storm6_08_08_NO3_FI",POKE_storm6_08_08_NO3_FI[[2]]),
  c("POKE_storm7a_08_14_NO3_FI",NA,NA,NA),
  c("POKE_storm7b_08_19_NO3_FI",-0.3425, -0.3487,-0.3359),
  c("POKE_storm7c_08_23_NO3_FI",0.5333,-0.5495,-0.5156),
  c("POKE_storm7d_08_27_NO3_FI",NA,NA,NA),
  
  c("POKE_storm1_05_16_fDOM_FI",0.4472,0.4455,0.4488),
  c("POKE_storm2_06_01_fDOM_FI",0.1953,0.1950,0.1956),
  c("POKE_storm3_06_19_fDOM_FI",NA,NA,NA),
  c("POKE_storm4_07_23_fDOM_FI",NA,NA,NA),
  c("POKE_storm5_07_27_fDOM_FI",NA,NA,NA),
  c("POKE_storm6_08_08_fDOM_FI",0.5954,0.5945,0.5963),
  c("POKE_storm7a_08_14_fDOM_FI",NA,NA,NA),
  c("POKE_storm7b_08_19_fDOM_FI",NA,NA,NA),
  c("POKE_storm7c_08_23_fDOM_FI",NA,NA,NA),
  c("POKE_storm7d_08_27_fDOM_FI",NA,NA,NA),
  
  c("POKE_storm1_05_16_SPC_FI",NA,NA,NA),
  c("POKE_storm2_06_01_SPC_FI",NA,NA,NA),
  c("POKE_storm3_06_19_SPC_FI",NA,NA,NA),
  c("POKE_storm4_07_23_SPC_FI",NA,NA,NA),
  c("POKE_storm5_07_27_SPC_FI",NA,NA,NA),
  c("POKE_storm6_08_08_SPC_FI",NA,NA,NA),
  c("POKE_storm7a_08_14_SPC_FI",NA,NA,NA),
  c("POKE_storm7b_08_19_SPC_FI",NA,NA,NA),
  c("POKE_storm7c_08_23_SPC_FI",NA,NA,NA),
  c("POKE_storm7d_08_27_SPC_FI",NA,NA,NA),
  
  c("POKE_storm1_05_16_turb_FI",NA,NA,NA),
  c("POKE_storm2_06_01_turb_FI",NA,NA,NA),
  c("POKE_storm3_06_19_turb_FI",NA,NA,NA),
  c("POKE_storm4_07_23_turb_FI",NA,NA,NA),
  c("POKE_storm5_07_27_turb_FI",NA,NA,NA),
  c("POKE_storm6_08_08_turb_FI",NA,NA,NA),
  c("POKE_storm7a_08_14_turb_FI",NA,NA,NA),
  c("POKE_storm7b_08_19_turb_FI",NA,NA,NA),
  c("POKE_storm7c_08_23_turb_FI",NA,NA,NA),
  c("POKE_storm7d_08_27_turb_FI",NA,NA,NA),
  
  c("STRT_storm1a_08_15_NO3_FI",STRT_storm1a_08_15_NO3_FI[[2]]),
  c("STRT_storm1b_08_17_NO3_FI",STRT_storm1b_08_17_NO3_FI[[2]]),
  c("STRT_storm2a_08_19_NO3_FI",NA,NA,NA),
  c("STRT_storm2b_08_20_NO3_FI",STRT_storm2b_08_20_NO3_FI[[2]]),
  c("STRT_storm3_08_25_NO3_FI",STRT_storm3_08_25_NO3_FI[[2]]),
  
  c("STRT_storm1a_08_15_fDOM_FI",STRT_storm1a_08_15_fDOM_FI[[2]]),
  c("STRT_storm1b_08_17_fDOM_FI",STRT_storm1b_08_17_fDOM_FI[[2]]),
  c("STRT_storm2a_08_19_fDOM_FI",NA,NA,NA),
  c("STRT_storm2b_08_20_fDOM_FI",STRT_storm2b_08_20_fDOM_FI[[2]]),
  c("STRT_storm3_08_25_fDOM_FI",STRT_storm3_08_25_fDOM_FI[[2]]),
  
  c("STRT_storm1a_08_15_SPC_FI",STRT_storm1a_08_15_SPC_FI[[2]]),
  c("STRT_storm1b_08_17_SPC_FI",STRT_storm1b_08_17_SPC_FI[[2]]),
  c("STRT_storm2a_08_19_SPC_FI",NA,NA,NA),
  c("STRT_storm2b_08_20_SPC_FI",STRT_storm2b_08_20_SPC_FI[[2]]),
  c("STRT_storm3_08_25_SPC_FI",STRT_storm3_08_25_SPC_FI[[2]]),
  
  c("STRT_storm1a_08_15_turb_FI",STRT_storm1a_08_15_turb_FI[[2]]),
  c("STRT_storm1b_08_17_turb_FI",STRT_storm1b_08_17_turb_FI[[2]]),
  c("STRT_storm2a_08_19_turb_FI",NA,NA,NA),
  c("STRT_storm2b_08_20_turb_FI",STRT_storm2b_08_20_turb_FI[[2]]),
  c("STRT_storm3_08_25_turb_FI",STRT_storm3_08_25_turb_FI[[2]]),
  
  c("VAUL_storm1a_07_23_NO3_FI",VAUL_storm1a_07_23_NO3_FI[[2]]),
  c("VAUL_storm1b_07_27_NO3_FI",VAUL_storm1b_07_27_NO3_FI[[2]]),
  c("VAUL_storm2_08_05_NO3_FI",VAUL_storm2_08_05_NO3_FI[[2]]),
  c("VAUL_storm3_08_08_NO3_FI",VAUL_storm3_08_08_NO3_FI[[2]]),
  c("VAUL_storm4a_08_15_NO3_FI",VAUL_storm4a_08_15_NO3_FI[[2]]),
  c("VAUL_storm4b_08_20_NO3_FI",NA,NA,NA),
  c("VAUL_storm5a_08_23_NO3_FI",NA,NA,NA),
  c("VAUL_storm5b_08_26_NO3_FI",NA,NA,NA),
  
  c("VAUL_storm1a_07_23_fDOM_FI",VAUL_storm1a_07_23_fDOM_FI[[2]]),
  c("VAUL_storm1b_07_27_fDOM_FI",NA,NA,NA),
  c("VAUL_storm2_08_05_fDOM_FI",NA,NA,NA),
  c("VAUL_storm3_08_08_fDOM_FI",VAUL_storm3_08_08_fDOM_FI[[2]]),
  c("VAUL_storm4a_08_15_fDOM_FI",VAUL_storm4a_08_15_fDOM_FI[[2]]),
  c("VAUL_storm4b_08_20_fDOM_FI",VAUL_storm4b_08_20_fDOM_FI[[2]]),
  c("VAUL_storm5a_08_23_fDOM_FI",NA,NA,NA),
  c("VAUL_storm5b_08_26_fDOM_FI",VAUL_storm5b_08_26_fDOM_FI[[2]]),
  
  c("VAUL_storm1a_07_23_SPC_FI",VAUL_storm1a_07_23_SPC_FI[[2]]),
  c("VAUL_storm1b_07_27_SPC_FI",NA,NA,NA),
  c("VAUL_storm2_08_05_SPC_FI",NA,NA,NA),
  c("VAUL_storm3_08_08_SPC_FI",VAUL_storm3_08_08_SPC_FI[[2]]),
  c("VAUL_storm4a_08_15_SPC_FI",VAUL_storm4a_08_15_SPC_FI[[2]]),
  c("VAUL_storm4b_08_20_SPC_FI",VAUL_storm4b_08_20_SPC_FI[[2]]),
  c("VAUL_storm5a_08_23_SPC_FI",NA,NA,NA),
  c("VAUL_storm5b_08_26_SPC_FI",VAUL_storm5b_08_26_SPC_FI[[2]]),
  
  c("VAUL_storm1a_07_23_turb_FI",VAUL_storm1a_07_23_turb_FI[[2]]),
  c("VAUL_storm1b_07_27_turb_FI",NA,NA,NA),
  c("VAUL_storm2_08_05_turb_FI",NA,NA,NA),
  c("VAUL_storm3_08_08_turb_FI",VAUL_storm3_08_08_turb_FI[[2]]),
  c("VAUL_storm4a_08_15_turb_FI",VAUL_storm4a_08_15_turb_FI[[2]]),
  c("VAUL_storm4b_08_20_turb_FI",VAUL_storm4b_08_20_turb_FI[[2]]),
  c("VAUL_storm5a_08_23_turb_FI",NA,NA,NA),
  c("VAUL_storm5b_08_26_turb_FI",VAUL_storm5b_08_26_turb_FI[[2]]),
  
  c("CARI_storm1_05_16_NO3_FI",NA,NA,NA),
  c("CARI_storm2_06_01_NO3_FI",NA,NA,NA),
  c("CARI_storm3_06_19_NO3_FI",NA,NA,NA),
  c("CARI_storm4_07_24_NO3_FI",NA,NA,NA),
  c("CARI_storm5_07_27_NO3_FI",NA,NA,NA),
  c("CARI_storm6_08_08_NO3_FI",NA,NA,NA),
  c("CARI_storm7_08_15_NO3_FI",NA,NA,NA),
  c("CARI_storm8_08_20_NO3_FI",NA,NA,NA),
  c("CARI_storm9_08_23_NO3_FI",NA,NA,NA),
  c("CARI_storm10_08_27_NO3_FI",NA,NA,NA),
  
  c("CARI_storm1_05_16_fDOM_FI",0.161223889379229,0,0),
  c("CARI_storm2_06_01_fDOM_FI",0.221786980041037,0,0),
  c("CARI_storm3_06_19_fDOM_FI",0.628463476070529,0,0),
  c("CARI_storm4_07_24_fDOM_FI",0.34253149370126,0,0),
  c("CARI_storm5_07_27_fDOM_FI",0.779408107435961,0,0),
  c("CARI_storm6_08_08_fDOM_FI",NA,NA,NA),
  c("CARI_storm7_08_15_fDOM_FI",NA,NA,NA),
  c("CARI_storm8_08_20_fDOM_FI",0.145924728700069,0,0),
  c("CARI_storm9_08_23_fDOM_FI",NA,NA,NA),
  c("CARI_storm10_08_27_fDOM_FI",0.149013815275002,0,0),
  
  c("CARI_storm1_05_16_SPC_FI",0.0248635536688902,0,0),
  c("CARI_storm2_06_01_SPC_FI",NA,NA,NA),
  c("CARI_storm3_06_19_SPC_FI",NA,NA,NA),
  c("CARI_storm4_07_24_SPC_FI",NA,NA,NA),
  c("CARI_storm5_07_27_SPC_FI",NA,NA,NA),
  c("CARI_storm6_08_08_SPC_FI",NA,NA,NA),
  c("CARI_storm7_08_15_SPC_FI",NA,NA,NA),
  c("CARI_storm8_08_20_SPC_FI",NA,NA,NA),
  c("CARI_storm9_08_23_SPC_FI",NA,NA,NA),
  c("CARI_storm10_08_27_SPC_FI",NA,NA,NA),
  
  c("CARI_storm1_05_16_turb_FI",0.0229022566043041,0,0),
  c("CARI_storm2_06_01_turb_FI",NA,NA,NA),
  c("CARI_storm3_06_19_turb_FI",0.607263513513514,0,0),
  c("CARI_storm4_07_24_turb_FI",0.784810126582278,0,0),
  c("CARI_storm5_07_27_turb_FI",0.747685185185185,0,0),
  c("CARI_storm6_08_08_turb_FI",NA,NA,NA),
  c("CARI_storm7_08_15_turb_FI",NA,NA,NA),
  c("CARI_storm8_08_20_turb_FI",0.0736842105263158,0,0),
  c("CARI_storm9_08_23_turb_FI",0.0995575221238938,0,0),
  c("CARI_storm10_08_27_turb_FI",0.135593220338983,0,0))

FI_results = as.data.frame(FI_results)

names(FI_results) = c("ID", "Flushing_index", "percCI_2.5", "percCI_97.5")

FI_results$ID = unlist(FI_results$ID)
FI_results$Flushing_index = round(as.numeric(as.character(FI_results$Flushing_index)), 4)
FI_results$`percCI_2.5` = round(as.numeric(as.character(FI_results$`percCI_2.5`)), 4)
FI_results$`percCI_97.5` = round(as.numeric(as.character(FI_results$`percCI_97.5`)), 4)

write.csv(FI_results, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/all.FI.diff.results_2021.csv")

# calculate 95% bootstrap around median of Hyst. Indicies for each site and storm #

median_cl_boot <- function(x, conf = 0.95) {
  lconf <- (1 - conf)/2
  uconf <- 1 - lconf
  require(boot)
  bmedian <- function(x, ind) median(x[ind])
  bt <- boot(x, bmedian, 10000)
  bb <- boot.ci(bt, conf = 0.95, type = "perc")
  data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t, 
                                                                          uconf))
}

# FRCH #
FRCH.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/FRCH/FRCH.HI.median.boot.csv")

storm.list = unique(FRCH.HI.df$storm.ID)
FRCH.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(FRCH.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
FRCH.HI.boot$storm.ID = storm.list

# MOOS #
MOOS.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/MOOS/MOOS.HI.median.boot.csv")

storm.list = unique(MOOS.HI.df$storm.ID)
MOOS.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(MOOS.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
MOOS.HI.boot$storm.ID = storm.list

# POKE #
POKE.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/POKE/POKE.HI.df.csv")

storm.list = unique(POKE.HI.df$storm.ID)
POKE.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(POKE.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
POKE.HI.boot$storm.ID = storm.list

# STRT #
STRT.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/STRT/STRT.HI.df.csv")

storm.list = unique(STRT.HI.df$storm.ID)
STRT.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(STRT.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
STRT.HI.boot$storm.ID = storm.list

# VAUL #
VAUL.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/VAUL/VAUL.HI.median.boot.csv")

storm.list = unique(VAUL.HI.df$storm.ID)
VAUL.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(VAUL.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
VAUL.HI.boot$storm.ID = storm.list

# CARI #
CARI.HI.df <- read.csv("~/Documents/Storms/Output_from_analysis/HI_plots/2021/CARI/CARI.HI.df.csv")

storm.list = unique(CARI.HI.df$storm.ID)
CARI.HI.boot <- do.call(rbind.data.frame,
                        lapply(storm.list, function(i){
                          dat = subset(CARI.HI.df, storm.ID == i)
                          median_cl_boot(dat$HI)
                        }))
CARI.HI.boot$storm.ID = storm.list


# join data #

FRCH.HI.boot$site.ID = "FRCH"
MOOS.HI.boot$site.ID = "MOOS"
POKE.HI.boot$site.ID = "POKE"
STRT.HI.boot$site.ID = "STRT"
VAUL.HI.boot$site.ID = "VAUL"
CARI.HI.boot$site.ID = "CARI"

HI = rbind(FRCH.HI.boot, MOOS.HI.boot, POKE.HI.boot, STRT.HI.boot, VAUL.HI.boot, CARI.HI.boot)

all.FI.diff.results = read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/all.FI.diff.results_2021.csv", header = T, row.names = 1)

FI = subset(all.FI.diff.results, select=c("Flushing_index", "percCI_2.5", "percCI_97.5", "ID"))
FI$ID = as.character(FI$ID)
FI = separate(FI, ID, into=c("site.ID", "storm.ID", "month", "day", "response_var", NA), sep = "_")
names(FI) = c("Flush_index", "FI_ymin", "FI_ymax","site.ID", "storm.ID", "month", "day", "response_var")

HI$site.ID=NULL
HI = separate(HI, storm.ID, into=c("site.ID", "storm.ID", "month", "day", "response_var"), sep = "_")
names(HI) = c("Hyst_index", "HI_ymin", "HI_ymax","site.ID", "storm.ID", "month", "day", "response_var")

HI_FI = left_join(HI, FI, by=c("site.ID", "storm.ID", "response_var"))
write.csv(HI_FI, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2021.csv")


# plot #

# NO3 #
HI_FI_NO3 = subset(HI_FI, response_var == "NO3")
HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL','CARI'))

HI_FI_NO3.p = 
  ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL','CARI'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

# SPC #
HI_FI_SPC = subset(HI_FI, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL','CARI'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p

# turb #
HI_FI_turb = subset(HI_FI, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL','CARI'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


grid.arrange(HI_FI_NO3.p,HI_FI_fDOM.p,HI_FI_SPC.p,HI_FI_turb.p)




##############################################################################################################
#######################################  Beta Test  ###########################################################
##############################################################################################################
# Step 1) Load in the storm files
# Step 2) normalize discharge and concentration for each solute
# Step 3) calculate Beta for each solute for each site
# Step 4) plot against HI 
########################################## 2018 ##########################################################
storm_file_list_beta <- list.files(path="~/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI/", 
                                   recursive=F, 
                                   pattern=".csv", 
                                   full.names=TRUE)

storm_list_beta<-do.call("list", lapply(storm_file_list_beta, 
                                        read.csv, 
                                        stringsAsFactors=FALSE, 
                                        header=T, row.names=1))

storm_file_list_beta = sub("~/Documents/Storms/Storm_Events/2018/FRCH_MOOS_CARI//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta

for(i in 1:length(storm_list_beta)){
  storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(storm_list_beta[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} # changing character format into datetime 


#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list_beta = storm_list_beta[c(1:65)] #65
FRCH_storm_list_beta = storm_list_beta[c(66:140)] #75
MOOS_storm_list_beta = storm_list_beta[c(141:220)] #80

CARI_NO3_storm_list_beta = CARI_storm_list_beta[c(grep("NO3", names(CARI_storm_list_beta)))]
CARI_fDOM_storm_list_beta = CARI_storm_list_beta[c(grep("fDOM", names(CARI_storm_list_beta)))]
CARI_SpCond_storm_list_beta = CARI_storm_list_beta[c(grep("SPC", names(CARI_storm_list_beta)))]
CARI_turb_storm_list_beta = CARI_storm_list_beta[c(grep("Turb", names(CARI_storm_list_beta)))]
CARI_Q_storm_list_beta = CARI_storm_list_beta[c(grep("Q", names(CARI_storm_list_beta)))]

FRCH_NO3_storm_list_beta = FRCH_storm_list_beta[c(grep("NO3", names(FRCH_storm_list_beta)))]
FRCH_fDOM_storm_list_beta = FRCH_storm_list_beta[c(grep("fDOM", names(FRCH_storm_list_beta)))]
FRCH_SpCond_storm_list_beta = FRCH_storm_list_beta[c(grep("SPC", names(FRCH_storm_list_beta)))]
FRCH_turb_storm_list_beta = FRCH_storm_list_beta[c(grep("Turb", names(FRCH_storm_list_beta)))]
FRCH_Q_storm_list_beta = FRCH_storm_list_beta[c(grep("Q", names(FRCH_storm_list_beta)))]

MOOS_NO3_storm_list_beta = MOOS_storm_list_beta[c(grep("NO3", names(MOOS_storm_list_beta)))]
MOOS_fDOM_storm_list_beta = MOOS_storm_list_beta[c(grep("fDOM", names(MOOS_storm_list_beta)))]
MOOS_SpCond_storm_list_beta = MOOS_storm_list_beta[c(grep("SPC", names(MOOS_storm_list_beta)))]
MOOS_turb_storm_list_beta = MOOS_storm_list_beta[c(grep("Turb", names(MOOS_storm_list_beta)))]
MOOS_Q_storm_list_beta = MOOS_storm_list_beta[c(grep("Q", names(MOOS_storm_list_beta)))]

# normalize Q data 
# FRCH
for(i in 1:length(FRCH_Q_storm_list_beta)){
  FRCH_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_Q_storm_list_beta[[i]][["datavalue"]]-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# MOOS
for(i in 1:length(MOOS_Q_storm_list_beta)){
  MOOS_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_Q_storm_list_beta[[i]][["datavalue"]]-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# CARI
for(i in 1:length(CARI_Q_storm_list_beta)){
  CARI_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_Q_storm_list_beta[[i]][["datavalue"]]-min(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# normalize solute data 
#
#NO3
for(i in 1:length(FRCH_NO3_storm_list_beta)){
  FRCH_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_NO3_storm_list_beta[[i]][["datavalue"]]-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_NO3_storm_list_beta)){
  MOOS_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_NO3_storm_list_beta[[i]][["datavalue"]]-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_NO3_storm_list_beta)){
  CARI_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_NO3_storm_list_beta[[i]][["datavalue"]]-min(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list_beta)){
  FRCH_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_fDOM_storm_list_beta[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_fDOM_storm_list_beta)){
  MOOS_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_fDOM_storm_list_beta[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_fDOM_storm_list_beta)){
  CARI_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_fDOM_storm_list_beta[[i]][["datavalue"]]-min(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list_beta)){
  FRCH_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_SpCond_storm_list_beta[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_SpCond_storm_list_beta)){
  MOOS_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_SpCond_storm_list_beta[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_SpCond_storm_list_beta)){
  CARI_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_SpCond_storm_list_beta[[i]][["datavalue"]]-min(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#Turb
for(i in 1:length(FRCH_turb_storm_list_beta)){
  FRCH_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_turb_storm_list_beta[[i]][["datavalue"]]-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_turb_storm_list_beta)){
  MOOS_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_turb_storm_list_beta[[i]][["datavalue"]]-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_turb_storm_list_beta)){
  CARI_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_turb_storm_list_beta[[i]][["datavalue"]]-min(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
###### NO3  #######
FRCH_NO3_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_NO3_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_NO3_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_NO3_storm_list_beta, inner_join, by = "valuedatetime")
CARI_NO3_storm <- map2_df(CARI_Q_storm_list_beta, CARI_NO3_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_NO3_storm$storm.ID = c(rep("storm1", 142),
                            rep("storm10", 704),
                            rep("storm11a", 91),
                            rep("storm11b", 264),
                            rep("storm2a", 230),
                            rep("storm2b", 190),
                            rep("storm3", 212),
                            rep("storm4a", 72),
                            rep("storm4b", 383),
                            rep("storm5", 331),
                            rep("storm6", 303),
                            rep("storm7", 119),
                            rep("storm8a", 79),
                            rep("storm8b", 95),
                            rep("storm9", 117))
                           

names(FRCH_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
FRCH_NO3_storm$site.ID <- "FRCH"

cols <- c("NO3.norm","Q.norm")
FRCH_NO3_storm[cols] <- log(FRCH_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_NO3_storm <- FRCH_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_NO3_storm_ascending <- filter(FRCH_NO3_storm, limb == "ascending")

FRCH_NO3_storm_ascending <- FRCH_NO3_storm_ascending[is.finite(FRCH_NO3_storm_ascending$Q.norm) & is.finite(FRCH_NO3_storm_ascending$NO3.norm), ]

beta.all.no3 <- FRCH_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(NO3.norm, Q.norm)) # this works just like the beta one that is for an individual site

frch.2018.ci <- FRCH_NO3_storm_ascending %>%
  group_by(storm.ID) %>%
  group_modify(~ parameters::model_parameters(stats::lm(NO3.norm ~ Q.norm, data = .x)))

# MOOS # 
MOOS_NO3_storm$storm.ID = c(rep("storm1", 58),
                            rep("storm10", 432),
                            rep("storm11a", 74),
                            rep("storm11b", 36),
                            rep("storm12", 310),
                            rep("storm2a", 74),
                            rep("storm2b", 162),
                            rep("storm2c", 192),
                            rep("storm3", 240),
                            rep("storm4", 244),
                            rep("storm5", 276),
                            rep("storm6", 332),
                            rep("storm7", 124),
                            rep("storm8a", 80),
                            rep("storm8b", 96),
                            rep("storm9", 108))

names(MOOS_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
MOOS_NO3_storm$site.ID <- "MOOS"

MOOS_NO3_storm[cols] <- log(MOOS_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_NO3_storm <- MOOS_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_NO3_storm_ascending <- filter(MOOS_NO3_storm, limb == "ascending")

MOOS_NO3_storm_ascending <- MOOS_NO3_storm_ascending[is.finite(MOOS_NO3_storm_ascending$Q.norm) & is.finite(MOOS_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.moos.with.all <- MOOS_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

moos.2018.ci <- MOOS_NO3_storm_ascending %>%
  group_by(storm.ID) %>%
  group_modify(~ parameters::model_parameters(stats::lm(NO3.norm ~ Q.norm, data = .x)))

# CARI # 
CARI_NO3_storm$storm.ID = c(rep("storm10", 248),
                            rep("storm11", 191),
                            rep("storm12a", 418),
                            rep("storm12b", 517),
                            rep("storm2", 181),
                            rep("storm3", 24),
                            rep("storm5a", 77),
                            rep("storm5b", 121),
                            rep("storm5c", 575),
                            rep("storm6", 644),
                            rep("storm7", 167),
                            rep("storm8", 191),
                            rep("storm9", 359))

names(CARI_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
CARI_NO3_storm$site.ID <- "CARI"

CARI_NO3_storm[cols] <- log(CARI_NO3_storm[cols]) # making concentrations and Q log transformed

CARI_NO3_storm <- CARI_NO3_storm[is.finite(CARI_NO3_storm$Q.norm),] # removing +- inf
CARI_NO3_storm <- CARI_NO3_storm[is.finite(CARI_NO3_storm$NO3.norm),]# removing +- inf

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}

CARI_NO3_storm <- CARI_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_NO3_storm_ascending <- filter(CARI_NO3_storm, limb == "ascending")

CARI_NO3_storm_ascending <- CARI_NO3_storm_ascending[is.finite(CARI_NO3_storm_ascending$Q.norm) & is.finite(CARI_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.cari <- CARI_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

All_NO3_storm <- rbind(FRCH_NO3_storm_ascending, MOOS_NO3_storm_ascending, 
                       CARI_NO3_storm_ascending)

beta.all.no3 <- All_NO3_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site


beta.all.no3$response_var <- "NO3"

cari.2018.ci <- CARI_NO3_storm_ascending %>%
  group_by(storm.ID) %>%
  group_modify(~ parameters::model_parameters(stats::lm(NO3.norm ~ Q.norm, data = .x)))

all.2018.ci.no3 <- All_NO3_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(NO3.norm ~ Q.norm, data = .x)))

all.2018.ci.no3$response_var <- "NO3"


##### fDOM #####
FRCH_fDOM_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_fDOM_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
CARI_fDOM_storm <- map2_df(CARI_Q_storm_list_beta, CARI_fDOM_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_fDOM_storm$storm.ID = c(rep("storm1", 142),
                             rep("storm10", 704),
                             rep("storm11a", 91),
                             rep("storm11b", 264),
                             rep("storm2a", 230),
                             rep("storm2b", 190),
                             rep("storm3", 212),
                             rep("storm4a", 72),
                             rep("storm4b", 383),
                             rep("storm5", 331),
                             rep("storm6", 303),
                             rep("storm7", 119),
                             rep("storm8a", 79),
                             rep("storm8b", 95),
                             rep("storm9", 117))

names(FRCH_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
FRCH_fDOM_storm$site.ID <- "FRCH"

cols <- c("fDOM.norm","Q.norm")
FRCH_fDOM_storm[cols] <- log(FRCH_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_fDOM_storm <- FRCH_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_fDOM_storm_ascending <- filter(FRCH_fDOM_storm, limb == "ascending")

FRCH_fDOM_storm_ascending <- FRCH_fDOM_storm_ascending[is.finite(FRCH_fDOM_storm_ascending$Q.norm) & is.finite(FRCH_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM <- FRCH_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_fDOM_storm$storm.ID = c(rep("storm1", 58),
                             rep("storm10", 432),
                             rep("storm11a", 74),
                             rep("storm11b", 36),
                             rep("storm12", 310),
                             rep("storm2a", 74),
                             rep("storm2b", 162),
                             rep("storm2c", 192),
                             rep("storm3", 240),
                             rep("storm4", 244),
                             rep("storm5", 276),
                             rep("storm6", 332),
                             rep("storm7", 124),
                             rep("storm8a", 80),
                             rep("storm8b", 96),
                             rep("storm9", 108))

names(MOOS_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
MOOS_fDOM_storm$site.ID <- "MOOS"

MOOS_fDOM_storm[cols] <- log(MOOS_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_fDOM_storm <- MOOS_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_fDOM_storm_ascending <- filter(MOOS_fDOM_storm, limb == "ascending")

MOOS_fDOM_storm_ascending <- MOOS_fDOM_storm_ascending[is.finite(MOOS_fDOM_storm_ascending$Q.norm) & is.finite(MOOS_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.moos.with.all <- MOOS_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_fDOM_storm$storm.ID = c(rep("storm10", 248),
                             rep("storm11", 191),
                             rep("storm12a", 418),
                             rep("storm12b", 517),
                             rep("storm2", 181),
                             rep("storm3", 24),
                             rep("storm5a", 77),
                             rep("storm5b", 121),
                             rep("storm5c", 575),
                             rep("storm6", 644),
                             rep("storm7", 167),
                             rep("storm8", 191),
                             rep("storm9", 359))

names(CARI_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
CARI_fDOM_storm$site.ID <- "CARI"

CARI_fDOM_storm[cols] <- log(CARI_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_fDOM_storm <- CARI_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_fDOM_storm_ascending <- filter(CARI_fDOM_storm, limb == "ascending")

CARI_fDOM_storm_ascending <- CARI_fDOM_storm_ascending[is.finite(CARI_fDOM_storm_ascending$Q.norm) & is.finite(CARI_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fdom.cari <- CARI_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

All_fDOM_storm <- rbind(FRCH_fDOM_storm_ascending, MOOS_fDOM_storm_ascending, 
                       CARI_fDOM_storm_ascending)

beta.all.fDOM <- All_fDOM_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site


beta.all.fDOM$response_var <- "fDOM"

all.2018.ci.fDOM <- All_fDOM_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(fDOM.norm ~ Q.norm, data = .x)))

all.2018.ci.fDOM$response_var <- "fDOM"


##### SPC #####
FRCH_SPC_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_SPC_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
CARI_SPC_storm <- map2_df(CARI_Q_storm_list_beta, CARI_SpCond_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_SPC_storm$storm.ID = c(rep("storm1", 142),
                             rep("storm10", 704),
                             rep("storm11a", 91),
                             rep("storm11b", 264),
                             rep("storm2a", 230),
                             rep("storm2b", 190),
                             rep("storm3", 212),
                             rep("storm4a", 72),
                             rep("storm4b", 383),
                             rep("storm5", 331),
                             rep("storm6", 303),
                             rep("storm7", 119),
                             rep("storm8a", 79),
                             rep("storm8b", 95),
                             rep("storm9", 117))

names(FRCH_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
FRCH_SPC_storm$site.ID <- "FRCH"

cols <- c("SPC.norm","Q.norm")
FRCH_SPC_storm[cols] <- log(FRCH_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_SPC_storm <- FRCH_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_SPC_storm_ascending <- filter(FRCH_SPC_storm, limb == "ascending")

FRCH_SPC_storm_ascending <- FRCH_SPC_storm_ascending[is.finite(FRCH_SPC_storm_ascending$Q.norm) & is.finite(FRCH_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC <- FRCH_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_SPC_storm$storm.ID = c(rep("storm1", 58),
                            rep("storm10", 432),
                            rep("storm11a", 74),
                            rep("storm11b", 36),
                            rep("storm12", 310),
                            rep("storm2a", 74),
                            rep("storm2b", 162),
                            rep("storm2c", 192),
                            rep("storm3", 240),
                            rep("storm4", 244),
                            rep("storm5", 276),
                            rep("storm6", 332),
                            rep("storm7", 124),
                            rep("storm8a", 80),
                            rep("storm8b", 96),
                            rep("storm9", 108))
names(MOOS_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
MOOS_SPC_storm$site.ID <- "MOOS"

MOOS_SPC_storm[cols] <- log(MOOS_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_SPC_storm <- MOOS_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_SPC_storm_ascending <- filter(MOOS_SPC_storm, limb == "ascending")

MOOS_SPC_storm_ascending <- MOOS_SPC_storm_ascending[is.finite(MOOS_SPC_storm_ascending$Q.norm) & is.finite(MOOS_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.moos.with.all <- MOOS_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_SPC_storm$storm.ID = c(rep("storm10", 248),
                            rep("storm11", 191),
                            rep("storm12a", 418),
                            rep("storm12b", 517),
                            rep("storm2", 181),
                            rep("storm3", 24),
                            rep("storm5a", 77),
                            rep("storm5b", 121),
                            rep("storm5c", 575),
                            rep("storm6", 644),
                            rep("storm7", 167),
                            rep("storm8", 191),
                            rep("storm9", 359))

names(CARI_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
CARI_SPC_storm$site.ID <- "CARI"

CARI_SPC_storm[cols] <- log(CARI_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_SPC_storm <- CARI_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_SPC_storm_ascending <- filter(CARI_SPC_storm, limb == "ascending")

CARI_SPC_storm_ascending <- CARI_SPC_storm_ascending[is.finite(CARI_SPC_storm_ascending$Q.norm) & is.finite(CARI_SPC_storm_ascending$SPC.norm), ]

beta.all.spc.cari <- CARI_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

All_SPC_storm <- rbind(FRCH_SPC_storm_ascending, MOOS_SPC_storm_ascending, 
                        CARI_SPC_storm_ascending)

beta.all.SPC <- All_SPC_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site


beta.all.SPC$response_var <- "SPC"

all.2018.ci.SPC <- All_SPC_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(SPC.norm ~ Q.norm, data = .x)))

all.2018.ci.SPC$response_var <- "SPC"


##### Turb #####
FRCH_turb_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_turb_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_turb_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_turb_storm_list_beta, inner_join, by = "valuedatetime")
CARI_turb_storm <- map2_df(CARI_Q_storm_list_beta, CARI_turb_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_turb_storm$storm.ID = c(rep("storm1", 142),
                             rep("storm10", 704),
                             rep("storm11a", 91),
                             rep("storm11b", 264),
                             rep("storm2a", 230),
                             rep("storm2b", 190),
                             rep("storm3", 212),
                             rep("storm4a", 72),
                             rep("storm4b", 383),
                             rep("storm5", 331),
                             rep("storm6", 303),
                             rep("storm7", 119),
                             rep("storm8a", 79),
                             rep("storm8b", 95),
                             rep("storm9", 117))

names(FRCH_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
FRCH_turb_storm$site.ID <- "FRCH"

cols <- c("turb.norm","Q.norm")
FRCH_turb_storm[cols] <- log(FRCH_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_turb_storm <- FRCH_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_turb_storm_ascending <- filter(FRCH_turb_storm, limb == "ascending")

FRCH_turb_storm_ascending <- FRCH_turb_storm_ascending[is.finite(FRCH_turb_storm_ascending$Q.norm) & is.finite(FRCH_turb_storm_ascending$turb.norm), ]

beta.all.turb <- FRCH_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_turb_storm$storm.ID = c(rep("storm1", 58),
                             rep("storm10", 432),
                             rep("storm11a", 74),
                             rep("storm11b", 36),
                             rep("storm12", 310),
                             rep("storm2a", 74),
                             rep("storm2b", 162),
                             rep("storm2c", 192),
                             rep("storm3", 240),
                             rep("storm4", 244),
                             rep("storm5", 276),
                             rep("storm6", 332),
                             rep("storm7", 124),
                             rep("storm8a", 80),
                             rep("storm8b", 96),
                             rep("storm9", 108))

names(MOOS_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
MOOS_turb_storm$site.ID <- "MOOS"

MOOS_turb_storm[cols] <- log(MOOS_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_turb_storm <- MOOS_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_turb_storm_ascending <- filter(MOOS_turb_storm, limb == "ascending")

MOOS_turb_storm_ascending <- MOOS_turb_storm_ascending[is.finite(MOOS_turb_storm_ascending$Q.norm) & is.finite(MOOS_turb_storm_ascending$turb.norm), ]

beta.all.turb.moos.with.all <- MOOS_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_turb_storm$storm.ID = c(rep("storm10", 248),
                             rep("storm11", 191),
                             rep("storm12a", 418),
                             rep("storm12b", 517),
                             rep("storm2", 181),
                             rep("storm3", 24),
                             rep("storm5a", 77),
                             rep("storm5b", 121),
                             rep("storm5c", 575),
                             rep("storm6", 644),
                             rep("storm7", 167),
                             rep("storm8", 191),
                             rep("storm9", 359))

names(CARI_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
CARI_turb_storm$site.ID <- "CARI"

CARI_turb_storm[cols] <- log(CARI_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_turb_storm <- CARI_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_turb_storm_ascending <- filter(CARI_turb_storm, limb == "ascending")

CARI_turb_storm_ascending <- CARI_turb_storm_ascending[is.finite(CARI_turb_storm_ascending$Q.norm) & is.finite(CARI_turb_storm_ascending$turb.norm), ]

beta.all.turb.cari <- CARI_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

All_turb_storm <- rbind(FRCH_turb_storm_ascending, MOOS_turb_storm_ascending, 
                        CARI_turb_storm_ascending)

beta.all.turb <- All_turb_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site


beta.all.turb$response_var <- "turb"

all.2018.ci.turb <- All_turb_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(turb.norm ~ Q.norm, data = .x)))

all.2018.ci.turb$response_var <- "turb"


beta.all.2018 <- rbind(all.2018.ci.no3, all.2018.ci.fDOM,
                       all.2018.ci.SPC, all.2018.ci.turb)
write.csv(beta.all.2018, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/beta/beta.2018.csv")

beta.all.2018 <- beta.all.2018 %>% 
  filter(Parameter != "(Intercept)")
#### plot ####
HI_2018 <- read_csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2018.csv")
names(HI_2018)[names(HI_2018) == 'storm.num'] <- 'storm.ID'
names(HI_2018)[names(HI_2018) == 'response'] <- 'response_var'

HI_beta = left_join(HI_2018, beta.all.2018, by=c("site.ID", "storm.ID", "response_var"))

HI_FI <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results.2018.csv")

HI_FI_beta = left_join(HI_FI, beta.all.2018, by=c("site.ID", "storm.ID", "response_var"))

write.csv(HI_FI_beta, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI_beta.diff_results_2018.csv")

# NO3 #
#HI_FI_NO3 = subset(HI_FI_beta, response_var == "NO3")
#HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

#HI_FI_NO3.p = 
 # ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
#  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
#  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
#  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
##  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
#  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
#  ggtitle("a) NO3-")+ 
#  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
#HI_FI_NO3.p

# NO3 #
HI_beta_NO3 = subset(HI_beta, response_var == "NO3")
HI_beta_NO3$site.ID <- factor(HI_beta_NO3$site.ID, levels = c('FRCH','MOOS', 'CARI'))

HI_beta_NO3.p = 
  ggplot(HI_beta_NO3, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI_beta, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

HI_beta_fDOM = subset(HI_beta, response_var == "fDOM")
HI_beta_fDOM$site.ID <- factor(HI_beta_fDOM$site.ID, levels = c('FRCH','MOOS','CARI'))

HI_beta_fDOM.p = 
  ggplot(HI_beta_fDOM, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_fDOM.p

# SPC#
HI_FI_SPC = subset(HI_FI_beta, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p


HI_beta_SPC = subset(HI_beta, response_var == "SPC")
HI_beta_SPC$site.ID <- factor(HI_beta_SPC$site.ID, levels = c('FRCH','MOOS','CARI'))

HI_beta_SPC.p = 
  ggplot(HI_beta_SPC, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_SPC.p

# turb #
HI_FI_turb = subset(HI_FI_beta, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


HI_beta_turb = subset(HI_beta, response_var == "turb")
HI_beta_turb$site.ID <- factor(HI_beta_turb$site.ID, levels = c('FRCH','MOOS','CARI'))

HI_beta_turb.p = 
  ggplot(HI_beta_turb, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_turb.p

grid.arrange(HI_beta_NO3.p, HI_beta_fDOM.p, HI_beta_SPC.p, HI_beta_turb.p)

#### Regression between beta and FI #######
FI_beta_comp = 
  ggplot(HI_FI_NO3, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp

FI_beta_comp_fDOM = 
  ggplot(HI_FI_fDOM, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_fDOM

FI_beta_comp_SPC = 
  ggplot(HI_FI_SPC, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_SPC

FI_beta_comp_turb = 
  ggplot(HI_FI_turb, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_turb


grid.arrange(FI_beta_comp_NO3, FI_beta_comp_fDOM, FI_beta_comp_SPC, FI_beta_comp_turb)


















########################################## 2019 ##########################################################
storm_file_list_beta <- list.files(path="~/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI/", 
                              recursive=F, 
                              pattern=".csv", 
                              full.names=TRUE)

storm_list_beta<-do.call("list", lapply(storm_file_list_beta, 
                                   read.csv, 
                                   stringsAsFactors=FALSE, 
                                   header=T, row.names=1))

storm_file_list_beta = sub("~/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta

names(storm_list_beta$`/Users/jakecavaiani/Documents/Storms/Storm_Events/2019/FRCH_MOOS_VAUL_POKE_STRT_CARI//POKE_storm6b_08_13_Q`) <- c("valuedatetime", "datavalue")

for(i in 1:length(storm_list_beta)){
  storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(storm_list_beta[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
}
#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list_beta = storm_list_beta[c(1:55)] #60
FRCH_storm_list_beta = storm_list_beta[c(56:160)] #105
MOOS_storm_list_beta = storm_list_beta[c(161:225)] #60
POKE_storm_list_beta = storm_list_beta[c(226:290)]# 65
STRT_storm_list_beta = storm_list_beta[c(291:345)] #55
VAUL_storm_list_beta = storm_list_beta[c(346:405)] #65


CARI_NO3_storm_list_beta = CARI_storm_list_beta[c(grep("NO3", names(CARI_storm_list_beta)))]
CARI_fDOM_storm_list_beta = CARI_storm_list_beta[c(grep("fDOM", names(CARI_storm_list_beta)))]
CARI_SpCond_storm_list_beta = CARI_storm_list_beta[c(grep("SPC", names(CARI_storm_list_beta)))]
CARI_turb_storm_list_beta = CARI_storm_list_beta[c(grep("Turb", names(CARI_storm_list_beta)))]
CARI_Q_storm_list_beta = CARI_storm_list_beta[c(grep("Q", names(CARI_storm_list_beta)))]

FRCH_NO3_storm_list_beta = FRCH_storm_list_beta[c(grep("NO3", names(FRCH_storm_list_beta)))]
FRCH_fDOM_storm_list_beta = FRCH_storm_list_beta[c(grep("fDOM", names(FRCH_storm_list_beta)))]
FRCH_SpCond_storm_list_beta = FRCH_storm_list_beta[c(grep("SPC", names(FRCH_storm_list_beta)))]
FRCH_turb_storm_list_beta = FRCH_storm_list_beta[c(grep("Turb", names(FRCH_storm_list_beta)))]
FRCH_Q_storm_list_beta = FRCH_storm_list_beta[c(grep("Q", names(FRCH_storm_list_beta)))]

MOOS_NO3_storm_list_beta = MOOS_storm_list_beta[c(grep("NO3", names(MOOS_storm_list_beta)))]
MOOS_fDOM_storm_list_beta = MOOS_storm_list_beta[c(grep("fDOM", names(MOOS_storm_list_beta)))]
MOOS_SpCond_storm_list_beta = MOOS_storm_list_beta[c(grep("SPC", names(MOOS_storm_list_beta)))]
MOOS_turb_storm_list_beta = MOOS_storm_list_beta[c(grep("Turb", names(MOOS_storm_list_beta)))]
MOOS_Q_storm_list_beta = MOOS_storm_list_beta[c(grep("Q", names(MOOS_storm_list_beta)))]

POKE_NO3_storm_list_beta = POKE_storm_list_beta[c(grep("NO3", names(POKE_storm_list_beta)))]
POKE_fDOM_storm_list_beta = POKE_storm_list_beta[c(grep("fDOM", names(POKE_storm_list_beta)))]
POKE_SpCond_storm_list_beta = POKE_storm_list_beta[c(grep("SPC", names(POKE_storm_list_beta)))]
POKE_turb_storm_list_beta = POKE_storm_list_beta[c(grep("Turb", names(POKE_storm_list_beta)))]
POKE_Q_storm_list_beta = POKE_storm_list_beta[c(grep("Q", names(POKE_storm_list_beta)))]

STRT_NO3_storm_list_beta = STRT_storm_list_beta[c(grep("NO3", names(STRT_storm_list_beta)))]
STRT_fDOM_storm_list_beta = STRT_storm_list_beta[c(grep("fDOM", names(STRT_storm_list_beta)))]
STRT_SpCond_storm_list_beta = STRT_storm_list_beta[c(grep("SPC", names(STRT_storm_list_beta)))]
STRT_turb_storm_list_beta = STRT_storm_list_beta[c(grep("Turb", names(STRT_storm_list_beta)))]
STRT_Q_storm_list_beta = STRT_storm_list_beta[c(grep("Q", names(STRT_storm_list_beta)))]

VAUL_NO3_storm_list_beta = VAUL_storm_list_beta[c(grep("NO3", names(VAUL_storm_list_beta)))]
VAUL_fDOM_storm_list_beta = VAUL_storm_list_beta[c(grep("fDOM", names(VAUL_storm_list_beta)))]
VAUL_SpCond_storm_list_beta = VAUL_storm_list_beta[c(grep("SPC", names(VAUL_storm_list_beta)))]
VAUL_turb_storm_list_beta = VAUL_storm_list_beta[c(grep("turb", names(VAUL_storm_list_beta)))]
VAUL_Q_storm_list_beta = VAUL_storm_list_beta[c(grep("Q", names(VAUL_storm_list_beta)))]

# normalize Q data 
# FRCH
for(i in 1:length(FRCH_Q_storm_list_beta)){
  FRCH_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_Q_storm_list_beta[[i]][["datavalue"]]-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# MOOS
for(i in 1:length(MOOS_Q_storm_list_beta)){
  MOOS_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_Q_storm_list_beta[[i]][["datavalue"]]-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# POKE
for(i in 1:length(POKE_Q_storm_list_beta)){
  POKE_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_Q_storm_list_beta[[i]][["datavalue"]]-min(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# STRT
for(i in 1:length(STRT_Q_storm_list_beta)){
  STRT_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_Q_storm_list_beta[[i]][["datavalue"]]-min(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# VAUL
for(i in 1:length(VAUL_Q_storm_list_beta)){
  VAUL_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_Q_storm_list_beta[[i]][["datavalue"]]-min(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# CARI
for(i in 1:length(CARI_Q_storm_list_beta)){
  CARI_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_Q_storm_list_beta[[i]][["datavalue"]]-min(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# normalize solute data 
#  remove NAs associated with the CARI data due to Q data and solute data being on different temporal resolutions (NO3 on 15 min and Q on 1 min)
CARI_NO3_storm_list_beta <- lapply(CARI_NO3_storm_list_beta, na.omit) 
CARI_fDOM_storm_list_beta <- lapply(CARI_fDOM_storm_list_beta, na.omit)
CARI_SpCond_storm_list_beta <- lapply(CARI_SpCond_storm_list_beta, na.omit)
CARI_turb_storm_list_beta <- lapply(CARI_turb_storm_list_beta, na.omit)

#NO3
for(i in 1:length(FRCH_NO3_storm_list_beta)){
  FRCH_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_NO3_storm_list_beta[[i]][["datavalue"]]-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_NO3_storm_list_beta)){
  MOOS_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_NO3_storm_list_beta[[i]][["datavalue"]]-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE))/
    (max(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE)-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE))
}

for(i in 1:length(POKE_NO3_storm_list_beta)){
  POKE_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_NO3_storm_list_beta[[i]][["datavalue"]]-min(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE))/
    (max(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE)-min(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=TRUE))
}

for(i in 1:length(STRT_NO3_storm_list_beta)){
  STRT_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_NO3_storm_list_beta[[i]][["datavalue"]]-min(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_NO3_storm_list_beta)){
  VAUL_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_NO3_storm_list_beta[[i]][["datavalue"]]-min(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_NO3_storm_list_beta)){
  CARI_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_NO3_storm_list_beta[[i]][["datavalue"]]-min(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list_beta)){
  FRCH_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_fDOM_storm_list_beta[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_fDOM_storm_list_beta)){
  MOOS_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_fDOM_storm_list_beta[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_fDOM_storm_list_beta)){
  POKE_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_fDOM_storm_list_beta[[i]][["datavalue"]]-min(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_fDOM_storm_list_beta)){
  STRT_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_fDOM_storm_list_beta[[i]][["datavalue"]]-min(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_fDOM_storm_list_beta)){
  VAUL_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_fDOM_storm_list_beta[[i]][["datavalue"]]-min(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_fDOM_storm_list_beta)){
  CARI_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_fDOM_storm_list_beta[[i]][["datavalue"]]-min(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list_beta)){
  FRCH_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_SpCond_storm_list_beta[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_SpCond_storm_list_beta)){
  MOOS_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_SpCond_storm_list_beta[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_SpCond_storm_list_beta)){
  POKE_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_SpCond_storm_list_beta[[i]][["datavalue"]]-min(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_SpCond_storm_list_beta)){
  STRT_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_SpCond_storm_list_beta[[i]][["datavalue"]]-min(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_SpCond_storm_list_beta)){
  VAUL_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_SpCond_storm_list_beta[[i]][["datavalue"]]-min(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_SpCond_storm_list_beta)){
  CARI_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_SpCond_storm_list_beta[[i]][["datavalue"]]-min(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#Turb
for(i in 1:length(FRCH_turb_storm_list_beta)){
  FRCH_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_turb_storm_list_beta[[i]][["datavalue"]]-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_turb_storm_list_beta)){
  MOOS_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_turb_storm_list_beta[[i]][["datavalue"]]-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_turb_storm_list_beta)){
  POKE_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_turb_storm_list_beta[[i]][["datavalue"]]-min(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_turb_storm_list_beta)){
  STRT_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_turb_storm_list_beta[[i]][["datavalue"]]-min(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_turb_storm_list_beta)){
  VAUL_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_turb_storm_list_beta[[i]][["datavalue"]]-min(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_turb_storm_list_beta)){
  CARI_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_turb_storm_list_beta[[i]][["datavalue"]]-min(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
###### NO3  #######
FRCH_NO3_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_NO3_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_NO3_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_NO3_storm_list_beta, inner_join, by = "valuedatetime")
POKE_NO3_storm <- map2_df(POKE_Q_storm_list_beta, POKE_NO3_storm_list_beta, inner_join, by = "valuedatetime")
STRT_NO3_storm <- map2_df(STRT_Q_storm_list_beta, STRT_NO3_storm_list_beta, inner_join, by = "valuedatetime")
VAUL_NO3_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_NO3_storm_list_beta, inner_join, by = "valuedatetime")
CARI_NO3_storm <- map2_df(CARI_Q_storm_list_beta, CARI_NO3_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_NO3_storm$storm.ID = c(rep("storm1", 993),
                   rep("storm10a", 121),
                   rep("storm10b", 95),
                   rep("storm10c", 207),
                   rep("storm11", 479),
                   rep("storm12a", 183),
                   rep("storm12b", 67),
                   rep("storm12c", 511),
                   rep("storm12d", 99),
                   rep("storm12e", 127),
                   rep("storm13", 391),
                   rep("storm14", 631),
                   rep("storm2", 165),
                   rep("storm3", 201),
                   rep("storm4", 193),
                   rep("storm5", 229),
                   rep("storm6", 257),
                   rep("storm7", 133),
                   rep("storm8", 105),
                   rep("storm9a", 61),
                   rep("storm9b", 149))

names(FRCH_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
FRCH_NO3_storm$site.ID <- "FRCH"

cols <- c("NO3.norm","Q.norm")
FRCH_NO3_storm[cols] <- log(FRCH_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_NO3_storm <- FRCH_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_NO3_storm_ascending <- filter(FRCH_NO3_storm, limb == "ascending")

FRCH_NO3_storm_ascending <- FRCH_NO3_storm_ascending[is.finite(FRCH_NO3_storm_ascending$Q.norm) & is.finite(FRCH_NO3_storm_ascending$NO3.norm), ]

beta.all.no3 <- FRCH_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_NO3_storm$storm.ID = c(rep("storm1", 702),
                             rep("storm3", 250),
                             rep("storm4", 256),
                             rep("storm5", 266),
                             rep("storm6a", 114),
                             rep("storm6b", 95),
                             rep("storm6c", 223),
                             rep("storm6d", 479),
                             rep("storm7a", 166),
                             rep("storm7b", 84),
                             rep("storm7c", 430),
                             rep("storm8", 174),
                             rep("storm9", 530))
names(MOOS_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
MOOS_NO3_storm$site.ID <- "MOOS"

MOOS_NO3_storm[cols] <- log(MOOS_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_NO3_storm <- MOOS_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_NO3_storm_ascending <- filter(MOOS_NO3_storm, limb == "ascending")

MOOS_NO3_storm_ascending <- MOOS_NO3_storm_ascending[is.finite(MOOS_NO3_storm_ascending$Q.norm) & is.finite(MOOS_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.moos.with.all <- MOOS_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# POKE # 
POKE_NO3_storm$storm.ID = c(rep("storm1", 103),
                             rep("storm2", 91),
                             rep("storm3", 147),
                             rep("storm4", 115),
                             rep("storm5a", 87),
                             rep("storm5b", 239),
                             rep("storm5c", 111),
                             rep("storm5d", 99),
                             rep("storm6a", 51),
                             rep("storm6b", 227),
                             rep("storm7", 267),
                             rep("storm8", 95),
                             rep("storm9", 211))
names(POKE_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
POKE_NO3_storm$site.ID <- "POKE"

POKE_NO3_storm[cols] <- log(POKE_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_NO3_storm <- POKE_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_NO3_storm_ascending <- filter(POKE_NO3_storm, limb == "ascending")

POKE_NO3_storm_ascending <- POKE_NO3_storm_ascending[is.finite(POKE_NO3_storm_ascending$Q.norm) & is.finite(POKE_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.poke.with.all <- POKE_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# STRT # 
STRT_NO3_storm$storm.ID = c(rep("storm1", 638),
                             rep("storm2", 274),
                             rep("storm3a", 1035),
                             rep("storm3b", 286),
                             rep("storm3c", 174),
                             rep("storm4", 466),
                             rep("storm5", 98),
                             rep("storm6", 246),
                             rep("storm7", 218),
                             rep("storm7b", 266),
                             rep("storm7c", 258))

names(STRT_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
STRT_NO3_storm$site.ID <- "STRT"

STRT_NO3_storm[cols] <- log(STRT_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_NO3_storm <- STRT_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_NO3_storm_ascending <- filter(STRT_NO3_storm, limb == "ascending")

STRT_NO3_storm_ascending <- STRT_NO3_storm_ascending[is.finite(STRT_NO3_storm_ascending$Q.norm) & is.finite(STRT_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.strt <- STRT_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
VAUL_NO3_storm$storm.ID = c(rep("storm1", 191),
                             rep("storm2", 207),
                             rep("storm3", 191),
                             rep("storm4a", 83),
                             rep("storm4b", 219),
                             rep("storm4c", 707),
                             rep("storm5", 275),
                             rep("storm6", 263),
                             rep("storm7", 107),
                             rep("storm8a", 167),
                             rep("storm8b", 223),
                             rep("storm8c", 479))

names(VAUL_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
VAUL_NO3_storm$site.ID <- "VAUL"

VAUL_NO3_storm[cols] <- log(VAUL_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_NO3_storm <- VAUL_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_NO3_storm_ascending <- filter(VAUL_NO3_storm, limb == "ascending")

VAUL_NO3_storm_ascending <- VAUL_NO3_storm_ascending[is.finite(VAUL_NO3_storm_ascending$Q.norm) & is.finite(VAUL_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.vaul <- VAUL_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_NO3_storm$storm.ID = c(rep("storm1", 371),
                            rep("storm2", 143),
                            rep("storm3", 72),
                            rep("storm4", 0),
                            rep("storm5", 135),
                            rep("storm6a", 83),
                            rep("storm6b", 235),
                            rep("storm6c", 426),
                            rep("storm6d", 135),
                            rep("storm7a", 51),
                            rep("storm7b", 217),
                            rep("storm8", 267))

names(CARI_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
CARI_NO3_storm$site.ID <- "CARI"

CARI_NO3_storm[cols] <- log(CARI_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_NO3_storm <- CARI_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_NO3_storm_ascending <- filter(CARI_NO3_storm, limb == "ascending")

CARI_NO3_storm_ascending <- CARI_NO3_storm_ascending[is.finite(CARI_NO3_storm_ascending$Q.norm) & is.finite(CARI_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.cari <- CARI_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# ALL # 
STRT_NO3_storm_ascending$DateTime <- as.POSIXct(STRT_NO3_storm_ascending$DateTime, 
                                                  "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
VAUL_NO3_storm_ascending$DateTime <- as.POSIXct(VAUL_NO3_storm_ascending$DateTime, 
                                                "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

All_NO3_storm <- rbind(FRCH_NO3_storm_ascending, MOOS_NO3_storm_ascending, 
                       STRT_NO3_storm_ascending, VAUL_NO3_storm_ascending, 
                       CARI_NO3_storm_ascending, POKE_NO3_storm_ascending)

beta.all.no3 <- All_NO3_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site


beta.all.no3$response_var <- "NO3"

all.2019.ci.no3 <- All_NO3_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(NO3.norm ~ Q.norm, data = .x)))

all.2019.ci.no3$response_var <- "NO3"


##### fDOM #####
FRCH_fDOM_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_fDOM_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
POKE_fDOM_storm <- map2_df(POKE_Q_storm_list_beta, POKE_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
STRT_fDOM_storm <- map2_df(STRT_Q_storm_list_beta, STRT_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
VAUL_fDOM_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
CARI_fDOM_storm <- map2_df(CARI_Q_storm_list_beta, CARI_fDOM_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_fDOM_storm$storm.ID = c(rep("storm1", 993),
                            rep("storm10a", 121),
                            rep("storm10b", 95),
                            rep("storm10c", 207),
                            rep("storm11", 479),
                            rep("storm12a", 183),
                            rep("storm12b", 67),
                            rep("storm12c", 511),
                            rep("storm12d", 99),
                            rep("storm12e", 127),
                            rep("storm13", 391),
                            rep("storm14", 631),
                            rep("storm2", 165),
                            rep("storm3", 201),
                            rep("storm4", 193),
                            rep("storm5", 229),
                            rep("storm6", 257),
                            rep("storm7", 133),
                            rep("storm8", 105),
                            rep("storm9a", 61),
                            rep("storm9b", 149))

names(FRCH_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
FRCH_fDOM_storm$site.ID <- "FRCH"

cols <- c("fDOM.norm","Q.norm")
FRCH_fDOM_storm[cols] <- log(FRCH_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_fDOM_storm <- FRCH_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_fDOM_storm_ascending <- filter(FRCH_fDOM_storm, limb == "ascending")

FRCH_fDOM_storm_ascending <- FRCH_fDOM_storm_ascending[is.finite(FRCH_fDOM_storm_ascending$Q.norm) & is.finite(FRCH_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM <- FRCH_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_fDOM_storm$storm.ID = c(rep("storm1", 702),
                            rep("storm3", 250),
                            rep("storm4", 256),
                            rep("storm5", 266),
                            rep("storm6a", 114),
                            rep("storm6b", 95),
                            rep("storm6c", 223),
                            rep("storm6d", 479),
                            rep("storm7a", 166),
                            rep("storm7b", 84),
                            rep("storm7c", 430),
                            rep("storm8", 174),
                            rep("storm9", 530))
names(MOOS_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
MOOS_fDOM_storm$site.ID <- "MOOS"

MOOS_fDOM_storm[cols] <- log(MOOS_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_fDOM_storm <- MOOS_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_fDOM_storm_ascending <- filter(MOOS_fDOM_storm, limb == "ascending")

MOOS_fDOM_storm_ascending <- MOOS_fDOM_storm_ascending[is.finite(MOOS_fDOM_storm_ascending$Q.norm) & is.finite(MOOS_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.moos.with.all <- MOOS_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# POKE # 
POKE_fDOM_storm$storm.ID = c(rep("storm1", 103),
                             rep("storm2", 91),
                             rep("storm3", 147),
                             rep("storm4", 115),
                             rep("storm5a", 87),
                             rep("storm5b", 239),
                             rep("storm5c", 111),
                             rep("storm5d", 99),
                             rep("storm6a", 51),
                             rep("storm6b", 227),
                             rep("storm7", 267),
                             rep("storm8", 95),
                             rep("storm9", 211))

names(POKE_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
POKE_fDOM_storm$site.ID <- "POKE"

POKE_fDOM_storm[cols] <- log(POKE_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_fDOM_storm <- POKE_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_fDOM_storm_ascending <- filter(POKE_fDOM_storm, limb == "ascending")

POKE_fDOM_storm_ascending <- POKE_fDOM_storm_ascending[is.finite(POKE_fDOM_storm_ascending$Q.norm) & is.finite(POKE_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.poke.with.all <- POKE_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# STRT # 
STRT_fDOM_storm$storm.ID = c(rep("storm1", 638),
                            rep("storm2", 274),
                            rep("storm3a", 1035),
                            rep("storm3b", 286),
                            rep("storm3c", 174),
                            rep("storm4", 466),
                            rep("storm5", 98),
                            rep("storm6", 246),
                            rep("storm7", 218),
                            rep("storm7b", 266),
                            rep("storm7c", 258))

names(STRT_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
STRT_fDOM_storm$site.ID <- "STRT"

STRT_fDOM_storm[cols] <- log(STRT_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_fDOM_storm <- STRT_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_fDOM_storm_ascending <- filter(STRT_fDOM_storm, limb == "ascending")

STRT_fDOM_storm_ascending <- STRT_fDOM_storm_ascending[is.finite(STRT_fDOM_storm_ascending$Q.norm) & is.finite(STRT_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.strt <- STRT_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
VAUL_fDOM_storm$storm.ID = c(rep("storm1", 191),
                            rep("storm2", 207),
                            rep("storm3", 191),
                            rep("storm4a", 83),
                            rep("storm4b", 219),
                            rep("storm4c", 707),
                            rep("storm5", 275),
                            rep("storm6", 263),
                            rep("storm7", 107),
                            rep("storm8a", 167),
                            rep("storm8b", 223),
                            rep("storm8c", 479))

names(VAUL_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
VAUL_fDOM_storm$site.ID <- "VAUL"

VAUL_fDOM_storm[cols] <- log(VAUL_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_fDOM_storm <- VAUL_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_fDOM_storm_ascending <- filter(VAUL_fDOM_storm, limb == "ascending")

VAUL_fDOM_storm_ascending <- VAUL_fDOM_storm_ascending[is.finite(VAUL_fDOM_storm_ascending$Q.norm) & is.finite(VAUL_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.vaul <- VAUL_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_fDOM_storm$storm.ID = c(rep("storm1", 371),
                             rep("storm2", 143),
                             rep("storm3", 72),
                             rep("storm4", 0),
                             rep("storm5", 135),
                             rep("storm6a", 83),
                             rep("storm6b", 235),
                             rep("storm6c", 426),
                             rep("storm6d", 135),
                             rep("storm7a", 51),
                             rep("storm7b", 217),
                             rep("storm8", 267))


names(CARI_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
CARI_fDOM_storm$site.ID <- "CARI"

CARI_fDOM_storm[cols] <- log(CARI_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_fDOM_storm <- CARI_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_fDOM_storm_ascending <- filter(CARI_fDOM_storm, limb == "ascending")

CARI_fDOM_storm_ascending <- CARI_fDOM_storm_ascending[is.finite(CARI_fDOM_storm_ascending$Q.norm) & is.finite(CARI_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.cari <- CARI_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site


# ALL # 
STRT_fDOM_storm_ascending$DateTime <- as.POSIXct(STRT_fDOM_storm_ascending$DateTime, 
                                                "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
VAUL_fDOM_storm_ascending$DateTime <- as.POSIXct(VAUL_fDOM_storm_ascending$DateTime, 
                                                "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

All_fDOM_storm <- rbind(FRCH_fDOM_storm_ascending, MOOS_fDOM_storm_ascending, 
                       STRT_fDOM_storm_ascending, VAUL_fDOM_storm_ascending, 
                       CARI_fDOM_storm_ascending, POKE_fDOM_storm_ascending)

beta.all.fdom <- All_fDOM_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site


beta.all.fdom$response_var <- "fDOM"

all.2019.ci.fDOM <- All_fDOM_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(fDOM.norm ~ Q.norm, data = .x)))

all.2019.ci.fDOM$response_var <- "fDOM"


##### SPC #####
FRCH_SPC_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_SPC_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
POKE_SPC_storm <- map2_df(POKE_Q_storm_list_beta, POKE_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
STRT_SPC_storm <- map2_df(STRT_Q_storm_list_beta, STRT_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
VAUL_SPC_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
CARI_SPC_storm <- map2_df(CARI_Q_storm_list_beta, CARI_SpCond_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_SPC_storm$storm.ID = c(rep("storm1", 993),
                             rep("storm10a", 121),
                             rep("storm10b", 95),
                             rep("storm10c", 207),
                             rep("storm11", 479),
                             rep("storm12a", 183),
                             rep("storm12b", 67),
                             rep("storm12c", 511),
                             rep("storm12d", 99),
                             rep("storm12e", 127),
                             rep("storm13", 391),
                             rep("storm14", 631),
                             rep("storm2", 165),
                             rep("storm3", 201),
                             rep("storm4", 193),
                             rep("storm5", 229),
                             rep("storm6", 257),
                             rep("storm7", 133),
                             rep("storm8", 105),
                             rep("storm9a", 61),
                             rep("storm9b", 149))

names(FRCH_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
FRCH_SPC_storm$site.ID <- "FRCH"

cols <- c("SPC.norm","Q.norm")
FRCH_SPC_storm[cols] <- log(FRCH_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_SPC_storm <- FRCH_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_SPC_storm_ascending <- filter(FRCH_SPC_storm, limb == "ascending")

FRCH_SPC_storm_ascending <- FRCH_SPC_storm_ascending[is.finite(FRCH_SPC_storm_ascending$Q.norm) & is.finite(FRCH_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC <- FRCH_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_SPC_storm$storm.ID = c(rep("storm1", 702),
                             rep("storm3", 250),
                             rep("storm4", 256),
                             rep("storm5", 266),
                             rep("storm6a", 114),
                             rep("storm6b", 95),
                             rep("storm6c", 223),
                             rep("storm6d", 479),
                             rep("storm7a", 166),
                             rep("storm7b", 84),
                             rep("storm7c", 430),
                             rep("storm8", 174),
                             rep("storm9", 530))
names(MOOS_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
MOOS_SPC_storm$site.ID <- "MOOS"

MOOS_SPC_storm[cols] <- log(MOOS_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_SPC_storm <- MOOS_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_SPC_storm_ascending <- filter(MOOS_SPC_storm, limb == "ascending")

MOOS_SPC_storm_ascending <- MOOS_SPC_storm_ascending[is.finite(MOOS_SPC_storm_ascending$Q.norm) & is.finite(MOOS_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.moos.with.all <- MOOS_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# POKE # 
POKE_SPC_storm$storm.ID = c(rep("storm1", 103),
                              rep("storm2", 91),
                              rep("storm3", 147),
                              rep("storm4", 115),
                              rep("storm5a", 87),
                              rep("storm5b", 239),
                              rep("storm5c", 111),
                              rep("storm5d", 99),
                              rep("storm6a", 51),
                              rep("storm6b", 227),
                              rep("storm7", 267),
                              rep("storm8", 95),
                              rep("storm9", 211))
names(POKE_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
POKE_SPC_storm$site.ID <- "POKE"

POKE_SPC_storm[cols] <- log(POKE_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_SPC_storm <- POKE_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_SPC_storm_ascending <- filter(POKE_SPC_storm, limb == "ascending")

POKE_SPC_storm_ascending <- POKE_SPC_storm_ascending[is.finite(POKE_SPC_storm_ascending$Q.norm) & is.finite(POKE_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.poke.with.all <- POKE_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# STRT # 
STRT_SPC_storm$storm.ID = c(rep("storm1", 638),
                             rep("storm2", 274),
                             rep("storm3a", 1035),
                             rep("storm3b", 286),
                             rep("storm3c", 174),
                             rep("storm4", 466),
                             rep("storm5", 98),
                             rep("storm6", 246),
                             rep("storm7", 218),
                             rep("storm7b", 266),
                             rep("storm7c", 258))

names(STRT_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
STRT_SPC_storm$site.ID <- "STRT"

STRT_SPC_storm[cols] <- log(STRT_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_SPC_storm <- STRT_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_SPC_storm_ascending <- filter(STRT_SPC_storm, limb == "ascending")

STRT_SPC_storm_ascending <- STRT_SPC_storm_ascending[is.finite(STRT_SPC_storm_ascending$Q.norm) & is.finite(STRT_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.strt <- STRT_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
VAUL_SPC_storm$storm.ID = c(rep("storm1", 191),
                             rep("storm2", 207),
                             rep("storm3", 191),
                             rep("storm4a", 83),
                             rep("storm4b", 219),
                             rep("storm4c", 707),
                             rep("storm5", 275),
                             rep("storm6", 263),
                             rep("storm7", 107),
                             rep("storm8a", 167),
                             rep("storm8b", 223),
                             rep("storm8c", 479))

names(VAUL_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
VAUL_SPC_storm$site.ID <- "VAUL"

VAUL_SPC_storm[cols] <- log(VAUL_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_SPC_storm <- VAUL_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_SPC_storm_ascending <- filter(VAUL_SPC_storm, limb == "ascending")

VAUL_SPC_storm_ascending <- VAUL_SPC_storm_ascending[is.finite(VAUL_SPC_storm_ascending$Q.norm) & is.finite(VAUL_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.vaul <- VAUL_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# CARI #
CARI_SPC_storm$storm.ID = c(rep("storm1", 371),
                            rep("storm2", 143),
                            rep("storm3", 72),
                            rep("storm4", 0),
                            rep("storm5", 135),
                            rep("storm6a", 83),
                            rep("storm6b", 235),
                            rep("storm6c", 426),
                            rep("storm6d", 135),
                            rep("storm7a", 51),
                            rep("storm7b", 217),
                            rep("storm8", 267))


names(CARI_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
CARI_SPC_storm$site.ID <- "CARI"

CARI_SPC_storm[cols] <- log(CARI_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_SPC_storm <- CARI_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_SPC_storm_ascending <- filter(CARI_SPC_storm, limb == "ascending")

CARI_SPC_storm_ascending <- CARI_SPC_storm_ascending[is.finite(CARI_SPC_storm_ascending$Q.norm) & is.finite(CARI_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.cari <- CARI_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site


# ALL # 
STRT_SPC_storm_ascending$DateTime <- as.POSIXct(STRT_SPC_storm_ascending$DateTime, 
                                                 "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
VAUL_SPC_storm_ascending$DateTime <- as.POSIXct(VAUL_SPC_storm_ascending$DateTime, 
                                                 "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

All_SPC_storm <- rbind(FRCH_SPC_storm_ascending, MOOS_SPC_storm_ascending, 
                        STRT_SPC_storm_ascending, VAUL_SPC_storm_ascending,
                       CARI_SPC_storm_ascending, POKE_SPC_storm_ascending)

beta.all.SPC <- All_SPC_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site


beta.all.SPC$response_var <- "SPC"

all.2019.ci.SPC <- All_SPC_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(SPC.norm ~ Q.norm, data = .x)))

all.2019.ci.SPC$response_var <- "SPC"


##### Turb #####
FRCH_turb_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_turb_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_turb_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_turb_storm_list_beta, inner_join, by = "valuedatetime")
POKE_turb_storm <- map2_df(POKE_Q_storm_list_beta, POKE_turb_storm_list_beta, inner_join, by = "valuedatetime")
STRT_turb_storm <- map2_df(STRT_Q_storm_list_beta, STRT_turb_storm_list_beta, inner_join, by = "valuedatetime")
VAUL_turb_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_turb_storm_list_beta, inner_join, by = "valuedatetime")
CARI_turb_storm <- map2_df(CARI_Q_storm_list_beta, CARI_turb_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_turb_storm$storm.ID = c(rep("storm1", 993),
                            rep("storm10a", 121),
                            rep("storm10b", 95),
                            rep("storm10c", 207),
                            rep("storm11", 479),
                            rep("storm12a", 183),
                            rep("storm12b", 67),
                            rep("storm12c", 511),
                            rep("storm12d", 99),
                            rep("storm12e", 127),
                            rep("storm13", 391),
                            rep("storm14", 631),
                            rep("storm2", 165),
                            rep("storm3", 201),
                            rep("storm4", 193),
                            rep("storm5", 229),
                            rep("storm6", 257),
                            rep("storm7", 133),
                            rep("storm8", 105),
                            rep("storm9a", 61),
                            rep("storm9b", 149))

names(FRCH_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
FRCH_turb_storm$site.ID <- "FRCH"

cols <- c("turb.norm","Q.norm")
FRCH_turb_storm[cols] <- log(FRCH_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_turb_storm <- FRCH_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_turb_storm_ascending <- filter(FRCH_turb_storm, limb == "ascending")

FRCH_turb_storm_ascending <- FRCH_turb_storm_ascending[is.finite(FRCH_turb_storm_ascending$Q.norm) & is.finite(FRCH_turb_storm_ascending$turb.norm), ]

beta.all.turb <- FRCH_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_turb_storm$storm.ID = c(rep("storm1", 702),
                            rep("storm3", 250),
                            rep("storm4", 256),
                            rep("storm5", 266),
                            rep("storm6a", 114),
                            rep("storm6b", 95),
                            rep("storm6c", 223),
                            rep("storm6d", 479),
                            rep("storm7a", 166),
                            rep("storm7b", 84),
                            rep("storm7c", 430),
                            rep("storm8", 174),
                            rep("storm9", 530))
names(MOOS_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
MOOS_turb_storm$site.ID <- "MOOS"

MOOS_turb_storm[cols] <- log(MOOS_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_turb_storm <- MOOS_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_turb_storm_ascending <- filter(MOOS_turb_storm, limb == "ascending")

MOOS_turb_storm_ascending <- MOOS_turb_storm_ascending[is.finite(MOOS_turb_storm_ascending$Q.norm) & is.finite(MOOS_turb_storm_ascending$turb.norm), ]

beta.all.turb.moos.with.all <- MOOS_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# POKE # 
POKE_turb_storm$storm.ID = c(rep("storm1", 103),
                             rep("storm2", 91),
                             rep("storm3", 147),
                             rep("storm4", 115),
                             rep("storm5a", 87),
                             rep("storm5b", 239),
                             rep("storm5c", 111),
                             rep("storm5d", 99),
                             rep("storm6a", 51),
                             rep("storm6b", 227),
                             rep("storm7", 267),
                             rep("storm8", 95),
                             rep("storm9", 211))
names(POKE_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
POKE_turb_storm$site.ID <- "POKE"

POKE_turb_storm[cols] <- log(POKE_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_turb_storm <- POKE_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_turb_storm_ascending <- filter(POKE_turb_storm, limb == "ascending")

POKE_turb_storm_ascending <- POKE_turb_storm_ascending[is.finite(POKE_turb_storm_ascending$Q.norm) & is.finite(POKE_turb_storm_ascending$turb.norm), ]

beta.all.poke.moos.with.all <- POKE_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# STRT # 
STRT_turb_storm$storm.ID = c(rep("storm1", 638),
                            rep("storm2", 274),
                            rep("storm3a", 1035),
                            rep("storm3b", 286),
                            rep("storm3c", 174),
                            rep("storm4", 466),
                            rep("storm5", 98),
                            rep("storm6", 246),
                            rep("storm7", 218),
                            rep("storm7b", 266),
                            rep("storm7c", 258))

names(STRT_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
STRT_turb_storm$site.ID <- "STRT"

STRT_turb_storm[cols] <- log(STRT_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_turb_storm <- STRT_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_turb_storm_ascending <- filter(STRT_turb_storm, limb == "ascending")

STRT_turb_storm_ascending <- STRT_turb_storm_ascending[is.finite(STRT_turb_storm_ascending$Q.norm) & is.finite(STRT_turb_storm_ascending$turb.norm), ]

beta.all.turb.strt <- STRT_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
VAUL_turb_storm$storm.ID = c(rep("storm1", 191),
                            rep("storm2", 207),
                            rep("storm3", 191),
                            rep("storm4a", 83),
                            rep("storm4b", 219),
                            rep("storm4c", 707),
                            rep("storm5", 275),
                            rep("storm6", 263),
                            rep("storm7", 107),
                            rep("storm8a", 167),
                            rep("storm8b", 223),
                            rep("storm8c", 479))

names(VAUL_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
VAUL_turb_storm$site.ID <- "VAUL"

VAUL_turb_storm[cols] <- log(VAUL_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_turb_storm <- VAUL_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_turb_storm_ascending <- filter(VAUL_turb_storm, limb == "ascending")

VAUL_turb_storm_ascending <- VAUL_turb_storm_ascending[is.finite(VAUL_turb_storm_ascending$Q.norm) & is.finite(VAUL_turb_storm_ascending$turb.norm), ]

beta.all.turb.vaul <- VAUL_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# CARI #
CARI_turb_storm$storm.ID = c(rep("storm1", 371),
                             rep("storm2", 143),
                             rep("storm3", 72),
                             rep("storm4", 0),
                             rep("storm5", 135),
                             rep("storm6a", 83),
                             rep("storm6b", 235),
                             rep("storm6c", 426),
                             rep("storm6d", 135),
                             rep("storm7a", 51),
                             rep("storm7b", 217),
                             rep("storm8", 267))


names(CARI_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
CARI_turb_storm$site.ID <- "CARI"

CARI_turb_storm[cols] <- log(CARI_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_turb_storm <- CARI_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_turb_storm_ascending <- filter(CARI_turb_storm, limb == "ascending")

CARI_turb_storm_ascending <- CARI_turb_storm_ascending[is.finite(CARI_turb_storm_ascending$Q.norm) & is.finite(CARI_turb_storm_ascending$turb.norm), ]

beta.all.turb.cari <- CARI_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# ALL # 
STRT_turb_storm_ascending$DateTime <- as.POSIXct(STRT_turb_storm_ascending$DateTime, 
                                                "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
VAUL_turb_storm_ascending$DateTime <- as.POSIXct(VAUL_turb_storm_ascending$DateTime, 
                                                "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")

All_turb_storm <- rbind(FRCH_turb_storm_ascending, MOOS_turb_storm_ascending, 
                       STRT_turb_storm_ascending, VAUL_turb_storm_ascending,
                       CARI_turb_storm_ascending, POKE_turb_storm_ascending)

beta.all.turb <- All_turb_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site


beta.all.turb$response_var <- "turb"

all.2019.ci.turb <- All_turb_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(turb.norm ~ Q.norm, data = .x)))

all.2019.ci.turb$response_var <- "turb"


beta.all.2019 <- rbind(all.2019.ci.no3, all.2019.ci.fDOM,
                       all.2019.ci.SPC, all.2019.ci.turb)
write.csv(beta.all.2019, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/beta/beta.2019.csv")
beta.all.2019 <- beta.all.2019 %>% 
  filter(Parameter != "(Intercept)")
#### plot ####
HI_2019 <- read_csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2019.csv")
names(HI_2019)[names(HI_2019) == 'storm.num'] <- 'storm.ID'
names(HI_2019)[names(HI_2019) == 'response'] <- 'response_var'
HI_beta = left_join(HI_2019, beta.all.2019, by=c("site.ID", "storm.ID", "response_var"))


HI_FI <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2019.csv")

HI_FI_beta = left_join(HI_FI, beta.all.2019, by=c("site.ID", "storm.ID", "response_var"))

write.csv(HI_FI_beta, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI_beta.diff_results_2019.csv")

# NO3 #
HI_FI_NO3 = subset(HI_FI_beta, response_var == "NO3")
HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_NO3.p = 
  ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_NO3.p

# NO3 #
HI_beta_NO3 = subset(HI_beta, response_var == "NO3")
HI_beta_NO3$site.ID <- factor(HI_beta_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_beta_NO3.p = 
  ggplot(HI_beta_NO3, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = TimeSinceChena, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI_beta, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

HI_beta_fDOM = subset(HI_beta, response_var == "fDOM")
HI_beta_fDOM$site.ID <- factor(HI_beta_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_beta_fDOM.p = 
  ggplot(HI_beta_fDOM, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = TimeSinceChena, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_fDOM.p

# SPC#
HI_FI_SPC = subset(HI_FI_beta, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p


HI_beta_SPC = subset(HI_beta, response_var == "SPC")
HI_beta_SPC$site.ID <- factor(HI_beta_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_beta_SPC.p = 
  ggplot(HI_beta_SPC, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = TimeSinceChena, shape =burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_SPC.p

# turb #
HI_FI_turb = subset(HI_FI_beta, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


HI_beta_turb = subset(HI_beta, response_var == "turb")
HI_beta_turb$site.ID <- factor(HI_beta_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_beta_turb.p = 
  ggplot(HI_beta_turb, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = TimeSinceChena, shape = burn), size = 4)+
 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_turb.p

grid.arrange(HI_beta_NO3.p, HI_beta_fDOM.p, HI_beta_SPC.p, HI_beta_turb.p)

#### Regression between beta and FI #######
FI_beta_comp = 
ggplot(HI_FI_NO3, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
   ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp

FI_beta_comp_fDOM = 
  ggplot(HI_FI_fDOM, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_fDOM

FI_beta_comp_SPC = 
  ggplot(HI_FI_SPC, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_SPC

FI_beta_comp_turb = 
  ggplot(HI_FI_turb, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_turb


grid.arrange(FI_beta_comp_NO3, FI_beta_comp_fDOM, FI_beta_comp_SPC, FI_beta_comp_turb)
















########################################## 2020 ##########################################################
storm_file_list_beta <- list.files(path="~/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI/", 
                                   recursive=F, 
                                   pattern=".csv", 
                                   full.names=TRUE)

storm_list_beta<-do.call("list", lapply(storm_file_list_beta, 
                                        read.csv, 
                                        stringsAsFactors=FALSE, 
                                        header=T, row.names=1))

storm_file_list_beta = sub("~/Documents/Storms/Storm_Events/2020/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta

for(i in 1:length(storm_list_beta)){
  storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(storm_list_beta[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 
#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list_beta = storm_list_beta[c(1:60)] #60
FRCH_storm_list_beta = storm_list_beta[c(61:150)] #90
MOOS_storm_list_beta = storm_list_beta[c(151:205)] #55
POKE_storm_list_beta = storm_list_beta[c(206:325)]# 120
STRT_storm_list_beta = storm_list_beta[c(326:415)] #90
VAUL_storm_list_beta = storm_list_beta[c(416:500)] #85


CARI_NO3_storm_list_beta = CARI_storm_list_beta[c(grep("NO3", names(CARI_storm_list_beta)))]
CARI_fDOM_storm_list_beta = CARI_storm_list_beta[c(grep("fDOM", names(CARI_storm_list_beta)))]
CARI_SpCond_storm_list_beta = CARI_storm_list_beta[c(grep("SPC", names(CARI_storm_list_beta)))]
CARI_turb_storm_list_beta = CARI_storm_list_beta[c(grep("Turb", names(CARI_storm_list_beta)))]
CARI_Q_storm_list_beta = CARI_storm_list_beta[c(grep("Q", names(CARI_storm_list_beta)))]

FRCH_NO3_storm_list_beta = FRCH_storm_list_beta[c(grep("NO3", names(FRCH_storm_list_beta)))]
FRCH_fDOM_storm_list_beta = FRCH_storm_list_beta[c(grep("fDOM", names(FRCH_storm_list_beta)))]
FRCH_SpCond_storm_list_beta = FRCH_storm_list_beta[c(grep("SPC", names(FRCH_storm_list_beta)))]
FRCH_turb_storm_list_beta = FRCH_storm_list_beta[c(grep("Turb", names(FRCH_storm_list_beta)))]
FRCH_Q_storm_list_beta = FRCH_storm_list_beta[c(grep("Q", names(FRCH_storm_list_beta)))]

MOOS_NO3_storm_list_beta = MOOS_storm_list_beta[c(grep("NO3", names(MOOS_storm_list_beta)))]
MOOS_fDOM_storm_list_beta = MOOS_storm_list_beta[c(grep("fDOM", names(MOOS_storm_list_beta)))]
MOOS_SpCond_storm_list_beta = MOOS_storm_list_beta[c(grep("SPC", names(MOOS_storm_list_beta)))]
MOOS_turb_storm_list_beta = MOOS_storm_list_beta[c(grep("Turb", names(MOOS_storm_list_beta)))]
MOOS_Q_storm_list_beta = MOOS_storm_list_beta[c(grep("Q", names(MOOS_storm_list_beta)))]

POKE_NO3_storm_list_beta = POKE_storm_list_beta[c(grep("NO3", names(POKE_storm_list_beta)))]
POKE_fDOM_storm_list_beta = POKE_storm_list_beta[c(grep("fDOM", names(POKE_storm_list_beta)))]
POKE_SpCond_storm_list_beta = POKE_storm_list_beta[c(grep("SPC", names(POKE_storm_list_beta)))]
POKE_turb_storm_list_beta = POKE_storm_list_beta[c(grep("turb", names(POKE_storm_list_beta)))]
POKE_Q_storm_list_beta = POKE_storm_list_beta[c(grep("Q", names(POKE_storm_list_beta)))]

STRT_NO3_storm_list_beta = STRT_storm_list_beta[c(grep("NO3", names(STRT_storm_list_beta)))]
STRT_fDOM_storm_list_beta = STRT_storm_list_beta[c(grep("fDOM", names(STRT_storm_list_beta)))]
STRT_SpCond_storm_list_beta = STRT_storm_list_beta[c(grep("SPC", names(STRT_storm_list_beta)))]
STRT_turb_storm_list_beta = STRT_storm_list_beta[c(grep("Turb", names(STRT_storm_list_beta)))]
STRT_Q_storm_list_beta = STRT_storm_list_beta[c(grep("Q", names(STRT_storm_list_beta)))]

VAUL_NO3_storm_list_beta = VAUL_storm_list_beta[c(grep("NO3", names(VAUL_storm_list_beta)))]
VAUL_fDOM_storm_list_beta = VAUL_storm_list_beta[c(grep("fDOM", names(VAUL_storm_list_beta)))]
VAUL_SpCond_storm_list_beta = VAUL_storm_list_beta[c(grep("SPC", names(VAUL_storm_list_beta)))]
VAUL_turb_storm_list_beta = VAUL_storm_list_beta[c(grep("Turb", names(VAUL_storm_list_beta)))]
VAUL_Q_storm_list_beta = VAUL_storm_list_beta[c(grep("Q", names(VAUL_storm_list_beta)))]

# normalize Q data 
# FRCH
for(i in 1:length(FRCH_Q_storm_list_beta)){
  FRCH_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_Q_storm_list_beta[[i]][["datavalue"]]-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# MOOS
for(i in 1:length(MOOS_Q_storm_list_beta)){
  MOOS_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_Q_storm_list_beta[[i]][["datavalue"]]-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# POKE
for(i in 1:length(POKE_Q_storm_list_beta)){
  POKE_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_Q_storm_list_beta[[i]][["datavalue"]]-min(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# STRT
for(i in 1:length(STRT_Q_storm_list_beta)){
  STRT_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_Q_storm_list_beta[[i]][["datavalue"]]-min(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# VAUL
for(i in 1:length(VAUL_Q_storm_list_beta)){
  VAUL_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_Q_storm_list_beta[[i]][["datavalue"]]-min(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# CARI
for(i in 1:length(CARI_Q_storm_list_beta)){
  CARI_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_Q_storm_list_beta[[i]][["datavalue"]]-min(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# normalize solute data 
# 
#NO3
for(i in 1:length(FRCH_NO3_storm_list_beta)){
  FRCH_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_NO3_storm_list_beta[[i]][["datavalue"]]-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_NO3_storm_list_beta)){
  MOOS_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_NO3_storm_list_beta[[i]][["datavalue"]]-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_NO3_storm_list_beta)){
  POKE_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_NO3_storm_list_beta[[i]][["datavalue"]]-min(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_NO3_storm_list_beta)){
  STRT_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_NO3_storm_list_beta[[i]][["datavalue"]]-min(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_NO3_storm_list_beta)){
  VAUL_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_NO3_storm_list_beta[[i]][["datavalue"]]-min(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_NO3_storm_list_beta)){
  CARI_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_NO3_storm_list_beta[[i]][["datavalue"]]-min(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list_beta)){
  FRCH_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_fDOM_storm_list_beta[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_fDOM_storm_list_beta)){
  MOOS_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_fDOM_storm_list_beta[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_fDOM_storm_list_beta)){
  POKE_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_fDOM_storm_list_beta[[i]][["datavalue"]]-min(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_fDOM_storm_list_beta)){
  STRT_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_fDOM_storm_list_beta[[i]][["datavalue"]]-min(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_fDOM_storm_list_beta)){
  VAUL_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_fDOM_storm_list_beta[[i]][["datavalue"]]-min(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_fDOM_storm_list_beta)){
  CARI_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_fDOM_storm_list_beta[[i]][["datavalue"]]-min(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list_beta)){
  FRCH_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_SpCond_storm_list_beta[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_SpCond_storm_list_beta)){
  MOOS_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_SpCond_storm_list_beta[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_SpCond_storm_list_beta)){
  POKE_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_SpCond_storm_list_beta[[i]][["datavalue"]]-min(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_SpCond_storm_list_beta)){
  STRT_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_SpCond_storm_list_beta[[i]][["datavalue"]]-min(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_SpCond_storm_list_beta)){
  VAUL_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_SpCond_storm_list_beta[[i]][["datavalue"]]-min(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_SpCond_storm_list_beta)){
  CARI_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_SpCond_storm_list_beta[[i]][["datavalue"]]-min(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#Turb
for(i in 1:length(FRCH_turb_storm_list_beta)){
  FRCH_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_turb_storm_list_beta[[i]][["datavalue"]]-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_turb_storm_list_beta)){
  MOOS_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_turb_storm_list_beta[[i]][["datavalue"]]-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_turb_storm_list_beta)){
  POKE_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_turb_storm_list_beta[[i]][["datavalue"]]-min(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_turb_storm_list_beta)){
  STRT_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_turb_storm_list_beta[[i]][["datavalue"]]-min(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_turb_storm_list_beta)){
  VAUL_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_turb_storm_list_beta[[i]][["datavalue"]]-min(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_turb_storm_list_beta)){
  CARI_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_turb_storm_list_beta[[i]][["datavalue"]]-min(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
###### NO3  #######

FRCH_NO3_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_NO3_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_NO3_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_NO3_storm_list_beta, inner_join, by = "valuedatetime")
POKE_NO3_storm <- map2_df(POKE_Q_storm_list_beta, POKE_NO3_storm_list_beta, inner_join, by = "valuedatetime")
STRT_NO3_storm <- map2_df(STRT_Q_storm_list_beta, STRT_NO3_storm_list_beta, inner_join, by = "valuedatetime")
VAUL_NO3_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_NO3_storm_list_beta, inner_join, by = "valuedatetime")
CARI_NO3_storm <- map2_df(CARI_Q_storm_list_beta, CARI_NO3_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_NO3_storm$storm.ID = c(rep("storm1", 487),
                            rep("storm10a", 255),
                            rep("storm10b", 439),
                            rep("storm11", 91),
                            rep("storm12", 67),
                            rep("storm13", 211),
                            rep("storm2", 123),
                            rep("storm3a", 163),
                            rep("storm3b", 435),
                            rep("storm3c", 159),
                            rep("storm4a", 187),
                            rep("storm4b", 203),
                            rep("storm5", 62),
                            rep("storm6", 103),
                            rep("storm7", 339),
                            rep("storm8", 383),
                            rep("storm9a", 139),
                            rep("storm9b", 313))
                            

names(FRCH_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
FRCH_NO3_storm$site.ID <- "FRCH"

cols <- c("NO3.norm","Q.norm")
FRCH_NO3_storm[cols] <- log(FRCH_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_NO3_storm <- FRCH_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_NO3_storm_ascending <- filter(FRCH_NO3_storm, limb == "ascending")

FRCH_NO3_storm_ascending <- FRCH_NO3_storm_ascending[is.finite(FRCH_NO3_storm_ascending$Q.norm) & is.finite(FRCH_NO3_storm_ascending$NO3.norm), ]

beta.all.no3 <- FRCH_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_NO3_storm$storm.ID = c(rep("storm1", 691),
                            rep("storm2", 327),
                            rep("storm3", 129),
                            rep("storm4", 321),
                            rep("storm5", 252),
                            rep("storm6a", 108),
                            rep("storm6b", 288),
                            rep("storm7a", 276),
                            rep("storm7b", 186),
                            rep("storm8", 195),
                            rep("storm9", 405))
                            
names(MOOS_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
MOOS_NO3_storm$site.ID <- "MOOS"

MOOS_NO3_storm[cols] <- log(MOOS_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_NO3_storm <- MOOS_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_NO3_storm_ascending <- filter(MOOS_NO3_storm, limb == "ascending")

MOOS_NO3_storm_ascending <- MOOS_NO3_storm_ascending[is.finite(MOOS_NO3_storm_ascending$Q.norm) & is.finite(MOOS_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.moos.with.all <- MOOS_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# POKE # 
POKE_NO3_storm$storm.ID = c(rep("storm1", 95),
                             rep("storm10", 99),
                             rep("storm11", 199),
                             rep("storm12", 307),
                             rep("storm13", 87),
                             rep("storm14", 383),
                             rep("storm15", 335),
                             rep("storm16", 95),
                             rep("storm17", 119),
                             rep("storm18", 95),
                             rep("storm19", 135),
                             rep("storm20", 87),
                             rep("storm21", 139),
                             rep("storm22a", 219),
                             rep("storm2", 107),
                             rep("storm3", 120),
                             rep("storm4a", 98),
                             rep("storm4b", 95),
                             rep("storm4c", 159),
                             rep("storm5", 219),
                             rep("storm6", 95),
                             rep("storm7", 127),
                             rep("storm8", 135),
                             rep("storm9", 265))

names(POKE_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
POKE_NO3_storm$site.ID <- "POKE"

POKE_NO3_storm[cols] <- log(POKE_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_NO3_storm <- POKE_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_NO3_storm_ascending <- filter(POKE_NO3_storm, limb == "ascending")

POKE_NO3_storm_ascending <- POKE_NO3_storm_ascending[is.finite(POKE_NO3_storm_ascending$Q.norm) & is.finite(POKE_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.moos.with.all <- POKE_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# STRT # 
STRT_NO3_storm$storm.ID = c(rep("storm10", 247),
                            rep("storm1a", 108),
                            rep("storm1b", 162),
                            rep("storm1c", 106),
                            rep("storm1d", 87),
                            rep("storm1e", 445),
                            rep("storm2", 167),
                            rep("storm3", 387),
                            rep("storm4a", 141),
                            rep("storm4b", 323),
                            rep("storm5", 239),
                            rep("storm6", 123),
                            rep("storm7a", 99),
                            rep("storm7b", 96),
                            rep("storm8", 83),
                            rep("storm9a", 295),
                            rep("storm9b", 135),
                            rep("storm9c", 483))

names(STRT_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
STRT_NO3_storm$site.ID <- "STRT"

STRT_NO3_storm[cols] <- log(STRT_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_NO3_storm <- STRT_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_NO3_storm_ascending <- filter(STRT_NO3_storm, limb == "ascending")

STRT_NO3_storm_ascending <- STRT_NO3_storm_ascending[is.finite(STRT_NO3_storm_ascending$Q.norm) & is.finite(STRT_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.strt <- STRT_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
VAUL_NO3_storm$storm.ID = c(rep("storm10", 195),
                            rep("stor11", 400),
                            rep("storm12", 171),
                            rep("storm13", 319),
                            rep("storm14", 211),
                            rep("storm1a", 111),
                            rep("storm1b", 234),
                            rep("storm1c", 406),
                            rep("storm2", 182),
                            rep("storm3", 310),
                            rep("storm4", 318),
                            rep("storm5", 198),
                            rep("storm6a", 107),
                            rep("storm6b", 511),
                            rep("storm7", 284),
                            rep("storm8", 91),
                            rep("storm9", 95))

names(VAUL_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
VAUL_NO3_storm$site.ID <- "VAUL"

VAUL_NO3_storm[cols] <- log(VAUL_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_NO3_storm <- VAUL_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_NO3_storm_ascending <- filter(VAUL_NO3_storm, limb == "ascending")

VAUL_NO3_storm_ascending <- VAUL_NO3_storm_ascending[is.finite(VAUL_NO3_storm_ascending$Q.norm) & is.finite(VAUL_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.vaul <- VAUL_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_NO3_storm$storm.ID = c(rep("storm1", 0),
                            rep("storm2a", 103),
                            rep("storm2b", 95),
                            rep("storm2c", 155),
                            rep("storm3", 262),
                            rep("storm4", 155),
                            rep("storm5", 219),
                            rep("storm6", 183),
                            rep("storm7", 307),
                            rep("storm8a", 111),
                            rep("storm8b", 473),
                            rep("storm9", 99))

names(CARI_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
CARI_NO3_storm$site.ID <- "CARI"

CARI_NO3_storm[cols] <- log(CARI_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_NO3_storm <- CARI_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_NO3_storm_ascending <- filter(CARI_NO3_storm, limb == "ascending")

CARI_NO3_storm_ascending <- CARI_NO3_storm_ascending[is.finite(CARI_NO3_storm_ascending$Q.norm) & is.finite(CARI_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.cari <- CARI_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# ALL # 

All_NO3_storm <- rbind(FRCH_NO3_storm_ascending, MOOS_NO3_storm_ascending, 
                       POKE_NO3_storm_ascending, VAUL_NO3_storm_ascending, 
                       STRT_NO3_storm_ascending, CARI_NO3_storm_ascending)

beta.all.no3 <- All_NO3_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site


beta.all.no3$response_var <- "NO3"

all.2020.ci.no3 <- All_NO3_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(NO3.norm ~ Q.norm, data = .x)))

all.2020.ci.no3$response_var <- "NO3"


##### fDOM #####
FRCH_fDOM_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_fDOM_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
POKE_fDOM_storm <- map2_df(POKE_Q_storm_list_beta, POKE_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
STRT_fDOM_storm <- map2_df(STRT_Q_storm_list_beta, STRT_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
VAUL_fDOM_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_fDOM_storm_list_beta, inner_join, by = "valuedatetime")
CARI_fDOM_storm <- map2_df(CARI_Q_storm_list_beta, CARI_fDOM_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_fDOM_storm$storm.ID = c(rep("storm1", 487),
                             rep("storm10a", 255),
                             rep("storm10b", 439),
                             rep("storm11", 91),
                             rep("storm12", 67),
                             rep("storm13", 211),
                             rep("storm2", 123),
                             rep("storm3a", 163),
                             rep("storm3b", 435),
                             rep("storm3c", 159),
                             rep("storm4a", 187),
                             rep("storm4b", 203),
                             rep("storm5", 62),
                             rep("storm6", 103),
                             rep("storm7", 339),
                             rep("storm8", 383),
                             rep("storm9a", 139),
                             rep("storm9b", 313))

names(FRCH_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
FRCH_fDOM_storm$site.ID <- "FRCH"

cols <- c("fDOM.norm","Q.norm")
FRCH_fDOM_storm[cols] <- log(FRCH_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_fDOM_storm <- FRCH_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_fDOM_storm_ascending <- filter(FRCH_fDOM_storm, limb == "ascending")

FRCH_fDOM_storm_ascending <- FRCH_fDOM_storm_ascending[is.finite(FRCH_fDOM_storm_ascending$Q.norm) & is.finite(FRCH_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM <- FRCH_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_fDOM_storm$storm.ID = c(rep("storm1", 691),
                             rep("storm2", 327),
                             rep("storm3", 129),
                             rep("storm4", 321),
                             rep("storm5", 252),
                             rep("storm6a", 108),
                             rep("storm6b", 288),
                             rep("storm7a", 276),
                             rep("storm7b", 186),
                             rep("storm8", 195),
                             rep("storm9", 405))
names(MOOS_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
MOOS_fDOM_storm$site.ID <- "MOOS"

MOOS_fDOM_storm[cols] <- log(MOOS_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_fDOM_storm <- MOOS_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_fDOM_storm_ascending <- filter(MOOS_fDOM_storm, limb == "ascending")

MOOS_fDOM_storm_ascending <- MOOS_fDOM_storm_ascending[is.finite(MOOS_fDOM_storm_ascending$Q.norm) & is.finite(MOOS_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.moos.with.all <- MOOS_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# POKE # 
POKE_fDOM_storm$storm.ID = c(rep("storm1", 95),
                              rep("storm10", 99),
                              rep("storm11", 199),
                              rep("storm12", 307),
                              rep("storm13", 87),
                              rep("storm14", 383),
                              rep("storm15", 335),
                              rep("storm16", 95),
                              rep("storm17", 119),
                              rep("storm18", 95),
                              rep("storm19", 135),
                              rep("storm20", 87),
                              rep("storm21", 139),
                              rep("storm22a", 219),
                              rep("storm2", 107),
                              rep("storm3", 120),
                              rep("storm4a", 98),
                              rep("storm4b", 95),
                              rep("storm4c", 159),
                              rep("storm5", 219),
                              rep("storm6", 95),
                              rep("storm7", 127),
                              rep("storm8", 135),
                              rep("storm9", 265))

names(POKE_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
POKE_fDOM_storm$site.ID <- "POKE"

POKE_fDOM_storm[cols] <- log(POKE_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_fDOM_storm <- POKE_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_fDOM_storm_ascending <- filter(POKE_fDOM_storm, limb == "ascending")

POKE_fDOM_storm_ascending <- POKE_fDOM_storm_ascending[is.finite(POKE_fDOM_storm_ascending$Q.norm) & is.finite(POKE_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.moos.with.all <- POKE_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# STRT # 
STRT_fDOM_storm$storm.ID = c(rep("storm10", 247),
                             rep("storm1a", 108),
                             rep("storm1b", 162),
                             rep("storm1c", 106),
                             rep("storm1d", 87),
                             rep("storm1e", 445),
                             rep("storm2", 167),
                             rep("storm3", 387),
                             rep("storm4a", 141),
                             rep("storm4b", 323),
                             rep("storm5", 239),
                             rep("storm6", 123),
                             rep("storm7a", 99),
                             rep("storm7b", 96),
                             rep("storm8", 83),
                             rep("storm9a", 295),
                             rep("storm9b", 135),
                             rep("storm9c", 483))

names(STRT_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
STRT_fDOM_storm$site.ID <- "STRT"

STRT_fDOM_storm[cols] <- log(STRT_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}

STRT_fDOM_storm <- na.omit(STRT_fDOM_storm)

STRT_fDOM_storm <- STRT_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_fDOM_storm_ascending <- filter(STRT_fDOM_storm, limb == "ascending")

STRT_fDOM_storm_ascending <- STRT_fDOM_storm_ascending[is.finite(STRT_fDOM_storm_ascending$Q.norm) & is.finite(STRT_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.strt <- STRT_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
VAUL_fDOM_storm$storm.ID = c(rep("storm10", 195),
                             rep("stor11", 400),
                             rep("storm12", 171),
                             rep("storm13", 319),
                             rep("storm14", 211),
                             rep("storm1a", 111),
                             rep("storm1b", 234),
                             rep("storm1c", 406),
                             rep("storm2", 182),
                             rep("storm3", 310),
                             rep("storm4", 318),
                             rep("storm5", 198),
                             rep("storm6a", 107),
                             rep("storm6b", 511),
                             rep("storm7", 284),
                             rep("storm8", 91),
                             rep("storm9", 95))

names(VAUL_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
VAUL_fDOM_storm$site.ID <- "VAUL"

VAUL_fDOM_storm[cols] <- log(VAUL_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_fDOM_storm <- VAUL_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_fDOM_storm_ascending <- filter(VAUL_fDOM_storm, limb == "ascending")

VAUL_fDOM_storm_ascending <- VAUL_fDOM_storm_ascending[is.finite(VAUL_fDOM_storm_ascending$Q.norm) & is.finite(VAUL_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.vaul <- VAUL_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_fDOM_storm$storm.ID = c(rep("storm1", 0),
                             rep("storm2a", 103),
                             rep("storm2b", 95),
                             rep("storm2c", 155),
                             rep("storm3", 262),
                             rep("storm4", 155),
                             rep("storm5", 219),
                             rep("storm6", 183),
                             rep("storm7", 307),
                             rep("storm8a", 111),
                             rep("storm8b", 473),
                             rep("storm9", 99))

names(CARI_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
CARI_fDOM_storm$site.ID <- "CARI"

CARI_fDOM_storm[cols] <- log(CARI_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_fDOM_storm <- CARI_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_fDOM_storm_ascending <- filter(CARI_fDOM_storm, limb == "ascending")

CARI_fDOM_storm_ascending <- CARI_fDOM_storm_ascending[is.finite(CARI_fDOM_storm_ascending$Q.norm) & is.finite(CARI_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fdom.cari <- CARI_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site


# ALL # 
All_fDOM_storm <- rbind(FRCH_fDOM_storm_ascending, MOOS_fDOM_storm_ascending, 
                        POKE_fDOM_storm_ascending, VAUL_fDOM_storm_ascending,
                        STRT_fDOM_storm_ascending, CARI_fDOM_storm_ascending)

beta.all.fdom <- All_fDOM_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site


beta.all.fdom$response_var <- "fDOM"

all.2020.ci.fDOM <- All_fDOM_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(fDOM.norm ~ Q.norm, data = .x)))

all.2020.ci.fDOM$response_var <- "fDOM"


##### SPC #####
FRCH_SPC_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_SPC_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
POKE_SPC_storm <- map2_df(POKE_Q_storm_list_beta, POKE_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
STRT_SPC_storm <- map2_df(STRT_Q_storm_list_beta, STRT_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
VAUL_SPC_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_SpCond_storm_list_beta, inner_join, by = "valuedatetime")
CARI_SPC_storm <- map2_df(CARI_Q_storm_list_beta, CARI_SpCond_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_SPC_storm$storm.ID = c(rep("storm1", 487),
                            rep("storm10a", 255),
                            rep("storm10b", 439),
                            rep("storm11", 91),
                            rep("storm12", 67),
                            rep("storm13", 211),
                            rep("storm2", 123),
                            rep("storm3a", 163),
                            rep("storm3b", 435),
                            rep("storm3c", 159),
                            rep("storm4a", 187),
                            rep("storm4b", 203),
                            rep("storm5", 62),
                            rep("storm6", 103),
                            rep("storm7", 339),
                            rep("storm8", 383),
                            rep("storm9a", 139),
                            rep("storm9b", 313))

names(FRCH_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
FRCH_SPC_storm$site.ID <- "FRCH"

cols <- c("SPC.norm","Q.norm")
FRCH_SPC_storm[cols] <- log(FRCH_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_SPC_storm <- FRCH_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_SPC_storm_ascending <- filter(FRCH_SPC_storm, limb == "ascending")

FRCH_SPC_storm_ascending <- FRCH_SPC_storm_ascending[is.finite(FRCH_SPC_storm_ascending$Q.norm) & is.finite(FRCH_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC <- FRCH_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_SPC_storm$storm.ID = c(rep("storm1", 691),
                            rep("storm2", 327),
                            rep("storm3", 129),
                            rep("storm4", 321),
                            rep("storm5", 252),
                            rep("storm6a", 108),
                            rep("storm6b", 288),
                            rep("storm7a", 276),
                            rep("storm7b", 186),
                            rep("storm8", 195),
                            rep("storm9", 405))
names(MOOS_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
MOOS_SPC_storm$site.ID <- "MOOS"

MOOS_SPC_storm[cols] <- log(MOOS_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_SPC_storm <- MOOS_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_SPC_storm_ascending <- filter(MOOS_SPC_storm, limb == "ascending")

MOOS_SPC_storm_ascending <- MOOS_SPC_storm_ascending[is.finite(MOOS_SPC_storm_ascending$Q.norm) & is.finite(MOOS_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.moos.with.all <- MOOS_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# POKE # 
POKE_SPC_storm$storm.ID = c(rep("storm1", 95),
                             rep("storm10", 99),
                             rep("storm11", 199),
                             rep("storm12", 307),
                             rep("storm13", 87),
                             rep("storm14", 383),
                             rep("storm15", 335),
                             rep("storm16", 95),
                             rep("storm17", 119),
                             rep("storm18", 95),
                             rep("storm19", 135),
                             rep("storm20", 87),
                             rep("storm21", 139),
                             rep("storm22a", 219),
                             rep("storm2", 107),
                             rep("storm3", 120),
                             rep("storm4a", 98),
                             rep("storm4b", 95),
                             rep("storm4c", 159),
                             rep("storm5", 219),
                             rep("storm6", 95),
                             rep("storm7", 127),
                             rep("storm8", 135),
                             rep("storm9", 265))

names(POKE_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
POKE_SPC_storm$site.ID <- "POKE"

POKE_SPC_storm[cols] <- log(POKE_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_SPC_storm <- POKE_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_SPC_storm_ascending <- filter(POKE_SPC_storm, limb == "ascending")

POKE_SPC_storm_ascending <- POKE_SPC_storm_ascending[is.finite(POKE_SPC_storm_ascending$Q.norm) & is.finite(POKE_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.moos.with.all <- POKE_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# STRT # 
STRT_SPC_storm$storm.ID = c(rep("storm10", 247),
                            rep("storm1a", 108),
                            rep("storm1b", 162),
                            rep("storm1c", 106),
                            rep("storm1d", 87),
                            rep("storm1e", 445),
                            rep("storm2", 167),
                            rep("storm3", 387),
                            rep("storm4a", 141),
                            rep("storm4b", 323),
                            rep("storm5", 239),
                            rep("storm6", 123),
                            rep("storm7a", 99),
                            rep("storm7b", 96),
                            rep("storm8", 83),
                            rep("storm9a", 295),
                            rep("storm9b", 135),
                            rep("storm9c", 483))

names(STRT_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
STRT_SPC_storm$site.ID <- "STRT"

STRT_SPC_storm[cols] <- log(STRT_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_SPC_storm <- STRT_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_SPC_storm_ascending <- filter(STRT_SPC_storm, limb == "ascending")

STRT_SPC_storm_ascending <- STRT_SPC_storm_ascending[is.finite(STRT_SPC_storm_ascending$Q.norm) & is.finite(STRT_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.strt <- STRT_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
VAUL_SPC_storm$storm.ID = c(rep("storm10", 195),
                            rep("stor11", 400),
                            rep("storm12", 171),
                            rep("storm13", 319),
                            rep("storm14", 211),
                            rep("storm1a", 111),
                            rep("storm1b", 234),
                            rep("storm1c", 406),
                            rep("storm2", 182),
                            rep("storm3", 310),
                            rep("storm4", 318),
                            rep("storm5", 198),
                            rep("storm6a", 107),
                            rep("storm6b", 511),
                            rep("storm7", 284),
                            rep("storm8", 91),
                            rep("storm9", 95))

names(VAUL_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
VAUL_SPC_storm$site.ID <- "VAUL"

VAUL_SPC_storm[cols] <- log(VAUL_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_SPC_storm <- VAUL_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_SPC_storm_ascending <- filter(VAUL_SPC_storm, limb == "ascending")

VAUL_SPC_storm_ascending <- VAUL_SPC_storm_ascending[is.finite(VAUL_SPC_storm_ascending$Q.norm) & is.finite(VAUL_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.vaul <- VAUL_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_SPC_storm$storm.ID = c(rep("storm1", 0),
                            rep("storm2a", 103),
                            rep("storm2b", 95),
                            rep("storm2c", 155),
                            rep("storm3", 262),
                            rep("storm4", 155),
                            rep("storm5", 219),
                            rep("storm6", 183),
                            rep("storm7", 307),
                            rep("storm8a", 111),
                            rep("storm8b", 473),
                            rep("storm9", 99))

names(CARI_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
CARI_SPC_storm$site.ID <- "CARI"

CARI_SPC_storm[cols] <- log(CARI_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_SPC_storm <- CARI_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_SPC_storm_ascending <- filter(CARI_SPC_storm, limb == "ascending")

CARI_SPC_storm_ascending <- CARI_SPC_storm_ascending[is.finite(CARI_SPC_storm_ascending$Q.norm) & is.finite(CARI_SPC_storm_ascending$SPC.norm), ]

beta.all.spc.cari <- CARI_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site


# ALL # 

All_SPC_storm <- rbind(FRCH_SPC_storm_ascending, MOOS_SPC_storm_ascending,
                       POKE_SPC_storm_ascending, VAUL_SPC_storm_ascending,
                       STRT_SPC_storm_ascending, CARI_SPC_storm_ascending)
                       

beta.all.SPC <- All_SPC_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site


beta.all.SPC$response_var <- "SPC"

all.2020.ci.SPC <- All_SPC_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(SPC.norm ~ Q.norm, data = .x)))

all.2020.ci.SPC$response_var <- "SPC"


##### Turb #####
FRCH_turb_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_turb_storm_list_beta, inner_join, by = "valuedatetime")
MOOS_turb_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_turb_storm_list_beta, inner_join, by = "valuedatetime")
POKE_turb_storm <- map2_df(POKE_Q_storm_list_beta, POKE_turb_storm_list_beta, inner_join, by = "valuedatetime")
STRT_turb_storm <- map2_df(STRT_Q_storm_list_beta, STRT_turb_storm_list_beta, inner_join, by = "valuedatetime")
VAUL_turb_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_turb_storm_list_beta, inner_join, by = "valuedatetime")
CARI_turb_storm <- map2_df(CARI_Q_storm_list_beta, CARI_turb_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_turb_storm$storm.ID = c(rep("storm1", 487),
                             rep("storm10a", 255),
                             rep("storm10b", 439),
                             rep("storm11", 91),
                             rep("storm12", 67),
                             rep("storm13", 211),
                             rep("storm2", 123),
                             rep("storm3a", 163),
                             rep("storm3b", 435),
                             rep("storm3c", 159),
                             rep("storm4a", 187),
                             rep("storm4b", 203),
                             rep("storm5", 62),
                             rep("storm6", 103),
                             rep("storm7", 339),
                             rep("storm8", 383),
                             rep("storm9a", 139),
                             rep("storm9b", 313))

names(FRCH_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
FRCH_turb_storm$site.ID <- "FRCH"

cols <- c("turb.norm","Q.norm")
FRCH_turb_storm[cols] <- log(FRCH_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_turb_storm <- FRCH_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_turb_storm_ascending <- filter(FRCH_turb_storm, limb == "ascending")

FRCH_turb_storm_ascending <- FRCH_turb_storm_ascending[is.finite(FRCH_turb_storm_ascending$Q.norm) & is.finite(FRCH_turb_storm_ascending$turb.norm), ]

beta.all.turb <- FRCH_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
MOOS_turb_storm$storm.ID = c(rep("storm1", 691),
                             rep("storm2", 327),
                             rep("storm3", 129),
                             rep("storm4", 321),
                             rep("storm5", 252),
                             rep("storm6a", 108),
                             rep("storm6b", 288),
                             rep("storm7a", 276),
                             rep("storm7b", 186),
                             rep("storm8", 195),
                             rep("storm9", 405))

names(MOOS_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
MOOS_turb_storm$site.ID <- "MOOS"

MOOS_turb_storm[cols] <- log(MOOS_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_turb_storm <- MOOS_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_turb_storm_ascending <- filter(MOOS_turb_storm, limb == "ascending")

MOOS_turb_storm_ascending <- MOOS_turb_storm_ascending[is.finite(MOOS_turb_storm_ascending$Q.norm) & is.finite(MOOS_turb_storm_ascending$turb.norm), ]

beta.all.turb.moos.with.all <- MOOS_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# POKE # 
POKE_turb_storm$storm.ID = c(rep("storm1", 95),
                              rep("storm10", 99),
                              rep("storm11", 199),
                              rep("storm12", 307),
                              rep("storm13", 87),
                              rep("storm14", 383),
                              rep("storm15", 335),
                              rep("storm16", 95),
                              rep("storm17", 119),
                              rep("storm18", 95),
                              rep("storm19", 135),
                              rep("storm20", 87),
                              rep("storm21", 139),
                              rep("storm22a", 219),
                              rep("storm2", 107),
                              rep("storm3", 120),
                              rep("storm4a", 98),
                              rep("storm4b", 95),
                              rep("storm4c", 159),
                              rep("storm5", 219),
                              rep("storm6", 95),
                              rep("storm7", 127),
                              rep("storm8", 135),
                              rep("storm9", 265))

names(POKE_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
POKE_turb_storm$site.ID <- "POKE"

POKE_turb_storm[cols] <- log(POKE_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_turb_storm <- POKE_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_turb_storm_ascending <- filter(POKE_turb_storm, limb == "ascending")

POKE_turb_storm_ascending <- POKE_turb_storm_ascending[is.finite(POKE_turb_storm_ascending$Q.norm) & is.finite(POKE_turb_storm_ascending$turb.norm), ]

beta.all.turb.moos.with.all <- POKE_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# STRT # 
STRT_turb_storm$storm.ID = c(rep("storm10", 247),
                             rep("storm1a", 108),
                             rep("storm1b", 162),
                             rep("storm1c", 106),
                             rep("storm1d", 87),
                             rep("storm1e", 445),
                             rep("storm2", 167),
                             rep("storm3", 387),
                             rep("storm4a", 141),
                             rep("storm4b", 323),
                             rep("storm5", 239),
                             rep("storm6", 123),
                             rep("storm7a", 99),
                             rep("storm7b", 96),
                             rep("storm8", 83),
                             rep("storm9a", 295),
                             rep("storm9b", 135),
                             rep("storm9c", 483))

names(STRT_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
STRT_turb_storm$site.ID <- "STRT"

STRT_turb_storm[cols] <- log(STRT_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_turb_storm <- STRT_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_turb_storm_ascending <- filter(STRT_turb_storm, limb == "ascending")

STRT_turb_storm_ascending <- STRT_turb_storm_ascending[is.finite(STRT_turb_storm_ascending$Q.norm) & is.finite(STRT_turb_storm_ascending$turb.norm), ]

beta.all.turb.strt <- STRT_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
VAUL_turb_storm$storm.ID = c(rep("storm10", 195),
                             rep("stor11", 400),
                             rep("storm12", 171),
                             rep("storm13", 319),
                             rep("storm14", 211),
                             rep("storm1a", 111),
                             rep("storm1b", 234),
                             rep("storm1c", 406),
                             rep("storm2", 182),
                             rep("storm3", 310),
                             rep("storm4", 318),
                             rep("storm5", 198),
                             rep("storm6a", 107),
                             rep("storm6b", 511),
                             rep("storm7", 284),
                             rep("storm8", 91),
                             rep("storm9", 95))

names(VAUL_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
VAUL_turb_storm$site.ID <- "VAUL"

VAUL_turb_storm[cols] <- log(VAUL_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_turb_storm <- VAUL_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_turb_storm_ascending <- filter(VAUL_turb_storm, limb == "ascending")

VAUL_turb_storm_ascending <- VAUL_turb_storm_ascending[is.finite(VAUL_turb_storm_ascending$Q.norm) & is.finite(VAUL_turb_storm_ascending$turb.norm), ]

beta.all.turb.vaul <- VAUL_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_turb_storm$storm.ID = c(rep("storm1", 0),
                             rep("storm2a", 103),
                             rep("storm2b", 95),
                             rep("storm2c", 155),
                             rep("storm3", 262),
                             rep("storm4", 155),
                             rep("storm5", 219),
                             rep("storm6", 183),
                             rep("storm7", 307),
                             rep("storm8a", 111),
                             rep("storm8b", 473),
                             rep("storm9", 99))

names(CARI_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
CARI_turb_storm$site.ID <- "CARI"

CARI_turb_storm[cols] <- log(CARI_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_turb_storm <- CARI_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_turb_storm_ascending <- filter(CARI_turb_storm, limb == "ascending")

CARI_turb_storm_ascending <- CARI_turb_storm_ascending[is.finite(CARI_turb_storm_ascending$Q.norm) & is.finite(CARI_turb_storm_ascending$turb.norm), ]

beta.all.turb.cari <- CARI_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site


# ALL # 
All_turb_storm<- rbind(FRCH_turb_storm_ascending, MOOS_turb_storm_ascending,
                        POKE_turb_storm_ascending, VAUL_turb_storm_ascending,
                        STRT_turb_storm_ascending, CARI_turb_storm_ascending )

beta.all.turb <- All_turb_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site


beta.all.turb$response_var <- "turb"

all.2020.ci.turb <- All_turb_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(turb.norm ~ Q.norm, data = .x)))

all.2020.ci.turb$response_var <- "turb"


beta.all.2020 <- rbind(all.2020.ci.no3, all.2020.ci.fDOM,
                       all.2020.ci.SPC, all.2020.ci.turb)

write.csv(beta.all.2020, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/beta/beta.2020.csv")

beta.all.2020 <- beta.all.2020 %>% 
  filter(Parameter != "(Intercept)")
#### plot ####
HI_2020 <- read_csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2020.csv")
names(HI_2020)[names(HI_2020) == 'storm.num'] <- 'storm.ID'
names(HI_2020)[names(HI_2020) == 'response'] <- 'response_var'

HI_beta = left_join(HI_2020, beta.all.2020, by=c("site.ID", "storm.ID", "response_var"))


HI_FI <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2020.csv")

HI_FI_beta = left_join(HI_FI, beta.all.2020, by=c("site.ID", "storm.ID", "response_var"))

write.csv(HI_FI_beta, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI_beta.diff_results_2020.csv")

# NO3 #
HI_FI_NO3 = subset(HI_FI_beta, response_var == "NO3")
HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_NO3.p = 
  ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_NO3.p

# NO3 #
HI_beta_NO3 = subset(HI_beta, response_var == "NO3")
HI_beta_NO3$site.ID <- factor(HI_beta_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_beta_NO3.p = 
  ggplot(HI_beta_NO3, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI_beta, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

HI_beta_fDOM = subset(HI_beta, response_var == "fDOM")
HI_beta_fDOM$site.ID <- factor(HI_beta_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_beta_fDOM.p = 
  ggplot(HI_beta_fDOM, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_fDOM.p

# SPC#
HI_FI_SPC = subset(HI_FI_beta, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p


HI_beta_SPC = subset(HI_beta, response_var == "SPC")
HI_beta_SPC$site.ID <- factor(HI_beta_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_beta_SPC.p = 
  ggplot(HI_beta_SPC, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_SPC.p

# turb #
HI_FI_turb = subset(HI_beta, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


HI_beta_turb = subset(HI_beta, response_var == "turb")
HI_beta_turb$site.ID <- factor(HI_beta_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_beta_turb.p = 
  ggplot(HI_beta_turb, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_turb.p

grid.arrange(HI_beta_NO3.p, HI_beta_fDOM.p, HI_beta_SPC.p, HI_beta_turb.p)

#### Regression between beta and FI #######
FI_beta_comp = 
  ggplot(HI_FI_NO3, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp

FI_beta_comp_fDOM = 
  ggplot(HI_FI_fDOM, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_fDOM

FI_beta_comp_SPC = 
  ggplot(HI_FI_SPC, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_SPC

FI_beta_comp_turb = 
  ggplot(HI_FI_turb, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_turb


grid.arrange(FI_beta_comp_NO3, FI_beta_comp_fDOM, FI_beta_comp_SPC, FI_beta_comp_turb)


















########################################## 2021 ##########################################################
storm_file_list_beta <- list.files(path="~/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI/", 
                                   recursive=F, 
                                   pattern=".csv", 
                                   full.names=TRUE)

storm_list_beta<-do.call("list", lapply(storm_file_list_beta, 
                                        read.csv, 
                                        stringsAsFactors=FALSE, 
                                        header=T, row.names=1))

storm_file_list_beta = sub("~/Documents/Storms/Storm_Events/2021/FRCH_MOOS_VAUL_POKE_STRT_CARI//", storm_file_list_beta, replacement = "")
storm_file_list_beta = sub(".csv", storm_file_list_beta, replacement = "")
names(storm_list_beta) = storm_file_list_beta


#  organize storm data by site and solute # 5 for each storm 
CARI_storm_list_beta = storm_list_beta[c(1:55)] #50
FRCH_storm_list_beta = storm_list_beta[c(56:105)] #50
MOOS_storm_list_beta = storm_list_beta[c(106:155)] #50
POKE_storm_list_beta = storm_list_beta[c(156:205)]# 50
STRT_storm_list_beta = storm_list_beta[c(206:230)] #25
VAUL_storm_list_beta = storm_list_beta[c(231:270)] #40

for(i in 1:length(CARI_storm_list_beta)){
  CARI_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(CARI_storm_list_beta[[i]][["valuedatetime"]],
                                                       "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 

CARI_NO3_storm_list_beta = CARI_storm_list_beta[c(grep("NO3", names(CARI_storm_list_beta)))]
CARI_fDOM_storm_list_beta = CARI_storm_list_beta[c(grep("fDOM", names(CARI_storm_list_beta)))]
CARI_SpCond_storm_list_beta = CARI_storm_list_beta[c(grep("SPC", names(CARI_storm_list_beta)))]
CARI_turb_storm_list_beta = CARI_storm_list_beta[c(grep("Turb", names(CARI_storm_list_beta)))]
CARI_Q_storm_list_beta = CARI_storm_list_beta[c(grep("Q", names(CARI_storm_list_beta)))]

FRCH_NO3_storm_list_beta = FRCH_storm_list_beta[c(grep("NO3", names(FRCH_storm_list_beta)))]
FRCH_fDOM_storm_list_beta = FRCH_storm_list_beta[c(grep("fDOM", names(FRCH_storm_list_beta)))]
FRCH_SpCond_storm_list_beta = FRCH_storm_list_beta[c(grep("SPC", names(FRCH_storm_list_beta)))]
FRCH_turb_storm_list_beta = FRCH_storm_list_beta[c(grep("Turb", names(FRCH_storm_list_beta)))]
FRCH_Q_storm_list_beta = FRCH_storm_list_beta[c(grep("Q", names(FRCH_storm_list_beta)))]


for(i in 1:length(FRCH_Q_storm_list_beta)){
  FRCH_Q_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(FRCH_Q_storm_list_beta[[i]][["valuedatetime"]],
                                                              "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
  
} 

for(i in 1:length(FRCH_NO3_storm_list_beta)){
  FRCH_NO3_storm_list_beta[[i]][["valuedatetime"]] = mdy_hm(FRCH_NO3_storm_list_beta[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(FRCH_fDOM_storm_list_beta)){
  FRCH_fDOM_storm_list_beta[[i]][["valuedatetime"]] = mdy_hm(FRCH_fDOM_storm_list_beta[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(FRCH_SpCond_storm_list_beta)){
  FRCH_SpCond_storm_list_beta[[i]][["valuedatetime"]] = mdy_hm(FRCH_SpCond_storm_list_beta[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(FRCH_turb_storm_list_beta)){
  FRCH_turb_storm_list_beta[[i]][["valuedatetime"]] = mdy_hm(FRCH_turb_storm_list_beta[[i]][["valuedatetime"]])
  
} 


for(i in 1:length(MOOS_storm_list_beta)){
  MOOS_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(MOOS_storm_list_beta[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 
MOOS_NO3_storm_list_beta = MOOS_storm_list_beta[c(grep("NO3", names(MOOS_storm_list_beta)))]
MOOS_fDOM_storm_list_beta = MOOS_storm_list_beta[c(grep("fDOM", names(MOOS_storm_list_beta)))]
MOOS_SpCond_storm_list_beta = MOOS_storm_list_beta[c(grep("SPC", names(MOOS_storm_list_beta)))]
MOOS_turb_storm_list_beta = MOOS_storm_list_beta[c(grep("Turb", names(MOOS_storm_list_beta)))]
MOOS_Q_storm_list_beta = MOOS_storm_list_beta[c(grep("Q", names(MOOS_storm_list_beta)))]

for(i in 1:length(POKE_storm_list_beta)){
  POKE_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(POKE_storm_list_beta[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 
POKE_NO3_storm_list_beta = POKE_storm_list_beta[c(grep("NO3", names(POKE_storm_list_beta)))]
POKE_fDOM_storm_list_beta = POKE_storm_list_beta[c(grep("fDOM", names(POKE_storm_list_beta)))]
POKE_SpCond_storm_list_beta = POKE_storm_list_beta[c(grep("SPC", names(POKE_storm_list_beta)))]
POKE_turb_storm_list_beta = POKE_storm_list_beta[c(grep("Turb", names(POKE_storm_list_beta)))]
POKE_Q_storm_list_beta = POKE_storm_list_beta[c(grep("Q", names(POKE_storm_list_beta)))]

STRT_NO3_storm_list_beta = STRT_storm_list_beta[c(grep("NO3", names(STRT_storm_list_beta)))]
STRT_fDOM_storm_list_beta = STRT_storm_list_beta[c(grep("fDOM", names(STRT_storm_list_beta)))]
STRT_SpCond_storm_list_beta = STRT_storm_list_beta[c(grep("SPC", names(STRT_storm_list_beta)))]
STRT_turb_storm_list_beta = STRT_storm_list_beta[c(grep("Turb", names(STRT_storm_list_beta)))]
STRT_Q_storm_list_beta = STRT_storm_list_beta[c(grep("Q", names(STRT_storm_list_beta)))]


for(i in 1:length(STRT_Q_storm_list_beta)){
  STRT_Q_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(STRT_Q_storm_list_beta[[i]][["valuedatetime"]],
                                                              "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
  
} 

for(i in 1:length(STRT_NO3_storm_list_beta)){
  STRT_NO3_storm_list_beta[[i]][["valuedatetime"]] = mdy_hm(STRT_NO3_storm_list_beta[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(STRT_fDOM_storm_list_beta)){
  STRT_fDOM_storm_list_beta[[i]][["valuedatetime"]] = mdy_hm(STRT_fDOM_storm_list_beta[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(STRT_SpCond_storm_list_beta)){
  STRT_SpCond_storm_list_beta[[i]][["valuedatetime"]] = mdy_hm(STRT_SpCond_storm_list_beta[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(STRT_turb_storm_list_beta)){
  STRT_turb_storm_list_beta[[i]][["valuedatetime"]] = mdy_hm(STRT_turb_storm_list_beta[[i]][["valuedatetime"]])
  
} 

for(i in 1:length(VAUL_storm_list_beta)){
  VAUL_storm_list_beta[[i]][["valuedatetime"]] = as.POSIXct(VAUL_storm_list_beta[[i]][["valuedatetime"]],
                                                            "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
} 
VAUL_NO3_storm_list_beta = VAUL_storm_list_beta[c(grep("NO3", names(VAUL_storm_list_beta)))]
VAUL_fDOM_storm_list_beta = VAUL_storm_list_beta[c(grep("fDOM", names(VAUL_storm_list_beta)))]
VAUL_SpCond_storm_list_beta = VAUL_storm_list_beta[c(grep("SPC", names(VAUL_storm_list_beta)))]
VAUL_turb_storm_list_beta = VAUL_storm_list_beta[c(grep("Turb", names(VAUL_storm_list_beta)))]
VAUL_Q_storm_list_beta = VAUL_storm_list_beta[c(grep("Q", names(VAUL_storm_list_beta)))]

# normalize Q data 
# FRCH
for(i in 1:length(FRCH_Q_storm_list_beta)){
  FRCH_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_Q_storm_list_beta[[i]][["datavalue"]]-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# MOOS
for(i in 1:length(MOOS_Q_storm_list_beta)){
  MOOS_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_Q_storm_list_beta[[i]][["datavalue"]]-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# POKE
for(i in 1:length(POKE_Q_storm_list_beta)){
  POKE_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_Q_storm_list_beta[[i]][["datavalue"]]-min(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# STRT
for(i in 1:length(STRT_Q_storm_list_beta)){
  STRT_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_Q_storm_list_beta[[i]][["datavalue"]]-min(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# VAUL
for(i in 1:length(VAUL_Q_storm_list_beta)){
  VAUL_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_Q_storm_list_beta[[i]][["datavalue"]]-min(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# CARI
for(i in 1:length(CARI_Q_storm_list_beta)){
  CARI_Q_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_Q_storm_list_beta[[i]][["datavalue"]]-min(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_Q_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

# normalize solute data 
# 
#NO3
for(i in 1:length(FRCH_NO3_storm_list_beta)){
  FRCH_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_NO3_storm_list_beta[[i]][["datavalue"]]-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_NO3_storm_list_beta)){
  MOOS_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_NO3_storm_list_beta[[i]][["datavalue"]]-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_NO3_storm_list_beta)){
  POKE_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_NO3_storm_list_beta[[i]][["datavalue"]]-min(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_NO3_storm_list_beta)){
  STRT_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_NO3_storm_list_beta[[i]][["datavalue"]]-min(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_NO3_storm_list_beta)){
  VAUL_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_NO3_storm_list_beta[[i]][["datavalue"]]-min(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_NO3_storm_list_beta)){
  CARI_NO3_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_NO3_storm_list_beta[[i]][["datavalue"]]-min(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_NO3_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#fDOM
for(i in 1:length(FRCH_fDOM_storm_list_beta)){
  FRCH_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_fDOM_storm_list_beta[[i]][["datavalue"]]-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_fDOM_storm_list_beta)){
  MOOS_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_fDOM_storm_list_beta[[i]][["datavalue"]]-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_fDOM_storm_list_beta)){
  POKE_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_fDOM_storm_list_beta[[i]][["datavalue"]]-min(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_fDOM_storm_list_beta)){
  STRT_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_fDOM_storm_list_beta[[i]][["datavalue"]]-min(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_fDOM_storm_list_beta)){
  VAUL_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_fDOM_storm_list_beta[[i]][["datavalue"]]-min(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_fDOM_storm_list_beta)){
  CARI_fDOM_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_fDOM_storm_list_beta[[i]][["datavalue"]]-min(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_fDOM_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#SPC
for(i in 1:length(FRCH_SpCond_storm_list_beta)){
  FRCH_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_SpCond_storm_list_beta[[i]][["datavalue"]]-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_SpCond_storm_list_beta)){
  MOOS_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_SpCond_storm_list_beta[[i]][["datavalue"]]-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_SpCond_storm_list_beta)){
  POKE_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_SpCond_storm_list_beta[[i]][["datavalue"]]-min(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_SpCond_storm_list_beta)){
  STRT_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_SpCond_storm_list_beta[[i]][["datavalue"]]-min(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_SpCond_storm_list_beta)){
  VAUL_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_SpCond_storm_list_beta[[i]][["datavalue"]]-min(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_SpCond_storm_list_beta)){
  CARI_SpCond_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_SpCond_storm_list_beta[[i]][["datavalue"]]-min(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_SpCond_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

#Turb
for(i in 1:length(FRCH_turb_storm_list_beta)){
  FRCH_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (FRCH_turb_storm_list_beta[[i]][["datavalue"]]-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(FRCH_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(MOOS_turb_storm_list_beta)){
  MOOS_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (MOOS_turb_storm_list_beta[[i]][["datavalue"]]-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(MOOS_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(POKE_turb_storm_list_beta)){
  POKE_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (POKE_turb_storm_list_beta[[i]][["datavalue"]]-min(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(POKE_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(STRT_turb_storm_list_beta)){
  STRT_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (STRT_turb_storm_list_beta[[i]][["datavalue"]]-min(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(STRT_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(VAUL_turb_storm_list_beta)){
  VAUL_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (VAUL_turb_storm_list_beta[[i]][["datavalue"]]-min(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(VAUL_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}

for(i in 1:length(CARI_turb_storm_list_beta)){
  CARI_turb_storm_list_beta[[i]][["datavalue.norm"]] = 
    (CARI_turb_storm_list_beta[[i]][["datavalue"]]-min(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))/
    (max(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T)-min(CARI_turb_storm_list_beta[[i]][["datavalue"]], na.rm=T))
}
###### NO3  #######
FRCH_NO3_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_NO3_storm_list_beta, left_join, by = "valuedatetime")
POKE_NO3_storm <- map2_df(POKE_Q_storm_list_beta, POKE_NO3_storm_list_beta, left_join, by = "valuedatetime")
STRT_NO3_storm <- map2_df(STRT_Q_storm_list_beta, STRT_NO3_storm_list_beta, left_join, by = "valuedatetime")
VAUL_NO3_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_NO3_storm_list_beta, left_join, by = "valuedatetime")
CARI_NO3_storm <- map2_df(CARI_Q_storm_list_beta, CARI_NO3_storm_list_beta, inner_join, by = "valuedatetime")

FRCH_NO3_storm$storm.ID = c(rep("storm2", 303),
                            rep("storm3", 207),
                            rep("storm4", 223),
                            rep("storm5a", 183),
                            rep("storm5b", 259),
                            rep("storm6a", 110),
                            rep("storm6b", 311),
                            rep("storm7", 139),
                            rep("storm8", 465))

names(FRCH_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
FRCH_NO3_storm$site.ID <- "FRCH"

cols <- c("NO3.norm","Q.norm")
FRCH_NO3_storm[cols] <- log(FRCH_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_NO3_storm <- FRCH_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_NO3_storm_ascending <- filter(FRCH_NO3_storm, limb == "ascending")

FRCH_NO3_storm_ascending <- FRCH_NO3_storm_ascending[is.finite(FRCH_NO3_storm_ascending$Q.norm) & is.finite(FRCH_NO3_storm_ascending$NO3.norm), ]

beta.all.no3 <- FRCH_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site


# POKE # 
# POKE_NO3_storm$storm.ID = c(rep("storm1", 235),
#                              rep("storm2", 191),
#                              rep("storm3", 167),
#                              rep("storm4", 575),
#                              rep("storm5", 1106),
#                              rep("storm6", 479),
#                              rep("storm7a", 1355),
#                              rep("storm7b", 791),
#                              rep("storm7c", 299),
#                              rep("storm7d", 455))

POKE_NO3_storm$storm.ID = c(rep("storm1", 235),
                            rep("storm2", 191),
                            rep("storm5", 354),
                            rep("storm5", 152))
                            
                             

names(POKE_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
POKE_NO3_storm$site.ID <- "POKE"

cols <- c("NO3.norm","Q.norm")
POKE_NO3_storm[cols] <- log(POKE_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_NO3_storm <- POKE_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_NO3_storm_ascending <- filter(POKE_NO3_storm, limb == "ascending")

POKE_NO3_storm_ascending <- POKE_NO3_storm_ascending[is.finite(POKE_NO3_storm_ascending$Q.norm) & is.finite(POKE_NO3_storm_ascending$NO3.norm), ]

beta.all.no3 <- POKE_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# STRT # 
# STRT_NO3_storm$storm.ID = c(rep("storm1a", 575),
#                             rep("storm1b", 767),
#                             rep("storm2a", 287),
#                             rep("storm2b", 635),
#                             rep("storm3", 383))

STRT_NO3_storm$storm.ID = c(rep("storm1a", 191),
                            rep("storm1b", 255),
                            rep("storm2a", 95),
                            rep("storm2b", 211),
                            rep("storm3", 127))

names(STRT_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
STRT_NO3_storm$site.ID <- "STRT"

STRT_NO3_storm[cols] <- log(STRT_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_NO3_storm <- STRT_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_NO3_storm_ascending <- filter(STRT_NO3_storm, limb == "ascending")

STRT_NO3_storm_ascending <- STRT_NO3_storm_ascending[is.finite(STRT_NO3_storm_ascending$Q.norm) & is.finite(STRT_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.strt <- STRT_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
# VAUL_NO3_storm$storm.ID = c(rep("storm1a", 1127),
#                             rep("stor1b", 1379),
#                             rep("storm2", 203),
#                             rep("storm3", 2004),
#                             rep("storm4a", 1283),
#                             rep("storm4b", 959),
#                             rep("storm5a", 996),
#                             rep("storm5b", 1155))

VAUL_NO3_storm$storm.ID = c(rep("storm1a", 14),
                            rep("stor1b", 459),
                            rep("storm2", 67),
                            rep("storm3", 663),
                            rep("storm4a", 423),
                            rep("storm4b", 319),
                            rep("storm5a", 328),
                            rep("storm5b", 387))
                            

names(VAUL_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
VAUL_NO3_storm$site.ID <- "VAUL"

VAUL_NO3_storm[cols] <- log(VAUL_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_NO3_storm <- VAUL_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_NO3_storm_ascending <- filter(VAUL_NO3_storm, limb == "ascending")

VAUL_NO3_storm_ascending <- VAUL_NO3_storm_ascending[is.finite(VAUL_NO3_storm_ascending$Q.norm) & is.finite(VAUL_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.vaul <- VAUL_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# CARI # 
CARI_NO3_storm$storm.ID = c(rep("storm1", 167),
                            rep("storm11", 243),
                            rep("storm2", 139),
                            rep("storm3", 159),
                            rep("storm4", 159),
                            rep("storm5", 127),
                            rep("storm6", 395),
                            rep("storm7", 344),
                            rep("storm8", 437),
                            rep("storm9", 323),
                            rep("storm10", 107))
                            

names(CARI_NO3_storm) <- c("DateTime", "Q", "Q.norm", "NO3", "NO3.norm", "storm.ID")
CARI_NO3_storm$site.ID <- "CARI"

CARI_NO3_storm[cols] <- log(CARI_NO3_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_NO3_storm <- CARI_NO3_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_NO3_storm_ascending <- filter(CARI_NO3_storm, limb == "ascending")

CARI_NO3_storm_ascending <- CARI_NO3_storm_ascending[is.finite(CARI_NO3_storm_ascending$Q.norm) & is.finite(CARI_NO3_storm_ascending$NO3.norm), ]

beta.all.no3.cari <- CARI_NO3_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site

# ALL # 

All_NO3_storm <- rbind(FRCH_NO3_storm_ascending, POKE_NO3_storm_ascending,
                       STRT_NO3_storm_ascending, VAUL_NO3_storm_ascending,
                       CARI_NO3_storm_ascending)

beta.all.no3 <- All_NO3_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, NO3.norm)) # this works just like the beta one that is for an individual site


beta.all.no3$response_var <- "NO3"

all.2021.ci.no3 <- All_NO3_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(NO3.norm ~ Q.norm, data = .x)))

all.2021.ci.no3$response_var <- "NO3"

##### fDOM #####
FRCH_fDOM_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_fDOM_storm_list_beta, left_join, by = "valuedatetime")
MOOS_fDOM_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_fDOM_storm_list_beta, left_join, by = "valuedatetime")
POKE_fDOM_storm <- map2_df(POKE_Q_storm_list_beta, POKE_fDOM_storm_list_beta, left_join, by = "valuedatetime")
STRT_fDOM_storm <- map2_df(STRT_Q_storm_list_beta, STRT_fDOM_storm_list_beta, left_join, by = "valuedatetime")
VAUL_fDOM_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_fDOM_storm_list_beta, left_join, by = "valuedatetime")
CARI_fDOM_storm <- map2_df(CARI_Q_storm_list_beta, CARI_fDOM_storm_list_beta, inner_join, by = "valuedatetime")

# FRCH_fDOM_storm$storm.ID = c(rep("storm1", 575),
#                              rep("storm2", 911),
#                              rep("storm3", 623),
#                              rep("storm4", 671),
#                              rep("storm5a", 551),
#                              rep("storm5b", 779),
#                              rep("storm6a", 335),
#                              rep("storm6b", 935),
#                              rep("storm7", 419),
#                              rep("storm8", 1403))

FRCH_fDOM_storm$storm.ID = c(rep("storm2", 303),
                            rep("storm3", 207),
                            rep("storm4", 223),
                            rep("storm5a", 183),
                            rep("storm5b", 259),
                            rep("storm6a", 110),
                            rep("storm6b", 311),
                            rep("storm7", 139),
                            rep("storm8", 465))

names(FRCH_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
FRCH_fDOM_storm$site.ID <- "FRCH"

cols <- c("fDOM.norm","Q.norm")
FRCH_fDOM_storm[cols] <- log(FRCH_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_fDOM_storm <- FRCH_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_fDOM_storm_ascending <- filter(FRCH_fDOM_storm, limb == "ascending")

FRCH_fDOM_storm_ascending <- FRCH_fDOM_storm_ascending[is.finite(FRCH_fDOM_storm_ascending$Q.norm) & is.finite(FRCH_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM <- FRCH_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
# MOOS_fDOM_storm$storm.ID = c(rep("storm1", 575),
#                              rep("storm2", 755),
#                              rep("storm3a", 347),
#                              rep("storm3b", 1079),
#                              rep("storm4a", 503),
#                              rep("storm4b", 743),
#                              rep("storm5a", 371),
#                              rep("storm5b", 575),
#                              rep("storm6", 383),
#                              rep("storm7", 779))

MOOS_fDOM_storm$storm.ID = c(rep("storm1", 191),
                             rep("storm2", 251),
                             rep("storm3a", 115),
                             rep("storm3b", 353),
                             rep("storm4a", 167),
                             rep("storm4b", 246),
                             rep("storm5a", 123),
                             rep("storm5b", 191),
                             rep("storm6", 127),
                             rep("storm7", 259))
                            
names(MOOS_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
MOOS_fDOM_storm$site.ID <- "MOOS"

MOOS_fDOM_storm[cols] <- log(MOOS_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_fDOM_storm <- MOOS_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_fDOM_storm_ascending <- filter(MOOS_fDOM_storm, limb == "ascending")

MOOS_fDOM_storm_ascending <- MOOS_fDOM_storm_ascending[is.finite(MOOS_fDOM_storm_ascending$Q.norm) & is.finite(MOOS_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.moos.with.all <- MOOS_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# POKE # 
# POKE_fDOM_storm$storm.ID = c(rep("storm1", 235),
#                               rep("storm2", 191),
#                               rep("storm3", 167),
#                               rep("storm4", 575),
#                               rep("storm5", 1106),
#                               rep("storm6", 479),
#                               rep("storm7a", 1355),
#                               rep("storm7b", 791),
#                               rep("storm7c", 299),
#                               rep("storm7d", 455))

POKE_fDOM_storm$storm.ID = c(rep("storm1", 235),
                            rep("storm2", 191),
                            rep("storm5", 354),
                            rep("storm5", 152))

names(POKE_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
POKE_fDOM_storm$site.ID <- "POKE"

POKE_fDOM_storm[cols] <- log(POKE_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_fDOM_storm <- POKE_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_fDOM_storm_ascending <- filter(POKE_fDOM_storm, limb == "ascending")

POKE_fDOM_storm_ascending <- POKE_fDOM_storm_ascending[is.finite(POKE_fDOM_storm_ascending$Q.norm) & is.finite(POKE_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.poke.with.all <- POKE_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# STRT # 
# STRT_fDOM_storm$storm.ID = c(rep("storm1a", 575),
#                              rep("storm1b", 767),
#                              rep("storm2a", 287),
#                              rep("storm2b", 635),
#                              rep("storm3", 383))

STRT_fDOM_storm$storm.ID = c(rep("storm1a", 191),
                            rep("storm1b", 255),
                            rep("storm2a", 95),
                            rep("storm2b", 211),
                            rep("storm3", 127))
                             

names(STRT_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
STRT_fDOM_storm$site.ID <- "STRT"

STRT_fDOM_storm[cols] <- log(STRT_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}

STRT_fDOM_storm <- na.omit(STRT_fDOM_storm)

STRT_fDOM_storm <- STRT_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_fDOM_storm_ascending <- filter(STRT_fDOM_storm, limb == "ascending")

STRT_fDOM_storm_ascending <- STRT_fDOM_storm_ascending[is.finite(STRT_fDOM_storm_ascending$Q.norm) & is.finite(STRT_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.strt <- STRT_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
# VAUL_fDOM_storm$storm.ID = c(rep("storm1a", 1127),
#                              rep("stor1b", 1379),
#                              rep("storm2", 203),
#                              rep("storm3", 2004),
#                              rep("storm4a", 1283),
#                              rep("storm4b", 959),
#                              rep("storm5a", 996),
#                              rep("storm5b", 1155))

VAUL_fDOM_storm$storm.ID = c(rep("storm1a", 14),
                            rep("stor1b", 459),
                            rep("storm2", 67),
                            rep("storm3", 663),
                            rep("storm4a", 423),
                            rep("storm4b", 319),
                            rep("storm5a", 328),
                            rep("storm5b", 387))

names(VAUL_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
VAUL_fDOM_storm$site.ID <- "VAUL"

VAUL_fDOM_storm[cols] <- log(VAUL_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_fDOM_storm <- VAUL_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_fDOM_storm_ascending <- filter(VAUL_fDOM_storm, limb == "ascending")

VAUL_fDOM_storm_ascending <- VAUL_fDOM_storm_ascending[is.finite(VAUL_fDOM_storm_ascending$Q.norm) & is.finite(VAUL_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fDOM.vaul <- VAUL_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site

# CARI # 
# CARI_fDOM_storm$storm.ID = c(rep("storm1", 2519),
#                              rep("storm2", 3659),
#                              rep("storm3", 2099),
#                              rep("storm4", 2399),
#                              rep("storm5", 1919),
#                              rep("storm6", 5939),
#                              rep("storm7", 5916),
#                              rep("storm8", 6566),
#                              rep("storm9", 4859),
#                              rep("storm10", 1619))

CARI_fDOM_storm$storm.ID = c(rep("storm1", 167),
                            rep("storm11", 243),
                            rep("storm2", 139),
                            rep("storm3", 159),
                            rep("storm4", 159),
                            rep("storm5", 127),
                            rep("storm6", 395),
                            rep("storm7", 344),
                            rep("storm8", 437),
                            rep("storm9", 323),
                            rep("storm10", 107))

names(CARI_fDOM_storm) <- c("DateTime", "Q", "Q.norm", "fDOM", "fDOM.norm", "storm.ID")
CARI_fDOM_storm$site.ID <- "CARI"

CARI_fDOM_storm[cols] <- log(CARI_fDOM_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_fDOM_storm <- CARI_fDOM_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_fDOM_storm_ascending <- filter(CARI_fDOM_storm, limb == "ascending")

CARI_fDOM_storm_ascending <- CARI_fDOM_storm_ascending[is.finite(CARI_fDOM_storm_ascending$Q.norm) & is.finite(CARI_fDOM_storm_ascending$fDOM.norm), ]

beta.all.fdom.cari <- CARI_fDOM_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site


# ALL # 
All_fDOM_storm <- rbind(FRCH_fDOM_storm_ascending, MOOS_fDOM_storm_ascending, 
                        STRT_fDOM_storm_ascending, VAUL_fDOM_storm_ascending,
                        CARI_fDOM_storm_ascending, POKE_fDOM_storm_ascending)

beta.all.fdom <- All_fDOM_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, fDOM.norm)) # this works just like the beta one that is for an individual site


beta.all.fdom$response_var <- "fDOM"

all.2021.ci.fDOM <- All_fDOM_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(fDOM.norm ~ Q.norm, data = .x)))

all.2021.ci.fDOM$response_var <- "fDOM"

##### SPC #####
FRCH_SPC_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_SpCond_storm_list_beta, left_join, by = "valuedatetime")
MOOS_SPC_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_SpCond_storm_list_beta, left_join, by = "valuedatetime")
POKE_SPC_storm <- map2_df(POKE_Q_storm_list_beta, POKE_SpCond_storm_list_beta, left_join, by = "valuedatetime")
STRT_SPC_storm <- map2_df(STRT_Q_storm_list_beta, STRT_SpCond_storm_list_beta, left_join, by = "valuedatetime")
VAUL_SPC_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_SpCond_storm_list_beta, left_join, by = "valuedatetime")
CARI_SPC_storm <- map2_df(CARI_Q_storm_list_beta, CARI_SpCond_storm_list_beta, inner_join, by = "valuedatetime")

# FRCH_SPC_storm$storm.ID = c(rep("storm1", 575),
#                             rep("storm2", 911),
#                             rep("storm3", 623),
#                             rep("storm4", 671),
#                             rep("storm5a", 551),
#                             rep("storm5b", 779),
#                             rep("storm6a", 335),
#                             rep("storm6b", 935),
#                             rep("storm7", 419),
#                             rep("storm8", 1403))

FRCH_SPC_storm$storm.ID = c(rep("storm2", 303),
                             rep("storm3", 207),
                             rep("storm4", 223),
                             rep("storm5a", 183),
                             rep("storm5b", 259),
                             rep("storm6a", 110),
                             rep("storm6b", 311),
                             rep("storm7", 139),
                             rep("storm8", 465))

names(FRCH_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
FRCH_SPC_storm$site.ID <- "FRCH"

cols <- c("SPC.norm","Q.norm")
FRCH_SPC_storm[cols] <- log(FRCH_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_SPC_storm <- FRCH_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_SPC_storm_ascending <- filter(FRCH_SPC_storm, limb == "ascending")

FRCH_SPC_storm_ascending <- FRCH_SPC_storm_ascending[is.finite(FRCH_SPC_storm_ascending$Q.norm) & is.finite(FRCH_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC <- FRCH_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
# MOOS_SPC_storm$storm.ID = c(rep("storm1", 575),
#                             rep("storm2", 755),
#                             rep("storm3a", 347),
#                             rep("storm3b", 1079),
#                             rep("storm4a", 503),
#                             rep("storm4b", 743),
#                             rep("storm5a", 371),
#                             rep("storm5b", 575),
#                             rep("storm6", 383),
#                             rep("storm7", 779))

MOOS_SPC_storm$storm.ID = c(rep("storm1", 191),
                             rep("storm2", 251),
                             rep("storm3a", 115),
                             rep("storm3b", 353),
                             rep("storm4a", 167),
                             rep("storm4b", 246),
                             rep("storm5a", 123),
                             rep("storm5b", 191),
                             rep("storm6", 127),
                             rep("storm7", 259))

names(MOOS_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
MOOS_SPC_storm$site.ID <- "MOOS"

MOOS_SPC_storm[cols] <- log(MOOS_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_SPC_storm <- MOOS_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_SPC_storm_ascending <- filter(MOOS_SPC_storm, limb == "ascending")

MOOS_SPC_storm_ascending <- MOOS_SPC_storm_ascending[is.finite(MOOS_SPC_storm_ascending$Q.norm) & is.finite(MOOS_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.moos.with.all <- MOOS_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# POKE # 
# POKE_SPC_storm$storm.ID = c(rep("storm1", 235),
#                              rep("storm2", 191),
#                              rep("storm3", 167),
#                              rep("storm4", 575),
#                              rep("storm5", 1106),
#                              rep("storm6", 479),
#                              rep("storm7a", 1355),
#                              rep("storm7b", 791),
#                              rep("storm7c", 299),
#                              rep("storm7d", 455))

POKE_SPC_storm$storm.ID = c(rep("storm1", 235),
                             rep("storm2", 191),
                             rep("storm5", 354),
                             rep("storm5", 152))

names(POKE_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
POKE_SPC_storm$site.ID <- "POKE"

POKE_SPC_storm[cols] <- log(POKE_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_SPC_storm <- POKE_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_SPC_storm_ascending <- filter(POKE_SPC_storm, limb == "ascending")

POKE_SPC_storm_ascending <- POKE_SPC_storm_ascending[is.finite(POKE_SPC_storm_ascending$Q.norm) & is.finite(POKE_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.poke.with.all <- POKE_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# STRT # 
# STRT_SPC_storm$storm.ID = c(rep("storm1a", 575),
#                             rep("storm1b", 767),
#                             rep("storm2a", 287),
#                             rep("storm2b", 635),
#                             rep("storm3", 383))

STRT_SPC_storm$storm.ID = c(rep("storm1a", 191),
                             rep("storm1b", 255),
                             rep("storm2a", 95),
                             rep("storm2b", 211),
                             rep("storm3", 127))

names(STRT_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
STRT_SPC_storm$site.ID <- "STRT"

STRT_SPC_storm[cols] <- log(STRT_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_SPC_storm <- STRT_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_SPC_storm_ascending <- filter(STRT_SPC_storm, limb == "ascending")

STRT_SPC_storm_ascending <- STRT_SPC_storm_ascending[is.finite(STRT_SPC_storm_ascending$Q.norm) & is.finite(STRT_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.strt <- STRT_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
# VAUL_SPC_storm$storm.ID = c(rep("storm1a", 1127),
#                             rep("stor1b", 1379),
#                             rep("storm2", 203),
#                             rep("storm3", 2004),
#                             rep("storm4a", 1283),
#                             rep("storm4b", 959),
#                             rep("storm5a", 996),
#                             rep("storm5b", 1155))

VAUL_SPC_storm$storm.ID = c(rep("storm1a", 14),
                             rep("stor1b", 459),
                             rep("storm2", 67),
                             rep("storm3", 663),
                             rep("storm4a", 423),
                             rep("storm4b", 319),
                             rep("storm5a", 328),
                             rep("storm5b", 387))

names(VAUL_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
VAUL_SPC_storm$site.ID <- "VAUL"

VAUL_SPC_storm[cols] <- log(VAUL_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_SPC_storm <- VAUL_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_SPC_storm_ascending <- filter(VAUL_SPC_storm, limb == "ascending")

VAUL_SPC_storm_ascending <- VAUL_SPC_storm_ascending[is.finite(VAUL_SPC_storm_ascending$Q.norm) & is.finite(VAUL_SPC_storm_ascending$SPC.norm), ]

beta.all.SPC.vaul <- VAUL_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site

# CARI # 
# CARI_SPC_storm$storm.ID = c(rep("storm1", 2519),
#                             rep("storm2", 3659),
#                             rep("storm3", 2099),
#                             rep("storm4", 2399),
#                             rep("storm5", 1919),
#                             rep("storm6", 5939),
#                             rep("storm7", 5916),
#                             rep("storm8", 6566),
#                             rep("storm9", 4859),
#                             rep("storm10", 1619))

CARI_SPC_storm$storm.ID = c(rep("storm1", 167),
                             rep("storm11", 243),
                             rep("storm2", 139),
                             rep("storm3", 159),
                             rep("storm4", 159),
                             rep("storm5", 127),
                             rep("storm6", 395),
                             rep("storm7", 344),
                             rep("storm8", 437),
                             rep("storm9", 323),
                             rep("storm10", 107))

names(CARI_SPC_storm) <- c("DateTime", "Q", "Q.norm", "SPC", "SPC.norm", "storm.ID")
CARI_SPC_storm$site.ID <- "CARI"

CARI_SPC_storm[cols] <- log(CARI_SPC_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_SPC_storm <- CARI_SPC_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_SPC_storm_ascending <- filter(CARI_SPC_storm, limb == "ascending")

CARI_SPC_storm_ascending <- CARI_SPC_storm_ascending[is.finite(CARI_SPC_storm_ascending$Q.norm) & is.finite(CARI_SPC_storm_ascending$SPC.norm), ]

beta.all.spc.cari <- CARI_SPC_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site


# ALL # 

All_SPC_storm <- rbind(FRCH_SPC_storm_ascending, MOOS_SPC_storm_ascending, 
                       STRT_SPC_storm_ascending, VAUL_SPC_storm_ascending,
                       CARI_SPC_storm_ascending, POKE_SPC_storm_ascending)

beta.all.SPC <- All_SPC_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, SPC.norm)) # this works just like the beta one that is for an individual site


beta.all.SPC$response_var <- "SPC"

all.2021.ci.SPC <- All_SPC_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(SPC.norm ~ Q.norm, data = .x)))

all.2021.ci.fDOM$response_var <- "SPC"

##### Turb #####
FRCH_turb_storm <- map2_df(FRCH_Q_storm_list_beta, FRCH_turb_storm_list_beta, left_join, by = "valuedatetime")
MOOS_turb_storm <- map2_df(MOOS_Q_storm_list_beta, MOOS_turb_storm_list_beta, left_join, by = "valuedatetime")
POKE_turb_storm <- map2_df(POKE_Q_storm_list_beta, POKE_turb_storm_list_beta, left_join, by = "valuedatetime")
STRT_turb_storm <- map2_df(STRT_Q_storm_list_beta, STRT_turb_storm_list_beta, left_join, by = "valuedatetime")
VAUL_turb_storm <- map2_df(VAUL_Q_storm_list_beta, VAUL_turb_storm_list_beta, left_join, by = "valuedatetime")
CARI_turb_storm <- map2_df(CARI_Q_storm_list_beta, CARI_turb_storm_list_beta, inner_join, by = "valuedatetime")

# FRCH_turb_storm$storm.ID = c(rep("storm1", 575),
#                              rep("storm2", 911),
#                              rep("storm3", 623),
#                              rep("storm4", 671),
#                              rep("storm5a", 551),
#                              rep("storm5b", 779),
#                              rep("storm6a", 335),
#                              rep("storm6b", 935),
#                              rep("storm7", 419),
#                              rep("storm8", 1403))

FRCH_turb_storm$storm.ID = c(rep("storm2", 303),
                            rep("storm3", 207),
                            rep("storm4", 223),
                            rep("storm5a", 183),
                            rep("storm5b", 259),
                            rep("storm6a", 110),
                            rep("storm6b", 311),
                            rep("storm7", 139),
                            rep("storm8", 465))

names(FRCH_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
FRCH_turb_storm$site.ID <- "FRCH"

cols <- c("turb.norm","Q.norm")
FRCH_turb_storm[cols] <- log(FRCH_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
FRCH_turb_storm <- FRCH_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

FRCH_turb_storm_ascending <- filter(FRCH_turb_storm, limb == "ascending")

FRCH_turb_storm_ascending <- FRCH_turb_storm_ascending[is.finite(FRCH_turb_storm_ascending$Q.norm) & is.finite(FRCH_turb_storm_ascending$turb.norm), ]

beta.all.turb <- FRCH_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# MOOS # 
# MOOS_turb_storm$storm.ID = c(rep("storm1", 575),
#                              rep("storm2", 755),
#                              rep("storm3a", 347),
#                              rep("storm3b", 1079),
#                              rep("storm4a", 503),
#                              rep("storm4b", 743),
#                              rep("storm5a", 371),
#                              rep("storm5b", 575),
#                              rep("storm6", 383),
#                              rep("storm7", 779))

MOOS_turb_storm$storm.ID = c(rep("storm1", 191),
                            rep("storm2", 251),
                            rep("storm3a", 115),
                            rep("storm3b", 353),
                            rep("storm4a", 167),
                            rep("storm4b", 246),
                            rep("storm5a", 123),
                            rep("storm5b", 191),
                            rep("storm6", 127),
                            rep("storm7", 259))

names(MOOS_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
MOOS_turb_storm$site.ID <- "MOOS"

MOOS_turb_storm[cols] <- log(MOOS_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
MOOS_turb_storm <- MOOS_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

MOOS_turb_storm_ascending <- filter(MOOS_turb_storm, limb == "ascending")

MOOS_turb_storm_ascending <- MOOS_turb_storm_ascending[is.finite(MOOS_turb_storm_ascending$Q.norm) & is.finite(MOOS_turb_storm_ascending$turb.norm), ]

beta.all.turb.moos.with.all <- MOOS_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# POKE # 
# POKE_turb_storm$storm.ID = c(rep("storm1", 235),
#                               rep("storm2", 191),
#                               rep("storm3", 167),
#                               rep("storm4", 575),
#                               rep("storm5", 1106),
#                               rep("storm6", 479),
#                               rep("storm7a", 1355),
#                               rep("storm7b", 791),
#                               rep("storm7c", 299),
#                               rep("storm7d", 455))

POKE_turb_storm$storm.ID = c(rep("storm1", 235),
                            rep("storm2", 191),
                            rep("storm5", 354),
                            rep("storm5", 152))

names(POKE_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
POKE_turb_storm$site.ID <- "POKE"

POKE_turb_storm[cols] <- log(POKE_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
POKE_turb_storm <- POKE_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

POKE_turb_storm_ascending <- filter(POKE_turb_storm, limb == "ascending")

POKE_turb_storm_ascending <- POKE_turb_storm_ascending[is.finite(POKE_turb_storm_ascending$Q.norm) & is.finite(POKE_turb_storm_ascending$turb.norm), ]

beta.all.turb.poke.with.all <- POKE_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# STRT # 
# STRT_turb_storm$storm.ID = c(rep("storm1a", 575),
#                              rep("storm1b", 767),
#                              rep("storm2a", 287),
#                              rep("storm2b", 635),
#                              rep("storm3", 383))

STRT_turb_storm$storm.ID = c(rep("storm1a", 191),
                            rep("storm1b", 255),
                            rep("storm2a", 95),
                            rep("storm2b", 211),
                            rep("storm3", 127))

names(STRT_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
STRT_turb_storm$site.ID <- "STRT"

STRT_turb_storm[cols] <- log(STRT_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
STRT_turb_storm <- STRT_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

STRT_turb_storm_ascending <- filter(STRT_turb_storm, limb == "ascending")

STRT_turb_storm_ascending <- STRT_turb_storm_ascending[is.finite(STRT_turb_storm_ascending$Q.norm) & is.finite(STRT_turb_storm_ascending$turb.norm), ]

beta.all.turb.strt <- STRT_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# VAUL # 
# VAUL_turb_storm$storm.ID = c(rep("storm1a", 1127),
#                              rep("stor1b", 1379),
#                              rep("storm2", 203),
#                              rep("storm3", 2004),
#                              rep("storm4a", 1283),
#                              rep("storm4b", 959),
#                              rep("storm5a", 996),
#                              rep("storm5b", 1155))

VAUL_turb_storm$storm.ID = c(rep("storm1a", 14),
                            rep("stor1b", 459),
                            rep("storm2", 67),
                            rep("storm3", 663),
                            rep("storm4a", 423),
                            rep("storm4b", 319),
                            rep("storm5a", 328),
                            rep("storm5b", 387))

names(VAUL_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
VAUL_turb_storm$site.ID <- "VAUL"

VAUL_turb_storm[cols] <- log(VAUL_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
VAUL_turb_storm <- VAUL_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

VAUL_turb_storm_ascending <- filter(VAUL_turb_storm, limb == "ascending")

VAUL_turb_storm_ascending <- VAUL_turb_storm_ascending[is.finite(VAUL_turb_storm_ascending$Q.norm) & is.finite(VAUL_turb_storm_ascending$turb.norm), ]

beta.all.turb.vaul <- VAUL_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site

# CARI # 
# CARI_turb_storm$storm.ID = c(rep("storm1", 2519),
#                              rep("storm2", 3659),
#                              rep("storm3", 2099),
#                              rep("storm4", 2399),
#                              rep("storm5", 1919),
#                              rep("storm6", 5939),
#                              rep("storm7", 5916),
#                              rep("storm8", 6566),
#                              rep("storm9", 4859),
#                              rep("storm10", 1619))

CARI_turb_storm$storm.ID = c(rep("storm1", 167),
                            rep("storm11", 243),
                            rep("storm2", 139),
                            rep("storm3", 159),
                            rep("storm4", 159),
                            rep("storm5", 127),
                            rep("storm6", 395),
                            rep("storm7", 344),
                            rep("storm8", 437),
                            rep("storm9", 323),
                            rep("storm10", 107))

names(CARI_turb_storm) <- c("DateTime", "Q", "Q.norm", "turb", "turb.norm", "storm.ID")
CARI_turb_storm$site.ID <- "CARI"

CARI_turb_storm[cols] <- log(CARI_turb_storm[cols]) # making concentrations and Q log transformed

slope <- function(x, y){
  mean_x <- mean(x)
  mean_y <- mean(y)
  nom <- sum((x - mean_x)*(y-mean_y))
  denom <- sum((x - mean_x)^2)
  m <- nom / denom
  return(m)
}
CARI_turb_storm <- CARI_turb_storm %>% group_by(storm.ID) %>% 
  mutate(limb = ifelse(DateTime < DateTime[which.max(Q.norm)], "ascending", "descending"))

CARI_turb_storm_ascending <- filter(CARI_turb_storm, limb == "ascending")

CARI_turb_storm_ascending <- CARI_turb_storm_ascending[is.finite(CARI_turb_storm_ascending$Q.norm) & is.finite(CARI_turb_storm_ascending$turb.norm), ]

beta.all.turb.cari <- CARI_turb_storm_ascending %>% group_by(storm.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site


# ALL # 
All_turb_storm <- rbind(FRCH_turb_storm_ascending, MOOS_turb_storm_ascending, 
                        POKE_turb_storm_ascending, VAUL_turb_storm_ascending,
                        STRT_turb_storm_ascending, CARI_turb_storm_ascending )

beta.all.turb <- All_turb_storm %>% group_by(storm.ID, site.ID) %>% 
  summarize(beta = slope(Q.norm, turb.norm)) # this works just like the beta one that is for an individual site


beta.all.turb$response_var <- "turb"

all.2021.ci.turb <- All_turb_storm %>% 
  group_by(site.ID, storm.ID) %>% 
  group_modify(~ parameters::model_parameters(stats::lm(turb.norm ~ Q.norm, data = .x)))

all.2021.ci.turb$response_var <- "turb"

beta.all.2021 <- rbind(all.2021.ci.no3, all.2021.ci.fDOM,
                       all.2021.ci.SPC, all.2021.ci.turb)

write.csv(beta.all.2021, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/beta/beta.2021.csv")

beta.all.2021 <- beta.all.2021 %>% 
  filter(Parameter != "(Intercept)")
#### plot ####
HI_2021 <- read_csv("Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2021.csv")
names(HI_2021)[names(HI_2021) == 'storm.num'] <- 'storm.ID'
names(HI_2021)[names(HI_2021) == 'response'] <- 'response_var'

HI_beta = left_join(HI_2021, beta.all.2021, by=c("site.ID", "storm.ID", "response_var"))


HI_FI <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2021.csv")

HI_FI_beta = left_join(HI_FI, beta.all.2021, by=c("site.ID", "storm.ID", "response_var"))

write.csv(HI_FI_beta, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI_beta.diff_results_2021.csv")

# NO3 #
HI_FI_NO3 = subset(HI_FI_beta, response_var == "NO3")
HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_NO3.p = 
  ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_NO3.p

# NO3 #
HI_beta_NO3 = subset(HI_beta, response_var == "NO3")
HI_beta_NO3$site.ID <- factor(HI_beta_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_beta_NO3.p = 
  ggplot(HI_beta_NO3, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI_beta, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

HI_beta_fDOM = subset(HI_beta, response_var == "fDOM")
HI_beta_fDOM$site.ID <- factor(HI_beta_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_beta_fDOM.p = 
  ggplot(HI_beta_fDOM, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_fDOM.p

# SPC#
HI_FI_SPC = subset(HI_FI_beta, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID)), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p


HI_beta_SPC = subset(HI_beta, response_var == "SPC")
HI_beta_SPC$site.ID <- factor(HI_beta_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_beta_SPC.p = 
  ggplot(HI_beta_SPC, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_SPC.p

# turb #
HI_FI_turb = subset(HI_beta, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


HI_beta_turb = subset(HI_beta, response_var == "turb")
HI_beta_turb$site.ID <- factor(HI_beta_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL'))

HI_beta_turb.p = 
  ggplot(HI_beta_turb, aes(beta, HI)) + geom_point(aes(colour=factor(site.ID), alpha = doy, shape = burn), size = 4)+
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  scale_color_manual(values = c("orange red", viridis::viridis(4)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20), legend.title = element_blank()) 
HI_beta_turb.p

grid.arrange(HI_beta_NO3.p, HI_beta_fDOM.p, HI_beta_SPC.p, HI_beta_turb.p)

#### Regression between beta and FI #######
FI_beta_comp = 
  ggplot(HI_FI_NO3, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp

FI_beta_comp_fDOM = 
  ggplot(HI_FI_fDOM, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_fDOM

FI_beta_comp_SPC = 
  ggplot(HI_FI_SPC, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_SPC

FI_beta_comp_turb = 
  ggplot(HI_FI_turb, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)
FI_beta_comp_turb


grid.arrange(FI_beta_comp_NO3, FI_beta_comp_fDOM, FI_beta_comp_SPC, FI_beta_comp_turb)
















########################################## COMBINE YEARS ################################################
# merge #
HI_FI_2018 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results.2018.csv")
HI_FI_2018$year <- "2018"
HI_FI_2019 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2019.csv")
HI_FI_2019$year <- "2019"
HI_FI_2020 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2020.csv")
HI_FI_2020$year <- "2020"
HI_FI_2021 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_FI.diff_results_2021.csv")
HI_FI_2021$year <- "2021"

beta_2018 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/beta/beta.2018.csv")
beta_2018$year <- "2018"
beta_2019 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/beta/beta.2019.csv")
beta_2019$year <- "2019"
beta_2020 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/beta/beta.2020.csv")
beta_2020$year <- "2020"
beta_2021 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/beta/beta.2021.csv")
beta_2021$year <- "2021"

antecedent_2018 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2018.csv")
antecedent_2018 <- antecedent_2018[,-c(1:2)]
antecedent_2019 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI.2019.csv")
antecedent_2019 <- antecedent_2019[,-c(1:2)]
antecedent_2020 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2020.csv")
antecedent_2020 <- antecedent_2020[,-c(1:2)]
antecedent_2021 <- read.csv("~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/HI_antecedent_conditions/All_years/HI.2021.csv")
antecedent_2021 <- antecedent_2021[,-c(1:3)]

HI_FI <- rbind(HI_FI_2018, HI_FI_2019, HI_FI_2020, HI_FI_2021)

beta_all <- rbind(beta_2018, beta_2019, beta_2020, beta_2021)
beta_all <- beta_all %>% 
  filter(Parameter != "(Intercept)")
antecedent_all <- rbind(antecedent_2018, antecedent_2019, antecedent_2020, antecedent_2021)
names(antecedent_all)[names(antecedent_all) == "storm.num"] <- "storm.ID"
names(antecedent_all)[names(antecedent_all) == "response"] <- "response_var"
antecedent_all$year <- as.character(antecedent_all$year)

HI_FI = left_join(HI_FI, beta_all, by=c("site.ID", "storm.ID", "response_var", "year"))
HI_FI <- left_join(HI_FI, antecedent_all, by = c("site.ID", "storm.ID", "response_var", "year"))

write.csv(HI_FI, "~/Documents/Storms/Output_from_analysis/06_HI_fire_permafrost_script/antecedent_HI_FI_1.0.csv")

# NO3 #
HI_FI_NO3 = subset(HI_FI, response_var == "NO3")
HI_FI_NO3$site.ID <- factor(HI_FI_NO3$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_FI_NO3.p = 
  ggplot(HI_FI_NO3, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID), shape = pf), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("a) NO3-")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_NO3.p

# fDOM #
HI_FI_fDOM = subset(HI_FI, response_var == "fDOM")
HI_FI_fDOM$site.ID <- factor(HI_FI_fDOM$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_FI_fDOM.p = 
  ggplot(HI_FI_fDOM, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID), shape = pf), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("b) fDOM")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_fDOM.p

# SPC #
HI_FI_SPC = subset(HI_FI, response_var == "SPC")
HI_FI_SPC$site.ID <- factor(HI_FI_SPC$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_FI_SPC.p = 
  ggplot(HI_FI_SPC, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID), shape = pf), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("c) SPC")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_SPC.p

# turb #
HI_FI_turb = subset(HI_FI, response_var == "turb")
HI_FI_turb$site.ID <- factor(HI_FI_turb$site.ID, levels = c('FRCH','MOOS','POKE','STRT','VAUL', 'CARI'))

HI_FI_turb.p = 
  ggplot(HI_FI_turb, aes(Flush_index, Hyst_index)) + geom_point(aes(colour=factor(site.ID), shape = pf), size = 4)+
  geom_errorbar(aes(ymin=HI_ymin, ymax=HI_ymax), colour="black", alpha=0.5, size=.5, width = 0.1)+ 
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
  geom_errorbarh(aes(xmin=FI_ymin, xmax=FI_ymax), colour="black", alpha=0.5, size=.5, height = 0.1) +
  scale_color_manual(values = c("orange red", viridis::viridis(6)), "Catchment")+theme_bw() +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5)+
  ggtitle("d) Turb")+ 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), text = element_text(size = 20)) 
HI_FI_turb.p


grid.arrange(HI_FI_NO3.p,HI_FI_fDOM.p,HI_FI_SPC.p,HI_FI_turb.p)


ggplot(HI_FI_NO3, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)

ggplot(HI_FI_fDOM, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)

ggplot(HI_FI_SPC, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)

ggplot(HI_FI_turb, aes(Flush_index, beta)) + geom_point(aes(colour=factor(site.ID)), size = 4) +
  ylim(-1.5, 1.5) + xlim(-1.5, 1.5) +
  geom_smooth(method = "lm", na.rm = TRUE, fullrange = TRUE, aes(group = 1)) + 
  stat_poly_eq(formula = y~x,
               label.y = "top", label.x = "right",
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)













