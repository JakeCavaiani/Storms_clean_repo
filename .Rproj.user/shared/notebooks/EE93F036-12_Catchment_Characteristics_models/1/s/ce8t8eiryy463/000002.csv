"0","# taking the mean HI for each catchment and year "
"0","CV.all.year <- AMC %>% group_by(response_var,site.ID, year) %>%"
"0","  dplyr::summarise(meanHI = mean(Hyst_index, na.rm = TRUE),"
"0","                   meanBETA = mean(Beta_index, na.rm = TRUE),"
"0","                   sdHI = sd(Hyst_index, na.rm = TRUE),"
"0","                   sdBETA = sd(Beta_index, na.rm = TRUE),"
"0","                  CVhi = sdHI/meanHI,"
"0","                  CVbeta = sdBETA/meanBETA,"
"0","                  CatBurn = paste(burn),"
"0","                  CatPF = paste(pf),"
"0","                  Slope = as.numeric(SLOPE_MEAN),"
"0","                  fireyear_lg = as.numeric(fireyear_lg),"
"0","                  pctburn_lg = as.numeric(pctburn_lg),"
"0","                  areaburn_lg = as.numeric(areaburn_lg),"
"0","                  PF = as.numeric(Pf_Prob_1m_mean_x),"
"0","                  NDVI = as.numeric(NDVI_p50))"
"2","`summarise()` has grouped output by 'response_var', 'site.ID', 'year'. You can override using the `.groups` argument."
"0","CV.all.year <- CV.all.year[!duplicated(CV.all.year$meanHI), ] # removing duplicated rows"
"0","# NDVI didnt properly merge over so manually putting in the NDVI value for each year "
"0","CV.all.year[c(1,22,42,63),17] <- 0.192390502 # CARI 2018"
"0","CV.all.year[c(2,23,43,64),17] <- 0.247047948 # CARI 2019"
"0","CV.all.year[c(3,24,44,65),17] <- 0.192382581 # CARI 2020"
"0","CV.all.year[c(4,25,45,66),17] <- NA # CARI 2021"
"0",""
"0","CV.all.year[c(5,26,46,67),17] <- 0.186534723 # FRCH 2018"
"0","CV.all.year[c(6,27,47,68),17] <- 0.26075781 # FRCH 2019"
"0","CV.all.year[c(7,28,48,69),17] <- 0.190424498 # FRCH 2020"
"0","CV.all.year[c(8,29,49,70),17] <- NA  # FRCH 2021"
"0",""
"0","CV.all.year[c(9,30,50,71),17] <- 0.200191538 # MOOS 2018"
"0","CV.all.year[c(10,31,51,72),17] <- 0.258797953 # MOOS 2019"
"0","CV.all.year[c(11,32,52,73),17] <- 0.229493425 # MOOS 2020"
"0","CV.all.year[c(12,33,53,74),17] <- NA # MOOS 2021"
"0",""
"0","CV.all.year[c(13,34,54,75),17] <- 0.247071561 # POKE 2019"
"0","CV.all.year[c(14,35,55,76),17] <- 0.217774775 # POKE 2020"
"0","CV.all.year[c(15,36,56,77),17] <- NA # POKE 2021"
"0",""
"0","CV.all.year[c(16,36,57,78),17] <- 0.274414997 # STRT 2019"
"0","CV.all.year[c(17,37,58,79),17] <- 0.23730122 # STRT 2020"
"0","CV.all.year[c(18,38,59,80),17] <- NA # STRT 2021"
"0",""
"0","CV.all.year[c(19,39,60,81),17] <- 0.229493954 # VAUL 2019"
"0","CV.all.year[c(20,40,61,82),17] <- 0.225580538 # VAUL 2020"
"0","CV.all.year[c(21,41,62,83),17] <- NA # VAUL 2021"
"0",""
"0",""
