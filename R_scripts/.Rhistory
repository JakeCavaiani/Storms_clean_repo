py$hysdict_POKE_storm7b_08_19_NO3,
py$hysdict_POKE_storm7b_08_19_abs,
py$hysdict_POKE_storm7c_08_23_NO3,
py$hysdict_POKE_storm7c_08_23_abs,
py$hysdict_POKE_storm7d_08_26_abs)
POKE.hyst.results.list.2 = list()
for (i in 1:length(POKE.hyst.results.list)){
POKE.hyst.results.list.2[[i]] = as.data.frame(t(as.numeric(c(
POKE.hyst.results.list[[i]][["HI_mean_with_Interp"]],
POKE.hyst.results.list[[i]][["HI_standard_deviation_with_Interp"]],
POKE.hyst.results.list[[i]][["Normalized slope of response"]],
POKE.hyst.results.list[[i]][["interpolated Max width of response"]],
POKE.hyst.results.list[[i]][["Min response"]],
POKE.hyst.results.list[[i]][["Max response"]],
POKE.hyst.results.list[[i]][["Peak Q"]]
))))
names(POKE.hyst.results.list.2[[i]]) = c("HI_mean_Interp", "HI_sd_with_Interp", "N.S.", "Max_width_Interp", "Min_response", "Max_response", "Peak_Q")
}
HIs.list = list()
HIs.tests = list()
for (i in 1:length(POKE.hyst.results.list)){
HIs.list[[i]] = unlist(POKE.hyst.results.list[[i]][["Hysteresis_Index"]],recursive=FALSE)
HIs.tests[[i]] = as.data.frame(t(round(as.numeric(c(shapiro.test(HIs.list[[i]])$statistic, shapiro.test(HIs.list[[i]])$p.value,
t.test(HIs.list[[i]], mu=0)$statistic, t.test(HIs.list[[i]], mu=0)$p.value,
t.test(HIs.list[[i]], mu=0)$conf.int[1],t.test(HIs.list[[i]], mu=0)$conf.int[2],
wilcox.test(HIs.list[[i]], mu=0)$statistic, wilcox.test(HIs.list[[i]], mu=0)$p.value)), 4)))
names(HIs.tests[[i]]) = c("ShapiroTest.W", "ShapiroTest.p", "t.test.stat", "t.test.p", "t.test.CIlow", "t.test.CIhigh",
"wilcox.test.stat", "wilcox.test.p")
}
POKE.hyst.results.list.3 =list()
for (i in 1:length(POKE.hyst.results.list)){
POKE.hyst.results.list.3[[i]] = cbind(POKE.hyst.results.list.2[[i]], HIs.tests[[i]])
}
POKE.hyst.results.df = bind_rows(POKE.hyst.results.list.3, .id = "column_label")
POKE.hyst.results.df$storm.ID = c("POKE_storm1_05_16_fDOM",
"POKE_storm1_05_16_SPC",
"POKE_storm1_05_16_turb",
"POKE_storm2_06_01_NO3",
"POKE_storm2_06_01_fDOM",
"POKE_storm2_06_01_SPC",
"POKE_storm2_06_01_turb",
"POKE_storm2_06_01_abs",
"POKE_storm3_06_19_NO3",
"POKE_storm3_06_19_abs",
"POKE_storm4_07_23_NO3",
"POKE_storm4_07_23_abs",
"POKE_storm5_07_27_NO3",
"POKE_storm5_07_27_fDOM",
"POKE_storm5_07_27_turb",
"POKE_storm5_07_27_abs",
"POKE_storm6_08_08_NO3",
"POKE_storm6_08_08_fDOM",
"POKE_storm6_08_08_SPC",
"POKE_storm6_08_08_turb",
"POKE_storm6_08_08_abs",
"POKE_storm7a_08_14_NO3",
"POKE_storm7a_08_14_abs",
"POKE_storm7b_08_19_NO3",
"POKE_storm7b_08_19_abs",
"POKE_storm7c_08_23_NO3",
"POKE_storm7c_08_23_abs",
"POKE_storm7d_08_26_abs"
)
POKE.hyst.results.df$site.ID = "POKE"
write.csv(POKE.hyst.results.df, "~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2021/POKE/POKE.hyst.results.csv")
## plot HI with bootstrapped 95% CIs around the median ##
HIs.Q.list =list()
HIs.df.list = list()
par(mfrow=c(1,1))
for (i in 1:length(HIs.list)) {
HIs.Q.list[[i]] = names(HIs.list[[i]])
HIs.Q.list[[i]] = (sapply(strsplit(HIs.Q.list[[i]], " "), "[[", 4))
HIs.Q.list[[i]] = as.numeric(gsub("%", "", HIs.Q.list[[i]]))
HIs.df.list[[i]] = as.data.frame(cbind(HIs.list[[i]], HIs.Q.list[[i]]))
HIs.df.list[[i]]= HIs.df.list[[i]][order(HIs.df.list[[i]][["V2"]]),]
names(HIs.df.list[[i]]) = c("HI", "Q_interval")
}
POKE.HI.df = bind_rows(HIs.df.list, .id = "column_label")
POKE.HI.df$storm.ID = c(rep("POKE_storm1_05_16_fDOM", 50),
rep("POKE_storm1_05_16_SPC", 50),
rep("POKE_storm1_05_16_turb", 50),
rep("POKE_storm2_06_01_NO3", 50),
rep("POKE_storm2_06_01_fDOM", 50),
rep("POKE_storm2_06_01_SPC", 50),
rep("POKE_storm2_06_01_turb", 50),
rep("POKE_storm2_06_01_abs", 50),
rep("POKE_storm3_06_19_NO3", 50),
rep("POKE_storm3_06_19_abs", 50),
rep("POKE_storm4_07_23_NO3", 50),
rep("POKE_storm4_07_23_abs", 50),
rep("POKE_storm5_07_27_NO3", 50),
rep("POKE_storm5_07_27_fDOM", 50),
rep("POKE_storm5_07_27_turb", 50),
rep("POKE_storm5_07_27_abs", 50),
rep("POKE_storm6_08_08_NO3", 50),
rep("POKE_storm6_08_08_fDOM", 50),
rep("POKE_storm6_08_08_SPC", 50),
rep("POKE_storm6_08_08_turb", 50),
rep("POKE_storm6_08_08_abs", 50),
rep("POKE_storm7a_08_14_NO3", 50),
rep("POKE_storm7a_08_14_abs", 50),
rep("POKE_storm7b_08_19_NO3", 50),
rep("POKE_storm7b_08_19_abs", 50),
rep("FRCH_storm7c_08_23_NO3", 50),
rep("FRCH_storm7c_08_23_abs", 50),
rep("FRCH_storm7d_08_26_abs", 50))
POKE.HI.df$storm.ID = as.factor(POKE.HI.df$storm.ID)
POKE.HI.df = separate(data=POKE.HI.df, col=storm.ID, into=c("site.ID","storm.num", "month", "day", "response"), sep = "_", remove = F)
par(mfrow=c(1,1))
median_cl_boot <- function(x, conf = 0.95) {
lconf <- (1 - conf)/2
uconf <- 1 - lconf
require(boot)
bmedian <- function(x, ind) median(x[ind])
bt <- boot(x, bmedian, 10000)
bb <- boot.ci(bt, conf = 0.95, type = "perc")
data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t,
uconf))
}
g0 <- ggplot(POKE.HI.df, aes(x = storm.num, y = HI, label=storm.num, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave("~/Documents/Storms_clean_repo/plots/HI_plots/2021/POKE/POKE.HI.median.boot.pdf", plot=g2, width = 8, height = 6, units ="in")
write.csv(POKE.HI.df, "~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2021/POKE/POKE.HI.df.csv")
POKE.HI.df$date <- as.Date(with(POKE.HI.df, paste(month, day, sep = "-")), "%m-%d")
POKE.HI.df$doy <- yday(POKE.HI.df$date)
g0 <- ggplot(POKE.HI.df, aes(x = doy, y = HI, label=doy, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave("~/Documents/Storms_clean_repo/plots/HI_plots/2021/POKE/POKE.HI.median.boot.doy.pdf", plot=g2, width = 8, height = 6, units ="in")
write.csv(POKE.HI.df, "~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2021/POKE/POKE.HI.df.doy.csv")
reticulate::repl_python()
STRT.hyst.results.list = list(py$hysdict_STRT_storm1a_08_15_NO3,
py$hysdict_STRT_storm1a_08_15_fDOM,
py$hysdict_STRT_storm1a_08_15_SPC,
py$hysdict_STRT_storm1a_08_15_turb,
py$hysdict_STRT_storm1b_08_17_NO3,
py$hysdict_STRT_storm1b_08_17_fDOM,
py$hysdict_STRT_storm1b_08_17_SPC,
py$hysdict_STRT_storm1b_08_17_turb,
py$hysdict_STRT_storm2a_08_19_NO3,
py$hysdict_STRT_storm2a_08_19_fDOM,
py$hysdict_STRT_storm2a_08_19_SPC,
py$hysdict_STRT_storm2a_08_19_turb,
py$hysdict_STRT_storm2b_08_20_NO3,
py$hysdict_STRT_storm2b_08_20_fDOM,
py$hysdict_STRT_storm2b_08_20_SPC,
py$hysdict_STRT_storm2b_08_20_turb,
py$hysdict_STRT_storm3_08_25_NO3,
py$hysdict_STRT_storm3_08_25_fDOM,
py$hysdict_STRT_storm3_08_25_SPC,
py$hysdict_STRT_storm3_08_25_turb
)
STRT.hyst.results.list.2 = list()
for (i in 1:length(STRT.hyst.results.list)){
STRT.hyst.results.list.2[[i]] = as.data.frame(t(as.numeric(c(
STRT.hyst.results.list[[i]][["HI_mean_with_Interp"]],
STRT.hyst.results.list[[i]][["HI_standard_deviation_with_Interp"]],
STRT.hyst.results.list[[i]][["Normalized slope of response"]],
STRT.hyst.results.list[[i]][["interpolated Max width of response"]],
STRT.hyst.results.list[[i]][["Min response"]],
STRT.hyst.results.list[[i]][["Max response"]],
STRT.hyst.results.list[[i]][["Peak Q"]]
))))
names(STRT.hyst.results.list.2[[i]]) = c("HI_mean_Interp", "HI_sd_with_Interp", "N.S.", "Max_width_Interp", "Min_response", "Max_response", "Peak_Q")
}
HIs.list = list()
HIs.tests = list()
for (i in 1:length(STRT.hyst.results.list)){
HIs.list[[i]] = unlist(STRT.hyst.results.list[[i]][["Hysteresis_Index"]],recursive=FALSE)
HIs.tests[[i]] = as.data.frame(t(round(as.numeric(c(shapiro.test(HIs.list[[i]])$statistic, shapiro.test(HIs.list[[i]])$p.value,
t.test(HIs.list[[i]], mu=0)$statistic, t.test(HIs.list[[i]], mu=0)$p.value,
t.test(HIs.list[[i]], mu=0)$conf.int[1],t.test(HIs.list[[i]], mu=0)$conf.int[2],
wilcox.test(HIs.list[[i]], mu=0)$statistic, wilcox.test(HIs.list[[i]], mu=0)$p.value)), 4)))
names(HIs.tests[[i]]) = c("ShapiroTest.W", "ShapiroTest.p", "t.test.stat", "t.test.p", "t.test.CIlow", "t.test.CIhigh",
"wilcox.test.stat", "wilcox.test.p")
}
STRT.hyst.results.list = list(py$hysdict_STRT_storm1a_08_15_NO3,
py$hysdict_STRT_storm1a_08_15_fDOM,
py$hysdict_STRT_storm1a_08_15_SPC,
py$hysdict_STRT_storm1a_08_15_turb,
py$hysdict_STRT_storm1a_08_15_abs,
py$hysdict_STRT_storm1b_08_17_NO3,
py$hysdict_STRT_storm1b_08_17_fDOM,
py$hysdict_STRT_storm1b_08_17_SPC,
py$hysdict_STRT_storm1b_08_17_turb,
py$hysdict_STRT_storm1b_08_17_abs,
py$hysdict_STRT_storm2a_08_19_NO3,
py$hysdict_STRT_storm2a_08_19_fDOM,
py$hysdict_STRT_storm2a_08_19_SPC,
py$hysdict_STRT_storm2a_08_19_turb,
py$hysdict_STRT_storm2b_08_20_NO3,
py$hysdict_STRT_storm2b_08_20_fDOM,
py$hysdict_STRT_storm2b_08_20_SPC,
py$hysdict_STRT_storm2b_08_20_turb,
py$hysdict_STRT_storm3_08_25_NO3,
py$hysdict_STRT_storm3_08_25_fDOM,
py$hysdict_STRT_storm3_08_25_SPC,
py$hysdict_STRT_storm3_08_25_turb
)
STRT.hyst.results.list.2 = list()
for (i in 1:length(STRT.hyst.results.list)){
STRT.hyst.results.list.2[[i]] = as.data.frame(t(as.numeric(c(
STRT.hyst.results.list[[i]][["HI_mean_with_Interp"]],
STRT.hyst.results.list[[i]][["HI_standard_deviation_with_Interp"]],
STRT.hyst.results.list[[i]][["Normalized slope of response"]],
STRT.hyst.results.list[[i]][["interpolated Max width of response"]],
STRT.hyst.results.list[[i]][["Min response"]],
STRT.hyst.results.list[[i]][["Max response"]],
STRT.hyst.results.list[[i]][["Peak Q"]]
))))
names(STRT.hyst.results.list.2[[i]]) = c("HI_mean_Interp", "HI_sd_with_Interp", "N.S.", "Max_width_Interp", "Min_response", "Max_response", "Peak_Q")
}
HIs.list = list()
HIs.tests = list()
for (i in 1:length(STRT.hyst.results.list)){
HIs.list[[i]] = unlist(STRT.hyst.results.list[[i]][["Hysteresis_Index"]],recursive=FALSE)
HIs.tests[[i]] = as.data.frame(t(round(as.numeric(c(shapiro.test(HIs.list[[i]])$statistic, shapiro.test(HIs.list[[i]])$p.value,
t.test(HIs.list[[i]], mu=0)$statistic, t.test(HIs.list[[i]], mu=0)$p.value,
t.test(HIs.list[[i]], mu=0)$conf.int[1],t.test(HIs.list[[i]], mu=0)$conf.int[2],
wilcox.test(HIs.list[[i]], mu=0)$statistic, wilcox.test(HIs.list[[i]], mu=0)$p.value)), 4)))
names(HIs.tests[[i]]) = c("ShapiroTest.W", "ShapiroTest.p", "t.test.stat", "t.test.p", "t.test.CIlow", "t.test.CIhigh",
"wilcox.test.stat", "wilcox.test.p")
}
STRT.hyst.results.list = list(py$hysdict_STRT_storm1a_08_15_NO3,
py$hysdict_STRT_storm1a_08_15_fDOM,
py$hysdict_STRT_storm1a_08_15_SPC,
py$hysdict_STRT_storm1a_08_15_turb,
py$hysdict_STRT_storm1a_08_15_abs,
py$hysdict_STRT_storm1b_08_17_NO3,
py$hysdict_STRT_storm1b_08_17_fDOM,
py$hysdict_STRT_storm1b_08_17_SPC,
py$hysdict_STRT_storm1b_08_17_turb,
py$hysdict_STRT_storm1b_08_17_abs,
py$hysdict_STRT_storm2a_08_19_NO3,
py$hysdict_STRT_storm2a_08_19_fDOM,
py$hysdict_STRT_storm2a_08_19_SPC,
py$hysdict_STRT_storm2a_08_19_turb,
py$hysdict_STRT_storm2a_08_19_abs,
py$hysdict_STRT_storm2b_08_20_NO3,
py$hysdict_STRT_storm2b_08_20_fDOM,
py$hysdict_STRT_storm2b_08_20_SPC,
py$hysdict_STRT_storm2b_08_20_turb,
py$hysdict_STRT_storm2b_08_20_abs,
py$hysdict_STRT_storm3_08_25_NO3,
py$hysdict_STRT_storm3_08_25_fDOM,
py$hysdict_STRT_storm3_08_25_SPC,
py$hysdict_STRT_storm3_08_25_turb
)
STRT.hyst.results.list.2 = list()
for (i in 1:length(STRT.hyst.results.list)){
STRT.hyst.results.list.2[[i]] = as.data.frame(t(as.numeric(c(
STRT.hyst.results.list[[i]][["HI_mean_with_Interp"]],
STRT.hyst.results.list[[i]][["HI_standard_deviation_with_Interp"]],
STRT.hyst.results.list[[i]][["Normalized slope of response"]],
STRT.hyst.results.list[[i]][["interpolated Max width of response"]],
STRT.hyst.results.list[[i]][["Min response"]],
STRT.hyst.results.list[[i]][["Max response"]],
STRT.hyst.results.list[[i]][["Peak Q"]]
))))
names(STRT.hyst.results.list.2[[i]]) = c("HI_mean_Interp", "HI_sd_with_Interp", "N.S.", "Max_width_Interp", "Min_response", "Max_response", "Peak_Q")
}
HIs.list = list()
HIs.tests = list()
for (i in 1:length(STRT.hyst.results.list)){
HIs.list[[i]] = unlist(STRT.hyst.results.list[[i]][["Hysteresis_Index"]],recursive=FALSE)
HIs.tests[[i]] = as.data.frame(t(round(as.numeric(c(shapiro.test(HIs.list[[i]])$statistic, shapiro.test(HIs.list[[i]])$p.value,
t.test(HIs.list[[i]], mu=0)$statistic, t.test(HIs.list[[i]], mu=0)$p.value,
t.test(HIs.list[[i]], mu=0)$conf.int[1],t.test(HIs.list[[i]], mu=0)$conf.int[2],
wilcox.test(HIs.list[[i]], mu=0)$statistic, wilcox.test(HIs.list[[i]], mu=0)$p.value)), 4)))
names(HIs.tests[[i]]) = c("ShapiroTest.W", "ShapiroTest.p", "t.test.stat", "t.test.p", "t.test.CIlow", "t.test.CIhigh",
"wilcox.test.stat", "wilcox.test.p")
}
STRT.hyst.results.list = list(py$hysdict_STRT_storm1a_08_15_NO3,
py$hysdict_STRT_storm1a_08_15_fDOM,
py$hysdict_STRT_storm1a_08_15_SPC,
py$hysdict_STRT_storm1a_08_15_turb,
py$hysdict_STRT_storm1a_08_15_abs,
py$hysdict_STRT_storm1b_08_17_NO3,
py$hysdict_STRT_storm1b_08_17_fDOM,
py$hysdict_STRT_storm1b_08_17_SPC,
py$hysdict_STRT_storm1b_08_17_turb,
py$hysdict_STRT_storm1b_08_17_abs,
py$hysdict_STRT_storm2a_08_19_NO3,
py$hysdict_STRT_storm2a_08_19_fDOM,
py$hysdict_STRT_storm2a_08_19_SPC,
py$hysdict_STRT_storm2a_08_19_turb,
py$hysdict_STRT_storm2a_08_19_abs,
py$hysdict_STRT_storm2b_08_20_NO3,
py$hysdict_STRT_storm2b_08_20_fDOM,
py$hysdict_STRT_storm2b_08_20_SPC,
py$hysdict_STRT_storm2b_08_20_turb,
py$hysdict_STRT_storm2b_08_20_abs,
py$hysdict_STRT_storm3_08_25_NO3,
py$hysdict_STRT_storm3_08_25_fDOM,
py$hysdict_STRT_storm3_08_25_SPC,
py$hysdict_STRT_storm3_08_25_turb,
py$hysdict_STRT_storm3_08_25_abs
)
STRT.hyst.results.list.2 = list()
for (i in 1:length(STRT.hyst.results.list)){
STRT.hyst.results.list.2[[i]] = as.data.frame(t(as.numeric(c(
STRT.hyst.results.list[[i]][["HI_mean_with_Interp"]],
STRT.hyst.results.list[[i]][["HI_standard_deviation_with_Interp"]],
STRT.hyst.results.list[[i]][["Normalized slope of response"]],
STRT.hyst.results.list[[i]][["interpolated Max width of response"]],
STRT.hyst.results.list[[i]][["Min response"]],
STRT.hyst.results.list[[i]][["Max response"]],
STRT.hyst.results.list[[i]][["Peak Q"]]
))))
names(STRT.hyst.results.list.2[[i]]) = c("HI_mean_Interp", "HI_sd_with_Interp", "N.S.", "Max_width_Interp", "Min_response", "Max_response", "Peak_Q")
}
HIs.list = list()
HIs.tests = list()
for (i in 1:length(STRT.hyst.results.list)){
HIs.list[[i]] = unlist(STRT.hyst.results.list[[i]][["Hysteresis_Index"]],recursive=FALSE)
HIs.tests[[i]] = as.data.frame(t(round(as.numeric(c(shapiro.test(HIs.list[[i]])$statistic, shapiro.test(HIs.list[[i]])$p.value,
t.test(HIs.list[[i]], mu=0)$statistic, t.test(HIs.list[[i]], mu=0)$p.value,
t.test(HIs.list[[i]], mu=0)$conf.int[1],t.test(HIs.list[[i]], mu=0)$conf.int[2],
wilcox.test(HIs.list[[i]], mu=0)$statistic, wilcox.test(HIs.list[[i]], mu=0)$p.value)), 4)))
names(HIs.tests[[i]]) = c("ShapiroTest.W", "ShapiroTest.p", "t.test.stat", "t.test.p", "t.test.CIlow", "t.test.CIhigh",
"wilcox.test.stat", "wilcox.test.p")
}
STRT.hyst.results.list.3 =list()
for (i in 1:length(STRT.hyst.results.list)){
STRT.hyst.results.list.3[[i]] = cbind(STRT.hyst.results.list.2[[i]], HIs.tests[[i]])
}
STRT.hyst.results.df = bind_rows(STRT.hyst.results.list.3, .id = "column_label")
STRT.hyst.results.df$storm.ID = c("STRT_storm1a_08_15_NO3",
"STRT_storm1a_08_15_fDOM",
"STRT_storm1a_08_15_SPC",
"STRT_storm1a_08_15_turb",
"STRT_storm1a_08_15_abs",
"STRT_storm1b_08_17_NO3",
"STRT_storm1b_08_17_fDOM",
"STRT_storm1b_08_17_SPC",
"STRT_storm1b_08_17_turb",
"STRT_storm1b_08_17_abs",
"STRT_storm2a_08_19_NO3",
"STRT_storm2a_08_19_fDOM",
"STRT_storm2a_08_19_SPC",
"STRT_storm2a_08_19_turb",
"STRT_storm2a_08_19_abs",
"STRT_storm2b_08_20_NO3",
"STRT_storm2b_08_20_fDOM",
"STRT_storm2b_08_20_SPC",
"STRT_storm2b_08_20_turb",
"STRT_storm2b_08_20_abs",
"STRT_storm3 08_25_NO3",
"STRT_storm3 08_25_fDOM",
"STRT_storm3 08_25_SPC",
"STRT_storm3 08_25_turb",
"STRT_storm3 08_25_abs")
STRT.hyst.results.df$site.ID = "STRT"
write.csv(STRT.hyst.results.df, "~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2021/STRT/STRT.hyst.results.csv")
## plot HI with bootstrapped 95% CIs around the median ##
HIs.Q.list =list()
HIs.df.list = list()
par(mfrow=c(1,1))
for (i in 1:length(HIs.list)) {
HIs.Q.list[[i]] = names(HIs.list[[i]])
HIs.Q.list[[i]] = (sapply(strsplit(HIs.Q.list[[i]], " "), "[[", 4))
HIs.Q.list[[i]] = as.numeric(gsub("%", "", HIs.Q.list[[i]]))
HIs.df.list[[i]] = as.data.frame(cbind(HIs.list[[i]], HIs.Q.list[[i]]))
HIs.df.list[[i]]= HIs.df.list[[i]][order(HIs.df.list[[i]][["V2"]]),]
names(HIs.df.list[[i]]) = c("HI", "Q_interval")
}
STRT.HI.df = bind_rows(HIs.df.list, .id = "column_label")
STRT.HI.df$storm.ID = c(rep("STRT_storm1a_08_15_NO3", 50),
rep("STRT_storm1a_08_15_fDOM", 50),
rep("STRT_storm1a_08_15_SPC", 50),
rep("STRT_storm1a_08_15_turb", 50),
rep("STRT_storm1a_08_15_abs", 50),
rep("STRT_storm1b_08_17_NO3", 50),
rep("STRT_storm1b_08_17_fDOM", 50),
rep("STRT_storm1b_08_17_SPC", 50),
rep("STRT_storm1b_08_17_turb", 50),
rep("STRT_storm1b_08_17_abs", 50),
rep("STRT_storm2a_08_19_NO3", 50),
rep("STRT_storm2a_08_19_fDOM", 50),
rep("STRT_storm2a_08_19_SPC", 50),
rep("STRT_storm2a_08_19_turb", 50),
rep("STRT_storm2a_08_19_abs", 50),
rep("STRT_storm2b_08_20_NO3", 50),
rep("STRT_storm2b_08_20_fDOM", 50),
rep("STRT_storm2b_08_20_SPC", 50),
rep("STRT_storm2b_08_20_turb", 50),
rep("STRT_storm2b_08_20_abs", 50),
rep("STRT_storm3_08_25_NO3", 50),
rep("STRT_storm3_08_25_fDOM", 50),
rep("STRT_storm3_08_25_SPC", 50),
rep("STRT_storm3_08_25_turb", 50),
rep("STRT_storm3_08_25_abs", 50))
STRT.HI.df$storm.ID = as.factor(STRT.HI.df$storm.ID)
STRT.HI.df = separate(data=STRT.HI.df, col=storm.ID, into=c("site.ID","storm.num", "month", "day", "response"), sep = "_", remove = F)
par(mfrow=c(1,1))
median_cl_boot <- function(x, conf = 0.95) {
lconf <- (1 - conf)/2
uconf <- 1 - lconf
require(boot)
bmedian <- function(x, ind) median(x[ind])
bt <- boot(x, bmedian, 10000)
bb <- boot.ci(bt, conf = 0.95, type = "perc")
data.frame(y = median(x), ymin = quantile(bt$t, lconf), ymax = quantile(bt$t,
uconf))
}
g0 <- ggplot(STRT.HI.df, aes(x = storm.num, y = HI, label=storm.num, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave("~/Documents/Storms_clean_repo/plots/HI_plots/2021/STRT/STRT.HI.median.boot.pdf", plot=g2, width = 8, height = 6, units ="in")
write.csv(STRT.HI.df, "~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2021/STRT/STRT.HI.df.csv")
STRT.HI.df$date <- as.Date(with(STRT.HI.df, paste(month, day, sep = "-")), "%m-%d")
STRT.HI.df$doy <- yday(STRT.HI.df$date)
g0 <- ggplot(STRT.HI.df, aes(x = doy, y = HI, label=doy, fill=response))
g1 = g0 + geom_jitter(width = 0.1, fill = "grey", colour = "#0571B0", alpha=0.25, size=3) +
theme(axis.text.x = element_text(angle = 0))+  labs(x="") + facet_wrap(~ response, scales = "free_x") +
theme_bw() +geom_hline(yintercept=0) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme(legend.position = "none")
g2 <- g1 +
stat_summary(fun.data = median_cl_boot, geom = "errorbar",
colour = "black", width = 0.2, size=1) +
stat_summary(fun.y = median, geom = "point",
colour = "black", size = 3)
ggsave("~/Documents/Storms_clean_repo/plots/HI_plots/2021/STRT/STRT.HI.median.boot.doy.pdf", plot=g2, width = 8, height = 6, units ="in")
write.csv(STRT.HI.df, "~/Documents/Storms_clean_repo/Output_from_analysis/03_HI_FI/2021/STRT/STRT.HI.df.doy.csv")
library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(SLOPE)
library(wesanderson)
library(ggpubr)
library(dataRetrieval)
setwd("~/Documents/Storms_clean_repo")
# Import data #
# 2015
FRCH_HI_doy_df_2015 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2015", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2015 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2015", "MOOS","MOOS.HI.df.doy.csv"))
# 2018
FRCH_HI_doy_df_2018 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2018", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2018 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2018", "MOOS","MOOS.HI.df.doy.csv"))
CARI_HI_doy_df_2018 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2018", "CARI","CARI.HI.df.doy.csv"))
CARI_HI_doy_df_2018 <-  subset(CARI_HI_doy_df_2018, select=-c(X))
names(CARI_HI_doy_df_2018)[names(CARI_HI_doy_df_2018) == 'X1'] <- 'X'
# 2019
FRCH_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "MOOS","MOOS.HI.df.doy.csv"))
POKE_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "POKE","POKE.HI.df.doy.csv"))
STRT_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "STRT","STRT.HI.df.doy.csv"))
VAUL_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "VAUL","VAUL.HI.df.doy.csv"))
CARI_HI_doy_df_2019 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2019", "CARI","CARI.HI.df.doy.csv"))
View(STRT_HI_doy_df_2019)
STRT_HI_doy_df_2019[c(2251:2500), 7] <- "storm7c"
# 2020
FRCH_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "MOOS","MOOS.HI.df.doy.csv"))
POKE_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "POKE","POKE.HI.df.doy.csv"))
STRT_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "STRT","STRT.HI.df.doy.csv"))
VAUL_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "VAUL","VAUL.HI.df.doy.csv"))
CARI_HI_doy_df_2020 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2020", "CARI","CARI.HI.df.doy.csv"))
# 2021
FRCH_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "FRCH","FRCH.HI.df.doy.csv"))
MOOS_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "MOOS","MOOS.HI.df.doy.csv"))
POKE_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "POKE","POKE.HI.df.doy.csv"))
STRT_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "STRT","STRT.HI.df.doy.csv"))
VAUL_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "VAUL","VAUL.HI.df.doy.csv"))
CARI_HI_doy_df_2021 <- read.csv(here("Output_from_analysis", "03_HI_FI", "2021", "CARI","CARI.HI.df.doy.csv"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
Sys.which("python")
use_python("/usr/local/bin/python3")
library(tidyverse)
options(tz="America/Anchorage")
library(ggplot2)
library(gridExtra)
library(boot)
library(lubridate)
reticulate::repl_python()
